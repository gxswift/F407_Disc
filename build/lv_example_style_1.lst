ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_style_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.lv_example_style_1.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 48656C6C 		.ascii	"Hello\000"
  20      6F00
  21              		.section	.text.lv_example_style_1,"ax",%progbits
  22              		.align	1
  23              		.global	lv_example_style_1
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	lv_example_style_1:
  31              	.LFB189:
  32              		.file 1 "lvgl/lvgl/examples/styles/lv_example_style_1.c"
   1:lvgl/lvgl/examples/styles/lv_example_style_1.c **** #include "../lv_examples.h"
   2:lvgl/lvgl/examples/styles/lv_example_style_1.c **** #if LV_BUILD_EXAMPLES && LV_USE_IMG
   3:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
   4:lvgl/lvgl/examples/styles/lv_example_style_1.c **** /**
   5:lvgl/lvgl/examples/styles/lv_example_style_1.c ****  * Using the Size, Position and Padding style properties
   6:lvgl/lvgl/examples/styles/lv_example_style_1.c ****  */
   7:lvgl/lvgl/examples/styles/lv_example_style_1.c **** void lv_example_style_1(void)
   8:lvgl/lvgl/examples/styles/lv_example_style_1.c **** {
  33              		.loc 1 8 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 38B5     		push	{r3, r4, r5, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 3, -16
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
   9:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      static lv_style_t style;
  44              		.loc 1 9 6 view .LVU1
  10:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_init(&style);
  45              		.loc 1 10 6 view .LVU2
  46 0002 1C4C     		ldr	r4, .L3
  47 0004 2046     		mov	r0, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 2


  48 0006 FFF7FEFF 		bl	lv_style_init
  49              	.LVL0:
  11:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_radius(&style, 5);
  50              		.loc 1 11 6 view .LVU3
  51 000a 0521     		movs	r1, #5
  52 000c 2046     		mov	r0, r4
  53 000e FFF7FEFF 		bl	lv_style_set_radius
  54              	.LVL1:
  12:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
  13:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      /*Make a gradient*/
  14:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_width(&style, 150);
  55              		.loc 1 14 6 view .LVU4
  56 0012 9621     		movs	r1, #150
  57 0014 2046     		mov	r0, r4
  58 0016 FFF7FEFF 		bl	lv_style_set_width
  59              	.LVL2:
  15:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_height(&style, LV_SIZE_CONTENT);
  60              		.loc 1 15 6 view .LVU5
  61 001a 42F2D171 		movw	r1, #10193
  62 001e 2046     		mov	r0, r4
  63 0020 FFF7FEFF 		bl	lv_style_set_height
  64              	.LVL3:
  16:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
  17:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_pad_ver(&style, 20);
  65              		.loc 1 17 6 view .LVU6
  66              	.LBB8:
  67              	.LBI8:
  68              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @file lv_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifndef LV_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include <stdbool.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "../font/lv_font.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_color.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_area.h"
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_anim.h"
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_txt.h"
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_types.h"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_assert.h"
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_bidi.h"
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      DEFINES
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 3


  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Flags for style properties
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Other constants
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #else
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      TYPEDEFS
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Possible options how to blend opaque drawings
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_blend_mode_t;
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Some options to apply decorations on texts.
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_text_decor_t;
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Selects on which sides border should be drawn
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 4


  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_border_side_t;
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * The direction of the gradient.
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_grad_dir_t;
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * A common type to handle all the property types in the same way.
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef union {
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_color_t color;    /**< Colors*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_value_t;
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Enumeration of all built in style properties
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef enum {
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 0*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 1*/
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 5


 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 2*/
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 38,
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 39,
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 40,
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 42,
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 3*/
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 4*/
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 5*/
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 6


 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 6*/
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_prop_t;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor for style transitions
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_USER_DATA
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_transition_dsc_t;
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a constant style property.
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_prop_t prop;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_value_t value;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_const_prop_t;
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 7


 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t sentinel;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*If there is only one property store it directly.
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****      *For more properties allocate an array*/
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     union {
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         lv_style_value_t value1;
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * values_and_props;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t * const_props;
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } v_p;
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t prop1 :15;
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t is_const :1;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t has_group;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t prop_cnt;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_t;
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * GLOBAL PROTOTYPES
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a style
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style to initialize
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note Do not call `lv_style_init` on styles that are already have some properties
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       because this function won't free the used memory just set a default state for the style.
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       In other words be sure to initialize styles only once!
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_init(lv_style_t * style);
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_reset(lv_style_t * style);
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Register a new style property for custom usage
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return a new property ID.
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_prop_t MY_PROP;
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * MY_PROP = lv_style_register_prop();
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Remove a property from a style
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 8


 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  a style property ORed with a state.
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Set the value of property in a style.
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * This function shouldn't be used directly by the user.
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to style
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STLYE_BG_COLOR`)
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value `lv_style_value_t` variable in which a filed is set according to the type of `prop`
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value);
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** {
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->is_const) {
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t *const_prop;
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(const_prop->prop == prop) {
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = const_prop->value;
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_INV;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt > 1) {
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint32_t i;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 9


 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(props[i] == prop) {
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = values[i];
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } else if(style->prop1 == prop) {
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         *value = style->v_p.value1;
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_OK;
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     return LV_RES_INV;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a transition descriptor.
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param tr        pointer to a transition descriptor to initialize
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param props     an array with the properties to transition. The last element must be zero.
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param path_cb   an animation path (ease) callback. If `NULL` liner path will be used.
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param time      duration of the transition in [ms]
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param delay     delay before the transition in [ms]
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param user_data any custom data that will be saved in the transition animation and will be avai
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 };
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  static lv_style_transition_dsc_t trans1;
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL);
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the default value of a property
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the default value
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop);
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Checks if a style is empty (has no properties)
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_is_empty(const lv_style_t * style);
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Tell the group of a property. If the a property from a group is set in a style the (1 << group) 
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * It allows early skipping the style if the property is not exists in the style at all.
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop a style property
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the group [0..7] 7 means all the custom properties with index > 112
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop);
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_style_gen.h"
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value) {
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 10


 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_hor(lv_style_t * style, lv_coord_t value) {
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_ver(lv_style_t * style, lv_coord_t value) {
  69              		.loc 2 437 20 view .LVU7
  70              	.LBB9:
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
  71              		.loc 2 438 5 view .LVU8
  72 0024 1421     		movs	r1, #20
  73 0026 2046     		mov	r0, r4
  74 0028 FFF7FEFF 		bl	lv_style_set_pad_top
  75              	.LVL4:
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
  76              		.loc 2 439 5 view .LVU9
  77 002c 1421     		movs	r1, #20
  78 002e 2046     		mov	r0, r4
  79 0030 FFF7FEFF 		bl	lv_style_set_pad_bottom
  80              	.LVL5:
  81              		.loc 2 439 5 is_stmt 0 view .LVU10
  82              	.LBE9:
  83              	.LBE8:
  18:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_pad_left(&style, 5);
  84              		.loc 1 18 6 is_stmt 1 view .LVU11
  85 0034 0521     		movs	r1, #5
  86 0036 2046     		mov	r0, r4
  87 0038 FFF7FEFF 		bl	lv_style_set_pad_left
  88              	.LVL6:
  19:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
  20:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_x(&style, lv_pct(50));
  89              		.loc 1 20 6 view .LVU12
  90              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @file lv_area.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_AREA_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <string.h>
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <stdbool.h>
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <stdint.h>
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*********************
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 11


  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      DEFINES
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *********************/
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef int32_t lv_coord_t;
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #else
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef int16_t lv_coord_t;
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**********************
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      TYPEDEFS
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  **********************/
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Represents a point on the screen.
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef struct {
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x;
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y;
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** } lv_point_t;
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /** Represents an area of the screen.*/
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef struct {
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x1;
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y1;
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x2;
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y2;
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** } lv_area_t;
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /** Alignments*/
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** enum {
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_MID,
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_CENTER,
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 12


  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** };
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_align_t;
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** enum {
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** };
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_dir_t;
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**********************
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * GLOBAL PROTOTYPES
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  **********************/
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Initialize an area
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x1 left coordinate of the area
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param y1 top coordinate of the area
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x2 right coordinate of the area
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param y2 bottom coordinate of the area
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Copy an area
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param dest pointer to the destination area
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param src pointer to the source area
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->x1 = src->x1;
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** }
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Get the width of an area
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 13


 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** }
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Get the height of an area
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** }
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Set the width of an area
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param w the new width of the area (w == 1 makes x1 == x2)
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_set_width(lv_area_t * area_p, lv_coord_t w);
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Set the height of an area
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param h the new height of the area (h == 1 makes y1 == y2)
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_set_height(lv_area_t * area_p, lv_coord_t h);
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Set the position of an area (width and height will be kept)
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x the new x coordinate of the area
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param y the new y coordinate of the area
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void _lv_area_set_pos(lv_area_t * area_p, lv_coord_t x, lv_coord_t y);
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Return with area of an area (x * y)
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return size of area
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** uint32_t lv_area_get_size(const lv_area_t * area_p);
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_increase(lv_area_t * area, lv_coord_t w_extra, lv_coord_t h_extra);
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_move(lv_area_t * area, lv_coord_t x_ofs, lv_coord_t y_ofs);
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Get the common parts of two areas
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param res_p pointer to an area, the result will be stored her
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to the first area
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to the second area
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return false: the two area has NO common parts, res_p is invalid
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** bool _lv_area_intersect(lv_area_t * res_p, const lv_area_t * a1_p, const lv_area_t * a2_p);
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Join two areas into a third which involves the other two
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param res_p pointer to an area, the result will be stored here
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 14


 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to the first area
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to the second area
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void _lv_area_join(lv_area_t * a_res_p, const lv_area_t * a1_p, const lv_area_t * a2_p);
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Check if a point is on an area
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a_p pointer to an area
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param p_p pointer to a point
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param radius radius of area (e.g. for rounded rectangle)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return false:the point is out of the area
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** bool _lv_area_is_point_on(const lv_area_t * a_p, const lv_point_t * p_p, lv_coord_t radius);
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Check if two area has common parts
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to an area.
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to an other area
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return false: a1_p and a2_p has no common parts
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** bool _lv_area_is_on(const lv_area_t * a1_p, const lv_area_t * a2_p);
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Check if an area is fully on an other
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param ain_p pointer to an area which could be in 'aholder_p'
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param aholder_p pointer to an area which could involve 'ain_p'
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param radius radius of `aholder_p` (e.g. for rounded rectangle)
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return true: `ain_p` is fully inside `aholder_p`
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** bool _lv_area_is_in(const lv_area_t * ain_p, const lv_area_t * aholder_p, lv_coord_t radius);
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Check if an area is fully out of an other
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param aout_p pointer to an area which could be in 'aholder_p'
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param aholder_p pointer to an area which could involve 'ain_p'
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param radius radius of `aholder_p` (e.g. for rounded rectangle)
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return true: `aout_p` is fully outside `aholder_p`
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** bool _lv_area_is_out(const lv_area_t * aout_p, const lv_area_t * aholder_p, lv_coord_t radius);
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Align an area to an other
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param base an are where the other will be aligned
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param to_align the area to align
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param align `LV_ALIGN_...`
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_align(const lv_area_t * base, lv_area_t * to_align, lv_align_t align, lv_coord_t ofs_x
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**********************
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      MACROS
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  **********************/
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SHIFT    (29)
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #else
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SHIFT    (13)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 15


 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #endif
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_MASK     (3 << _LV_COORD_TYPE_SHIFT)
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_PLAIN(x)      ((x) & (~_LV_COORD_TYPE_MASK))  /*Remove type specifiers*/
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_PX       (0 << _LV_COORD_TYPE_SHIFT)
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SPEC     (1 << _LV_COORD_TYPE_SHIFT)
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_RESERVED (3 << _LV_COORD_TYPE_SHIFT)
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_PX(x)     ((((x) & _LV_COORD_TYPE_MASK) == _LV_COORD_TYPE_PX) ? true : false)
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_SPEC(x)   ((((x) & _LV_COORD_TYPE_MASK) == _LV_COORD_TYPE_SPEC) ? true : false)
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_SET_SPEC(x)   ((x) | _LV_COORD_TYPE_SPEC)
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*Special coordinates*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_PCT(x)               (x < 0 ? LV_COORD_SET_SPEC(1000 - (x)) : LV_COORD_SET_SPEC(x))
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_PCT(x)      ((LV_COORD_IS_SPEC(x) && _LV_COORD_PLAIN(x) <= 2000) ? true : false
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_GET_PCT(x)     (_LV_COORD_PLAIN(x) > 1000 ? 1000 - _LV_COORD_PLAIN(x) : _LV_COORD_
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_SIZE_CONTENT         LV_COORD_SET_SPEC(2001)
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_SIZE_CONTENT);
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Convert a percentage value to `lv_coord_t`.
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Percentage values are stored in special range
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x the percentage (0..1000)
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return a coordinate that stores the percentage
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_pct(lv_coord_t x)
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     return LV_PCT(x);
  91              		.loc 3 280 5 view .LVU13
  92              		.loc 1 20 6 is_stmt 0 view .LVU14
  93 003c 42F23201 		movw	r1, #8242
  94 0040 2046     		mov	r0, r4
  95 0042 FFF7FEFF 		bl	lv_style_set_x
  96              	.LVL7:
  21:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_style_set_y(&style, 80);
  97              		.loc 1 21 6 is_stmt 1 view .LVU15
  98 0046 5021     		movs	r1, #80
  99 0048 2046     		mov	r0, r4
 100 004a FFF7FEFF 		bl	lv_style_set_y
 101              	.LVL8:
  22:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
  23:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      /*Create an object with the new style*/
  24:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_obj_t * obj = lv_obj_create(lv_scr_act());
 102              		.loc 1 24 6 view .LVU16
 103              	.LBB10:
 104              	.LBI10:
 105              		.file 4 "lvgl/lvgl/examples/styles/../../src/core/lv_disp.h"
   1:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
   2:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *
   4:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
   5:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
   6:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #define LV_DISP_H
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 16


   8:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
   9:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #endif
  12:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  13:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  14:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  20:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  21:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  24:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  25:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  28:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  41:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  42:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  44:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  45:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  46:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  49:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  51:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  53:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  54:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  57:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  59:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  61:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  62:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Make a screen active
  63:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 17


  65:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  67:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  68:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  72:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  74:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  75:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * layer)
  77:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  80:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  82:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  83:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the theme of a display
  84:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  85:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  87:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  89:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  90:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the theme of a display
  91:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  92:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  94:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  96:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  97:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background color of a display
  98:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  99:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param color color of the background
 100:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 101:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 103:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 104:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background image of a display
 105:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 106:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 108:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 110:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 111:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Opacity of the background
 112:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 113:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 115:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 117:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 118:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Switch screen with animation
 119:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param time time of the animation
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 18


 122:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param delay delay before the transition
 123:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 125:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 127:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 128:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 132:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 134:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 135:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 138:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 140:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 141:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 144:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 146:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 147:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 150:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 152:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 154:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*------------------------------------------------
 155:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * To improve backward compatibility
 156:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 157:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 158:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 159:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 160:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 161:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 162:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 163:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 106              		.loc 4 163 26 view .LVU17
 107              	.LBB11:
 164:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** {
 165:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 108              		.loc 4 165 5 view .LVU18
 109              		.loc 4 165 12 is_stmt 0 view .LVU19
 110 004e FFF7FEFF 		bl	lv_disp_get_default
 111              	.LVL9:
 112 0052 FFF7FEFF 		bl	lv_disp_get_scr_act
 113              	.LVL10:
 114              	.LBE11:
 115              	.LBE10:
 116              		.loc 1 24 23 view .LVU20
 117 0056 FFF7FEFF 		bl	lv_obj_create
 118              	.LVL11:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 19


 119 005a 0546     		mov	r5, r0
 120              	.LVL12:
  25:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_obj_add_style(obj, &style, 0);
 121              		.loc 1 25 6 is_stmt 1 view .LVU21
 122 005c 0022     		movs	r2, #0
 123 005e 2146     		mov	r1, r4
 124 0060 FFF7FEFF 		bl	lv_obj_add_style
 125              	.LVL13:
  26:lvgl/lvgl/examples/styles/lv_example_style_1.c **** 
  27:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_obj_t * label = lv_label_create(obj);
 126              		.loc 1 27 6 view .LVU22
 127              		.loc 1 27 25 is_stmt 0 view .LVU23
 128 0064 2846     		mov	r0, r5
 129 0066 FFF7FEFF 		bl	lv_label_create
 130              	.LVL14:
  28:lvgl/lvgl/examples/styles/lv_example_style_1.c ****      lv_label_set_text(label, "Hello");
 131              		.loc 1 28 6 is_stmt 1 view .LVU24
 132 006a 0349     		ldr	r1, .L3+4
 133 006c FFF7FEFF 		bl	lv_label_set_text
 134              	.LVL15:
  29:lvgl/lvgl/examples/styles/lv_example_style_1.c **** }
 135              		.loc 1 29 1 is_stmt 0 view .LVU25
 136 0070 38BD     		pop	{r3, r4, r5, pc}
 137              	.LVL16:
 138              	.L4:
 139              		.loc 1 29 1 view .LVU26
 140 0072 00BF     		.align	2
 141              	.L3:
 142 0074 00000000 		.word	.LANCHOR0
 143 0078 00000000 		.word	.LC0
 144              		.cfi_endproc
 145              	.LFE189:
 147              		.section	.bss.style.12313,"aw",%nobits
 148              		.align	2
 149              		.set	.LANCHOR0,. + 0
 152              	style.12313:
 153 0000 00000000 		.space	8
 153      00000000 
 154              		.text
 155              	.Letext0:
 156              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 157              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 158              		.file 7 "lvgl/lvgl/examples/styles/../../src/misc/lv_ll.h"
 159              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 160              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 161              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 162              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 163              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 164              		.file 13 "lvgl/lvgl/examples/styles/../../src/core/lv_obj.h"
 165              		.file 14 "lvgl/lvgl/examples/styles/../../src/core/lv_group.h"
 166              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 167              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 168              		.file 17 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_scroll.h"
 169              		.file 18 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_style.h"
 170              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 171              		.file 20 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_class.h"
 172              		.file 21 "lvgl/lvgl/examples/styles/../../src/core/lv_event.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 20


 173              		.file 22 "lvgl/lvgl/examples/styles/../../src/widgets/lv_arc.h"
 174              		.file 23 "lvgl/lvgl/examples/styles/../../src/widgets/lv_btn.h"
 175              		.file 24 "lvgl/lvgl/examples/styles/../../src/widgets/lv_img.h"
 176              		.file 25 "lvgl/lvgl/examples/styles/../../src/widgets/lv_label.h"
 177              		.file 26 "lvgl/lvgl/examples/styles/../../src/widgets/lv_line.h"
 178              		.file 27 "lvgl/lvgl/examples/styles/../../src/widgets/lv_table.h"
 179              		.file 28 "lvgl/lvgl/examples/styles/../../src/widgets/lv_checkbox.h"
 180              		.file 29 "lvgl/lvgl/examples/styles/../../src/widgets/lv_bar.h"
 181              		.file 30 "lvgl/lvgl/examples/styles/../../src/widgets/lv_slider.h"
 182              		.file 31 "lvgl/lvgl/examples/styles/../../src/widgets/lv_btnmatrix.h"
 183              		.file 32 "lvgl/lvgl/examples/styles/../../src/widgets/lv_dropdown.h"
 184              		.file 33 "lvgl/lvgl/examples/styles/../../src/widgets/lv_roller.h"
 185              		.file 34 "lvgl/lvgl/examples/styles/../../src/widgets/lv_textarea.h"
 186              		.file 35 "lvgl/lvgl/examples/styles/../../src/widgets/lv_canvas.h"
 187              		.file 36 "lvgl/lvgl/examples/styles/../../src/widgets/lv_switch.h"
 188              		.file 37 "lvgl/lvgl/examples/styles/../../src/extra/widgets/animimg/lv_animimg.h"
 189              		.file 38 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar.h"
 190              		.file 39 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar_header_arrow.h"
 191              		.file 40 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar_header_dropdown.h
 192              		.file 41 "lvgl/lvgl/examples/styles/../../src/extra/widgets/chart/lv_chart.h"
 193              		.file 42 "lvgl/lvgl/examples/styles/../../src/extra/widgets/keyboard/lv_keyboard.h"
 194              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 195              		.file 44 "lvgl/lvgl/examples/styles/../../src/extra/widgets/list/lv_list.h"
 196              		.file 45 "lvgl/lvgl/examples/styles/../../src/extra/widgets/msgbox/lv_msgbox.h"
 197              		.file 46 "lvgl/lvgl/examples/styles/../../src/extra/widgets/meter/lv_meter.h"
 198              		.file 47 "lvgl/lvgl/examples/styles/../../src/extra/widgets/spinbox/lv_spinbox.h"
 199              		.file 48 "lvgl/lvgl/examples/styles/../../src/extra/widgets/spinner/lv_spinner.h"
 200              		.file 49 "lvgl/lvgl/examples/styles/../../src/extra/widgets/tabview/lv_tabview.h"
 201              		.file 50 "lvgl/lvgl/examples/styles/../../src/extra/widgets/tileview/lv_tileview.h"
 202              		.file 51 "lvgl/lvgl/examples/styles/../../src/extra/widgets/win/lv_win.h"
 203              		.file 52 "lvgl/lvgl/examples/styles/../../src/extra/widgets/colorwheel/lv_colorwheel.h"
 204              		.file 53 "lvgl/lvgl/examples/styles/../../src/extra/widgets/led/lv_led.h"
 205              		.file 54 "lvgl/lvgl/examples/styles/../../src/extra/widgets/imgbtn/lv_imgbtn.h"
 206              		.file 55 "lvgl/lvgl/examples/styles/../../src/extra/widgets/span/lv_span.h"
 207              		.file 56 "lvgl/lvgl/examples/styles/../../src/extra/layouts/grid/lv_grid.h"
 208              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style_gen.h"
 209              		.file 58 "lvgl/lvgl/examples/styles/../../src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccyIkisI.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_style_1.c
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:18     .rodata.lv_example_style_1.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:22     .text.lv_example_style_1:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:30     .text.lv_example_style_1:00000000 lv_example_style_1
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:142    .text.lv_example_style_1:00000074 $d
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:148    .bss.style.12313:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccyIkisI.s:152    .bss.style.12313:00000000 style.12313

UNDEFINED SYMBOLS
lv_style_init
lv_style_set_radius
lv_style_set_width
lv_style_set_height
lv_style_set_pad_top
lv_style_set_pad_bottom
lv_style_set_pad_left
lv_style_set_x
lv_style_set_y
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_create
lv_obj_add_style
lv_label_create
lv_label_set_text
