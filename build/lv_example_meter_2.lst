ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_meter_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_value,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	set_value:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c"
   1:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** #if LV_USE_METER && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
   4:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** static lv_obj_t * meter;
   5:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
   6:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** static void set_value(void * indic, int32_t v)
   7:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** {
  29              		.loc 1 7 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 7 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39 0002 0A46     		mov	r2, r1
   8:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_set_indicator_end_value(meter, indic, v);
  40              		.loc 1 8 5 is_stmt 1 view .LVU2
  41 0004 0146     		mov	r1, r0
  42              	.LVL1:
  43              		.loc 1 8 5 is_stmt 0 view .LVU3
  44 0006 024B     		ldr	r3, .L3
  45 0008 1868     		ldr	r0, [r3]
  46              	.LVL2:
  47              		.loc 1 8 5 view .LVU4
  48 000a FFF7FEFF 		bl	lv_meter_set_indicator_end_value
  49              	.LVL3:
   9:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 2


  50              		.loc 1 9 1 view .LVU5
  51 000e 08BD     		pop	{r3, pc}
  52              	.L4:
  53              		.align	2
  54              	.L3:
  55 0010 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE189:
  59              		.section	.text.lv_example_meter_2,"ax",%progbits
  60              		.align	1
  61              		.global	lv_example_meter_2
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	lv_example_meter_2:
  68              	.LFB190:
  10:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  11:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  12:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** /**
  13:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****  * A meter with multiple arcs
  14:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****  */
  15:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** void lv_example_meter_2(void)
  16:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** {
  69              		.loc 1 16 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 72
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 28
  76              		.cfi_offset 4, -28
  77              		.cfi_offset 5, -24
  78              		.cfi_offset 6, -20
  79              		.cfi_offset 7, -16
  80              		.cfi_offset 8, -12
  81              		.cfi_offset 9, -8
  82              		.cfi_offset 14, -4
  83 0004 97B0     		sub	sp, sp, #92
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 120
  17:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     meter = lv_meter_create(lv_scr_act());
  86              		.loc 1 17 5 view .LVU7
  87              	.LBB40:
  88              	.LBI40:
  89              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 3


  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 4


  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 5


 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  90              		.loc 2 163 26 view .LVU8
  91              	.LBB41:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  92              		.loc 2 165 5 view .LVU9
  93              		.loc 2 165 12 is_stmt 0 view .LVU10
  94 0006 FFF7FEFF 		bl	lv_disp_get_default
  95              	.LVL4:
  96 000a FFF7FEFF 		bl	lv_disp_get_scr_act
  97              	.LVL5:
  98              	.LBE41:
  99              	.LBE40:
 100              		.loc 1 17 13 view .LVU11
 101 000e FFF7FEFF 		bl	lv_meter_create
 102              	.LVL6:
 103              		.loc 1 17 11 view .LVU12
 104 0012 4E4C     		ldr	r4, .L7
 105 0014 2060     		str	r0, [r4]
  18:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_obj_center(meter);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 6


 106              		.loc 1 18 5 is_stmt 1 view .LVU13
 107              	.LVL7:
 108              	.LBB42:
 109              	.LBI42:
 110              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 7


  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 8


 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 9


 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 111              		.loc 3 186 20 view .LVU14
 112              	.LBB43:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 113              		.loc 3 188 5 view .LVU15
 114 0016 0023     		movs	r3, #0
 115 0018 1A46     		mov	r2, r3
 116 001a 0921     		movs	r1, #9
 117 001c FFF7FEFF 		bl	lv_obj_align
 118              	.LVL8:
 119              		.loc 3 188 5 is_stmt 0 view .LVU16
 120              	.LBE43:
 121              	.LBE42:
  19:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_obj_set_size(meter, 200, 200);
 122              		.loc 1 19 5 is_stmt 1 view .LVU17
 123 0020 C822     		movs	r2, #200
 124 0022 1146     		mov	r1, r2
 125 0024 2068     		ldr	r0, [r4]
 126 0026 FFF7FEFF 		bl	lv_obj_set_size
 127              	.LVL9:
  20:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  21:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     /*Remove the circle from the middle*/
  22:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_obj_remove_style(meter, NULL, LV_PART_INDICATOR);
 128              		.loc 1 22 5 view .LVU18
 129 002a 4FF40032 		mov	r2, #131072
 130 002e 0021     		movs	r1, #0
 131 0030 2068     		ldr	r0, [r4]
 132 0032 FFF7FEFF 		bl	lv_obj_remove_style
 133              	.LVL10:
  23:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  24:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     /*Add a scale first*/
  25:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_scale_t * scale = lv_meter_add_scale(meter);
 134              		.loc 1 25 5 view .LVU19
 135              		.loc 1 25 32 is_stmt 0 view .LVU20
 136 0036 2068     		ldr	r0, [r4]
 137 0038 FFF7FEFF 		bl	lv_meter_add_scale
 138              	.LVL11:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 10


 139 003c 0546     		mov	r5, r0
 140              	.LVL12:
  26:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_set_scale_ticks(meter, scale, 11, 2, 10, lv_palette_main(LV_PALETTE_GREY));
 141              		.loc 1 26 5 is_stmt 1 view .LVU21
 142 003e 2768     		ldr	r7, [r4]
 143 0040 1220     		movs	r0, #18
 144              	.LVL13:
 145              		.loc 1 26 5 is_stmt 0 view .LVU22
 146 0042 FFF7FEFF 		bl	lv_palette_main
 147              	.LVL14:
 148 0046 ADF80400 		strh	r0, [sp, #4]	@ movhi
 149 004a 0A26     		movs	r6, #10
 150 004c 0096     		str	r6, [sp]
 151 004e 0223     		movs	r3, #2
 152 0050 0B22     		movs	r2, #11
 153 0052 2946     		mov	r1, r5
 154 0054 3846     		mov	r0, r7
 155 0056 FFF7FEFF 		bl	lv_meter_set_scale_ticks
 156              	.LVL15:
  27:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_set_scale_major_ticks(meter, scale, 1, 2, 30, lv_color_hex3(0xeee), 10);
 157              		.loc 1 27 5 is_stmt 1 view .LVU23
 158              	.LBB44:
 159              	.LBI44:
 160              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Error checking*/
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include <stdint.h>
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 11


  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      DEFINES
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** enum {
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** };
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Adjust color mix functions rounding.
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Should be in range of 0..254
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 64: round up from x.75
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 128: round up from half
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 192: round up from x.25
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 254: round up*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 12


  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** */
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 13


 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 14


 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     union {
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full;
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t full;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green;
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red;
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t full;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct {
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t h;
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t s;
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t v;
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 15


 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     void * user_data;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_color_filter_dsc_t;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef enum {
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_palette_t;
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*In color conversations:
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 16


 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF;
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 17


 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /**
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 18


 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      */
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 440:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 445:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 447:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 448:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 449:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 450:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 451:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 452:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 453:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 454:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 458:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 459:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 461:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 462:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 463:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 469:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 480:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 483:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 484:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 485:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 486:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 487:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 489:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 19


 490:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 494:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     (void) mix;
 495:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 500:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 501:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 502:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 503:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 504:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 510:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 512:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 514:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 515:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 527:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 529:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 530:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 535:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 536:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 537:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 538:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 539:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 540:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 542:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 543:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 544:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 546:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 20


 547:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 548:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 552:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 555:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 556:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 557:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 558:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 560:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 561:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 562:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 563:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 567:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 569:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 577:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 580:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 581:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 582:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
 583:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             /*Info:
 584:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             if(res_opa_saved == 0) {
 587:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                 while(1)
 588:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                     ;
 589:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             }
 590:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 593:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         }
 594:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 595:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 596:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 597:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 598:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 599:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 600:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 601:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 602:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 603:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 21


 604:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color a color
 605:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 606:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 607:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 609:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 613:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 614:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 619:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 620:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 622:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 624:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 625:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 161              		.loc 4 625 26 view .LVU24
 162              	.LBE44:
 626:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 627:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 163              		.loc 4 627 5 view .LVU25
 164              	.LBB47:
 165              	.LBB45:
 166              	.LBI45:
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 167              		.loc 4 615 26 view .LVU26
 168              	.LBB46:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 169              		.loc 4 617 5 view .LVU27
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 170              		.loc 4 617 12 is_stmt 0 view .LVU28
 171 005a 1D22     		movs	r2, #29
 172 005c 4FF00003 		mov	r3, #0	@ movhi
 173 0060 62F30403 		bfi	r3, r2, #0, #5
 174 0064 3B21     		movs	r1, #59
 175 0066 61F34A13 		bfi	r3, r1, #5, #6
 176 006a 62F3CF23 		bfi	r3, r2, #11, #5
 177              	.LVL16:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 178              		.loc 4 617 12 view .LVU29
 179              	.LBE46:
 180              	.LBE45:
 181              	.LBE47:
 182              		.loc 1 27 5 view .LVU30
 183 006e 0296     		str	r6, [sp, #8]
 184 0070 ADF80430 		strh	r3, [sp, #4]	@ movhi
 185 0074 1E23     		movs	r3, #30
 186 0076 0093     		str	r3, [sp]
 187 0078 0223     		movs	r3, #2
 188 007a 0122     		movs	r2, #1
 189 007c 2946     		mov	r1, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 22


 190 007e 2068     		ldr	r0, [r4]
 191 0080 FFF7FEFF 		bl	lv_meter_set_scale_major_ticks
 192              	.LVL17:
  28:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_set_scale_range(meter, scale, 0, 100, 270, 90);
 193              		.loc 1 28 5 is_stmt 1 view .LVU31
 194 0084 5A23     		movs	r3, #90
 195 0086 0193     		str	r3, [sp, #4]
 196 0088 4FF48773 		mov	r3, #270
 197 008c 0093     		str	r3, [sp]
 198 008e 6423     		movs	r3, #100
 199 0090 0022     		movs	r2, #0
 200 0092 2946     		mov	r1, r5
 201 0094 2068     		ldr	r0, [r4]
 202 0096 FFF7FEFF 		bl	lv_meter_set_scale_range
 203              	.LVL18:
  29:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  30:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     /*Add a three arc indicator*/
  31:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_indicator_t * indic1 = lv_meter_add_arc(meter, scale, 10, lv_palette_main(LV_PALETTE_R
 204              		.loc 1 31 5 view .LVU32
 205              		.loc 1 31 37 is_stmt 0 view .LVU33
 206 009a 2768     		ldr	r7, [r4]
 207 009c 0020     		movs	r0, #0
 208 009e FFF7FEFF 		bl	lv_palette_main
 209              	.LVL19:
 210 00a2 0346     		mov	r3, r0	@ movhi
 211 00a4 4FF00009 		mov	r9, #0
 212 00a8 CDF80090 		str	r9, [sp]
 213 00ac 3246     		mov	r2, r6
 214 00ae 2946     		mov	r1, r5
 215 00b0 3846     		mov	r0, r7
 216 00b2 FFF7FEFF 		bl	lv_meter_add_arc
 217              	.LVL20:
 218 00b6 8046     		mov	r8, r0
 219              	.LVL21:
  32:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_indicator_t * indic2 = lv_meter_add_arc(meter, scale, 10, lv_palette_main(LV_PALETTE_G
 220              		.loc 1 32 5 is_stmt 1 view .LVU34
 221              		.loc 1 32 37 is_stmt 0 view .LVU35
 222 00b8 2768     		ldr	r7, [r4]
 223 00ba 0920     		movs	r0, #9
 224              	.LVL22:
 225              		.loc 1 32 37 view .LVU36
 226 00bc FFF7FEFF 		bl	lv_palette_main
 227              	.LVL23:
 228 00c0 0346     		mov	r3, r0	@ movhi
 229 00c2 6FF00902 		mvn	r2, #9
 230 00c6 0092     		str	r2, [sp]
 231 00c8 3246     		mov	r2, r6
 232 00ca 2946     		mov	r1, r5
 233 00cc 3846     		mov	r0, r7
 234 00ce FFF7FEFF 		bl	lv_meter_add_arc
 235              	.LVL24:
 236 00d2 0746     		mov	r7, r0
 237              	.LVL25:
  33:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_meter_indicator_t * indic3 = lv_meter_add_arc(meter, scale, 10, lv_palette_main(LV_PALETTE_B
 238              		.loc 1 33 5 is_stmt 1 view .LVU37
 239              		.loc 1 33 37 is_stmt 0 view .LVU38
 240 00d4 2468     		ldr	r4, [r4]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 23


 241 00d6 0520     		movs	r0, #5
 242              	.LVL26:
 243              		.loc 1 33 37 view .LVU39
 244 00d8 FFF7FEFF 		bl	lv_palette_main
 245              	.LVL27:
 246 00dc 0346     		mov	r3, r0	@ movhi
 247 00de 6FF01302 		mvn	r2, #19
 248 00e2 0092     		str	r2, [sp]
 249 00e4 3246     		mov	r2, r6
 250 00e6 2946     		mov	r1, r5
 251 00e8 2046     		mov	r0, r4
 252 00ea FFF7FEFF 		bl	lv_meter_add_arc
 253              	.LVL28:
 254 00ee 0446     		mov	r4, r0
 255              	.LVL29:
  34:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  35:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     /*Create an animation to set the value*/
  36:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_t a;
 256              		.loc 1 36 5 is_stmt 1 view .LVU40
  37:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_init(&a);
 257              		.loc 1 37 5 view .LVU41
 258 00f0 05A8     		add	r0, sp, #20
 259              	.LVL30:
 260              		.loc 1 37 5 is_stmt 0 view .LVU42
 261 00f2 FFF7FEFF 		bl	lv_anim_init
 262              	.LVL31:
  38:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_exec_cb(&a, set_value);
 263              		.loc 1 38 5 is_stmt 1 view .LVU43
 264              	.LBB48:
 265              	.LBI48:
 266              		.file 5 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_anim.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @file lv_anim.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #ifndef LV_ANIM_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #define LV_ANIM_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #include <stdint.h>
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #include <stdbool.h>
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #include <string.h>
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /*********************
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *      DEFINES
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**********************
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 24


  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *      TYPEDEFS
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  **********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef enum {
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     LV_ANIM_OFF,
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     LV_ANIM_ON,
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }lv_anim_enable_t;
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** struct _lv_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Get the current value during an animation*/
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Generic prototype of "animator" functions.
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * First parameter is the variable to animate.
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Second parameter is the value to set.
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * The `x` in `_xcb_t` means its not a fully generic prototype because
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Callback to call when the animation is ready*/
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /** Describes an animation*/
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** typedef struct _lv_anim_t {
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     void * var;                          /**<Variable to animate*/
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #if LV_USE_USER_DATA
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     void * user_data; /**< Custom user data*/
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** #endif
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     int32_t start_value;               /**< Start value*/
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     int32_t current_value;             /**< Current value*/
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     int32_t end_value;                 /**< End value*/
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 25


  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     uint32_t time_orig;
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** } lv_anim_t;
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**********************
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * GLOBAL PROTOTYPES
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  **********************/
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Init. the animation module
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** void _lv_anim_core_init(void);
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Initialize an animation variable.
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * E.g.:
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * lv_anim_t a;
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * lv_anim_init(&a);
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * lv_anim_set_...(&a);
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * lv_anim_start(&a);
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a variable to animate
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param var   pointer to a variable to animate
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->var = var;
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a function to animate `var`
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param exec_cb   a function to execute during animation
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *                  LVGL's built-in functions can be used.
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  *                  E.g. lv_obj_set_x
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 267              		.loc 5 131 20 view .LVU44
 268              	.LBB49:
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->exec_cb = exec_cb;
 269              		.loc 5 133 5 view .LVU45
 270              		.loc 5 133 16 is_stmt 0 view .LVU46
 271 00f6 164B     		ldr	r3, .L7+4
 272 00f8 0693     		str	r3, [sp, #24]
 273              	.LVL32:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 26


 274              		.loc 5 133 16 view .LVU47
 275              	.LBE49:
 276              	.LBE48:
  39:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_values(&a, 0, 100);
 277              		.loc 1 39 5 is_stmt 1 view .LVU48
 278              	.LBB50:
 279              	.LBI50:
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set the duration of an animation
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->time = duration;
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a delay before starting the animation
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->act_time = -(int32_t)(delay);
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set the start and end values of an animation
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param start     the start value
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param end       the end value
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 280              		.loc 5 162 20 view .LVU49
 281              	.LBB51:
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->start_value = start;
 282              		.loc 5 164 5 view .LVU50
 283              		.loc 5 164 20 is_stmt 0 view .LVU51
 284 00fa CDF83090 		str	r9, [sp, #48]
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->current_value = start;
 285              		.loc 5 165 5 is_stmt 1 view .LVU52
 286              		.loc 5 165 22 is_stmt 0 view .LVU53
 287 00fe CDF83490 		str	r9, [sp, #52]
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->end_value = end;
 288              		.loc 5 166 5 is_stmt 1 view .LVU54
 289              		.loc 5 166 18 is_stmt 0 view .LVU55
 290 0102 6423     		movs	r3, #100
 291 0104 0E93     		str	r3, [sp, #56]
 292              	.LVL33:
 293              		.loc 5 166 18 view .LVU56
 294              	.LBE51:
 295              	.LBE50:
  40:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_repeat_delay(&a, 100);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 27


 296              		.loc 1 40 5 is_stmt 1 view .LVU57
 297              	.LBB52:
 298              	.LBI52:
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * This function might be used when LVGL is binded to other languages because
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * The variable to animate can be stored in the animation's `user_sata`
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param exec_cb   a function to execute.
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->var     = a;
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set the path (curve) of the animation.
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param path_cb a function the get the current value of the animation.
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->path_cb = path_cb;
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param start_cb  a function call when the animation starts
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_ready_cb_t start_cb)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->start_cb = start_cb;
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a function to use the current value of the variable and make start and end value
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * relative the the returned current value.
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a             pointer to an initialized `lv_anim_t` variable
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param get_value_cb  a function call when the animation starts
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->get_value_cb = get_value_cb;
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a function call when the animation is ready
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param ready_cb  a function call when the animation is ready
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 28


 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->ready_cb = ready_cb;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param time      the duration of the playback animation in in milliseconds. 0: disable playback
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->playback_time = time;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param delay     delay in milliseconds before starting the playback animation.
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->playback_delay = delay;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Make the animation repeat itself.
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param cnt       repeat count or `LV_ANIM_REPEAT_INFINITE` for infinite repetition. 0: to disabl
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->repeat_cnt = cnt;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** /**
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * Set a delay before repeating the animation.
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  * @param delay     delay in milliseconds before repeating the animation.
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****  */
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** static inline void lv_anim_set_repeat_delay(lv_anim_t * a, uint32_t delay)
 299              		.loc 5 259 20 view .LVU58
 300              	.LBB53:
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h ****     a->repeat_delay = delay;
 301              		.loc 5 261 5 view .LVU59
 302              		.loc 5 261 21 is_stmt 0 view .LVU60
 303 0106 1393     		str	r3, [sp, #76]
 304              	.LVL34:
 305              		.loc 5 261 21 view .LVU61
 306              	.LBE53:
 307              	.LBE52:
  41:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_playback_delay(&a, 100);
 308              		.loc 1 41 5 is_stmt 1 view .LVU62
 309              	.LBB54:
 310              	.LBI54:
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 311              		.loc 5 239 20 view .LVU63
 312              	.LBB55:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 29


 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 313              		.loc 5 241 5 view .LVU64
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 314              		.loc 5 241 23 is_stmt 0 view .LVU65
 315 0108 1193     		str	r3, [sp, #68]
 316              	.LVL35:
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 317              		.loc 5 241 23 view .LVU66
 318              	.LBE55:
 319              	.LBE54:
  42:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_repeat_count(&a, LV_ANIM_REPEAT_INFINITE);
 320              		.loc 1 42 5 is_stmt 1 view .LVU67
 321              	.LBB56:
 322              	.LBI56:
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 323              		.loc 5 249 20 view .LVU68
 324              	.LBB57:
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 325              		.loc 5 251 5 view .LVU69
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 326              		.loc 5 251 19 is_stmt 0 view .LVU70
 327 010a 4FF6FF73 		movw	r3, #65535
 328 010e ADF85030 		strh	r3, [sp, #80]	@ movhi
 329              	.LVL36:
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 330              		.loc 5 251 19 view .LVU71
 331              	.LBE57:
 332              	.LBE56:
  43:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  44:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_time(&a, 2000);
 333              		.loc 1 44 5 is_stmt 1 view .LVU72
 334              	.LBB58:
 335              	.LBI58:
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 336              		.loc 5 141 20 view .LVU73
 337              	.LBB59:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 338              		.loc 5 143 5 view .LVU74
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 339              		.loc 5 143 13 is_stmt 0 view .LVU75
 340 0112 4FF4FA66 		mov	r6, #2000
 341 0116 0F96     		str	r6, [sp, #60]
 342              	.LVL37:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 343              		.loc 5 143 13 view .LVU76
 344              	.LBE59:
 345              	.LBE58:
  45:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_playback_time(&a, 500);
 346              		.loc 1 45 5 is_stmt 1 view .LVU77
 347              	.LBB60:
 348              	.LBI60:
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 349              		.loc 5 229 20 view .LVU78
 350              	.LBB61:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 351              		.loc 5 231 5 view .LVU79
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 30


 352              		.loc 5 231 22 is_stmt 0 view .LVU80
 353 0118 4FF4FA73 		mov	r3, #500
 354 011c 1293     		str	r3, [sp, #72]
 355              	.LVL38:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 356              		.loc 5 231 22 view .LVU81
 357              	.LBE61:
 358              	.LBE60:
  46:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_var(&a, indic1);
 359              		.loc 1 46 5 is_stmt 1 view .LVU82
 360              	.LBB62:
 361              	.LBI62:
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 362              		.loc 5 119 20 view .LVU83
 363              	.LBB63:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 364              		.loc 5 121 5 view .LVU84
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 365              		.loc 5 121 12 is_stmt 0 view .LVU85
 366 011e CDF81480 		str	r8, [sp, #20]
 367              	.LVL39:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 368              		.loc 5 121 12 view .LVU86
 369              	.LBE63:
 370              	.LBE62:
  47:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_start(&a);
 371              		.loc 1 47 5 is_stmt 1 view .LVU87
 372 0122 05A8     		add	r0, sp, #20
 373 0124 FFF7FEFF 		bl	lv_anim_start
 374              	.LVL40:
  48:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  49:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_time(&a, 1000);
 375              		.loc 1 49 5 view .LVU88
 376              	.LBB64:
 377              	.LBI64:
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 378              		.loc 5 141 20 view .LVU89
 379              	.LBB65:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 380              		.loc 5 143 5 view .LVU90
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 381              		.loc 5 143 13 is_stmt 0 view .LVU91
 382 0128 4FF47A75 		mov	r5, #1000
 383              	.LVL41:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 384              		.loc 5 143 13 view .LVU92
 385 012c 0F95     		str	r5, [sp, #60]
 386              	.LVL42:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 387              		.loc 5 143 13 view .LVU93
 388              	.LBE65:
 389              	.LBE64:
  50:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_playback_time(&a, 1000);
 390              		.loc 1 50 5 is_stmt 1 view .LVU94
 391              	.LBB66:
 392              	.LBI66:
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 31


 393              		.loc 5 229 20 view .LVU95
 394              	.LBB67:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 395              		.loc 5 231 5 view .LVU96
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 396              		.loc 5 231 22 is_stmt 0 view .LVU97
 397 012e 1295     		str	r5, [sp, #72]
 398              	.LVL43:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 399              		.loc 5 231 22 view .LVU98
 400              	.LBE67:
 401              	.LBE66:
  51:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_var(&a, indic2);
 402              		.loc 1 51 5 is_stmt 1 view .LVU99
 403              	.LBB68:
 404              	.LBI68:
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 405              		.loc 5 119 20 view .LVU100
 406              	.LBB69:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 407              		.loc 5 121 5 view .LVU101
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 408              		.loc 5 121 12 is_stmt 0 view .LVU102
 409 0130 0597     		str	r7, [sp, #20]
 410              	.LVL44:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 411              		.loc 5 121 12 view .LVU103
 412              	.LBE69:
 413              	.LBE68:
  52:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_start(&a);
 414              		.loc 1 52 5 is_stmt 1 view .LVU104
 415 0132 05A8     		add	r0, sp, #20
 416 0134 FFF7FEFF 		bl	lv_anim_start
 417              	.LVL45:
  53:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** 
  54:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_time(&a, 1000);
 418              		.loc 1 54 5 view .LVU105
 419              	.LBB70:
 420              	.LBI70:
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 421              		.loc 5 141 20 view .LVU106
 422              	.LBB71:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 423              		.loc 5 143 5 view .LVU107
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 424              		.loc 5 143 13 is_stmt 0 view .LVU108
 425 0138 0F95     		str	r5, [sp, #60]
 426              	.LVL46:
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 427              		.loc 5 143 13 view .LVU109
 428              	.LBE71:
 429              	.LBE70:
  55:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_playback_time(&a, 2000);
 430              		.loc 1 55 5 is_stmt 1 view .LVU110
 431              	.LBB72:
 432              	.LBI72:
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 32


 433              		.loc 5 229 20 view .LVU111
 434              	.LBB73:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 435              		.loc 5 231 5 view .LVU112
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 436              		.loc 5 231 22 is_stmt 0 view .LVU113
 437 013a 1296     		str	r6, [sp, #72]
 438              	.LVL47:
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 439              		.loc 5 231 22 view .LVU114
 440              	.LBE73:
 441              	.LBE72:
  56:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_set_var(&a, indic3);
 442              		.loc 1 56 5 is_stmt 1 view .LVU115
 443              	.LBB74:
 444              	.LBI74:
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** {
 445              		.loc 5 119 20 view .LVU116
 446              	.LBB75:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 447              		.loc 5 121 5 view .LVU117
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 448              		.loc 5 121 12 is_stmt 0 view .LVU118
 449 013c 0594     		str	r4, [sp, #20]
 450              	.LVL48:
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_anim.h **** }
 451              		.loc 5 121 12 view .LVU119
 452              	.LBE75:
 453              	.LBE74:
  57:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c ****     lv_anim_start(&a);
 454              		.loc 1 57 5 is_stmt 1 view .LVU120
 455 013e 05A8     		add	r0, sp, #20
 456 0140 FFF7FEFF 		bl	lv_anim_start
 457              	.LVL49:
  58:lvgl/lvgl/examples/widgets/meter/lv_example_meter_2.c **** }
 458              		.loc 1 58 1 is_stmt 0 view .LVU121
 459 0144 17B0     		add	sp, sp, #92
 460              	.LCFI3:
 461              		.cfi_def_cfa_offset 28
 462              		@ sp needed
 463 0146 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 464              	.LVL50:
 465              	.L8:
 466              		.loc 1 58 1 view .LVU122
 467 014a 00BF     		.align	2
 468              	.L7:
 469 014c 00000000 		.word	.LANCHOR0
 470 0150 00000000 		.word	set_value
 471              		.cfi_endproc
 472              	.LFE190:
 474              		.section	.bss.meter,"aw",%nobits
 475              		.align	2
 476              		.set	.LANCHOR0,. + 0
 479              	meter:
 480 0000 00000000 		.space	4
 481              		.text
 482              	.Letext0:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 33


 483              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 484              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 485              		.file 8 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 486              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 487              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 488              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 489              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 490              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 491              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 492              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 493              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 494              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 495              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 496              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 497              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 498              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 499              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 500              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 501              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 502              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 503              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 504              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 505              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 506              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 507              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 508              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 509              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 510              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 511              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 512              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 513              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 514              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 515              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 516              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 517              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 518              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 519              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 520              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 521              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 522              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 523              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 524              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 525              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 526              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 527              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 528              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 529              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 530              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 531              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 532              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 533              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 534              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 535              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 536              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_meter_2.c
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:18     .text.set_value:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:25     .text.set_value:00000000 set_value
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:55     .text.set_value:00000010 $d
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:60     .text.lv_example_meter_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:67     .text.lv_example_meter_2:00000000 lv_example_meter_2
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:469    .text.lv_example_meter_2:0000014c $d
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:475    .bss.meter:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccpmBnbC.s:479    .bss.meter:00000000 meter

UNDEFINED SYMBOLS
lv_meter_set_indicator_end_value
lv_disp_get_default
lv_disp_get_scr_act
lv_meter_create
lv_obj_align
lv_obj_set_size
lv_obj_remove_style
lv_meter_add_scale
lv_palette_main
lv_meter_set_scale_ticks
lv_meter_set_scale_major_ticks
lv_meter_set_scale_range
lv_meter_add_arc
lv_anim_init
lv_anim_start
