ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_arc_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.set_angle,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	set_angle:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c"
   1:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
   3:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** #if LV_USE_ARC && LV_BUILD_EXAMPLES
   4:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
   5:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** static void set_angle(void * obj, int32_t v)
   6:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** {
  29              		.loc 1 6 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 6 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
   7:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****     lv_arc_set_value(obj, v);
  39              		.loc 1 7 5 is_stmt 1 view .LVU2
  40 0002 09B2     		sxth	r1, r1
  41              	.LVL1:
  42              		.loc 1 7 5 is_stmt 0 view .LVU3
  43 0004 FFF7FEFF 		bl	lv_arc_set_value
  44              	.LVL2:
   8:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** }
  45              		.loc 1 8 1 view .LVU4
  46 0008 08BD     		pop	{r3, pc}
  47              		.cfi_endproc
  48              	.LFE189:
  50              		.section	.text.lv_example_arc_2,"ax",%progbits
  51              		.align	1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 2


  52              		.global	lv_example_arc_2
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	lv_example_arc_2:
  59              	.LFB190:
   9:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
  10:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** /**
  11:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****  * Create an arc which acts as a loader.
  12:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****  */
  13:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** void lv_example_arc_2(void)
  14:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** {
  60              		.loc 1 14 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 72
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 10B5     		push	{r4, lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 92B0     		sub	sp, sp, #72
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 80
  15:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   /*Create an Arc*/
  16:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_obj_t * arc = lv_arc_create(lv_scr_act());
  72              		.loc 1 16 3 view .LVU6
  73              	.LBB18:
  74              	.LBI18:
  75              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 3


  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 4


  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 5


 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  76              		.loc 2 163 26 view .LVU7
  77              	.LBB19:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  78              		.loc 2 165 5 view .LVU8
  79              		.loc 2 165 12 is_stmt 0 view .LVU9
  80 0004 FFF7FEFF 		bl	lv_disp_get_default
  81              	.LVL3:
  82 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
  83              	.LVL4:
  84              	.LBE19:
  85              	.LBE18:
  86              		.loc 1 16 20 view .LVU10
  87 000c FFF7FEFF 		bl	lv_arc_create
  88              	.LVL5:
  89 0010 0446     		mov	r4, r0
  90              	.LVL6:
  17:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_arc_set_rotation(arc, 270);
  91              		.loc 1 17 3 is_stmt 1 view .LVU11
  92 0012 4FF48771 		mov	r1, #270
  93 0016 FFF7FEFF 		bl	lv_arc_set_rotation
  94              	.LVL7:
  18:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_arc_set_bg_angles(arc, 0, 360);
  95              		.loc 1 18 3 view .LVU12
  96 001a 4FF4B472 		mov	r2, #360
  97 001e 0021     		movs	r1, #0
  98 0020 2046     		mov	r0, r4
  99 0022 FFF7FEFF 		bl	lv_arc_set_bg_angles
 100              	.LVL8:
  19:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_obj_remove_style(arc, NULL, LV_PART_KNOB);   /*Be sure the knob is not displayed*/
 101              		.loc 1 19 3 view .LVU13
 102 0026 4FF44032 		mov	r2, #196608
 103 002a 0021     		movs	r1, #0
 104 002c 2046     		mov	r0, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 6


 105 002e FFF7FEFF 		bl	lv_obj_remove_style
 106              	.LVL9:
  20:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_obj_clear_flag(arc, LV_OBJ_FLAG_CLICKABLE);  /*To not allow adjusting by click*/
 107              		.loc 1 20 3 view .LVU14
 108 0032 0221     		movs	r1, #2
 109 0034 2046     		mov	r0, r4
 110 0036 FFF7FEFF 		bl	lv_obj_clear_flag
 111              	.LVL10:
  21:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_obj_center(arc);
 112              		.loc 1 21 3 view .LVU15
 113              	.LBB20:
 114              	.LBI20:
 115              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 7


  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 8


 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 9


 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 116              		.loc 3 186 20 view .LVU16
 117              	.LBB21:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 118              		.loc 3 188 5 view .LVU17
 119 003a 0023     		movs	r3, #0
 120 003c 1A46     		mov	r2, r3
 121 003e 0921     		movs	r1, #9
 122 0040 2046     		mov	r0, r4
 123 0042 FFF7FEFF 		bl	lv_obj_align
 124              	.LVL11:
 125              		.loc 3 188 5 is_stmt 0 view .LVU18
 126              	.LBE21:
 127              	.LBE20:
  22:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
  23:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_t a;
 128              		.loc 1 23 3 is_stmt 1 view .LVU19
  24:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_init(&a);
 129              		.loc 1 24 3 view .LVU20
 130 0046 01A8     		add	r0, sp, #4
 131 0048 FFF7FEFF 		bl	lv_anim_init
 132              	.LVL12:
  25:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_var(&a, arc);
 133              		.loc 1 25 3 view .LVU21
 134              	.LBB22:
 135              	.LBI22:
 136              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_anim.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @file lv_anim.h
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 10


   3:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #ifndef LV_ANIM_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #include <stdint.h>
  19:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #include <stdbool.h>
  20:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #include <string.h>
  21:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /*********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *      DEFINES
  24:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**********************
  27:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *      TYPEDEFS
  28:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  **********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  31:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef enum {
  32:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     LV_ANIM_OFF,
  33:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     LV_ANIM_ON,
  34:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }lv_anim_enable_t;
  35:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  36:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  37:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  38:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** struct _lv_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Get the current value during an animation*/
  42:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  43:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  44:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Generic prototype of "animator" functions.
  45:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * First parameter is the variable to animate.
  46:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Second parameter is the value to set.
  47:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  48:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * The `x` in `_xcb_t` means its not a fully generic prototype because
  49:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  50:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  51:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  53:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  54:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  55:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  56:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation is ready*/
  57:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  58:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 11


  60:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  61:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  62:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  63:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  64:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  65:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /** Describes an animation*/
  66:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** typedef struct _lv_anim_t {
  67:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     void * var;                          /**<Variable to animate*/
  68:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  69:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  70:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  71:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  72:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #if LV_USE_USER_DATA
  73:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     void * user_data; /**< Custom user data*/
  74:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** #endif
  75:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  76:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     int32_t start_value;               /**< Start value*/
  77:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     int32_t current_value;             /**< Current value*/
  78:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     int32_t end_value;                 /**< End value*/
  79:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  80:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  81:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  82:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  83:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  84:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  85:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
  86:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  87:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  88:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  89:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  90:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  91:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     uint32_t time_orig;
  92:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** } lv_anim_t;
  93:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  94:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**********************
  95:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * GLOBAL PROTOTYPES
  96:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  **********************/
  97:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
  98:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
  99:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Init. the animation module
 100:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** void _lv_anim_core_init(void);
 102:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Initialize an animation variable.
 105:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * E.g.:
 106:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * lv_anim_t a;
 107:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * lv_anim_init(&a);
 108:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * lv_anim_set_...(&a);
 109:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * lv_anim_start(&a);
 110:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
 111:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 112:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 113:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 114:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 115:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a variable to animate
 116:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 12


 117:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param var   pointer to a variable to animate
 118:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 119:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 137              		.loc 4 119 20 view .LVU22
 138              	.LBB23:
 120:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 121:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->var = var;
 139              		.loc 4 121 5 view .LVU23
 140              		.loc 4 121 12 is_stmt 0 view .LVU24
 141 004c 0194     		str	r4, [sp, #4]
 142              	.LVL13:
 143              		.loc 4 121 12 view .LVU25
 144              	.LBE23:
 145              	.LBE22:
  26:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_exec_cb(&a, set_angle);
 146              		.loc 1 26 3 is_stmt 1 view .LVU26
 147              	.LBB24:
 148              	.LBI24:
 122:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 123:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a function to animate `var`
 126:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 127:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute during animation
 128:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *                  LVGL's built-in functions can be used.
 129:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  *                  E.g. lv_obj_set_x
 130:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 131:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 149              		.loc 4 131 20 view .LVU27
 150              	.LBB25:
 132:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 133:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->exec_cb = exec_cb;
 151              		.loc 4 133 5 view .LVU28
 152              		.loc 4 133 16 is_stmt 0 view .LVU29
 153 004e 0B4B     		ldr	r3, .L5
 154 0050 0293     		str	r3, [sp, #8]
 155              	.LVL14:
 156              		.loc 4 133 16 view .LVU30
 157              	.LBE25:
 158              	.LBE24:
  27:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_time(&a, 1000);
 159              		.loc 1 27 3 is_stmt 1 view .LVU31
 160              	.LBB26:
 161              	.LBI26:
 134:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 135:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 136:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 137:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set the duration of an animation
 138:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 139:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 140:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 162              		.loc 4 141 20 view .LVU32
 163              	.LBB27:
 142:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 143:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->time = duration;
 164              		.loc 4 143 5 view .LVU33
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 13


 165              		.loc 4 143 13 is_stmt 0 view .LVU34
 166 0052 4FF47A73 		mov	r3, #1000
 167 0056 0B93     		str	r3, [sp, #44]
 168              	.LVL15:
 169              		.loc 4 143 13 view .LVU35
 170              	.LBE27:
 171              	.LBE26:
  28:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_repeat_count(&a, LV_ANIM_REPEAT_INFINITE);    /*Just for the demo*/
 172              		.loc 1 28 3 is_stmt 1 view .LVU36
 173              	.LBB28:
 174              	.LBI28:
 144:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 145:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a delay before starting the animation
 148:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 149:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 150:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 151:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 152:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 153:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->act_time = -(int32_t)(delay);
 154:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 155:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 157:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set the start and end values of an animation
 158:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 159:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param start     the start value
 160:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param end       the end value
 161:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 162:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 163:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 164:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->start_value = start;
 165:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 166:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 167:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 168:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 169:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 170:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 171:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 172:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * This function might be used when LVGL is binded to other languages because
 173:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 174:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * The variable to animate can be stored in the animation's `user_sata`
 175:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 176:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute.
 177:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 178:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 179:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 180:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->var     = a;
 181:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 182:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 183:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 185:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set the path (curve) of the animation.
 186:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 187:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param path_cb a function the get the current value of the animation.
 188:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 189:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 14


 190:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 191:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->path_cb = path_cb;
 192:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 193:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 194:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 195:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 196:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 197:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param start_cb  a function call when the animation starts
 198:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 199:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_ready_cb_t start_cb)
 200:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 201:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->start_cb = start_cb;
 202:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 203:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 205:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a function to use the current value of the variable and make start and end value
 206:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * relative the the returned current value.
 207:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a             pointer to an initialized `lv_anim_t` variable
 208:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param get_value_cb  a function call when the animation starts
 209:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 210:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)
 211:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 212:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->get_value_cb = get_value_cb;
 213:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 214:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 215:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 216:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation is ready
 217:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 218:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param ready_cb  a function call when the animation is ready
 219:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 220:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 221:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 222:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->ready_cb = ready_cb;
 223:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 224:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 225:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 226:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 227:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param time      the duration of the playback animation in in milliseconds. 0: disable playback
 228:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 229:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)
 230:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 231:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->playback_time = time;
 232:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 233:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 236:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 237:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param delay     delay in milliseconds before starting the playback animation.
 238:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 239:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)
 240:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 241:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->playback_delay = delay;
 242:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 243:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 245:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Make the animation repeat itself.
 246:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 15


 247:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param cnt       repeat count or `LV_ANIM_REPEAT_INFINITE` for infinite repetition. 0: to disabl
 248:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 249:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)
 175              		.loc 4 249 20 view .LVU37
 176              	.LBB29:
 250:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 251:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->repeat_cnt = cnt;
 177              		.loc 4 251 5 view .LVU38
 178              		.loc 4 251 19 is_stmt 0 view .LVU39
 179 0058 4FF6FF73 		movw	r3, #65535
 180 005c ADF84030 		strh	r3, [sp, #64]	@ movhi
 181              	.LVL16:
 182              		.loc 4 251 19 view .LVU40
 183              	.LBE29:
 184              	.LBE28:
  29:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_repeat_delay(&a, 500);
 185              		.loc 1 29 3 is_stmt 1 view .LVU41
 186              	.LBB30:
 187              	.LBI30:
 252:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 253:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** /**
 255:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * Set a delay before repeating the animation.
 256:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 257:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  * @param delay     delay in milliseconds before repeating the animation.
 258:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****  */
 259:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_repeat_delay(lv_anim_t * a, uint32_t delay)
 188              		.loc 4 259 20 view .LVU42
 189              	.LBB31:
 260:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 261:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->repeat_delay = delay;
 190              		.loc 4 261 5 view .LVU43
 191              		.loc 4 261 21 is_stmt 0 view .LVU44
 192 0060 4FF4FA73 		mov	r3, #500
 193 0064 0F93     		str	r3, [sp, #60]
 194              	.LVL17:
 195              		.loc 4 261 21 view .LVU45
 196              	.LBE31:
 197              	.LBE30:
  30:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_set_values(&a, 0, 100);
 198              		.loc 1 30 3 is_stmt 1 view .LVU46
 199              	.LBB32:
 200              	.LBI32:
 162:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** {
 201              		.loc 4 162 20 view .LVU47
 202              	.LBB33:
 164:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 203              		.loc 4 164 5 view .LVU48
 164:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 204              		.loc 4 164 20 is_stmt 0 view .LVU49
 205 0066 0023     		movs	r3, #0
 206 0068 0893     		str	r3, [sp, #32]
 165:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 207              		.loc 4 165 5 is_stmt 1 view .LVU50
 165:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 208              		.loc 4 165 22 is_stmt 0 view .LVU51
 209 006a 0993     		str	r3, [sp, #36]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 16


 166:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 210              		.loc 4 166 5 is_stmt 1 view .LVU52
 166:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 211              		.loc 4 166 18 is_stmt 0 view .LVU53
 212 006c 6423     		movs	r3, #100
 213 006e 0A93     		str	r3, [sp, #40]
 214              	.LVL18:
 166:d:\practise\f407_disc\lvgl\lvgl\src/misc\lv_anim.h **** }
 215              		.loc 4 166 18 view .LVU54
 216              	.LBE33:
 217              	.LBE32:
  31:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c ****   lv_anim_start(&a);
 218              		.loc 1 31 3 is_stmt 1 view .LVU55
 219 0070 01A8     		add	r0, sp, #4
 220 0072 FFF7FEFF 		bl	lv_anim_start
 221              	.LVL19:
  32:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
  33:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
  34:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** 
  35:lvgl/lvgl/examples/widgets/arc/lv_example_arc_2.c **** }
 222              		.loc 1 35 1 is_stmt 0 view .LVU56
 223 0076 12B0     		add	sp, sp, #72
 224              	.LCFI3:
 225              		.cfi_def_cfa_offset 8
 226              		@ sp needed
 227 0078 10BD     		pop	{r4, pc}
 228              	.LVL20:
 229              	.L6:
 230              		.loc 1 35 1 view .LVU57
 231 007a 00BF     		.align	2
 232              	.L5:
 233 007c 00000000 		.word	set_angle
 234              		.cfi_endproc
 235              	.LFE190:
 237              		.text
 238              	.Letext0:
 239              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 240              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 241              		.file 7 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 242              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 243              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 244              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 245              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 246              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 247              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 248              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 249              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 250              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 251              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 252              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 253              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 254              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 255              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 256              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 257              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 258              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 259              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 17


 260              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 261              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 262              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 263              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 264              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 265              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 266              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 267              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 268              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 269              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 270              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 271              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 272              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 273              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 274              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 275              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 276              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 277              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 278              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 279              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 280              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 281              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 282              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 283              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 284              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 285              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 286              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 287              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 288              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 289              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 290              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 291              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 292              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 293              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccQxA03R.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_arc_2.c
C:\Users\gx\AppData\Local\Temp\ccQxA03R.s:18     .text.set_angle:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccQxA03R.s:25     .text.set_angle:00000000 set_angle
C:\Users\gx\AppData\Local\Temp\ccQxA03R.s:51     .text.lv_example_arc_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccQxA03R.s:58     .text.lv_example_arc_2:00000000 lv_example_arc_2
C:\Users\gx\AppData\Local\Temp\ccQxA03R.s:233    .text.lv_example_arc_2:0000007c $d

UNDEFINED SYMBOLS
lv_arc_set_value
lv_disp_get_default
lv_disp_get_scr_act
lv_arc_create
lv_arc_set_rotation
lv_arc_set_bg_angles
lv_obj_remove_style
lv_obj_clear_flag
lv_obj_align
lv_anim_init
lv_anim_start
