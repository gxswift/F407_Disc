ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_printf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._out_buffer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_out_buffer:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "lvgl/lvgl/src/misc/lv_printf.c"
   1:lvgl/lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:lvgl/lvgl/src/misc/lv_printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:lvgl/lvgl/src/misc/lv_printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:lvgl/lvgl/src/misc/lv_printf.c **** //
   5:lvgl/lvgl/src/misc/lv_printf.c **** // \license The MIT License (MIT)
   6:lvgl/lvgl/src/misc/lv_printf.c **** //
   7:lvgl/lvgl/src/misc/lv_printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:lvgl/lvgl/src/misc/lv_printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:lvgl/lvgl/src/misc/lv_printf.c **** // in the Software without restriction, including without limitation the rights
  10:lvgl/lvgl/src/misc/lv_printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:lvgl/lvgl/src/misc/lv_printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:lvgl/lvgl/src/misc/lv_printf.c **** // furnished to do so, subject to the following conditions:
  13:lvgl/lvgl/src/misc/lv_printf.c **** //
  14:lvgl/lvgl/src/misc/lv_printf.c **** // The above copyright notice and this permission notice shall be included in
  15:lvgl/lvgl/src/misc/lv_printf.c **** // all copies or substantial portions of the Software.
  16:lvgl/lvgl/src/misc/lv_printf.c **** //
  17:lvgl/lvgl/src/misc/lv_printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:lvgl/lvgl/src/misc/lv_printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:lvgl/lvgl/src/misc/lv_printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:lvgl/lvgl/src/misc/lv_printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:lvgl/lvgl/src/misc/lv_printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:lvgl/lvgl/src/misc/lv_printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:lvgl/lvgl/src/misc/lv_printf.c **** // THE SOFTWARE.
  24:lvgl/lvgl/src/misc/lv_printf.c **** //
  25:lvgl/lvgl/src/misc/lv_printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:lvgl/lvgl/src/misc/lv_printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:lvgl/lvgl/src/misc/lv_printf.c **** //        safe and reentrant!
  28:lvgl/lvgl/src/misc/lv_printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:lvgl/lvgl/src/misc/lv_printf.c **** //        malloc for printf (and may not be thread safe).
  30:lvgl/lvgl/src/misc/lv_printf.c **** //
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 2


  31:lvgl/lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:lvgl/lvgl/src/misc/lv_printf.c **** 
  33:lvgl/lvgl/src/misc/lv_printf.c **** /*Original repository: https://github.com/mpaland/printf*/
  34:lvgl/lvgl/src/misc/lv_printf.c **** 
  35:lvgl/lvgl/src/misc/lv_printf.c **** #include "lv_printf.h"
  36:lvgl/lvgl/src/misc/lv_printf.c **** 
  37:lvgl/lvgl/src/misc/lv_printf.c **** #if LV_SPRINTF_CUSTOM == 0
  38:lvgl/lvgl/src/misc/lv_printf.c **** 
  39:lvgl/lvgl/src/misc/lv_printf.c **** #include <stdbool.h>
  40:lvgl/lvgl/src/misc/lv_printf.c **** #include <stdint.h>
  41:lvgl/lvgl/src/misc/lv_printf.c **** 
  42:lvgl/lvgl/src/misc/lv_printf.c **** #define PRINTF_DISABLE_SUPPORT_FLOAT    (!LV_SPRINTF_USE_FLOAT)
  43:lvgl/lvgl/src/misc/lv_printf.c **** 
  44:lvgl/lvgl/src/misc/lv_printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  45:lvgl/lvgl/src/misc/lv_printf.c **** // numeric number including padded zeros (dynamically created on stack)
  46:lvgl/lvgl/src/misc/lv_printf.c **** // default: 32 byte
  47:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  48:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_NTOA_BUFFER_SIZE    32U
  49:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  50:lvgl/lvgl/src/misc/lv_printf.c **** 
  51:lvgl/lvgl/src/misc/lv_printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  52:lvgl/lvgl/src/misc/lv_printf.c **** // float number including padded zeros (dynamically created on stack)
  53:lvgl/lvgl/src/misc/lv_printf.c **** // default: 32 byte
  54:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  55:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_FTOA_BUFFER_SIZE    32U
  56:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  57:lvgl/lvgl/src/misc/lv_printf.c **** 
  58:lvgl/lvgl/src/misc/lv_printf.c **** // support for the floating point type (%f)
  59:lvgl/lvgl/src/misc/lv_printf.c **** // default: activated
  60:lvgl/lvgl/src/misc/lv_printf.c **** #if !PRINTF_DISABLE_SUPPORT_FLOAT
  61:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_FLOAT
  62:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  63:lvgl/lvgl/src/misc/lv_printf.c **** 
  64:lvgl/lvgl/src/misc/lv_printf.c **** // support for exponential floating point notation (%e/%g)
  65:lvgl/lvgl/src/misc/lv_printf.c **** // default: activated
  66:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  67:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_EXPONENTIAL
  68:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  69:lvgl/lvgl/src/misc/lv_printf.c **** 
  70:lvgl/lvgl/src/misc/lv_printf.c **** // define the default floating point precision
  71:lvgl/lvgl/src/misc/lv_printf.c **** // default: 6 digits
  72:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  73:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_DEFAULT_FLOAT_PRECISION 6U
  74:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  75:lvgl/lvgl/src/misc/lv_printf.c **** 
  76:lvgl/lvgl/src/misc/lv_printf.c **** // define the largest float suitable to print with %f
  77:lvgl/lvgl/src/misc/lv_printf.c **** // default: 1e9
  78:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_MAX_FLOAT
  79:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_MAX_FLOAT 1e9
  80:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  81:lvgl/lvgl/src/misc/lv_printf.c **** 
  82:lvgl/lvgl/src/misc/lv_printf.c **** // support for the long long types (%llu or %p)
  83:lvgl/lvgl/src/misc/lv_printf.c **** // default: activated
  84:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  85:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_LONG_LONG
  86:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  87:lvgl/lvgl/src/misc/lv_printf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 3


  88:lvgl/lvgl/src/misc/lv_printf.c **** // support for the ptrdiff_t type (%t)
  89:lvgl/lvgl/src/misc/lv_printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  90:lvgl/lvgl/src/misc/lv_printf.c **** // default: activated
  91:lvgl/lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  92:lvgl/lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_PTRDIFF_T
  93:lvgl/lvgl/src/misc/lv_printf.c **** #endif
  94:lvgl/lvgl/src/misc/lv_printf.c **** 
  95:lvgl/lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  96:lvgl/lvgl/src/misc/lv_printf.c **** 
  97:lvgl/lvgl/src/misc/lv_printf.c **** // internal flag definitions
  98:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
  99:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_LEFT      (1U <<  1U)
 100:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 101:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 102:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_HASH      (1U <<  4U)
 103:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 104:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 105:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 106:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG      (1U <<  8U)
 107:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 108:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_PRECISION (1U << 10U)
 109:lvgl/lvgl/src/misc/lv_printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 110:lvgl/lvgl/src/misc/lv_printf.c **** 
 111:lvgl/lvgl/src/misc/lv_printf.c **** // import float.h for DBL_MAX
 112:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 113:lvgl/lvgl/src/misc/lv_printf.c ****     #include <float.h>
 114:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 115:lvgl/lvgl/src/misc/lv_printf.c **** 
 116:lvgl/lvgl/src/misc/lv_printf.c **** // output function type
 117:lvgl/lvgl/src/misc/lv_printf.c **** typedef void (*out_fct_type)(char character, void * buffer, size_t idx, size_t maxlen);
 118:lvgl/lvgl/src/misc/lv_printf.c **** 
 119:lvgl/lvgl/src/misc/lv_printf.c **** // wrapper (used as buffer) for output function type
 120:lvgl/lvgl/src/misc/lv_printf.c **** typedef struct {
 121:lvgl/lvgl/src/misc/lv_printf.c ****     void (*fct)(char character, void * arg);
 122:lvgl/lvgl/src/misc/lv_printf.c ****     void * arg;
 123:lvgl/lvgl/src/misc/lv_printf.c **** } out_fct_wrap_type;
 124:lvgl/lvgl/src/misc/lv_printf.c **** 
 125:lvgl/lvgl/src/misc/lv_printf.c **** // internal buffer output
 126:lvgl/lvgl/src/misc/lv_printf.c **** static inline void _out_buffer(char character, void * buffer, size_t idx, size_t maxlen)
 127:lvgl/lvgl/src/misc/lv_printf.c **** {
  29              		.loc 1 127 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 128:lvgl/lvgl/src/misc/lv_printf.c ****     if(idx < maxlen) {
  34              		.loc 1 128 5 view .LVU1
  35              		.loc 1 128 7 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
 129:lvgl/lvgl/src/misc/lv_printf.c ****         ((char *)buffer)[idx] = character;
  38              		.loc 1 129 9 is_stmt 1 view .LVU3
  39              		.loc 1 129 31 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 130:lvgl/lvgl/src/misc/lv_printf.c ****     }
 131:lvgl/lvgl/src/misc/lv_printf.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 4


  42              		.loc 1 131 1 view .LVU5
  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	_out_null:
  55              	.LVL1:
  56              	.LFB1:
 132:lvgl/lvgl/src/misc/lv_printf.c **** 
 133:lvgl/lvgl/src/misc/lv_printf.c **** // internal null output
 134:lvgl/lvgl/src/misc/lv_printf.c **** static inline void _out_null(char character, void * buffer, size_t idx, size_t maxlen)
 135:lvgl/lvgl/src/misc/lv_printf.c **** {
  57              		.loc 1 135 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
 136:lvgl/lvgl/src/misc/lv_printf.c ****     (void)character;
  62              		.loc 1 136 5 view .LVU7
 137:lvgl/lvgl/src/misc/lv_printf.c ****     (void)buffer;
  63              		.loc 1 137 5 view .LVU8
 138:lvgl/lvgl/src/misc/lv_printf.c ****     (void)idx;
  64              		.loc 1 138 5 view .LVU9
 139:lvgl/lvgl/src/misc/lv_printf.c ****     (void)maxlen;
  65              		.loc 1 139 5 view .LVU10
 140:lvgl/lvgl/src/misc/lv_printf.c **** }
  66              		.loc 1 140 1 is_stmt 0 view .LVU11
  67 0000 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE1:
  71              		.section	.text._atoi,"ax",%progbits
  72              		.align	1
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	_atoi:
  79              	.LVL2:
  80              	.LFB4:
 141:lvgl/lvgl/src/misc/lv_printf.c **** 
 142:lvgl/lvgl/src/misc/lv_printf.c **** // internal secure strlen
 143:lvgl/lvgl/src/misc/lv_printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 144:lvgl/lvgl/src/misc/lv_printf.c **** static inline unsigned int _strnlen_s(const char * str, size_t maxsize)
 145:lvgl/lvgl/src/misc/lv_printf.c **** {
 146:lvgl/lvgl/src/misc/lv_printf.c ****     const char * s;
 147:lvgl/lvgl/src/misc/lv_printf.c ****     for(s = str; *s && maxsize--; ++s);
 148:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 149:lvgl/lvgl/src/misc/lv_printf.c **** }
 150:lvgl/lvgl/src/misc/lv_printf.c **** 
 151:lvgl/lvgl/src/misc/lv_printf.c **** // internal test if char is a digit (0-9)
 152:lvgl/lvgl/src/misc/lv_printf.c **** // \return true if char is a digit
 153:lvgl/lvgl/src/misc/lv_printf.c **** static inline bool _is_digit(char ch)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 5


 154:lvgl/lvgl/src/misc/lv_printf.c **** {
 155:lvgl/lvgl/src/misc/lv_printf.c ****     return (ch >= '0') && (ch <= '9');
 156:lvgl/lvgl/src/misc/lv_printf.c **** }
 157:lvgl/lvgl/src/misc/lv_printf.c **** 
 158:lvgl/lvgl/src/misc/lv_printf.c **** // internal ASCII string to unsigned int conversion
 159:lvgl/lvgl/src/misc/lv_printf.c **** static unsigned int _atoi(const char ** str)
 160:lvgl/lvgl/src/misc/lv_printf.c **** {
  81              		.loc 1 160 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              		.loc 1 160 1 is_stmt 0 view .LVU13
  87 0000 0146     		mov	r1, r0
 161:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  88              		.loc 1 161 5 is_stmt 1 view .LVU14
  89              	.LVL3:
 162:lvgl/lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
  90              		.loc 1 162 5 view .LVU15
 161:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  91              		.loc 1 161 18 is_stmt 0 view .LVU16
  92 0002 0020     		movs	r0, #0
  93              	.LVL4:
  94              	.L5:
  95              		.loc 1 162 10 is_stmt 1 view .LVU17
  96              		.loc 1 162 22 is_stmt 0 view .LVU18
  97 0004 0A68     		ldr	r2, [r1]
  98              		.loc 1 162 11 view .LVU19
  99 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 100              	.LVL5:
 101              	.LBB19:
 102              	.LBI19:
 153:lvgl/lvgl/src/misc/lv_printf.c **** {
 103              		.loc 1 153 20 is_stmt 1 view .LVU20
 104              	.LBB20:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 105              		.loc 1 155 5 view .LVU21
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 106              		.loc 1 155 24 is_stmt 0 view .LVU22
 107 0008 303B     		subs	r3, r3, #48
 108              	.LVL6:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 109              		.loc 1 155 24 view .LVU23
 110 000a DBB2     		uxtb	r3, r3
 111              	.LVL7:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 112              		.loc 1 155 24 view .LVU24
 113              	.LBE20:
 114              	.LBE19:
 115              		.loc 1 162 10 view .LVU25
 116 000c 092B     		cmp	r3, #9
 117 000e 08D8     		bhi	.L7
 163:lvgl/lvgl/src/misc/lv_printf.c ****         i = i * 10U + (unsigned int)(*((*str)++) - '0');
 118              		.loc 1 163 9 is_stmt 1 view .LVU26
 119              		.loc 1 163 15 is_stmt 0 view .LVU27
 120 0010 00EB8000 		add	r0, r0, r0, lsl #2
 121              	.LVL8:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 6


 122              		.loc 1 163 46 view .LVU28
 123 0014 531C     		adds	r3, r2, #1
 124 0016 0B60     		str	r3, [r1]
 125              		.loc 1 163 38 view .LVU29
 126 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 127              		.loc 1 163 21 view .LVU30
 128 001a 03EB4000 		add	r0, r3, r0, lsl #1
 129              		.loc 1 163 11 view .LVU31
 130 001e 3038     		subs	r0, r0, #48
 131              	.LVL9:
 132              		.loc 1 163 11 view .LVU32
 133 0020 F0E7     		b	.L5
 134              	.L7:
 164:lvgl/lvgl/src/misc/lv_printf.c ****     }
 165:lvgl/lvgl/src/misc/lv_printf.c ****     return i;
 166:lvgl/lvgl/src/misc/lv_printf.c **** }
 135              		.loc 1 166 1 view .LVU33
 136 0022 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE4:
 140              		.section	.text._out_rev,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	_out_rev:
 148              	.LVL10:
 149              	.LFB5:
 167:lvgl/lvgl/src/misc/lv_printf.c **** 
 168:lvgl/lvgl/src/misc/lv_printf.c **** // output the specified string in reverse, taking care of any zero-padding
 169:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _out_rev(out_fct_type out, char * buffer, size_t idx, size_t maxlen, const char * buf
 170:lvgl/lvgl/src/misc/lv_printf.c ****                        unsigned int width, unsigned int flags)
 171:lvgl/lvgl/src/misc/lv_printf.c **** {
 150              		.loc 1 171 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 16, pretend = 0, frame = 8
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 171 1 is_stmt 0 view .LVU35
 155 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 36
 158              		.cfi_offset 4, -36
 159              		.cfi_offset 5, -32
 160              		.cfi_offset 6, -28
 161              		.cfi_offset 7, -24
 162              		.cfi_offset 8, -20
 163              		.cfi_offset 9, -16
 164              		.cfi_offset 10, -12
 165              		.cfi_offset 11, -8
 166              		.cfi_offset 14, -4
 167 0004 83B0     		sub	sp, sp, #12
 168              	.LCFI1:
 169              		.cfi_def_cfa_offset 48
 170 0006 0546     		mov	r5, r0
 171 0008 0E46     		mov	r6, r1
 172 000a 9346     		mov	fp, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 7


 173 000c 1F46     		mov	r7, r3
 174 000e DDF830A0 		ldr	r10, [sp, #48]
 175 0012 0D9C     		ldr	r4, [sp, #52]
 176 0014 DDF83890 		ldr	r9, [sp, #56]
 172:lvgl/lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 177              		.loc 1 172 5 is_stmt 1 view .LVU36
 178              	.LVL11:
 173:lvgl/lvgl/src/misc/lv_printf.c **** 
 174:lvgl/lvgl/src/misc/lv_printf.c ****     // pad spaces up to given width
 175:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 179              		.loc 1 175 5 view .LVU37
 180              		.loc 1 175 7 is_stmt 0 view .LVU38
 181 0018 0F9B     		ldr	r3, [sp, #60]
 182              	.LVL12:
 183              		.loc 1 175 7 view .LVU39
 184 001a 13F0030F 		tst	r3, #3
 185 001e 19D1     		bne	.L10
 186              	.LBB21:
 176:lvgl/lvgl/src/misc/lv_printf.c ****         size_t i;
 177:lvgl/lvgl/src/misc/lv_printf.c ****         for(i = len; i < width; i++) {
 187              		.loc 1 177 15 view .LVU40
 188 0020 A046     		mov	r8, r4
 189              	.LBE21:
 190 0022 0192     		str	r2, [sp, #4]
 191              	.LVL13:
 192              	.L9:
 193              	.LBB22:
 194              		.loc 1 177 22 is_stmt 1 discriminator 1 view .LVU41
 195              		.loc 1 177 9 is_stmt 0 discriminator 1 view .LVU42
 196 0024 C845     		cmp	r8, r9
 197 0026 09D2     		bcs	.L20
 178:lvgl/lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 198              		.loc 1 178 13 is_stmt 1 discriminator 3 view .LVU43
 199 0028 02F1010B 		add	fp, r2, #1
 200              	.LVL14:
 201              		.loc 1 178 13 is_stmt 0 discriminator 3 view .LVU44
 202 002c 3B46     		mov	r3, r7
 203 002e 3146     		mov	r1, r6
 204 0030 2020     		movs	r0, #32
 205 0032 A847     		blx	r5
 206              	.LVL15:
 177:lvgl/lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 207              		.loc 1 177 33 is_stmt 1 discriminator 3 view .LVU45
 177:lvgl/lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 208              		.loc 1 177 34 is_stmt 0 discriminator 3 view .LVU46
 209 0034 08F10108 		add	r8, r8, #1
 210              	.LVL16:
 211              		.loc 1 178 13 discriminator 3 view .LVU47
 212 0038 5A46     		mov	r2, fp
 213 003a F3E7     		b	.L9
 214              	.LVL17:
 215              	.L20:
 216              		.loc 1 178 13 discriminator 3 view .LVU48
 217 003c DDF804B0 		ldr	fp, [sp, #4]
 218 0040 08E0     		b	.L10
 219              	.LVL18:
 220              	.L13:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 8


 221              		.loc 1 178 13 discriminator 3 view .LVU49
 222              	.LBE22:
 179:lvgl/lvgl/src/misc/lv_printf.c ****         }
 180:lvgl/lvgl/src/misc/lv_printf.c ****     }
 181:lvgl/lvgl/src/misc/lv_printf.c **** 
 182:lvgl/lvgl/src/misc/lv_printf.c ****     // reverse string
 183:lvgl/lvgl/src/misc/lv_printf.c ****     while(len) {
 184:lvgl/lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 223              		.loc 1 184 9 is_stmt 1 view .LVU50
 224 0042 013C     		subs	r4, r4, #1
 225              	.LVL19:
 226              		.loc 1 184 9 is_stmt 0 view .LVU51
 227 0044 02F10108 		add	r8, r2, #1
 228              	.LVL20:
 229              		.loc 1 184 9 view .LVU52
 230 0048 3B46     		mov	r3, r7
 231 004a 3146     		mov	r1, r6
 232 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 233 0050 A847     		blx	r5
 234              	.LVL21:
 235 0052 4246     		mov	r2, r8
 236              	.LVL22:
 237              	.L10:
 183:lvgl/lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 238              		.loc 1 183 10 is_stmt 1 view .LVU53
 239 0054 002C     		cmp	r4, #0
 240 0056 F4D1     		bne	.L13
 185:lvgl/lvgl/src/misc/lv_printf.c ****     }
 186:lvgl/lvgl/src/misc/lv_printf.c **** 
 187:lvgl/lvgl/src/misc/lv_printf.c ****     // append pad spaces up to given width
 188:lvgl/lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_LEFT) {
 241              		.loc 1 188 5 view .LVU54
 242              		.loc 1 188 7 is_stmt 0 view .LVU55
 243 0058 0F9B     		ldr	r3, [sp, #60]
 244 005a 13F0020F 		tst	r3, #2
 245 005e 03D1     		bne	.L14
 246              	.LVL23:
 247              	.L8:
 189:lvgl/lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 190:lvgl/lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 191:lvgl/lvgl/src/misc/lv_printf.c ****         }
 192:lvgl/lvgl/src/misc/lv_printf.c ****     }
 193:lvgl/lvgl/src/misc/lv_printf.c **** 
 194:lvgl/lvgl/src/misc/lv_printf.c ****     return idx;
 195:lvgl/lvgl/src/misc/lv_printf.c **** }
 248              		.loc 1 195 1 view .LVU56
 249 0060 1046     		mov	r0, r2
 250 0062 03B0     		add	sp, sp, #12
 251              	.LCFI2:
 252              		.cfi_remember_state
 253              		.cfi_def_cfa_offset 36
 254              		@ sp needed
 255 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 256              	.LVL24:
 257              	.L14:
 258              	.LCFI3:
 259              		.cfi_restore_state
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 9


 189:lvgl/lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 260              		.loc 1 189 14 is_stmt 1 view .LVU57
 189:lvgl/lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 261              		.loc 1 189 19 is_stmt 0 view .LVU58
 262 0068 A2EB0B03 		sub	r3, r2, fp
 189:lvgl/lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 263              		.loc 1 189 14 view .LVU59
 264 006c 4B45     		cmp	r3, r9
 265 006e F7D2     		bcs	.L8
 190:lvgl/lvgl/src/misc/lv_printf.c ****         }
 266              		.loc 1 190 13 is_stmt 1 view .LVU60
 267 0070 541C     		adds	r4, r2, #1
 268              	.LVL25:
 190:lvgl/lvgl/src/misc/lv_printf.c ****         }
 269              		.loc 1 190 13 is_stmt 0 view .LVU61
 270 0072 3B46     		mov	r3, r7
 271 0074 3146     		mov	r1, r6
 272 0076 2020     		movs	r0, #32
 273 0078 A847     		blx	r5
 274              	.LVL26:
 275 007a 2246     		mov	r2, r4
 276 007c F4E7     		b	.L14
 277              		.cfi_endproc
 278              	.LFE5:
 280              		.section	.text._ntoa_format,"ax",%progbits
 281              		.align	1
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	_ntoa_format:
 288              	.LVL27:
 289              	.LFB6:
 196:lvgl/lvgl/src/misc/lv_printf.c **** 
 197:lvgl/lvgl/src/misc/lv_printf.c **** // internal itoa format
 198:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _ntoa_format(out_fct_type out, char * buffer, size_t idx, size_t maxlen, char * buf, 
 199:lvgl/lvgl/src/misc/lv_printf.c ****                            bool negative, unsigned int base, unsigned int prec, unsigned int width,
 200:lvgl/lvgl/src/misc/lv_printf.c **** {
 290              		.loc 1 200 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 28, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		.loc 1 200 1 is_stmt 0 view .LVU63
 295 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 296              	.LCFI4:
 297              		.cfi_def_cfa_offset 28
 298              		.cfi_offset 4, -28
 299              		.cfi_offset 5, -24
 300              		.cfi_offset 6, -20
 301              		.cfi_offset 7, -16
 302              		.cfi_offset 8, -12
 303              		.cfi_offset 9, -8
 304              		.cfi_offset 14, -4
 305 0004 85B0     		sub	sp, sp, #20
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 48
 308 0006 9E46     		mov	lr, r3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 10


 309 0008 0C9D     		ldr	r5, [sp, #48]
 310 000a 0D9C     		ldr	r4, [sp, #52]
 311 000c 9DF83890 		ldrb	r9, [sp, #56]	@ zero_extendqisi2
 312 0010 DDF83C80 		ldr	r8, [sp, #60]
 313 0014 DDF840C0 		ldr	ip, [sp, #64]
 314 0018 119B     		ldr	r3, [sp, #68]
 315              	.LVL28:
 316              		.loc 1 200 1 view .LVU64
 317 001a 129E     		ldr	r6, [sp, #72]
 201:lvgl/lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 202:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT)) {
 318              		.loc 1 202 5 is_stmt 1 view .LVU65
 319              		.loc 1 202 7 is_stmt 0 view .LVU66
 320 001c 16F0020F 		tst	r6, #2
 321 0020 1CD1     		bne	.L22
 203:lvgl/lvgl/src/misc/lv_printf.c ****         if(width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) 
 322              		.loc 1 203 9 is_stmt 1 view .LVU67
 323              		.loc 1 203 11 is_stmt 0 view .LVU68
 324 0022 4BB1     		cbz	r3, .L25
 325              		.loc 1 203 18 discriminator 1 view .LVU69
 326 0024 16F0010F 		tst	r6, #1
 327 0028 06D0     		beq	.L25
 328              		.loc 1 203 45 discriminator 2 view .LVU70
 329 002a B9F1000F 		cmp	r9, #0
 330 002e 02D1     		bne	.L24
 331              		.loc 1 203 58 discriminator 3 view .LVU71
 332 0030 16F00C0F 		tst	r6, #12
 333 0034 00D0     		beq	.L25
 334              	.L24:
 204:lvgl/lvgl/src/misc/lv_printf.c ****             width--;
 335              		.loc 1 204 13 is_stmt 1 view .LVU72
 336              		.loc 1 204 18 is_stmt 0 view .LVU73
 337 0036 013B     		subs	r3, r3, #1
 338              	.LVL29:
 339              	.L25:
 205:lvgl/lvgl/src/misc/lv_printf.c ****         }
 206:lvgl/lvgl/src/misc/lv_printf.c ****         while((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 340              		.loc 1 206 14 is_stmt 1 view .LVU74
 341 0038 6445     		cmp	r4, ip
 342 003a 08D2     		bcs	.L28
 343              		.loc 1 206 28 is_stmt 0 discriminator 1 view .LVU75
 344 003c 1F2C     		cmp	r4, #31
 345 003e 06D8     		bhi	.L28
 207:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 346              		.loc 1 207 13 is_stmt 1 view .LVU76
 347              	.LVL30:
 348              		.loc 1 207 24 is_stmt 0 view .LVU77
 349 0040 3027     		movs	r7, #48
 350 0042 2F55     		strb	r7, [r5, r4]
 351              		.loc 1 207 20 view .LVU78
 352 0044 0134     		adds	r4, r4, #1
 353              	.LVL31:
 354              		.loc 1 207 20 view .LVU79
 355 0046 F7E7     		b	.L25
 356              	.L29:
 208:lvgl/lvgl/src/misc/lv_printf.c ****         }
 209:lvgl/lvgl/src/misc/lv_printf.c ****         while((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 11


 210:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 357              		.loc 1 210 13 is_stmt 1 view .LVU80
 358              	.LVL32:
 359              		.loc 1 210 24 is_stmt 0 view .LVU81
 360 0048 3027     		movs	r7, #48
 361 004a 2F55     		strb	r7, [r5, r4]
 362              		.loc 1 210 20 view .LVU82
 363 004c 0134     		adds	r4, r4, #1
 364              	.LVL33:
 365              	.L28:
 209:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 366              		.loc 1 209 14 is_stmt 1 view .LVU83
 367 004e 16F0010F 		tst	r6, #1
 368 0052 03D0     		beq	.L22
 209:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 369              		.loc 1 209 39 is_stmt 0 discriminator 1 view .LVU84
 370 0054 9C42     		cmp	r4, r3
 371 0056 01D2     		bcs	.L22
 209:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 372              		.loc 1 209 56 discriminator 2 view .LVU85
 373 0058 1F2C     		cmp	r4, #31
 374 005a F5D9     		bls	.L29
 375              	.LVL34:
 376              	.L22:
 211:lvgl/lvgl/src/misc/lv_printf.c ****         }
 212:lvgl/lvgl/src/misc/lv_printf.c ****     }
 213:lvgl/lvgl/src/misc/lv_printf.c **** 
 214:lvgl/lvgl/src/misc/lv_printf.c ****     // handle hash
 215:lvgl/lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_HASH) {
 377              		.loc 1 215 5 is_stmt 1 view .LVU86
 378              		.loc 1 215 7 is_stmt 0 view .LVU87
 379 005c 16F0100F 		tst	r6, #16
 380 0060 15D0     		beq	.L30
 216:lvgl/lvgl/src/misc/lv_printf.c ****         if(!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 381              		.loc 1 216 9 is_stmt 1 view .LVU88
 382              		.loc 1 216 11 is_stmt 0 view .LVU89
 383 0062 16F4806F 		tst	r6, #1024
 384 0066 04D1     		bne	.L31
 385              		.loc 1 216 39 discriminator 1 view .LVU90
 386 0068 1CB1     		cbz	r4, .L31
 387              		.loc 1 216 46 discriminator 2 view .LVU91
 388 006a 6445     		cmp	r4, ip
 389 006c 21D0     		beq	.L32
 390              		.loc 1 216 64 discriminator 3 view .LVU92
 391 006e 9C42     		cmp	r4, r3
 392 0070 1FD0     		beq	.L32
 393              	.L31:
 217:lvgl/lvgl/src/misc/lv_printf.c ****             len--;
 218:lvgl/lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 219:lvgl/lvgl/src/misc/lv_printf.c ****                 len--;
 220:lvgl/lvgl/src/misc/lv_printf.c ****             }
 221:lvgl/lvgl/src/misc/lv_printf.c ****         }
 222:lvgl/lvgl/src/misc/lv_printf.c ****         if((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 394              		.loc 1 222 9 is_stmt 1 view .LVU93
 395              		.loc 1 222 11 is_stmt 0 view .LVU94
 396 0072 B8F1100F 		cmp	r8, #16
 397 0076 27D0     		beq	.L42
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 12


 398              	.L33:
 223:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 224:lvgl/lvgl/src/misc/lv_printf.c ****         }
 225:lvgl/lvgl/src/misc/lv_printf.c ****         else if((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 399              		.loc 1 225 14 is_stmt 1 view .LVU95
 400              		.loc 1 225 16 is_stmt 0 view .LVU96
 401 0078 B8F1100F 		cmp	r8, #16
 402 007c 2DD0     		beq	.L43
 403              	.L35:
 226:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 227:lvgl/lvgl/src/misc/lv_printf.c ****         }
 228:lvgl/lvgl/src/misc/lv_printf.c ****         else if((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 404              		.loc 1 228 14 is_stmt 1 view .LVU97
 405              		.loc 1 228 16 is_stmt 0 view .LVU98
 406 007e B8F1020F 		cmp	r8, #2
 407 0082 33D0     		beq	.L44
 408              	.L34:
 229:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'b';
 230:lvgl/lvgl/src/misc/lv_printf.c ****         }
 231:lvgl/lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_NTOA_BUFFER_SIZE) {
 409              		.loc 1 231 9 is_stmt 1 view .LVU99
 410              		.loc 1 231 11 is_stmt 0 view .LVU100
 411 0084 1F2C     		cmp	r4, #31
 412 0086 02D8     		bhi	.L30
 232:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 413              		.loc 1 232 13 is_stmt 1 view .LVU101
 414              	.LVL35:
 415              		.loc 1 232 24 is_stmt 0 view .LVU102
 416 0088 3027     		movs	r7, #48
 417 008a 2F55     		strb	r7, [r5, r4]
 418              		.loc 1 232 20 view .LVU103
 419 008c 0134     		adds	r4, r4, #1
 420              	.LVL36:
 421              	.L30:
 233:lvgl/lvgl/src/misc/lv_printf.c ****         }
 234:lvgl/lvgl/src/misc/lv_printf.c ****     }
 235:lvgl/lvgl/src/misc/lv_printf.c **** 
 236:lvgl/lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_NTOA_BUFFER_SIZE) {
 422              		.loc 1 236 5 is_stmt 1 view .LVU104
 423              		.loc 1 236 7 is_stmt 0 view .LVU105
 424 008e 1F2C     		cmp	r4, #31
 425 0090 05D8     		bhi	.L36
 237:lvgl/lvgl/src/misc/lv_printf.c ****         if(negative) {
 426              		.loc 1 237 9 is_stmt 1 view .LVU106
 427              		.loc 1 237 11 is_stmt 0 view .LVU107
 428 0092 B9F1000F 		cmp	r9, #0
 429 0096 2FD0     		beq	.L37
 238:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 430              		.loc 1 238 13 is_stmt 1 view .LVU108
 431              	.LVL37:
 432              		.loc 1 238 24 is_stmt 0 view .LVU109
 433 0098 2D27     		movs	r7, #45
 434 009a 2F55     		strb	r7, [r5, r4]
 435              		.loc 1 238 20 view .LVU110
 436 009c 0134     		adds	r4, r4, #1
 437              	.LVL38:
 438              	.L36:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 13


 239:lvgl/lvgl/src/misc/lv_printf.c ****         }
 240:lvgl/lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 241:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 242:lvgl/lvgl/src/misc/lv_printf.c ****         }
 243:lvgl/lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 244:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 245:lvgl/lvgl/src/misc/lv_printf.c ****         }
 246:lvgl/lvgl/src/misc/lv_printf.c ****     }
 247:lvgl/lvgl/src/misc/lv_printf.c **** 
 248:lvgl/lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 439              		.loc 1 248 5 is_stmt 1 view .LVU111
 440              		.loc 1 248 12 is_stmt 0 view .LVU112
 441 009e 0396     		str	r6, [sp, #12]
 442 00a0 0293     		str	r3, [sp, #8]
 443 00a2 0194     		str	r4, [sp, #4]
 444 00a4 0095     		str	r5, [sp]
 445 00a6 7346     		mov	r3, lr
 446              	.LVL39:
 447              		.loc 1 248 12 view .LVU113
 448 00a8 FFF7FEFF 		bl	_out_rev
 449              	.LVL40:
 249:lvgl/lvgl/src/misc/lv_printf.c **** }
 450              		.loc 1 249 1 view .LVU114
 451 00ac 05B0     		add	sp, sp, #20
 452              	.LCFI6:
 453              		.cfi_remember_state
 454              		.cfi_def_cfa_offset 28
 455              		@ sp needed
 456 00ae BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 457              	.LVL41:
 458              	.L32:
 459              	.LCFI7:
 460              		.cfi_restore_state
 217:lvgl/lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 461              		.loc 1 217 13 is_stmt 1 view .LVU115
 218:lvgl/lvgl/src/misc/lv_printf.c ****                 len--;
 462              		.loc 1 218 13 view .LVU116
 218:lvgl/lvgl/src/misc/lv_printf.c ****                 len--;
 463              		.loc 1 218 15 is_stmt 0 view .LVU117
 464 00b2 671E     		subs	r7, r4, #1
 465              	.LVL42:
 218:lvgl/lvgl/src/misc/lv_printf.c ****                 len--;
 466              		.loc 1 218 15 view .LVU118
 467 00b4 06D0     		beq	.L39
 218:lvgl/lvgl/src/misc/lv_printf.c ****                 len--;
 468              		.loc 1 218 20 discriminator 1 view .LVU119
 469 00b6 B8F1100F 		cmp	r8, #16
 470 00ba 01D0     		beq	.L45
 217:lvgl/lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 471              		.loc 1 217 16 view .LVU120
 472 00bc 3C46     		mov	r4, r7
 473 00be D8E7     		b	.L31
 474              	.L45:
 219:lvgl/lvgl/src/misc/lv_printf.c ****             }
 475              		.loc 1 219 17 is_stmt 1 view .LVU121
 219:lvgl/lvgl/src/misc/lv_printf.c ****             }
 476              		.loc 1 219 20 is_stmt 0 view .LVU122
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 14


 477 00c0 023C     		subs	r4, r4, #2
 478              	.LVL43:
 219:lvgl/lvgl/src/misc/lv_printf.c ****             }
 479              		.loc 1 219 20 view .LVU123
 480 00c2 D6E7     		b	.L31
 481              	.LVL44:
 482              	.L39:
 217:lvgl/lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 483              		.loc 1 217 16 view .LVU124
 484 00c4 3C46     		mov	r4, r7
 485 00c6 D4E7     		b	.L31
 486              	.LVL45:
 487              	.L42:
 222:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 488              		.loc 1 222 26 discriminator 1 view .LVU125
 489 00c8 16F0200F 		tst	r6, #32
 490 00cc D4D1     		bne	.L33
 222:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 491              		.loc 1 222 56 discriminator 2 view .LVU126
 492 00ce 1F2C     		cmp	r4, #31
 493 00d0 D2D8     		bhi	.L33
 223:lvgl/lvgl/src/misc/lv_printf.c ****         }
 494              		.loc 1 223 13 is_stmt 1 view .LVU127
 495              	.LVL46:
 223:lvgl/lvgl/src/misc/lv_printf.c ****         }
 496              		.loc 1 223 24 is_stmt 0 view .LVU128
 497 00d2 7827     		movs	r7, #120
 498 00d4 2F55     		strb	r7, [r5, r4]
 223:lvgl/lvgl/src/misc/lv_printf.c ****         }
 499              		.loc 1 223 20 view .LVU129
 500 00d6 0134     		adds	r4, r4, #1
 501              	.LVL47:
 223:lvgl/lvgl/src/misc/lv_printf.c ****         }
 502              		.loc 1 223 24 view .LVU130
 503 00d8 D4E7     		b	.L34
 504              	.L43:
 225:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 505              		.loc 1 225 31 discriminator 1 view .LVU131
 506 00da 16F0200F 		tst	r6, #32
 507 00de CED0     		beq	.L35
 225:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 508              		.loc 1 225 60 discriminator 2 view .LVU132
 509 00e0 1F2C     		cmp	r4, #31
 510 00e2 CCD8     		bhi	.L35
 226:lvgl/lvgl/src/misc/lv_printf.c ****         }
 511              		.loc 1 226 13 is_stmt 1 view .LVU133
 512              	.LVL48:
 226:lvgl/lvgl/src/misc/lv_printf.c ****         }
 513              		.loc 1 226 24 is_stmt 0 view .LVU134
 514 00e4 5827     		movs	r7, #88
 515 00e6 2F55     		strb	r7, [r5, r4]
 226:lvgl/lvgl/src/misc/lv_printf.c ****         }
 516              		.loc 1 226 20 view .LVU135
 517 00e8 0134     		adds	r4, r4, #1
 518              	.LVL49:
 226:lvgl/lvgl/src/misc/lv_printf.c ****         }
 519              		.loc 1 226 24 view .LVU136
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 15


 520 00ea CBE7     		b	.L34
 521              	.L44:
 228:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = 'b';
 522              		.loc 1 228 30 discriminator 1 view .LVU137
 523 00ec 1F2C     		cmp	r4, #31
 524 00ee C9D8     		bhi	.L34
 229:lvgl/lvgl/src/misc/lv_printf.c ****         }
 525              		.loc 1 229 13 is_stmt 1 view .LVU138
 526              	.LVL50:
 229:lvgl/lvgl/src/misc/lv_printf.c ****         }
 527              		.loc 1 229 24 is_stmt 0 view .LVU139
 528 00f0 6227     		movs	r7, #98
 529 00f2 2F55     		strb	r7, [r5, r4]
 229:lvgl/lvgl/src/misc/lv_printf.c ****         }
 530              		.loc 1 229 20 view .LVU140
 531 00f4 0134     		adds	r4, r4, #1
 532              	.LVL51:
 229:lvgl/lvgl/src/misc/lv_printf.c ****         }
 533              		.loc 1 229 20 view .LVU141
 534 00f6 C5E7     		b	.L34
 535              	.L37:
 240:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 536              		.loc 1 240 14 is_stmt 1 view .LVU142
 240:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 537              		.loc 1 240 16 is_stmt 0 view .LVU143
 538 00f8 16F0040F 		tst	r6, #4
 539 00fc 03D0     		beq	.L38
 241:lvgl/lvgl/src/misc/lv_printf.c ****         }
 540              		.loc 1 241 13 is_stmt 1 view .LVU144
 541              	.LVL52:
 241:lvgl/lvgl/src/misc/lv_printf.c ****         }
 542              		.loc 1 241 24 is_stmt 0 view .LVU145
 543 00fe 2B27     		movs	r7, #43
 544 0100 2F55     		strb	r7, [r5, r4]
 241:lvgl/lvgl/src/misc/lv_printf.c ****         }
 545              		.loc 1 241 20 view .LVU146
 546 0102 0134     		adds	r4, r4, #1
 547              	.LVL53:
 241:lvgl/lvgl/src/misc/lv_printf.c ****         }
 548              		.loc 1 241 20 view .LVU147
 549 0104 CBE7     		b	.L36
 550              	.L38:
 243:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 551              		.loc 1 243 14 is_stmt 1 view .LVU148
 243:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 552              		.loc 1 243 16 is_stmt 0 view .LVU149
 553 0106 16F0080F 		tst	r6, #8
 554 010a C8D0     		beq	.L36
 244:lvgl/lvgl/src/misc/lv_printf.c ****         }
 555              		.loc 1 244 13 is_stmt 1 view .LVU150
 556              	.LVL54:
 244:lvgl/lvgl/src/misc/lv_printf.c ****         }
 557              		.loc 1 244 24 is_stmt 0 view .LVU151
 558 010c 2027     		movs	r7, #32
 559 010e 2F55     		strb	r7, [r5, r4]
 244:lvgl/lvgl/src/misc/lv_printf.c ****         }
 560              		.loc 1 244 20 view .LVU152
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 16


 561 0110 0134     		adds	r4, r4, #1
 562              	.LVL55:
 244:lvgl/lvgl/src/misc/lv_printf.c ****         }
 563              		.loc 1 244 20 view .LVU153
 564 0112 C4E7     		b	.L36
 565              		.cfi_endproc
 566              	.LFE6:
 568              		.section	.text._ntoa_long,"ax",%progbits
 569              		.align	1
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv4-sp-d16
 575              	_ntoa_long:
 576              	.LVL56:
 577              	.LFB7:
 250:lvgl/lvgl/src/misc/lv_printf.c **** 
 251:lvgl/lvgl/src/misc/lv_printf.c **** // internal itoa for 'long' type
 252:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long 
 253:lvgl/lvgl/src/misc/lv_printf.c ****                          unsigned long base, unsigned int prec, unsigned int width, unsigned int fl
 254:lvgl/lvgl/src/misc/lv_printf.c **** {
 578              		.loc 1 254 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 24, pretend = 0, frame = 32
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		.loc 1 254 1 is_stmt 0 view .LVU155
 583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 584              	.LCFI8:
 585              		.cfi_def_cfa_offset 24
 586              		.cfi_offset 4, -24
 587              		.cfi_offset 5, -20
 588              		.cfi_offset 6, -16
 589              		.cfi_offset 7, -12
 590              		.cfi_offset 8, -8
 591              		.cfi_offset 14, -4
 592 0004 90B0     		sub	sp, sp, #64
 593              	.LCFI9:
 594              		.cfi_def_cfa_offset 88
 595 0006 169D     		ldr	r5, [sp, #88]
 596 0008 189F     		ldr	r7, [sp, #96]
 597 000a DDF86CC0 		ldr	ip, [sp, #108]
 255:lvgl/lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 598              		.loc 1 255 5 is_stmt 1 view .LVU156
 256:lvgl/lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 599              		.loc 1 256 5 view .LVU157
 600              	.LVL57:
 257:lvgl/lvgl/src/misc/lv_printf.c **** 
 258:lvgl/lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 259:lvgl/lvgl/src/misc/lv_printf.c ****     if(!value) {
 601              		.loc 1 259 5 view .LVU158
 602              		.loc 1 259 7 is_stmt 0 view .LVU159
 603 000e 0DB9     		cbnz	r5, .L47
 260:lvgl/lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 604              		.loc 1 260 9 is_stmt 1 view .LVU160
 605              		.loc 1 260 15 is_stmt 0 view .LVU161
 606 0010 2CF0100C 		bic	ip, ip, #16
 607              	.LVL58:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 17


 608              	.L47:
 261:lvgl/lvgl/src/misc/lv_printf.c ****     }
 262:lvgl/lvgl/src/misc/lv_printf.c **** 
 263:lvgl/lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 264:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 609              		.loc 1 264 5 is_stmt 1 view .LVU162
 610              		.loc 1 264 7 is_stmt 0 view .LVU163
 611 0014 1CF48066 		ands	r6, ip, #1024
 612 0018 14D0     		beq	.L53
 613              		.loc 1 264 35 discriminator 1 view .LVU164
 614 001a 3DB3     		cbz	r5, .L54
 615 001c 0026     		movs	r6, #0
 616 001e 11E0     		b	.L53
 617              	.LVL59:
 618              	.L58:
 619              	.LBB23:
 265:lvgl/lvgl/src/misc/lv_printf.c ****         do {
 266:lvgl/lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 267:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 620              		.loc 1 267 24 discriminator 1 view .LVU165
 621 0020 3034     		adds	r4, r4, #48
 622              	.LVL60:
 623              		.loc 1 267 24 discriminator 1 view .LVU166
 624 0022 E4B2     		uxtb	r4, r4
 625              	.LVL61:
 626              	.L51:
 627              		.loc 1 267 20 discriminator 8 view .LVU167
 628 0024 06F1010E 		add	lr, r6, #1
 629              	.LVL62:
 630              		.loc 1 267 24 discriminator 8 view .LVU168
 631 0028 0DF14008 		add	r8, sp, #64
 632 002c 4644     		add	r6, r6, r8
 633 002e 06F8204C 		strb	r4, [r6, #-32]
 268:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 634              		.loc 1 268 13 is_stmt 1 discriminator 8 view .LVU169
 635              		.loc 1 268 19 is_stmt 0 discriminator 8 view .LVU170
 636 0032 B5FBF7F4 		udiv	r4, r5, r7
 637              	.LVL63:
 638              		.loc 1 268 19 discriminator 8 view .LVU171
 639              	.LBE23:
 269:lvgl/lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 640              		.loc 1 269 16 is_stmt 1 discriminator 8 view .LVU172
 641              		.loc 1 269 9 is_stmt 0 discriminator 8 view .LVU173
 642 0036 BD42     		cmp	r5, r7
 643 0038 19D3     		bcc	.L49
 644              		.loc 1 269 23 discriminator 1 view .LVU174
 645 003a BEF11F0F 		cmp	lr, #31
 646 003e 16D8     		bhi	.L49
 647              	.LBB24:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 648              		.loc 1 267 20 view .LVU175
 649 0040 7646     		mov	r6, lr
 268:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 650              		.loc 1 268 19 view .LVU176
 651 0042 2546     		mov	r5, r4
 652              	.LVL64:
 653              	.L53:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 18


 268:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 654              		.loc 1 268 19 view .LVU177
 655              	.LBE24:
 265:lvgl/lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 656              		.loc 1 265 9 is_stmt 1 view .LVU178
 657              	.LBB25:
 266:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 658              		.loc 1 266 13 view .LVU179
 266:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 659              		.loc 1 266 45 is_stmt 0 view .LVU180
 660 0044 B5FBF7F4 		udiv	r4, r5, r7
 661 0048 07FB1454 		mls	r4, r7, r4, r5
 266:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 662              		.loc 1 266 24 view .LVU181
 663 004c E4B2     		uxtb	r4, r4
 664              	.LVL65:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 665              		.loc 1 267 13 is_stmt 1 view .LVU182
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 666              		.loc 1 267 24 is_stmt 0 view .LVU183
 667 004e 092C     		cmp	r4, #9
 668 0050 E6D9     		bls	.L58
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 669              		.loc 1 267 91 discriminator 2 view .LVU184
 670 0052 1CF0200F 		tst	ip, #32
 671 0056 06D0     		beq	.L55
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 672              		.loc 1 267 91 view .LVU185
 673 0058 4FF0410E 		mov	lr, #65
 674              	.L52:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 675              		.loc 1 267 91 discriminator 7 view .LVU186
 676 005c 7444     		add	r4, r4, lr
 677              	.LVL66:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 678              		.loc 1 267 91 discriminator 7 view .LVU187
 679 005e E4B2     		uxtb	r4, r4
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 680              		.loc 1 267 24 discriminator 7 view .LVU188
 681 0060 0A3C     		subs	r4, r4, #10
 682 0062 E4B2     		uxtb	r4, r4
 683 0064 DEE7     		b	.L51
 684              	.LVL67:
 685              	.L55:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 686              		.loc 1 267 91 view .LVU189
 687 0066 4FF0610E 		mov	lr, #97
 688 006a F7E7     		b	.L52
 689              	.LVL68:
 690              	.L54:
 267:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 691              		.loc 1 267 91 view .LVU190
 692              	.LBE25:
 256:lvgl/lvgl/src/misc/lv_printf.c **** 
 693              		.loc 1 256 12 view .LVU191
 694 006c AE46     		mov	lr, r5
 695              	.LVL69:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 19


 696              	.L49:
 270:lvgl/lvgl/src/misc/lv_printf.c ****     }
 271:lvgl/lvgl/src/misc/lv_printf.c **** 
 272:lvgl/lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 697              		.loc 1 272 5 is_stmt 1 view .LVU192
 698              		.loc 1 272 12 is_stmt 0 view .LVU193
 699 006e CDF818C0 		str	ip, [sp, #24]
 700 0072 1A9C     		ldr	r4, [sp, #104]
 701 0074 0594     		str	r4, [sp, #20]
 702 0076 199C     		ldr	r4, [sp, #100]
 703 0078 0494     		str	r4, [sp, #16]
 704 007a 0397     		str	r7, [sp, #12]
 705 007c 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 706 0080 0294     		str	r4, [sp, #8]
 707 0082 CDF804E0 		str	lr, [sp, #4]
 708 0086 08AC     		add	r4, sp, #32
 709 0088 0094     		str	r4, [sp]
 710 008a FFF7FEFF 		bl	_ntoa_format
 711              	.LVL70:
 273:lvgl/lvgl/src/misc/lv_printf.c **** }
 712              		.loc 1 273 1 view .LVU194
 713 008e 10B0     		add	sp, sp, #64
 714              	.LCFI10:
 715              		.cfi_def_cfa_offset 24
 716              		@ sp needed
 717 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 718              		.loc 1 273 1 view .LVU195
 719              		.cfi_endproc
 720              	.LFE7:
 722              		.global	__aeabi_uldivmod
 723              		.section	.text._ntoa_long_long,"ax",%progbits
 724              		.align	1
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu fpv4-sp-d16
 730              	_ntoa_long_long:
 731              	.LVL71:
 732              	.LFB8:
 274:lvgl/lvgl/src/misc/lv_printf.c **** 
 275:lvgl/lvgl/src/misc/lv_printf.c **** // internal itoa for 'long long' type
 276:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 277:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned 
 278:lvgl/lvgl/src/misc/lv_printf.c ****                               bool negative, unsigned long long base, unsigned int prec, unsigned i
 279:lvgl/lvgl/src/misc/lv_printf.c **** {
 733              		.loc 1 279 1 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 36, pretend = 0, frame = 48
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		.loc 1 279 1 is_stmt 0 view .LVU197
 738 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 739              	.LCFI11:
 740              		.cfi_def_cfa_offset 36
 741              		.cfi_offset 4, -36
 742              		.cfi_offset 5, -32
 743              		.cfi_offset 6, -28
 744              		.cfi_offset 7, -24
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 20


 745              		.cfi_offset 8, -20
 746              		.cfi_offset 9, -16
 747              		.cfi_offset 10, -12
 748              		.cfi_offset 11, -8
 749              		.cfi_offset 14, -4
 750 0004 95B0     		sub	sp, sp, #84
 751              	.LCFI12:
 752              		.cfi_def_cfa_offset 120
 753 0006 0990     		str	r0, [sp, #36]
 754 0008 0A91     		str	r1, [sp, #40]
 755 000a 0B92     		str	r2, [sp, #44]
 756 000c 9B46     		mov	fp, r3
 757 000e DDE91E45 		ldrd	r4, [sp, #120]
 758 0012 DDE92289 		ldrd	r8, [sp, #136]
 759 0016 DDF898A0 		ldr	r10, [sp, #152]
 280:lvgl/lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 760              		.loc 1 280 5 is_stmt 1 view .LVU198
 281:lvgl/lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 761              		.loc 1 281 5 view .LVU199
 762              	.LVL72:
 282:lvgl/lvgl/src/misc/lv_printf.c **** 
 283:lvgl/lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 284:lvgl/lvgl/src/misc/lv_printf.c ****     if(!value) {
 763              		.loc 1 284 5 view .LVU200
 764              		.loc 1 284 7 is_stmt 0 view .LVU201
 765 001a 54EA0503 		orrs	r3, r4, r5
 766              	.LVL73:
 767              		.loc 1 284 7 view .LVU202
 768 001e 01D1     		bne	.L60
 285:lvgl/lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 769              		.loc 1 285 9 is_stmt 1 view .LVU203
 770              		.loc 1 285 15 is_stmt 0 view .LVU204
 771 0020 2AF0100A 		bic	r10, r10, #16
 772              	.LVL74:
 773              	.L60:
 286:lvgl/lvgl/src/misc/lv_printf.c ****     }
 287:lvgl/lvgl/src/misc/lv_printf.c **** 
 288:lvgl/lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 289:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 774              		.loc 1 289 5 is_stmt 1 view .LVU205
 775              		.loc 1 289 7 is_stmt 0 view .LVU206
 776 0024 1AF48066 		ands	r6, r10, #1024
 777 0028 1BD0     		beq	.L66
 778              		.loc 1 289 35 discriminator 1 view .LVU207
 779 002a 54EA0503 		orrs	r3, r4, r5
 780 002e 2CD0     		beq	.L67
 781 0030 0026     		movs	r6, #0
 782 0032 16E0     		b	.L66
 783              	.LVL75:
 784              	.L73:
 785              	.LBB26:
 290:lvgl/lvgl/src/misc/lv_printf.c ****         do {
 291:lvgl/lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 292:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 786              		.loc 1 292 24 discriminator 1 view .LVU208
 787 0034 03F13002 		add	r2, r3, #48
 788 0038 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 21


 789              	.L64:
 790              		.loc 1 292 20 discriminator 8 view .LVU209
 791 003a 771C     		adds	r7, r6, #1
 792              	.LVL76:
 793              		.loc 1 292 24 discriminator 8 view .LVU210
 794 003c 14AB     		add	r3, sp, #80
 795              	.LVL77:
 796              		.loc 1 292 24 discriminator 8 view .LVU211
 797 003e 1E44     		add	r6, r6, r3
 798 0040 06F8202C 		strb	r2, [r6, #-32]
 293:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 799              		.loc 1 293 13 is_stmt 1 discriminator 8 view .LVU212
 800              		.loc 1 293 19 is_stmt 0 discriminator 8 view .LVU213
 801 0044 4246     		mov	r2, r8
 802 0046 4B46     		mov	r3, r9
 803 0048 2046     		mov	r0, r4
 804 004a 2946     		mov	r1, r5
 805 004c FFF7FEFF 		bl	__aeabi_uldivmod
 806              	.LVL78:
 807              		.loc 1 293 19 discriminator 8 view .LVU214
 808              	.LBE26:
 294:lvgl/lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 809              		.loc 1 294 16 is_stmt 1 discriminator 8 view .LVU215
 810              		.loc 1 294 9 is_stmt 0 discriminator 8 view .LVU216
 811 0050 4D45     		cmp	r5, r9
 812 0052 08BF     		it	eq
 813 0054 4445     		cmpeq	r4, r8
 814 0056 19D3     		bcc	.L62
 815              		.loc 1 294 23 discriminator 1 view .LVU217
 816 0058 1F2F     		cmp	r7, #31
 817 005a 17D8     		bhi	.L62
 818              	.LBB27:
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 819              		.loc 1 292 20 view .LVU218
 820 005c 3E46     		mov	r6, r7
 293:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 821              		.loc 1 293 19 view .LVU219
 822 005e 0446     		mov	r4, r0
 823 0060 0D46     		mov	r5, r1
 824              	.LVL79:
 825              	.L66:
 293:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 826              		.loc 1 293 19 view .LVU220
 827              	.LBE27:
 290:lvgl/lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 828              		.loc 1 290 9 is_stmt 1 view .LVU221
 829              	.LBB28:
 291:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 830              		.loc 1 291 13 view .LVU222
 291:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 831              		.loc 1 291 45 is_stmt 0 view .LVU223
 832 0062 4246     		mov	r2, r8
 833 0064 4B46     		mov	r3, r9
 834 0066 2046     		mov	r0, r4
 835 0068 2946     		mov	r1, r5
 836 006a FFF7FEFF 		bl	__aeabi_uldivmod
 837              	.LVL80:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 22


 291:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 838              		.loc 1 291 24 view .LVU224
 839 006e D3B2     		uxtb	r3, r2
 840              	.LVL81:
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 841              		.loc 1 292 13 is_stmt 1 view .LVU225
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 842              		.loc 1 292 24 is_stmt 0 view .LVU226
 843 0070 092B     		cmp	r3, #9
 844 0072 DFD9     		bls	.L73
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 845              		.loc 1 292 91 discriminator 2 view .LVU227
 846 0074 1AF0200F 		tst	r10, #32
 847 0078 05D0     		beq	.L68
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 848              		.loc 1 292 91 view .LVU228
 849 007a 4122     		movs	r2, #65
 850              	.L65:
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 851              		.loc 1 292 91 discriminator 7 view .LVU229
 852 007c 1A44     		add	r2, r2, r3
 853 007e D2B2     		uxtb	r2, r2
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 854              		.loc 1 292 24 discriminator 7 view .LVU230
 855 0080 0A3A     		subs	r2, r2, #10
 856 0082 D2B2     		uxtb	r2, r2
 857 0084 D9E7     		b	.L64
 858              	.L68:
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 859              		.loc 1 292 91 view .LVU231
 860 0086 6122     		movs	r2, #97
 861 0088 F8E7     		b	.L65
 862              	.LVL82:
 863              	.L67:
 292:lvgl/lvgl/src/misc/lv_printf.c ****             value /= base;
 864              		.loc 1 292 91 view .LVU232
 865              	.LBE28:
 281:lvgl/lvgl/src/misc/lv_printf.c **** 
 866              		.loc 1 281 12 view .LVU233
 867 008a 0027     		movs	r7, #0
 868              	.LVL83:
 869              	.L62:
 295:lvgl/lvgl/src/misc/lv_printf.c ****     }
 296:lvgl/lvgl/src/misc/lv_printf.c **** 
 297:lvgl/lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 870              		.loc 1 297 5 is_stmt 1 view .LVU234
 871              		.loc 1 297 12 is_stmt 0 view .LVU235
 872 008c CDF818A0 		str	r10, [sp, #24]
 873 0090 259B     		ldr	r3, [sp, #148]
 874 0092 0593     		str	r3, [sp, #20]
 875 0094 249B     		ldr	r3, [sp, #144]
 876 0096 0493     		str	r3, [sp, #16]
 877 0098 CDF80C80 		str	r8, [sp, #12]
 878 009c 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 879 00a0 0293     		str	r3, [sp, #8]
 880 00a2 0197     		str	r7, [sp, #4]
 881 00a4 0CAB     		add	r3, sp, #48
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 23


 882 00a6 0093     		str	r3, [sp]
 883 00a8 5B46     		mov	r3, fp
 884 00aa 0B9A     		ldr	r2, [sp, #44]
 885 00ac 0A99     		ldr	r1, [sp, #40]
 886 00ae 0998     		ldr	r0, [sp, #36]
 887 00b0 FFF7FEFF 		bl	_ntoa_format
 888              	.LVL84:
 298:lvgl/lvgl/src/misc/lv_printf.c **** }
 889              		.loc 1 298 1 view .LVU236
 890 00b4 15B0     		add	sp, sp, #84
 891              	.LCFI13:
 892              		.cfi_def_cfa_offset 36
 893              		@ sp needed
 894 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 895              		.loc 1 298 1 view .LVU237
 896              		.cfi_endproc
 897              	.LFE8:
 899              		.section	.text._vsnprintf,"ax",%progbits
 900              		.align	1
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv4-sp-d16
 906              	_vsnprintf:
 907              	.LVL85:
 908              	.LFB9:
 299:lvgl/lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 300:lvgl/lvgl/src/misc/lv_printf.c **** 
 301:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 302:lvgl/lvgl/src/misc/lv_printf.c **** 
 303:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 304:lvgl/lvgl/src/misc/lv_printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 305:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 306:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags);
 307:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 308:lvgl/lvgl/src/misc/lv_printf.c **** 
 309:lvgl/lvgl/src/misc/lv_printf.c **** // internal ftoa for fixed decimal floating point
 310:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _ftoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 311:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 312:lvgl/lvgl/src/misc/lv_printf.c **** {
 313:lvgl/lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_FTOA_BUFFER_SIZE];
 314:lvgl/lvgl/src/misc/lv_printf.c ****     size_t len  = 0U;
 315:lvgl/lvgl/src/misc/lv_printf.c ****     double diff = 0.0;
 316:lvgl/lvgl/src/misc/lv_printf.c **** 
 317:lvgl/lvgl/src/misc/lv_printf.c ****     // powers of 10
 318:lvgl/lvgl/src/misc/lv_printf.c ****     static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 
 319:lvgl/lvgl/src/misc/lv_printf.c **** 
 320:lvgl/lvgl/src/misc/lv_printf.c ****     // test for special values
 321:lvgl/lvgl/src/misc/lv_printf.c ****     if(value != value)
 322:lvgl/lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 323:lvgl/lvgl/src/misc/lv_printf.c ****     if(value < -DBL_MAX)
 324:lvgl/lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 325:lvgl/lvgl/src/misc/lv_printf.c ****     if(value > DBL_MAX)
 326:lvgl/lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & F
 327:lvgl/lvgl/src/misc/lv_printf.c ****                         flags);
 328:lvgl/lvgl/src/misc/lv_printf.c **** 
 329:lvgl/lvgl/src/misc/lv_printf.c ****     // test for very large values
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 24


 330:lvgl/lvgl/src/misc/lv_printf.c ****     // standard printf behavior is to print EVERY whole number digit -- which could be 100s of char
 331:lvgl/lvgl/src/misc/lv_printf.c ****     if((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 332:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 333:lvgl/lvgl/src/misc/lv_printf.c ****         return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 334:lvgl/lvgl/src/misc/lv_printf.c **** #else
 335:lvgl/lvgl/src/misc/lv_printf.c ****         return 0U;
 336:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 337:lvgl/lvgl/src/misc/lv_printf.c ****     }
 338:lvgl/lvgl/src/misc/lv_printf.c **** 
 339:lvgl/lvgl/src/misc/lv_printf.c ****     // test for negative
 340:lvgl/lvgl/src/misc/lv_printf.c ****     bool negative = false;
 341:lvgl/lvgl/src/misc/lv_printf.c ****     if(value < 0) {
 342:lvgl/lvgl/src/misc/lv_printf.c ****         negative = true;
 343:lvgl/lvgl/src/misc/lv_printf.c ****         value = 0 - value;
 344:lvgl/lvgl/src/misc/lv_printf.c ****     }
 345:lvgl/lvgl/src/misc/lv_printf.c **** 
 346:lvgl/lvgl/src/misc/lv_printf.c ****     // set default precision, if not set explicitly
 347:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 348:lvgl/lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 349:lvgl/lvgl/src/misc/lv_printf.c ****     }
 350:lvgl/lvgl/src/misc/lv_printf.c ****     // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 351:lvgl/lvgl/src/misc/lv_printf.c ****     while((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 352:lvgl/lvgl/src/misc/lv_printf.c ****         buf[len++] = '0';
 353:lvgl/lvgl/src/misc/lv_printf.c ****         prec--;
 354:lvgl/lvgl/src/misc/lv_printf.c ****     }
 355:lvgl/lvgl/src/misc/lv_printf.c **** 
 356:lvgl/lvgl/src/misc/lv_printf.c ****     int whole = (int)value;
 357:lvgl/lvgl/src/misc/lv_printf.c ****     double tmp = (value - whole) * pow10[prec];
 358:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned long frac = (unsigned long)tmp;
 359:lvgl/lvgl/src/misc/lv_printf.c ****     diff = tmp - frac;
 360:lvgl/lvgl/src/misc/lv_printf.c **** 
 361:lvgl/lvgl/src/misc/lv_printf.c ****     if(diff > 0.5) {
 362:lvgl/lvgl/src/misc/lv_printf.c ****         ++frac;
 363:lvgl/lvgl/src/misc/lv_printf.c ****         // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 364:lvgl/lvgl/src/misc/lv_printf.c ****         if(frac >= pow10[prec]) {
 365:lvgl/lvgl/src/misc/lv_printf.c ****             frac = 0;
 366:lvgl/lvgl/src/misc/lv_printf.c ****             ++whole;
 367:lvgl/lvgl/src/misc/lv_printf.c ****         }
 368:lvgl/lvgl/src/misc/lv_printf.c ****     }
 369:lvgl/lvgl/src/misc/lv_printf.c ****     else if(diff < 0.5) {
 370:lvgl/lvgl/src/misc/lv_printf.c ****     }
 371:lvgl/lvgl/src/misc/lv_printf.c ****     else if((frac == 0U) || (frac & 1U)) {
 372:lvgl/lvgl/src/misc/lv_printf.c ****         // if halfway, round up if odd OR if last digit is 0
 373:lvgl/lvgl/src/misc/lv_printf.c ****         ++frac;
 374:lvgl/lvgl/src/misc/lv_printf.c ****     }
 375:lvgl/lvgl/src/misc/lv_printf.c **** 
 376:lvgl/lvgl/src/misc/lv_printf.c ****     if(prec == 0U) {
 377:lvgl/lvgl/src/misc/lv_printf.c ****         diff = value - (double)whole;
 378:lvgl/lvgl/src/misc/lv_printf.c ****         if((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 379:lvgl/lvgl/src/misc/lv_printf.c ****             // exactly 0.5 and ODD, then round up
 380:lvgl/lvgl/src/misc/lv_printf.c ****             // 1.5 -> 2, but 2.5 -> 2
 381:lvgl/lvgl/src/misc/lv_printf.c ****             ++whole;
 382:lvgl/lvgl/src/misc/lv_printf.c ****         }
 383:lvgl/lvgl/src/misc/lv_printf.c ****     }
 384:lvgl/lvgl/src/misc/lv_printf.c ****     else {
 385:lvgl/lvgl/src/misc/lv_printf.c ****         unsigned int count = prec;
 386:lvgl/lvgl/src/misc/lv_printf.c ****         // now do fractional part, as an unsigned number
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 25


 387:lvgl/lvgl/src/misc/lv_printf.c ****         while(len < PRINTF_FTOA_BUFFER_SIZE) {
 388:lvgl/lvgl/src/misc/lv_printf.c ****             --count;
 389:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = (char)(48U + (frac % 10U));
 390:lvgl/lvgl/src/misc/lv_printf.c ****             if(!(frac /= 10U)) {
 391:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 392:lvgl/lvgl/src/misc/lv_printf.c ****             }
 393:lvgl/lvgl/src/misc/lv_printf.c ****         }
 394:lvgl/lvgl/src/misc/lv_printf.c ****         // add extra 0s
 395:lvgl/lvgl/src/misc/lv_printf.c ****         while((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 396:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 397:lvgl/lvgl/src/misc/lv_printf.c ****         }
 398:lvgl/lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_FTOA_BUFFER_SIZE) {
 399:lvgl/lvgl/src/misc/lv_printf.c ****             // add decimal
 400:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '.';
 401:lvgl/lvgl/src/misc/lv_printf.c ****         }
 402:lvgl/lvgl/src/misc/lv_printf.c ****     }
 403:lvgl/lvgl/src/misc/lv_printf.c **** 
 404:lvgl/lvgl/src/misc/lv_printf.c ****     // do whole part, number is reversed
 405:lvgl/lvgl/src/misc/lv_printf.c ****     while(len < PRINTF_FTOA_BUFFER_SIZE) {
 406:lvgl/lvgl/src/misc/lv_printf.c ****         buf[len++] = (char)(48 + (whole % 10));
 407:lvgl/lvgl/src/misc/lv_printf.c ****         if(!(whole /= 10)) {
 408:lvgl/lvgl/src/misc/lv_printf.c ****             break;
 409:lvgl/lvgl/src/misc/lv_printf.c ****         }
 410:lvgl/lvgl/src/misc/lv_printf.c ****     }
 411:lvgl/lvgl/src/misc/lv_printf.c **** 
 412:lvgl/lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 413:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 414:lvgl/lvgl/src/misc/lv_printf.c ****         if(width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 415:lvgl/lvgl/src/misc/lv_printf.c ****             width--;
 416:lvgl/lvgl/src/misc/lv_printf.c ****         }
 417:lvgl/lvgl/src/misc/lv_printf.c ****         while((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 418:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 419:lvgl/lvgl/src/misc/lv_printf.c ****         }
 420:lvgl/lvgl/src/misc/lv_printf.c ****     }
 421:lvgl/lvgl/src/misc/lv_printf.c **** 
 422:lvgl/lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_FTOA_BUFFER_SIZE) {
 423:lvgl/lvgl/src/misc/lv_printf.c ****         if(negative) {
 424:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 425:lvgl/lvgl/src/misc/lv_printf.c ****         }
 426:lvgl/lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 427:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 428:lvgl/lvgl/src/misc/lv_printf.c ****         }
 429:lvgl/lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 430:lvgl/lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 431:lvgl/lvgl/src/misc/lv_printf.c ****         }
 432:lvgl/lvgl/src/misc/lv_printf.c ****     }
 433:lvgl/lvgl/src/misc/lv_printf.c **** 
 434:lvgl/lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 435:lvgl/lvgl/src/misc/lv_printf.c **** }
 436:lvgl/lvgl/src/misc/lv_printf.c **** 
 437:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 438:lvgl/lvgl/src/misc/lv_printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 439:lvgl/lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 440:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 441:lvgl/lvgl/src/misc/lv_printf.c **** {
 442:lvgl/lvgl/src/misc/lv_printf.c ****     // check for NaN and special values
 443:lvgl/lvgl/src/misc/lv_printf.c ****     if((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 26


 444:lvgl/lvgl/src/misc/lv_printf.c ****         return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 445:lvgl/lvgl/src/misc/lv_printf.c ****     }
 446:lvgl/lvgl/src/misc/lv_printf.c **** 
 447:lvgl/lvgl/src/misc/lv_printf.c ****     // determine the sign
 448:lvgl/lvgl/src/misc/lv_printf.c ****     const bool negative = value < 0;
 449:lvgl/lvgl/src/misc/lv_printf.c ****     if(negative) {
 450:lvgl/lvgl/src/misc/lv_printf.c ****         value = -value;
 451:lvgl/lvgl/src/misc/lv_printf.c ****     }
 452:lvgl/lvgl/src/misc/lv_printf.c **** 
 453:lvgl/lvgl/src/misc/lv_printf.c ****     // default precision
 454:lvgl/lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 455:lvgl/lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 456:lvgl/lvgl/src/misc/lv_printf.c ****     }
 457:lvgl/lvgl/src/misc/lv_printf.c **** 
 458:lvgl/lvgl/src/misc/lv_printf.c ****     // determine the decimal exponent
 459:lvgl/lvgl/src/misc/lv_printf.c ****     // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 460:lvgl/lvgl/src/misc/lv_printf.c ****     union {
 461:lvgl/lvgl/src/misc/lv_printf.c ****         uint64_t U;
 462:lvgl/lvgl/src/misc/lv_printf.c ****         double   F;
 463:lvgl/lvgl/src/misc/lv_printf.c ****     } conv;
 464:lvgl/lvgl/src/misc/lv_printf.c **** 
 465:lvgl/lvgl/src/misc/lv_printf.c ****     conv.F = value;
 466:lvgl/lvgl/src/misc/lv_printf.c ****     int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 467:lvgl/lvgl/src/misc/lv_printf.c ****     conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is
 468:lvgl/lvgl/src/misc/lv_printf.c ****     // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 469:lvgl/lvgl/src/misc/lv_printf.c ****     int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602
 470:lvgl/lvgl/src/misc/lv_printf.c ****     // now we want to compute 10^expval but we want to be sure it won't overflow
 471:lvgl/lvgl/src/misc/lv_printf.c ****     exp2 = (int)(expval * 3.321928094887362 + 0.5);
 472:lvgl/lvgl/src/misc/lv_printf.c ****     const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 473:lvgl/lvgl/src/misc/lv_printf.c ****     const double z2 = z * z;
 474:lvgl/lvgl/src/misc/lv_printf.c ****     conv.U = (uint64_t)(exp2 + 1023) << 52U;
 475:lvgl/lvgl/src/misc/lv_printf.c ****     // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_func
 476:lvgl/lvgl/src/misc/lv_printf.c ****     conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 477:lvgl/lvgl/src/misc/lv_printf.c ****     // correct for rounding errors
 478:lvgl/lvgl/src/misc/lv_printf.c ****     if(value < conv.F) {
 479:lvgl/lvgl/src/misc/lv_printf.c ****         expval--;
 480:lvgl/lvgl/src/misc/lv_printf.c ****         conv.F /= 10;
 481:lvgl/lvgl/src/misc/lv_printf.c ****     }
 482:lvgl/lvgl/src/misc/lv_printf.c **** 
 483:lvgl/lvgl/src/misc/lv_printf.c ****     // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 484:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 485:lvgl/lvgl/src/misc/lv_printf.c **** 
 486:lvgl/lvgl/src/misc/lv_printf.c ****     // in "%g" mode, "prec" is the number of *significant figures* not decimals
 487:lvgl/lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_ADAPT_EXP) {
 488:lvgl/lvgl/src/misc/lv_printf.c ****         // do we want to fall-back to "%f" mode?
 489:lvgl/lvgl/src/misc/lv_printf.c ****         if((value >= 1e-4) && (value < 1e6)) {
 490:lvgl/lvgl/src/misc/lv_printf.c ****             if((int)prec > expval) {
 491:lvgl/lvgl/src/misc/lv_printf.c ****                 prec = (unsigned)((int)prec - expval - 1);
 492:lvgl/lvgl/src/misc/lv_printf.c ****             }
 493:lvgl/lvgl/src/misc/lv_printf.c ****             else {
 494:lvgl/lvgl/src/misc/lv_printf.c ****                 prec = 0;
 495:lvgl/lvgl/src/misc/lv_printf.c ****             }
 496:lvgl/lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 497:lvgl/lvgl/src/misc/lv_printf.c ****             // no characters in exponent
 498:lvgl/lvgl/src/misc/lv_printf.c ****             minwidth = 0U;
 499:lvgl/lvgl/src/misc/lv_printf.c ****             expval   = 0;
 500:lvgl/lvgl/src/misc/lv_printf.c ****         }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 27


 501:lvgl/lvgl/src/misc/lv_printf.c ****         else {
 502:lvgl/lvgl/src/misc/lv_printf.c ****             // we use one sigfig for the whole part
 503:lvgl/lvgl/src/misc/lv_printf.c ****             if((prec > 0) && (flags & FLAGS_PRECISION)) {
 504:lvgl/lvgl/src/misc/lv_printf.c ****                 --prec;
 505:lvgl/lvgl/src/misc/lv_printf.c ****             }
 506:lvgl/lvgl/src/misc/lv_printf.c ****         }
 507:lvgl/lvgl/src/misc/lv_printf.c ****     }
 508:lvgl/lvgl/src/misc/lv_printf.c **** 
 509:lvgl/lvgl/src/misc/lv_printf.c ****     // will everything fit?
 510:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned int fwidth = width;
 511:lvgl/lvgl/src/misc/lv_printf.c ****     if(width > minwidth) {
 512:lvgl/lvgl/src/misc/lv_printf.c ****         // we didn't fall-back so subtract the characters required for the exponent
 513:lvgl/lvgl/src/misc/lv_printf.c ****         fwidth -= minwidth;
 514:lvgl/lvgl/src/misc/lv_printf.c ****     }
 515:lvgl/lvgl/src/misc/lv_printf.c ****     else {
 516:lvgl/lvgl/src/misc/lv_printf.c ****         // not enough characters, so go back to default sizing
 517:lvgl/lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 518:lvgl/lvgl/src/misc/lv_printf.c ****     }
 519:lvgl/lvgl/src/misc/lv_printf.c ****     if((flags & FLAGS_LEFT) && minwidth) {
 520:lvgl/lvgl/src/misc/lv_printf.c ****         // if we're padding on the right, DON'T pad the floating part
 521:lvgl/lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 522:lvgl/lvgl/src/misc/lv_printf.c ****     }
 523:lvgl/lvgl/src/misc/lv_printf.c **** 
 524:lvgl/lvgl/src/misc/lv_printf.c ****     // rescale the float value
 525:lvgl/lvgl/src/misc/lv_printf.c ****     if(expval) {
 526:lvgl/lvgl/src/misc/lv_printf.c ****         value /= conv.F;
 527:lvgl/lvgl/src/misc/lv_printf.c ****     }
 528:lvgl/lvgl/src/misc/lv_printf.c **** 
 529:lvgl/lvgl/src/misc/lv_printf.c ****     // output the floating part
 530:lvgl/lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 531:lvgl/lvgl/src/misc/lv_printf.c ****     idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_A
 532:lvgl/lvgl/src/misc/lv_printf.c **** 
 533:lvgl/lvgl/src/misc/lv_printf.c ****     // output the exponent part
 534:lvgl/lvgl/src/misc/lv_printf.c ****     if(minwidth) {
 535:lvgl/lvgl/src/misc/lv_printf.c ****         // output the exponential symbol
 536:lvgl/lvgl/src/misc/lv_printf.c ****         out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 537:lvgl/lvgl/src/misc/lv_printf.c ****         // output the exponent value
 538:lvgl/lvgl/src/misc/lv_printf.c ****         idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10,
 539:lvgl/lvgl/src/misc/lv_printf.c ****                          FLAGS_ZEROPAD | FLAGS_PLUS);
 540:lvgl/lvgl/src/misc/lv_printf.c ****         // might need to right-pad spaces
 541:lvgl/lvgl/src/misc/lv_printf.c ****         if(flags & FLAGS_LEFT) {
 542:lvgl/lvgl/src/misc/lv_printf.c ****             while(idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 543:lvgl/lvgl/src/misc/lv_printf.c ****         }
 544:lvgl/lvgl/src/misc/lv_printf.c ****     }
 545:lvgl/lvgl/src/misc/lv_printf.c ****     return idx;
 546:lvgl/lvgl/src/misc/lv_printf.c **** }
 547:lvgl/lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 548:lvgl/lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 549:lvgl/lvgl/src/misc/lv_printf.c **** 
 550:lvgl/lvgl/src/misc/lv_printf.c **** // internal vsnprintf
 551:lvgl/lvgl/src/misc/lv_printf.c **** static int _vsnprintf(out_fct_type out, char * buffer, const size_t maxlen, const char * format, va
 552:lvgl/lvgl/src/misc/lv_printf.c **** {
 909              		.loc 1 552 1 is_stmt 1 view -0
 910              		.cfi_startproc
 911              		@ args = 4, pretend = 0, frame = 16
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		.loc 1 552 1 is_stmt 0 view .LVU239
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 28


 914 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 915              	.LCFI14:
 916              		.cfi_def_cfa_offset 36
 917              		.cfi_offset 4, -36
 918              		.cfi_offset 5, -32
 919              		.cfi_offset 6, -28
 920              		.cfi_offset 7, -24
 921              		.cfi_offset 8, -20
 922              		.cfi_offset 9, -16
 923              		.cfi_offset 10, -12
 924              		.cfi_offset 11, -8
 925              		.cfi_offset 14, -4
 926 0004 8FB0     		sub	sp, sp, #60
 927              	.LCFI15:
 928              		.cfi_def_cfa_offset 96
 929 0006 0746     		mov	r7, r0
 930 0008 1646     		mov	r6, r2
 931 000a 0D93     		str	r3, [sp, #52]
 553:lvgl/lvgl/src/misc/lv_printf.c ****     unsigned int flags, width, precision, n;
 932              		.loc 1 553 5 is_stmt 1 view .LVU240
 554:lvgl/lvgl/src/misc/lv_printf.c ****     size_t idx = 0U;
 933              		.loc 1 554 5 view .LVU241
 934              	.LVL86:
 555:lvgl/lvgl/src/misc/lv_printf.c **** 
 556:lvgl/lvgl/src/misc/lv_printf.c ****     if(!buffer) {
 935              		.loc 1 556 5 view .LVU242
 936              		.loc 1 556 7 is_stmt 0 view .LVU243
 937 000c 8B46     		mov	fp, r1
 938 000e 0029     		cmp	r1, #0
 939 0010 00F0F482 		beq	.L169
 940              	.L75:
 941              	.LVL87:
 557:lvgl/lvgl/src/misc/lv_printf.c ****         // use null output function
 558:lvgl/lvgl/src/misc/lv_printf.c ****         out = _out_null;
 559:lvgl/lvgl/src/misc/lv_printf.c ****     }
 560:lvgl/lvgl/src/misc/lv_printf.c **** 
 561:lvgl/lvgl/src/misc/lv_printf.c ****     while(*format) {
 562:lvgl/lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 563:lvgl/lvgl/src/misc/lv_printf.c ****         if(*format != '%') {
 564:lvgl/lvgl/src/misc/lv_printf.c ****             // no
 565:lvgl/lvgl/src/misc/lv_printf.c ****             out(*format, buffer, idx++, maxlen);
 566:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 567:lvgl/lvgl/src/misc/lv_printf.c ****             continue;
 568:lvgl/lvgl/src/misc/lv_printf.c ****         }
 569:lvgl/lvgl/src/misc/lv_printf.c ****         else {
 570:lvgl/lvgl/src/misc/lv_printf.c ****             // yes, evaluate it
 571:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 572:lvgl/lvgl/src/misc/lv_printf.c ****         }
 573:lvgl/lvgl/src/misc/lv_printf.c **** 
 574:lvgl/lvgl/src/misc/lv_printf.c ****         // evaluate flags
 575:lvgl/lvgl/src/misc/lv_printf.c ****         flags = 0U;
 576:lvgl/lvgl/src/misc/lv_printf.c ****         do {
 577:lvgl/lvgl/src/misc/lv_printf.c ****             switch(*format) {
 578:lvgl/lvgl/src/misc/lv_printf.c ****                 case '0':
 579:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_ZEROPAD;
 580:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 581:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 29


 582:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 583:lvgl/lvgl/src/misc/lv_printf.c ****                 case '-':
 584:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LEFT;
 585:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 586:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 587:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 588:lvgl/lvgl/src/misc/lv_printf.c ****                 case '+':
 589:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_PLUS;
 590:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 591:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 592:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 593:lvgl/lvgl/src/misc/lv_printf.c ****                 case ' ':
 594:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_SPACE;
 595:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 596:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 597:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 598:lvgl/lvgl/src/misc/lv_printf.c ****                 case '#':
 599:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_HASH;
 600:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 601:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 602:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 603:lvgl/lvgl/src/misc/lv_printf.c ****                 default :
 604:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 0U;
 605:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 606:lvgl/lvgl/src/misc/lv_printf.c ****             }
 607:lvgl/lvgl/src/misc/lv_printf.c ****         } while(n);
 608:lvgl/lvgl/src/misc/lv_printf.c **** 
 609:lvgl/lvgl/src/misc/lv_printf.c ****         // evaluate width field
 610:lvgl/lvgl/src/misc/lv_printf.c ****         width = 0U;
 611:lvgl/lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 612:lvgl/lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 613:lvgl/lvgl/src/misc/lv_printf.c ****         }
 614:lvgl/lvgl/src/misc/lv_printf.c ****         else if(*format == '*') {
 615:lvgl/lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 616:lvgl/lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 617:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 618:lvgl/lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 619:lvgl/lvgl/src/misc/lv_printf.c ****             }
 620:lvgl/lvgl/src/misc/lv_printf.c ****             else {
 621:lvgl/lvgl/src/misc/lv_printf.c ****                 width = (unsigned int)w;
 622:lvgl/lvgl/src/misc/lv_printf.c ****             }
 623:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 624:lvgl/lvgl/src/misc/lv_printf.c ****         }
 625:lvgl/lvgl/src/misc/lv_printf.c **** 
 626:lvgl/lvgl/src/misc/lv_printf.c ****         // evaluate precision field
 627:lvgl/lvgl/src/misc/lv_printf.c ****         precision = 0U;
 628:lvgl/lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 629:lvgl/lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 630:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 631:lvgl/lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 632:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 633:lvgl/lvgl/src/misc/lv_printf.c ****             }
 634:lvgl/lvgl/src/misc/lv_printf.c ****             else if(*format == '*') {
 635:lvgl/lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 636:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 637:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 638:lvgl/lvgl/src/misc/lv_printf.c ****             }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 30


 639:lvgl/lvgl/src/misc/lv_printf.c ****         }
 640:lvgl/lvgl/src/misc/lv_printf.c **** 
 641:lvgl/lvgl/src/misc/lv_printf.c ****         // evaluate length field
 642:lvgl/lvgl/src/misc/lv_printf.c ****         switch(*format) {
 643:lvgl/lvgl/src/misc/lv_printf.c ****             case 'l' :
 644:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LONG;
 645:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 646:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 647:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 648:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 649:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 650:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 651:lvgl/lvgl/src/misc/lv_printf.c ****             case 'h' :
 652:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_SHORT;
 653:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 654:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 655:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 656:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 657:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 658:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 659:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 660:lvgl/lvgl/src/misc/lv_printf.c ****             case 't' :
 661:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 662:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 663:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 664:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 665:lvgl/lvgl/src/misc/lv_printf.c ****             case 'j' :
 666:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 667:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 668:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 669:lvgl/lvgl/src/misc/lv_printf.c ****             case 'z' :
 670:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 671:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 672:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 673:lvgl/lvgl/src/misc/lv_printf.c ****             default :
 674:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 675:lvgl/lvgl/src/misc/lv_printf.c ****         }
 676:lvgl/lvgl/src/misc/lv_printf.c **** 
 677:lvgl/lvgl/src/misc/lv_printf.c ****         // evaluate specifier
 678:lvgl/lvgl/src/misc/lv_printf.c ****         switch(*format) {
 679:lvgl/lvgl/src/misc/lv_printf.c ****             case 'd' :
 680:lvgl/lvgl/src/misc/lv_printf.c ****             case 'i' :
 681:lvgl/lvgl/src/misc/lv_printf.c ****             case 'u' :
 682:lvgl/lvgl/src/misc/lv_printf.c ****             case 'x' :
 683:lvgl/lvgl/src/misc/lv_printf.c ****             case 'X' :
 684:lvgl/lvgl/src/misc/lv_printf.c ****             case 'p' :
 685:lvgl/lvgl/src/misc/lv_printf.c ****             case 'P' :
 686:lvgl/lvgl/src/misc/lv_printf.c ****             case 'o' :
 687:lvgl/lvgl/src/misc/lv_printf.c ****             case 'b' : {
 688:lvgl/lvgl/src/misc/lv_printf.c ****                     // set the base
 689:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int base;
 690:lvgl/lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 691:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 692:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 693:lvgl/lvgl/src/misc/lv_printf.c ****                     else if(*format == 'p' || *format == 'P') {
 694:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 695:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 31


 696:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 697:lvgl/lvgl/src/misc/lv_printf.c ****                         if(sizeof(uintptr_t) == sizeof(long long))
 698:lvgl/lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 699:lvgl/lvgl/src/misc/lv_printf.c ****                         else
 700:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 701:lvgl/lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG;
 702:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 703:lvgl/lvgl/src/misc/lv_printf.c ****                     else if(*format == 'o') {
 704:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  8U;
 705:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 706:lvgl/lvgl/src/misc/lv_printf.c ****                     else if(*format == 'b') {
 707:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  2U;
 708:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 709:lvgl/lvgl/src/misc/lv_printf.c ****                     else {
 710:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 10U;
 711:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 712:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 713:lvgl/lvgl/src/misc/lv_printf.c ****                     // uppercase
 714:lvgl/lvgl/src/misc/lv_printf.c ****                     if(*format == 'X' || *format == 'P') {
 715:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 716:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 717:lvgl/lvgl/src/misc/lv_printf.c **** 
 718:lvgl/lvgl/src/misc/lv_printf.c ****                     // no plus or space flag for u, x, X, o, b
 719:lvgl/lvgl/src/misc/lv_printf.c ****                     if((*format != 'i') && (*format != 'd')) {
 720:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 721:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 722:lvgl/lvgl/src/misc/lv_printf.c **** 
 723:lvgl/lvgl/src/misc/lv_printf.c ****                     // ignore '0' flag when precision is given
 724:lvgl/lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 725:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 726:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 727:lvgl/lvgl/src/misc/lv_printf.c **** 
 728:lvgl/lvgl/src/misc/lv_printf.c ****                     // convert the integer
 729:lvgl/lvgl/src/misc/lv_printf.c ****                     if((*format == 'i') || (*format == 'd')) {
 730:lvgl/lvgl/src/misc/lv_printf.c ****                         // signed
 731:lvgl/lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
 732:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 733:lvgl/lvgl/src/misc/lv_printf.c ****                             const long long value = va_arg(va, long long);
 734:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 735:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 736:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 737:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 738:lvgl/lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 739:lvgl/lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 740:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 741:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 742:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 743:lvgl/lvgl/src/misc/lv_printf.c ****                         else {
 744:lvgl/lvgl/src/misc/lv_printf.c ****                             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags
 745:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 746:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 747:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 748:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 749:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 750:lvgl/lvgl/src/misc/lv_printf.c ****                     else {
 751:lvgl/lvgl/src/misc/lv_printf.c ****                         // unsigned
 752:lvgl/lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 32


 753:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 754:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned lon
 755:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 756:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 757:lvgl/lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 758:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 759:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 760:lvgl/lvgl/src/misc/lv_printf.c ****                         else {
 761:lvgl/lvgl/src/misc/lv_printf.c ****                             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg
 762:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 763:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 764:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 765:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 766:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 767:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 768:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 769:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 770:lvgl/lvgl/src/misc/lv_printf.c ****             case 'f' :
 771:lvgl/lvgl/src/misc/lv_printf.c ****             case 'F' :
 772:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'F') flags |= FLAGS_UPPERCASE;
 773:lvgl/lvgl/src/misc/lv_printf.c ****                 idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 774:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 775:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 776:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 777:lvgl/lvgl/src/misc/lv_printf.c ****             case 'e':
 778:lvgl/lvgl/src/misc/lv_printf.c ****             case 'E':
 779:lvgl/lvgl/src/misc/lv_printf.c ****             case 'g':
 780:lvgl/lvgl/src/misc/lv_printf.c ****             case 'G':
 781:lvgl/lvgl/src/misc/lv_printf.c ****                 if((*format == 'g') || (*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 782:lvgl/lvgl/src/misc/lv_printf.c ****                 if((*format == 'E') || (*format == 'G')) flags |= FLAGS_UPPERCASE;
 783:lvgl/lvgl/src/misc/lv_printf.c ****                 idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 784:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 785:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 786:lvgl/lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 787:lvgl/lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 788:lvgl/lvgl/src/misc/lv_printf.c ****             case 'c' : {
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int l = 1U;
 790:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 791:lvgl/lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 792:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 793:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 794:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 795:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 796:lvgl/lvgl/src/misc/lv_printf.c ****                     // char output
 797:lvgl/lvgl/src/misc/lv_printf.c ****                     out((char)va_arg(va, int), buffer, idx++, maxlen);
 798:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 799:lvgl/lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 800:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 801:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 802:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 803:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 804:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 805:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 806:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 807:lvgl/lvgl/src/misc/lv_printf.c **** 
 808:lvgl/lvgl/src/misc/lv_printf.c ****             case 's' : {
 809:lvgl/lvgl/src/misc/lv_printf.c ****                     const char * p = va_arg(va, char *);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 33


 810:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 811:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 812:lvgl/lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 813:lvgl/lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 814:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 815:lvgl/lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 816:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 817:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 818:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 819:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 820:lvgl/lvgl/src/misc/lv_printf.c ****                     // string output
 821:lvgl/lvgl/src/misc/lv_printf.c ****                     while((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 822:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 823:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 824:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 825:lvgl/lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 826:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 827:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 828:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 829:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 830:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 831:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 832:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 833:lvgl/lvgl/src/misc/lv_printf.c **** 
 834:lvgl/lvgl/src/misc/lv_printf.c ****             case '%' :
 835:lvgl/lvgl/src/misc/lv_printf.c ****                 out('%', buffer, idx++, maxlen);
 942              		.loc 1 835 17 view .LVU244
 943 0014 0024     		movs	r4, #0
 944              	.LVL88:
 945              	.L150:
 561:lvgl/lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 946              		.loc 1 561 10 is_stmt 1 view .LVU245
 561:lvgl/lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 947              		.loc 1 561 11 is_stmt 0 view .LVU246
 948 0016 0D9B     		ldr	r3, [sp, #52]
 949 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 561:lvgl/lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 950              		.loc 1 561 10 view .LVU247
 951 001a 0028     		cmp	r0, #0
 952 001c 00F0F082 		beq	.L170
 563:lvgl/lvgl/src/misc/lv_printf.c ****             // no
 953              		.loc 1 563 9 is_stmt 1 view .LVU248
 563:lvgl/lvgl/src/misc/lv_printf.c ****             // no
 954              		.loc 1 563 11 is_stmt 0 view .LVU249
 955 0020 2528     		cmp	r0, #37
 956 0022 09D0     		beq	.L77
 565:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 957              		.loc 1 565 13 is_stmt 1 view .LVU250
 958 0024 651C     		adds	r5, r4, #1
 959              	.LVL89:
 565:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 960              		.loc 1 565 13 is_stmt 0 view .LVU251
 961 0026 3346     		mov	r3, r6
 962 0028 2246     		mov	r2, r4
 963 002a 5946     		mov	r1, fp
 964 002c B847     		blx	r7
 965              	.LVL90:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 34


 566:lvgl/lvgl/src/misc/lv_printf.c ****             continue;
 966              		.loc 1 566 13 is_stmt 1 view .LVU252
 566:lvgl/lvgl/src/misc/lv_printf.c ****             continue;
 967              		.loc 1 566 19 is_stmt 0 view .LVU253
 968 002e 0D9B     		ldr	r3, [sp, #52]
 969 0030 0133     		adds	r3, r3, #1
 970 0032 0D93     		str	r3, [sp, #52]
 567:lvgl/lvgl/src/misc/lv_printf.c ****         }
 971              		.loc 1 567 13 is_stmt 1 view .LVU254
 565:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 972              		.loc 1 565 13 is_stmt 0 view .LVU255
 973 0034 2C46     		mov	r4, r5
 567:lvgl/lvgl/src/misc/lv_printf.c ****         }
 974              		.loc 1 567 13 view .LVU256
 975 0036 EEE7     		b	.L150
 976              	.LVL91:
 977              	.L77:
 571:lvgl/lvgl/src/misc/lv_printf.c ****         }
 978              		.loc 1 571 13 is_stmt 1 view .LVU257
 571:lvgl/lvgl/src/misc/lv_printf.c ****         }
 979              		.loc 1 571 19 is_stmt 0 view .LVU258
 980 0038 0133     		adds	r3, r3, #1
 981 003a 0D93     		str	r3, [sp, #52]
 575:lvgl/lvgl/src/misc/lv_printf.c ****         do {
 982              		.loc 1 575 9 is_stmt 1 view .LVU259
 983              	.LVL92:
 575:lvgl/lvgl/src/misc/lv_printf.c ****         do {
 984              		.loc 1 575 15 is_stmt 0 view .LVU260
 985 003c 0025     		movs	r5, #0
 986 003e 2DE0     		b	.L79
 987              	.LVL93:
 988              	.L80:
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 989              		.loc 1 607 16 is_stmt 1 view .LVU261
 610:lvgl/lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 990              		.loc 1 610 9 view .LVU262
 611:lvgl/lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 991              		.loc 1 611 9 view .LVU263
 992              	.LBB29:
 993              	.LBI29:
 153:lvgl/lvgl/src/misc/lv_printf.c **** {
 994              		.loc 1 153 20 view .LVU264
 995              	.LBB30:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 996              		.loc 1 155 5 view .LVU265
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 997              		.loc 1 155 24 is_stmt 0 view .LVU266
 998 0040 A1F13003 		sub	r3, r1, #48
 999 0044 DBB2     		uxtb	r3, r3
 1000              	.LVL94:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 1001              		.loc 1 155 24 view .LVU267
 1002              	.LBE30:
 1003              	.LBE29:
 611:lvgl/lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1004              		.loc 1 611 11 view .LVU268
 1005 0046 092B     		cmp	r3, #9
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 35


 1006 0048 68D9     		bls	.L171
 614:lvgl/lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1007              		.loc 1 614 14 is_stmt 1 view .LVU269
 614:lvgl/lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1008              		.loc 1 614 16 is_stmt 0 view .LVU270
 1009 004a 2A29     		cmp	r1, #42
 1010 004c 6BD0     		beq	.L172
 610:lvgl/lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 1011              		.loc 1 610 15 view .LVU271
 1012 004e 0023     		movs	r3, #0
 1013 0050 0A93     		str	r3, [sp, #40]
 1014              	.LVL95:
 1015              	.L90:
 627:lvgl/lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1016              		.loc 1 627 9 is_stmt 1 view .LVU272
 628:lvgl/lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1017              		.loc 1 628 9 view .LVU273
 628:lvgl/lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1018              		.loc 1 628 12 is_stmt 0 view .LVU274
 1019 0052 0D9B     		ldr	r3, [sp, #52]
 1020 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 628:lvgl/lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1021              		.loc 1 628 11 view .LVU275
 1022 0056 2E2A     		cmp	r2, #46
 1023 0058 75D0     		beq	.L173
 627:lvgl/lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1024              		.loc 1 627 19 view .LVU276
 1025 005a 4FF0000A 		mov	r10, #0
 1026              	.LVL96:
 1027              	.L93:
 642:lvgl/lvgl/src/misc/lv_printf.c ****             case 'l' :
 1028              		.loc 1 642 9 is_stmt 1 view .LVU277
 642:lvgl/lvgl/src/misc/lv_printf.c ****             case 'l' :
 1029              		.loc 1 642 16 is_stmt 0 view .LVU278
 1030 005e 0D9A     		ldr	r2, [sp, #52]
 1031 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1032 0062 683B     		subs	r3, r3, #104
 1033 0064 122B     		cmp	r3, #18
 1034 0066 00F2AC80 		bhi	.L95
 1035 006a DFE813F0 		tbh	[pc, r3, lsl #1]
 1036              	.L97:
 1037 006e 9800     		.2byte	(.L101-.L97)/2
 1038 0070 AA00     		.2byte	(.L95-.L97)/2
 1039 0072 0701     		.2byte	(.L100-.L97)/2
 1040 0074 AA00     		.2byte	(.L95-.L97)/2
 1041 0076 8A00     		.2byte	(.L99-.L97)/2
 1042 0078 AA00     		.2byte	(.L95-.L97)/2
 1043 007a AA00     		.2byte	(.L95-.L97)/2
 1044 007c AA00     		.2byte	(.L95-.L97)/2
 1045 007e AA00     		.2byte	(.L95-.L97)/2
 1046 0080 AA00     		.2byte	(.L95-.L97)/2
 1047 0082 AA00     		.2byte	(.L95-.L97)/2
 1048 0084 AA00     		.2byte	(.L95-.L97)/2
 1049 0086 A600     		.2byte	(.L98-.L97)/2
 1050 0088 AA00     		.2byte	(.L95-.L97)/2
 1051 008a AA00     		.2byte	(.L95-.L97)/2
 1052 008c AA00     		.2byte	(.L95-.L97)/2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 36


 1053 008e AA00     		.2byte	(.L95-.L97)/2
 1054 0090 AA00     		.2byte	(.L95-.L97)/2
 1055 0092 0C01     		.2byte	(.L96-.L97)/2
 1056              	.LVL97:
 1057              		.p2align 1
 1058              	.L81:
 579:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1059              		.loc 1 579 21 is_stmt 1 view .LVU279
 579:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1060              		.loc 1 579 27 is_stmt 0 view .LVU280
 1061 0094 45F00105 		orr	r5, r5, #1
 1062              	.LVL98:
 580:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1063              		.loc 1 580 21 is_stmt 1 view .LVU281
 580:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1064              		.loc 1 580 27 is_stmt 0 view .LVU282
 1065 0098 0133     		adds	r3, r3, #1
 1066 009a 0D93     		str	r3, [sp, #52]
 581:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1067              		.loc 1 581 21 is_stmt 1 view .LVU283
 1068              	.LVL99:
 582:lvgl/lvgl/src/misc/lv_printf.c ****                 case '-':
 1069              		.loc 1 582 21 view .LVU284
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 1070              		.loc 1 607 16 view .LVU285
 1071              	.L79:
 576:lvgl/lvgl/src/misc/lv_printf.c ****             switch(*format) {
 1072              		.loc 1 576 9 view .LVU286
 577:lvgl/lvgl/src/misc/lv_printf.c ****                 case '0':
 1073              		.loc 1 577 13 view .LVU287
 577:lvgl/lvgl/src/misc/lv_printf.c ****                 case '0':
 1074              		.loc 1 577 20 is_stmt 0 view .LVU288
 1075 009c 0D9B     		ldr	r3, [sp, #52]
 1076 009e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1077 00a0 A1F12002 		sub	r2, r1, #32
 1078 00a4 102A     		cmp	r2, #16
 1079 00a6 CBD8     		bhi	.L80
 1080 00a8 01A0     		adr	r0, .L82
 1081 00aa 50F822F0 		ldr	pc, [r0, r2, lsl #2]
 1082 00ae 00BF     		.p2align 2
 1083              	.L82:
 1084 00b0 09010000 		.word	.L86+1
 1085 00b4 41000000 		.word	.L80+1
 1086 00b8 41000000 		.word	.L80+1
 1087 00bc 13010000 		.word	.L85+1
 1088 00c0 41000000 		.word	.L80+1
 1089 00c4 41000000 		.word	.L80+1
 1090 00c8 41000000 		.word	.L80+1
 1091 00cc 41000000 		.word	.L80+1
 1092 00d0 41000000 		.word	.L80+1
 1093 00d4 41000000 		.word	.L80+1
 1094 00d8 41000000 		.word	.L80+1
 1095 00dc FF000000 		.word	.L84+1
 1096 00e0 41000000 		.word	.L80+1
 1097 00e4 F5000000 		.word	.L83+1
 1098 00e8 41000000 		.word	.L80+1
 1099 00ec 41000000 		.word	.L80+1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 37


 1100 00f0 95000000 		.word	.L81+1
 1101              		.p2align 1
 1102              	.L83:
 584:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1103              		.loc 1 584 21 is_stmt 1 view .LVU289
 584:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1104              		.loc 1 584 27 is_stmt 0 view .LVU290
 1105 00f4 45F00205 		orr	r5, r5, #2
 1106              	.LVL100:
 585:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1107              		.loc 1 585 21 is_stmt 1 view .LVU291
 585:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1108              		.loc 1 585 27 is_stmt 0 view .LVU292
 1109 00f8 0133     		adds	r3, r3, #1
 1110 00fa 0D93     		str	r3, [sp, #52]
 586:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1111              		.loc 1 586 21 is_stmt 1 view .LVU293
 1112              	.LVL101:
 587:lvgl/lvgl/src/misc/lv_printf.c ****                 case '+':
 1113              		.loc 1 587 21 view .LVU294
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 1114              		.loc 1 607 16 view .LVU295
 1115 00fc CEE7     		b	.L79
 1116              	.LVL102:
 1117              	.L84:
 589:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1118              		.loc 1 589 21 view .LVU296
 589:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1119              		.loc 1 589 27 is_stmt 0 view .LVU297
 1120 00fe 45F00405 		orr	r5, r5, #4
 1121              	.LVL103:
 590:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1122              		.loc 1 590 21 is_stmt 1 view .LVU298
 590:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1123              		.loc 1 590 27 is_stmt 0 view .LVU299
 1124 0102 0133     		adds	r3, r3, #1
 1125 0104 0D93     		str	r3, [sp, #52]
 591:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1126              		.loc 1 591 21 is_stmt 1 view .LVU300
 1127              	.LVL104:
 592:lvgl/lvgl/src/misc/lv_printf.c ****                 case ' ':
 1128              		.loc 1 592 21 view .LVU301
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 1129              		.loc 1 607 16 view .LVU302
 1130 0106 C9E7     		b	.L79
 1131              	.LVL105:
 1132              	.L86:
 594:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1133              		.loc 1 594 21 view .LVU303
 594:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1134              		.loc 1 594 27 is_stmt 0 view .LVU304
 1135 0108 45F00805 		orr	r5, r5, #8
 1136              	.LVL106:
 595:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1137              		.loc 1 595 21 is_stmt 1 view .LVU305
 595:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1138              		.loc 1 595 27 is_stmt 0 view .LVU306
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 38


 1139 010c 0133     		adds	r3, r3, #1
 1140 010e 0D93     		str	r3, [sp, #52]
 596:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1141              		.loc 1 596 21 is_stmt 1 view .LVU307
 1142              	.LVL107:
 597:lvgl/lvgl/src/misc/lv_printf.c ****                 case '#':
 1143              		.loc 1 597 21 view .LVU308
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 1144              		.loc 1 607 16 view .LVU309
 1145 0110 C4E7     		b	.L79
 1146              	.LVL108:
 1147              	.L85:
 599:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1148              		.loc 1 599 21 view .LVU310
 599:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1149              		.loc 1 599 27 is_stmt 0 view .LVU311
 1150 0112 45F01005 		orr	r5, r5, #16
 1151              	.LVL109:
 600:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1152              		.loc 1 600 21 is_stmt 1 view .LVU312
 600:lvgl/lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1153              		.loc 1 600 27 is_stmt 0 view .LVU313
 1154 0116 0133     		adds	r3, r3, #1
 1155 0118 0D93     		str	r3, [sp, #52]
 601:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1156              		.loc 1 601 21 is_stmt 1 view .LVU314
 1157              	.LVL110:
 602:lvgl/lvgl/src/misc/lv_printf.c ****                 default :
 1158              		.loc 1 602 21 view .LVU315
 607:lvgl/lvgl/src/misc/lv_printf.c **** 
 1159              		.loc 1 607 16 view .LVU316
 1160 011a BFE7     		b	.L79
 1161              	.LVL111:
 1162              	.L171:
 612:lvgl/lvgl/src/misc/lv_printf.c ****         }
 1163              		.loc 1 612 13 view .LVU317
 612:lvgl/lvgl/src/misc/lv_printf.c ****         }
 1164              		.loc 1 612 21 is_stmt 0 view .LVU318
 1165 011c 0DA8     		add	r0, sp, #52
 1166 011e FFF7FEFF 		bl	_atoi
 1167              	.LVL112:
 1168 0122 0A90     		str	r0, [sp, #40]
 1169              	.LVL113:
 612:lvgl/lvgl/src/misc/lv_printf.c ****         }
 1170              		.loc 1 612 21 view .LVU319
 1171 0124 95E7     		b	.L90
 1172              	.LVL114:
 1173              	.L172:
 1174              	.LBB31:
 615:lvgl/lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1175              		.loc 1 615 13 is_stmt 1 view .LVU320
 615:lvgl/lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1176              		.loc 1 615 23 is_stmt 0 view .LVU321
 1177 0126 189B     		ldr	r3, [sp, #96]
 1178 0128 1A1D     		adds	r2, r3, #4
 1179 012a 1892     		str	r2, [sp, #96]
 1180 012c 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 39


 616:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1181              		.loc 1 616 13 is_stmt 1 view .LVU322
 616:lvgl/lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1182              		.loc 1 616 15 is_stmt 0 view .LVU323
 1183 012e 0028     		cmp	r0, #0
 1184 0130 04DB     		blt	.L174
 621:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1185              		.loc 1 621 17 is_stmt 1 view .LVU324
 621:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1186              		.loc 1 621 23 is_stmt 0 view .LVU325
 1187 0132 0A90     		str	r0, [sp, #40]
 1188              	.LVL115:
 1189              	.L92:
 623:lvgl/lvgl/src/misc/lv_printf.c ****         }
 1190              		.loc 1 623 13 is_stmt 1 view .LVU326
 623:lvgl/lvgl/src/misc/lv_printf.c ****         }
 1191              		.loc 1 623 19 is_stmt 0 view .LVU327
 1192 0134 0D9B     		ldr	r3, [sp, #52]
 1193 0136 0133     		adds	r3, r3, #1
 1194 0138 0D93     		str	r3, [sp, #52]
 1195 013a 8AE7     		b	.L90
 1196              	.LVL116:
 1197              	.L174:
 617:lvgl/lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1198              		.loc 1 617 17 is_stmt 1 view .LVU328
 617:lvgl/lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1199              		.loc 1 617 23 is_stmt 0 view .LVU329
 1200 013c 45F00205 		orr	r5, r5, #2
 1201              	.LVL117:
 618:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1202              		.loc 1 618 17 is_stmt 1 view .LVU330
 618:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1203              		.loc 1 618 40 is_stmt 0 view .LVU331
 1204 0140 4342     		rsbs	r3, r0, #0
 1205 0142 0A93     		str	r3, [sp, #40]
 1206              	.LVL118:
 618:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1207              		.loc 1 618 40 view .LVU332
 1208 0144 F6E7     		b	.L92
 1209              	.LVL119:
 1210              	.L173:
 618:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1211              		.loc 1 618 40 view .LVU333
 1212              	.LBE31:
 629:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 1213              		.loc 1 629 13 is_stmt 1 view .LVU334
 629:lvgl/lvgl/src/misc/lv_printf.c ****             format++;
 1214              		.loc 1 629 19 is_stmt 0 view .LVU335
 1215 0146 45F48065 		orr	r5, r5, #1024
 1216              	.LVL120:
 630:lvgl/lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1217              		.loc 1 630 13 is_stmt 1 view .LVU336
 630:lvgl/lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1218              		.loc 1 630 19 is_stmt 0 view .LVU337
 1219 014a 5A1C     		adds	r2, r3, #1
 1220 014c 0D92     		str	r2, [sp, #52]
 631:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 40


 1221              		.loc 1 631 13 is_stmt 1 view .LVU338
 631:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1222              		.loc 1 631 16 is_stmt 0 view .LVU339
 1223 014e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1224              	.LVL121:
 1225              	.LBB32:
 1226              	.LBI32:
 153:lvgl/lvgl/src/misc/lv_printf.c **** {
 1227              		.loc 1 153 20 is_stmt 1 view .LVU340
 1228              	.LBB33:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 1229              		.loc 1 155 5 view .LVU341
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 1230              		.loc 1 155 24 is_stmt 0 view .LVU342
 1231 0150 A2F13003 		sub	r3, r2, #48
 1232 0154 DBB2     		uxtb	r3, r3
 1233              	.LVL122:
 155:lvgl/lvgl/src/misc/lv_printf.c **** }
 1234              		.loc 1 155 24 view .LVU343
 1235              	.LBE33:
 1236              	.LBE32:
 631:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1237              		.loc 1 631 15 view .LVU344
 1238 0156 092B     		cmp	r3, #9
 1239 0158 04D9     		bls	.L175
 634:lvgl/lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1240              		.loc 1 634 18 is_stmt 1 view .LVU345
 634:lvgl/lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1241              		.loc 1 634 20 is_stmt 0 view .LVU346
 1242 015a 2A2A     		cmp	r2, #42
 1243 015c 07D0     		beq	.L176
 627:lvgl/lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1244              		.loc 1 627 19 view .LVU347
 1245 015e 4FF0000A 		mov	r10, #0
 1246 0162 7CE7     		b	.L93
 1247              	.L175:
 632:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1248              		.loc 1 632 17 is_stmt 1 view .LVU348
 632:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1249              		.loc 1 632 29 is_stmt 0 view .LVU349
 1250 0164 0DA8     		add	r0, sp, #52
 1251 0166 FFF7FEFF 		bl	_atoi
 1252              	.LVL123:
 1253 016a 8246     		mov	r10, r0
 1254              	.LVL124:
 632:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1255              		.loc 1 632 29 view .LVU350
 1256 016c 77E7     		b	.L93
 1257              	.LVL125:
 1258              	.L176:
 1259              	.LBB34:
 635:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1260              		.loc 1 635 17 is_stmt 1 view .LVU351
 635:lvgl/lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1261              		.loc 1 635 27 is_stmt 0 view .LVU352
 1262 016e 189B     		ldr	r3, [sp, #96]
 1263 0170 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 41


 1264 0172 1892     		str	r2, [sp, #96]
 1265 0174 1B68     		ldr	r3, [r3]
 636:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1266              		.loc 1 636 17 is_stmt 1 view .LVU353
 636:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1267              		.loc 1 636 59 is_stmt 0 view .LVU354
 1268 0176 23EAE37A 		bic	r10, r3, r3, asr #31
 1269              	.LVL126:
 637:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1270              		.loc 1 637 17 is_stmt 1 view .LVU355
 637:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1271              		.loc 1 637 23 is_stmt 0 view .LVU356
 1272 017a 0D9B     		ldr	r3, [sp, #52]
 1273 017c 0133     		adds	r3, r3, #1
 1274 017e 0D93     		str	r3, [sp, #52]
 1275 0180 6DE7     		b	.L93
 1276              	.L99:
 637:lvgl/lvgl/src/misc/lv_printf.c ****             }
 1277              		.loc 1 637 23 view .LVU357
 1278              	.LBE34:
 644:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1279              		.loc 1 644 17 is_stmt 1 view .LVU358
 644:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1280              		.loc 1 644 23 is_stmt 0 view .LVU359
 1281 0182 45F48071 		orr	r1, r5, #256
 1282              	.LVL127:
 645:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1283              		.loc 1 645 17 is_stmt 1 view .LVU360
 645:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1284              		.loc 1 645 23 is_stmt 0 view .LVU361
 1285 0186 531C     		adds	r3, r2, #1
 1286 0188 0D93     		str	r3, [sp, #52]
 646:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1287              		.loc 1 646 17 is_stmt 1 view .LVU362
 646:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1288              		.loc 1 646 20 is_stmt 0 view .LVU363
 1289 018a 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 646:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1290              		.loc 1 646 19 view .LVU364
 1291 018c 6C2A     		cmp	r2, #108
 1292 018e 01D0     		beq	.L177
 644:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1293              		.loc 1 644 23 view .LVU365
 1294 0190 0D46     		mov	r5, r1
 1295 0192 16E0     		b	.L95
 1296              	.L177:
 647:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1297              		.loc 1 647 21 is_stmt 1 view .LVU366
 647:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1298              		.loc 1 647 27 is_stmt 0 view .LVU367
 1299 0194 45F44075 		orr	r5, r5, #768
 1300              	.LVL128:
 648:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1301              		.loc 1 648 21 is_stmt 1 view .LVU368
 648:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1302              		.loc 1 648 27 is_stmt 0 view .LVU369
 1303 0198 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 42


 1304 019a 0D93     		str	r3, [sp, #52]
 1305 019c 11E0     		b	.L95
 1306              	.L101:
 652:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1307              		.loc 1 652 17 is_stmt 1 view .LVU370
 652:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1308              		.loc 1 652 23 is_stmt 0 view .LVU371
 1309 019e 45F08001 		orr	r1, r5, #128
 1310              	.LVL129:
 653:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 1311              		.loc 1 653 17 is_stmt 1 view .LVU372
 653:lvgl/lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 1312              		.loc 1 653 23 is_stmt 0 view .LVU373
 1313 01a2 531C     		adds	r3, r2, #1
 1314 01a4 0D93     		str	r3, [sp, #52]
 654:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1315              		.loc 1 654 17 is_stmt 1 view .LVU374
 654:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1316              		.loc 1 654 20 is_stmt 0 view .LVU375
 1317 01a6 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 654:lvgl/lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1318              		.loc 1 654 19 view .LVU376
 1319 01a8 682A     		cmp	r2, #104
 1320 01aa 01D0     		beq	.L178
 652:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1321              		.loc 1 652 23 view .LVU377
 1322 01ac 0D46     		mov	r5, r1
 1323 01ae 08E0     		b	.L95
 1324              	.L178:
 655:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1325              		.loc 1 655 21 is_stmt 1 view .LVU378
 655:lvgl/lvgl/src/misc/lv_printf.c ****                     format++;
 1326              		.loc 1 655 27 is_stmt 0 view .LVU379
 1327 01b0 45F0C005 		orr	r5, r5, #192
 1328              	.LVL130:
 656:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1329              		.loc 1 656 21 is_stmt 1 view .LVU380
 656:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1330              		.loc 1 656 27 is_stmt 0 view .LVU381
 1331 01b4 0133     		adds	r3, r3, #1
 1332 01b6 0D93     		str	r3, [sp, #52]
 1333 01b8 03E0     		b	.L95
 1334              	.L98:
 661:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1335              		.loc 1 661 17 is_stmt 1 view .LVU382
 661:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1336              		.loc 1 661 23 is_stmt 0 view .LVU383
 1337 01ba 45F48075 		orr	r5, r5, #256
 1338              	.LVL131:
 662:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1339              		.loc 1 662 17 is_stmt 1 view .LVU384
 662:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1340              		.loc 1 662 23 is_stmt 0 view .LVU385
 1341 01be 0132     		adds	r2, r2, #1
 1342 01c0 0D92     		str	r2, [sp, #52]
 663:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1343              		.loc 1 663 17 is_stmt 1 view .LVU386
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 43


 1344              	.L95:
 678:lvgl/lvgl/src/misc/lv_printf.c ****             case 'd' :
 1345              		.loc 1 678 9 view .LVU387
 678:lvgl/lvgl/src/misc/lv_printf.c ****             case 'd' :
 1346              		.loc 1 678 16 is_stmt 0 view .LVU388
 1347 01c2 0D9B     		ldr	r3, [sp, #52]
 1348 01c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1349 01c6 A0F12503 		sub	r3, r0, #37
 1350 01ca 532B     		cmp	r3, #83
 1351 01cc 00F20C82 		bhi	.L102
 1352 01d0 DFE813F0 		tbh	[pc, r3, lsl #1]
 1353              	.L104:
 1354 01d4 FF01     		.2byte	(.L107-.L104)/2
 1355 01d6 0A02     		.2byte	(.L102-.L104)/2
 1356 01d8 0A02     		.2byte	(.L102-.L104)/2
 1357 01da 0A02     		.2byte	(.L102-.L104)/2
 1358 01dc 0A02     		.2byte	(.L102-.L104)/2
 1359 01de 0A02     		.2byte	(.L102-.L104)/2
 1360 01e0 0A02     		.2byte	(.L102-.L104)/2
 1361 01e2 0A02     		.2byte	(.L102-.L104)/2
 1362 01e4 0A02     		.2byte	(.L102-.L104)/2
 1363 01e6 0A02     		.2byte	(.L102-.L104)/2
 1364 01e8 0A02     		.2byte	(.L102-.L104)/2
 1365 01ea 0A02     		.2byte	(.L102-.L104)/2
 1366 01ec 0A02     		.2byte	(.L102-.L104)/2
 1367 01ee 0A02     		.2byte	(.L102-.L104)/2
 1368 01f0 0A02     		.2byte	(.L102-.L104)/2
 1369 01f2 0A02     		.2byte	(.L102-.L104)/2
 1370 01f4 0A02     		.2byte	(.L102-.L104)/2
 1371 01f6 0A02     		.2byte	(.L102-.L104)/2
 1372 01f8 0A02     		.2byte	(.L102-.L104)/2
 1373 01fa 0A02     		.2byte	(.L102-.L104)/2
 1374 01fc 0A02     		.2byte	(.L102-.L104)/2
 1375 01fe 0A02     		.2byte	(.L102-.L104)/2
 1376 0200 0A02     		.2byte	(.L102-.L104)/2
 1377 0202 0A02     		.2byte	(.L102-.L104)/2
 1378 0204 0A02     		.2byte	(.L102-.L104)/2
 1379 0206 0A02     		.2byte	(.L102-.L104)/2
 1380 0208 0A02     		.2byte	(.L102-.L104)/2
 1381 020a 0A02     		.2byte	(.L102-.L104)/2
 1382 020c 0A02     		.2byte	(.L102-.L104)/2
 1383 020e 0A02     		.2byte	(.L102-.L104)/2
 1384 0210 0A02     		.2byte	(.L102-.L104)/2
 1385 0212 0A02     		.2byte	(.L102-.L104)/2
 1386 0214 0A02     		.2byte	(.L102-.L104)/2
 1387 0216 0A02     		.2byte	(.L102-.L104)/2
 1388 0218 0A02     		.2byte	(.L102-.L104)/2
 1389 021a 0A02     		.2byte	(.L102-.L104)/2
 1390 021c 0A02     		.2byte	(.L102-.L104)/2
 1391 021e 0A02     		.2byte	(.L102-.L104)/2
 1392 0220 0A02     		.2byte	(.L102-.L104)/2
 1393 0222 0A02     		.2byte	(.L102-.L104)/2
 1394 0224 0A02     		.2byte	(.L102-.L104)/2
 1395 0226 0A02     		.2byte	(.L102-.L104)/2
 1396 0228 0A02     		.2byte	(.L102-.L104)/2
 1397 022a 5E00     		.2byte	(.L103-.L104)/2
 1398 022c 0A02     		.2byte	(.L102-.L104)/2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 44


 1399 022e 0A02     		.2byte	(.L102-.L104)/2
 1400 0230 0A02     		.2byte	(.L102-.L104)/2
 1401 0232 0A02     		.2byte	(.L102-.L104)/2
 1402 0234 0A02     		.2byte	(.L102-.L104)/2
 1403 0236 0A02     		.2byte	(.L102-.L104)/2
 1404 0238 0A02     		.2byte	(.L102-.L104)/2
 1405 023a 5E00     		.2byte	(.L103-.L104)/2
 1406 023c 0A02     		.2byte	(.L102-.L104)/2
 1407 023e 0A02     		.2byte	(.L102-.L104)/2
 1408 0240 0A02     		.2byte	(.L102-.L104)/2
 1409 0242 0A02     		.2byte	(.L102-.L104)/2
 1410 0244 0A02     		.2byte	(.L102-.L104)/2
 1411 0246 0A02     		.2byte	(.L102-.L104)/2
 1412 0248 0A02     		.2byte	(.L102-.L104)/2
 1413 024a 0A02     		.2byte	(.L102-.L104)/2
 1414 024c 0A02     		.2byte	(.L102-.L104)/2
 1415 024e 5E00     		.2byte	(.L103-.L104)/2
 1416 0250 6101     		.2byte	(.L106-.L104)/2
 1417 0252 5E00     		.2byte	(.L103-.L104)/2
 1418 0254 0A02     		.2byte	(.L102-.L104)/2
 1419 0256 0A02     		.2byte	(.L102-.L104)/2
 1420 0258 0A02     		.2byte	(.L102-.L104)/2
 1421 025a 0A02     		.2byte	(.L102-.L104)/2
 1422 025c 5E00     		.2byte	(.L103-.L104)/2
 1423 025e 0A02     		.2byte	(.L102-.L104)/2
 1424 0260 0A02     		.2byte	(.L102-.L104)/2
 1425 0262 0A02     		.2byte	(.L102-.L104)/2
 1426 0264 0A02     		.2byte	(.L102-.L104)/2
 1427 0266 0A02     		.2byte	(.L102-.L104)/2
 1428 0268 5E00     		.2byte	(.L103-.L104)/2
 1429 026a 5E00     		.2byte	(.L103-.L104)/2
 1430 026c 0A02     		.2byte	(.L102-.L104)/2
 1431 026e 0A02     		.2byte	(.L102-.L104)/2
 1432 0270 9A01     		.2byte	(.L105-.L104)/2
 1433 0272 0A02     		.2byte	(.L102-.L104)/2
 1434 0274 5E00     		.2byte	(.L103-.L104)/2
 1435 0276 0A02     		.2byte	(.L102-.L104)/2
 1436 0278 0A02     		.2byte	(.L102-.L104)/2
 1437 027a 5E00     		.2byte	(.L103-.L104)/2
 1438              		.p2align 1
 1439              	.L100:
 666:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1440              		.loc 1 666 17 is_stmt 1 view .LVU389
 666:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1441              		.loc 1 666 23 is_stmt 0 view .LVU390
 1442 027c 45F40075 		orr	r5, r5, #512
 1443              	.LVL132:
 667:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1444              		.loc 1 667 17 is_stmt 1 view .LVU391
 667:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1445              		.loc 1 667 23 is_stmt 0 view .LVU392
 1446 0280 0132     		adds	r2, r2, #1
 1447 0282 0D92     		str	r2, [sp, #52]
 668:lvgl/lvgl/src/misc/lv_printf.c ****             case 'z' :
 1448              		.loc 1 668 17 is_stmt 1 view .LVU393
 1449 0284 9DE7     		b	.L95
 1450              	.L96:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 45


 670:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1451              		.loc 1 670 17 view .LVU394
 670:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 1452              		.loc 1 670 23 is_stmt 0 view .LVU395
 1453 0286 45F48075 		orr	r5, r5, #256
 1454              	.LVL133:
 671:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1455              		.loc 1 671 17 is_stmt 1 view .LVU396
 671:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 1456              		.loc 1 671 23 is_stmt 0 view .LVU397
 1457 028a 0132     		adds	r2, r2, #1
 1458 028c 0D92     		str	r2, [sp, #52]
 672:lvgl/lvgl/src/misc/lv_printf.c ****             default :
 1459              		.loc 1 672 17 is_stmt 1 view .LVU398
 1460 028e 98E7     		b	.L95
 1461              	.L103:
 1462              	.LBB35:
 689:lvgl/lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 1463              		.loc 1 689 21 view .LVU399
 690:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1464              		.loc 1 690 21 view .LVU400
 690:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1465              		.loc 1 690 23 is_stmt 0 view .LVU401
 1466 0290 7828     		cmp	r0, #120
 1467 0292 11D0     		beq	.L159
 690:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1468              		.loc 1 690 39 discriminator 1 view .LVU402
 1469 0294 5828     		cmp	r0, #88
 1470 0296 46D0     		beq	.L160
 693:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1471              		.loc 1 693 26 is_stmt 1 view .LVU403
 693:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1472              		.loc 1 693 28 is_stmt 0 view .LVU404
 1473 0298 7028     		cmp	r0, #112
 1474 029a 09D0     		beq	.L109
 693:lvgl/lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1475              		.loc 1 693 44 discriminator 1 view .LVU405
 1476 029c 5028     		cmp	r0, #80
 1477 029e 07D0     		beq	.L109
 703:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  8U;
 1478              		.loc 1 703 26 is_stmt 1 view .LVU406
 703:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  8U;
 1479              		.loc 1 703 28 is_stmt 0 view .LVU407
 1480 02a0 6F28     		cmp	r0, #111
 1481 02a2 42D0     		beq	.L161
 706:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  2U;
 1482              		.loc 1 706 26 is_stmt 1 view .LVU408
 706:lvgl/lvgl/src/misc/lv_printf.c ****                         base =  2U;
 1483              		.loc 1 706 28 is_stmt 0 view .LVU409
 1484 02a4 6228     		cmp	r0, #98
 1485 02a6 42D0     		beq	.L162
 710:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1486              		.loc 1 710 25 is_stmt 1 view .LVU410
 1487              	.LVL134:
 711:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1488              		.loc 1 711 25 view .LVU411
 711:lvgl/lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 46


 1489              		.loc 1 711 31 is_stmt 0 view .LVU412
 1490 02a8 25F01005 		bic	r5, r5, #16
 1491              	.LVL135:
 710:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1492              		.loc 1 710 30 view .LVU413
 1493 02ac 0A23     		movs	r3, #10
 1494 02ae 04E0     		b	.L108
 1495              	.LVL136:
 1496              	.L109:
 694:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1497              		.loc 1 694 25 is_stmt 1 view .LVU414
 695:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1498              		.loc 1 695 25 view .LVU415
 697:lvgl/lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 1499              		.loc 1 697 25 view .LVU416
 701:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1500              		.loc 1 701 29 view .LVU417
 701:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1501              		.loc 1 701 35 is_stmt 0 view .LVU418
 1502 02b0 45F48875 		orr	r5, r5, #272
 1503              	.LVL137:
 694:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1504              		.loc 1 694 30 view .LVU419
 1505 02b4 1023     		movs	r3, #16
 1506 02b6 00E0     		b	.L108
 1507              	.LVL138:
 1508              	.L159:
 691:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1509              		.loc 1 691 30 view .LVU420
 1510 02b8 1023     		movs	r3, #16
 1511              	.L108:
 1512              	.LVL139:
 714:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1513              		.loc 1 714 21 is_stmt 1 view .LVU421
 714:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1514              		.loc 1 714 23 is_stmt 0 view .LVU422
 1515 02ba 5828     		cmp	r0, #88
 1516 02bc 01D0     		beq	.L111
 714:lvgl/lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1517              		.loc 1 714 39 discriminator 1 view .LVU423
 1518 02be 5028     		cmp	r0, #80
 1519 02c0 01D1     		bne	.L112
 1520              	.L111:
 715:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1521              		.loc 1 715 25 is_stmt 1 view .LVU424
 715:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1522              		.loc 1 715 31 is_stmt 0 view .LVU425
 1523 02c2 45F02005 		orr	r5, r5, #32
 1524              	.LVL140:
 1525              	.L112:
 719:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1526              		.loc 1 719 21 is_stmt 1 view .LVU426
 719:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1527              		.loc 1 719 23 is_stmt 0 view .LVU427
 1528 02c6 6928     		cmp	r0, #105
 1529 02c8 03D0     		beq	.L113
 719:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 47


 1530              		.loc 1 719 41 discriminator 1 view .LVU428
 1531 02ca 6428     		cmp	r0, #100
 1532 02cc 01D0     		beq	.L113
 720:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1533              		.loc 1 720 25 is_stmt 1 view .LVU429
 720:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1534              		.loc 1 720 31 is_stmt 0 view .LVU430
 1535 02ce 25F00C05 		bic	r5, r5, #12
 1536              	.LVL141:
 1537              	.L113:
 724:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1538              		.loc 1 724 21 is_stmt 1 view .LVU431
 724:lvgl/lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1539              		.loc 1 724 23 is_stmt 0 view .LVU432
 1540 02d2 15F4806F 		tst	r5, #1024
 1541 02d6 01D0     		beq	.L114
 725:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1542              		.loc 1 725 25 is_stmt 1 view .LVU433
 725:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1543              		.loc 1 725 31 is_stmt 0 view .LVU434
 1544 02d8 25F00105 		bic	r5, r5, #1
 1545              	.LVL142:
 1546              	.L114:
 729:lvgl/lvgl/src/misc/lv_printf.c ****                         // signed
 1547              		.loc 1 729 21 is_stmt 1 view .LVU435
 729:lvgl/lvgl/src/misc/lv_printf.c ****                         // signed
 1548              		.loc 1 729 23 is_stmt 0 view .LVU436
 1549 02dc 6928     		cmp	r0, #105
 1550 02de 28D0     		beq	.L115
 729:lvgl/lvgl/src/misc/lv_printf.c ****                         // signed
 1551              		.loc 1 729 41 discriminator 1 view .LVU437
 1552 02e0 6428     		cmp	r0, #100
 1553 02e2 26D0     		beq	.L115
 752:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1554              		.loc 1 752 25 is_stmt 1 view .LVU438
 752:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1555              		.loc 1 752 27 is_stmt 0 view .LVU439
 1556 02e4 15F4007F 		tst	r5, #512
 1557 02e8 40F09780 		bne	.L179
 757:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1558              		.loc 1 757 30 is_stmt 1 view .LVU440
 757:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1559              		.loc 1 757 32 is_stmt 0 view .LVU441
 1560 02ec 15F4807F 		tst	r5, #256
 1561 02f0 40F0AF80 		bne	.L180
 1562              	.LBB36:
 761:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1563              		.loc 1 761 29 is_stmt 1 view .LVU442
 762:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1564              		.loc 1 762 115 is_stmt 0 view .LVU443
 1565 02f4 15F0400F 		tst	r5, #64
 1566 02f8 00F0C080 		beq	.L126
 761:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1567              		.loc 1 761 94 view .LVU444
 1568 02fc 189A     		ldr	r2, [sp, #96]
 1569 02fe 111D     		adds	r1, r2, #4
 1570 0300 1891     		str	r1, [sp, #96]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 48


 1571 0302 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1572              	.L127:
 1573              	.LVL143:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1574              		.loc 1 763 29 is_stmt 1 view .LVU445
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1575              		.loc 1 763 35 is_stmt 0 view .LVU446
 1576 0304 0595     		str	r5, [sp, #20]
 1577 0306 0A99     		ldr	r1, [sp, #40]
 1578 0308 0491     		str	r1, [sp, #16]
 1579 030a CDF80CA0 		str	r10, [sp, #12]
 1580 030e 0293     		str	r3, [sp, #8]
 1581 0310 0023     		movs	r3, #0
 1582              	.LVL144:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1583              		.loc 1 763 35 view .LVU447
 1584 0312 0193     		str	r3, [sp, #4]
 1585 0314 0092     		str	r2, [sp]
 1586 0316 3346     		mov	r3, r6
 1587 0318 2246     		mov	r2, r4
 1588              	.LVL145:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1589              		.loc 1 763 35 view .LVU448
 1590 031a 5946     		mov	r1, fp
 1591 031c 3846     		mov	r0, r7
 1592 031e FFF7FEFF 		bl	_ntoa_long
 1593              	.LVL146:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1594              		.loc 1 763 35 view .LVU449
 1595 0322 0446     		mov	r4, r0
 1596              	.LVL147:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1597              		.loc 1 763 35 view .LVU450
 1598 0324 26E0     		b	.L119
 1599              	.LVL148:
 1600              	.L160:
 763:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1601              		.loc 1 763 35 view .LVU451
 1602              	.LBE36:
 691:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1603              		.loc 1 691 30 view .LVU452
 1604 0326 1023     		movs	r3, #16
 1605 0328 C7E7     		b	.L108
 1606              	.L161:
 704:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1607              		.loc 1 704 30 view .LVU453
 1608 032a 0823     		movs	r3, #8
 1609 032c C5E7     		b	.L108
 1610              	.L162:
 707:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 1611              		.loc 1 707 30 view .LVU454
 1612 032e 0223     		movs	r3, #2
 1613 0330 C3E7     		b	.L108
 1614              	.LVL149:
 1615              	.L115:
 731:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1616              		.loc 1 731 25 is_stmt 1 view .LVU455
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 49


 731:lvgl/lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1617              		.loc 1 731 27 is_stmt 0 view .LVU456
 1618 0332 15F4007F 		tst	r5, #512
 1619 0336 21D1     		bne	.L181
 738:lvgl/lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1620              		.loc 1 738 30 is_stmt 1 view .LVU457
 738:lvgl/lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1621              		.loc 1 738 32 is_stmt 0 view .LVU458
 1622 0338 15F4807F 		tst	r5, #256
 1623 033c 46D1     		bne	.L182
 1624              	.LBB37:
 744:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1625              		.loc 1 744 29 is_stmt 1 view .LVU459
 744:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1626              		.loc 1 744 92 is_stmt 0 view .LVU460
 1627 033e 15F0400F 		tst	r5, #64
 1628 0342 5CD0     		beq	.L121
 744:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1629              		.loc 1 744 76 view .LVU461
 1630 0344 189A     		ldr	r2, [sp, #96]
 1631 0346 111D     		adds	r1, r2, #4
 1632 0348 1891     		str	r1, [sp, #96]
 1633 034a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1634              	.L122:
 1635              	.LVL150:
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1636              		.loc 1 746 29 is_stmt 1 discriminator 3 view .LVU462
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1637              		.loc 1 746 72 is_stmt 0 discriminator 3 view .LVU463
 1638 034c 82EAE271 		eor	r1, r2, r2, asr #31
 1639 0350 A1EBE271 		sub	r1, r1, r2, asr #31
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1640              		.loc 1 746 35 discriminator 3 view .LVU464
 1641 0354 0595     		str	r5, [sp, #20]
 1642 0356 0A98     		ldr	r0, [sp, #40]
 1643 0358 0490     		str	r0, [sp, #16]
 1644 035a CDF80CA0 		str	r10, [sp, #12]
 1645 035e 0293     		str	r3, [sp, #8]
 1646 0360 D20F     		lsrs	r2, r2, #31
 1647              	.LVL151:
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1648              		.loc 1 746 35 discriminator 3 view .LVU465
 1649 0362 0192     		str	r2, [sp, #4]
 1650 0364 0091     		str	r1, [sp]
 1651 0366 3346     		mov	r3, r6
 1652              	.LVL152:
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1653              		.loc 1 746 35 discriminator 3 view .LVU466
 1654 0368 2246     		mov	r2, r4
 1655 036a 5946     		mov	r1, fp
 1656 036c 3846     		mov	r0, r7
 1657 036e FFF7FEFF 		bl	_ntoa_long
 1658              	.LVL153:
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1659              		.loc 1 746 35 discriminator 3 view .LVU467
 1660 0372 0446     		mov	r4, r0
 1661              	.LVL154:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 50


 1662              	.L119:
 746:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1663              		.loc 1 746 35 discriminator 3 view .LVU468
 1664              	.LBE37:
 766:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1665              		.loc 1 766 21 is_stmt 1 view .LVU469
 766:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1666              		.loc 1 766 27 is_stmt 0 view .LVU470
 1667 0374 0D9B     		ldr	r3, [sp, #52]
 1668 0376 0133     		adds	r3, r3, #1
 1669 0378 0D93     		str	r3, [sp, #52]
 767:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1670              		.loc 1 767 21 is_stmt 1 view .LVU471
 1671 037a 4CE6     		b	.L150
 1672              	.LVL155:
 1673              	.L181:
 1674              	.LBB38:
 733:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1675              		.loc 1 733 29 view .LVU472
 733:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1676              		.loc 1 733 45 is_stmt 0 view .LVU473
 1677 037c 189A     		ldr	r2, [sp, #96]
 1678 037e 0732     		adds	r2, r2, #7
 1679 0380 22F00702 		bic	r2, r2, #7
 1680 0384 02F10801 		add	r1, r2, #8
 1681 0388 1891     		str	r1, [sp, #96]
 1682 038a D2F804C0 		ldr	ip, [r2, #4]
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1683              		.loc 1 734 29 is_stmt 1 view .LVU474
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1684              		.loc 1 734 77 is_stmt 0 view .LVU475
 1685 038e 1068     		ldr	r0, [r2]
 1686 0390 6146     		mov	r1, ip
 1687 0392 0028     		cmp	r0, #0
 1688 0394 7CF10002 		sbcs	r2, ip, #0
 1689 0398 14DB     		blt	.L183
 1690              	.L118:
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1691              		.loc 1 734 35 view .LVU476
 1692 039a 0895     		str	r5, [sp, #32]
 1693 039c 0A9A     		ldr	r2, [sp, #40]
 1694 039e 0792     		str	r2, [sp, #28]
 1695 03a0 CDF818A0 		str	r10, [sp, #24]
 1696 03a4 0493     		str	r3, [sp, #16]
 1697 03a6 0023     		movs	r3, #0
 1698              	.LVL156:
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1699              		.loc 1 734 35 view .LVU477
 1700 03a8 0593     		str	r3, [sp, #20]
 1701 03aa 4FEADC73 		lsr	r3, ip, #31
 1702 03ae 0293     		str	r3, [sp, #8]
 1703 03b0 CDE90001 		strd	r0, [sp]
 1704 03b4 3346     		mov	r3, r6
 1705 03b6 2246     		mov	r2, r4
 1706 03b8 5946     		mov	r1, fp
 1707 03ba 3846     		mov	r0, r7
 1708 03bc FFF7FEFF 		bl	_ntoa_long_long
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 51


 1709              	.LVL157:
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1710              		.loc 1 734 35 view .LVU478
 1711 03c0 0446     		mov	r4, r0
 1712              	.LVL158:
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1713              		.loc 1 734 35 view .LVU479
 1714              	.LBE38:
 1715 03c2 D7E7     		b	.L119
 1716              	.LVL159:
 1717              	.L183:
 1718              	.LBB39:
 734:lvgl/lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1719              		.loc 1 734 77 view .LVU480
 1720 03c4 4042     		rsbs	r0, r0, #0
 1721 03c6 6CEB4C01 		sbc	r1, ip, ip, lsl #1
 1722 03ca E6E7     		b	.L118
 1723              	.L182:
 1724              	.LBE39:
 1725              	.LBB40:
 739:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1726              		.loc 1 739 29 is_stmt 1 view .LVU481
 739:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1727              		.loc 1 739 40 is_stmt 0 view .LVU482
 1728 03cc 189A     		ldr	r2, [sp, #96]
 1729 03ce 111D     		adds	r1, r2, #4
 1730 03d0 1891     		str	r1, [sp, #96]
 1731 03d2 1268     		ldr	r2, [r2]
 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1732              		.loc 1 740 29 is_stmt 1 view .LVU483
 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1733              		.loc 1 740 72 is_stmt 0 view .LVU484
 1734 03d4 82EAE271 		eor	r1, r2, r2, asr #31
 1735 03d8 A1EBE271 		sub	r1, r1, r2, asr #31
 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1736              		.loc 1 740 35 view .LVU485
 1737 03dc 0595     		str	r5, [sp, #20]
 1738 03de 0A98     		ldr	r0, [sp, #40]
 1739 03e0 0490     		str	r0, [sp, #16]
 1740 03e2 CDF80CA0 		str	r10, [sp, #12]
 1741 03e6 0293     		str	r3, [sp, #8]
 1742 03e8 D20F     		lsrs	r2, r2, #31
 1743 03ea 0192     		str	r2, [sp, #4]
 1744 03ec 0091     		str	r1, [sp]
 1745 03ee 3346     		mov	r3, r6
 1746              	.LVL160:
 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1747              		.loc 1 740 35 view .LVU486
 1748 03f0 2246     		mov	r2, r4
 1749 03f2 5946     		mov	r1, fp
 1750 03f4 3846     		mov	r0, r7
 1751 03f6 FFF7FEFF 		bl	_ntoa_long
 1752              	.LVL161:
 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1753              		.loc 1 740 35 view .LVU487
 1754 03fa 0446     		mov	r4, r0
 1755              	.LVL162:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 52


 740:lvgl/lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1756              		.loc 1 740 35 view .LVU488
 1757              	.LBE40:
 1758 03fc BAE7     		b	.L119
 1759              	.LVL163:
 1760              	.L121:
 1761              	.LBB41:
 745:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1762              		.loc 1 745 141 discriminator 2 view .LVU489
 1763 03fe 15F0800F 		tst	r5, #128
 1764 0402 05D0     		beq	.L123
 744:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1765              		.loc 1 744 129 view .LVU490
 1766 0404 189A     		ldr	r2, [sp, #96]
 1767 0406 111D     		adds	r1, r2, #4
 1768 0408 1891     		str	r1, [sp, #96]
 744:lvgl/lvgl/src/misc/lv_printf.c ****                                                                                                    
 1769              		.loc 1 744 118 view .LVU491
 1770 040a B2F90020 		ldrsh	r2, [r2]
 1771 040e 9DE7     		b	.L122
 1772              	.L123:
 745:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1773              		.loc 1 745 141 view .LVU492
 1774 0410 189A     		ldr	r2, [sp, #96]
 1775 0412 111D     		adds	r1, r2, #4
 1776 0414 1891     		str	r1, [sp, #96]
 1777 0416 1268     		ldr	r2, [r2]
 1778 0418 98E7     		b	.L122
 1779              	.L179:
 745:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1780              		.loc 1 745 141 view .LVU493
 1781              	.LBE41:
 754:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1782              		.loc 1 754 29 is_stmt 1 view .LVU494
 754:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1783              		.loc 1 754 35 is_stmt 0 view .LVU495
 1784 041a 189A     		ldr	r2, [sp, #96]
 1785 041c 0732     		adds	r2, r2, #7
 1786 041e 22F00702 		bic	r2, r2, #7
 1787 0422 02F10801 		add	r1, r2, #8
 1788 0426 1891     		str	r1, [sp, #96]
 1789 0428 0895     		str	r5, [sp, #32]
 1790 042a 0A99     		ldr	r1, [sp, #40]
 1791 042c 0791     		str	r1, [sp, #28]
 1792 042e CDF818A0 		str	r10, [sp, #24]
 1793 0432 0021     		movs	r1, #0
 1794 0434 0493     		str	r3, [sp, #16]
 1795 0436 0591     		str	r1, [sp, #20]
 1796 0438 0291     		str	r1, [sp, #8]
 1797 043a D2E90023 		ldrd	r2, [r2]
 1798 043e CDE90023 		strd	r2, [sp]
 1799 0442 3346     		mov	r3, r6
 1800              	.LVL164:
 754:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1801              		.loc 1 754 35 view .LVU496
 1802 0444 2246     		mov	r2, r4
 1803 0446 5946     		mov	r1, fp
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 53


 1804 0448 3846     		mov	r0, r7
 1805 044a FFF7FEFF 		bl	_ntoa_long_long
 1806              	.LVL165:
 754:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1807              		.loc 1 754 35 view .LVU497
 1808 044e 0446     		mov	r4, r0
 1809              	.LVL166:
 754:lvgl/lvgl/src/misc/lv_printf.c **** #endif
 1810              		.loc 1 754 35 view .LVU498
 1811 0450 90E7     		b	.L119
 1812              	.LVL167:
 1813              	.L180:
 758:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1814              		.loc 1 758 29 is_stmt 1 view .LVU499
 758:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1815              		.loc 1 758 35 is_stmt 0 view .LVU500
 1816 0452 189A     		ldr	r2, [sp, #96]
 1817 0454 111D     		adds	r1, r2, #4
 1818 0456 1891     		str	r1, [sp, #96]
 1819 0458 0595     		str	r5, [sp, #20]
 1820 045a 0A99     		ldr	r1, [sp, #40]
 1821 045c 0491     		str	r1, [sp, #16]
 1822 045e CDF80CA0 		str	r10, [sp, #12]
 1823 0462 0293     		str	r3, [sp, #8]
 1824 0464 0023     		movs	r3, #0
 1825              	.LVL168:
 758:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1826              		.loc 1 758 35 view .LVU501
 1827 0466 0193     		str	r3, [sp, #4]
 1828 0468 1368     		ldr	r3, [r2]
 1829 046a 0093     		str	r3, [sp]
 1830 046c 3346     		mov	r3, r6
 1831 046e 2246     		mov	r2, r4
 1832 0470 5946     		mov	r1, fp
 1833 0472 3846     		mov	r0, r7
 1834 0474 FFF7FEFF 		bl	_ntoa_long
 1835              	.LVL169:
 758:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1836              		.loc 1 758 35 view .LVU502
 1837 0478 0446     		mov	r4, r0
 1838              	.LVL170:
 758:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1839              		.loc 1 758 35 view .LVU503
 1840 047a 7BE7     		b	.L119
 1841              	.LVL171:
 1842              	.L126:
 1843              	.LBB42:
 762:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1844              		.loc 1 762 186 discriminator 2 view .LVU504
 1845 047c 15F0800F 		tst	r5, #128
 1846 0480 04D0     		beq	.L128
 762:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1847              		.loc 1 762 161 view .LVU505
 1848 0482 189A     		ldr	r2, [sp, #96]
 1849 0484 111D     		adds	r1, r2, #4
 1850 0486 1891     		str	r1, [sp, #96]
 1851 0488 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 54


 1852 048a 3BE7     		b	.L127
 1853              	.L128:
 762:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1854              		.loc 1 762 186 view .LVU506
 1855 048c 189A     		ldr	r2, [sp, #96]
 1856 048e 111D     		adds	r1, r2, #4
 1857 0490 1891     		str	r1, [sp, #96]
 1858 0492 1268     		ldr	r2, [r2]
 1859 0494 36E7     		b	.L127
 1860              	.LVL172:
 1861              	.L106:
 762:lvgl/lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1862              		.loc 1 762 186 view .LVU507
 1863              	.LBE42:
 1864              	.LBE35:
 1865              	.LBB43:
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1866              		.loc 1 789 21 is_stmt 1 view .LVU508
 791:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1867              		.loc 1 791 21 view .LVU509
 791:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1868              		.loc 1 791 23 is_stmt 0 view .LVU510
 1869 0496 15F00205 		ands	r5, r5, #2
 1870              	.LVL173:
 791:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1871              		.loc 1 791 23 view .LVU511
 1872 049a 1FD0     		beq	.L163
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1873              		.loc 1 789 34 view .LVU512
 1874 049c 4FF00108 		mov	r8, #1
 1875              	.LVL174:
 1876              	.L130:
 797:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 1877              		.loc 1 797 21 is_stmt 1 view .LVU513
 797:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 1878              		.loc 1 797 31 is_stmt 0 view .LVU514
 1879 04a0 1898     		ldr	r0, [sp, #96]
 1880 04a2 031D     		adds	r3, r0, #4
 1881 04a4 1893     		str	r3, [sp, #96]
 797:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 1882              		.loc 1 797 21 view .LVU515
 1883 04a6 04F10109 		add	r9, r4, #1
 1884              	.LVL175:
 797:lvgl/lvgl/src/misc/lv_printf.c ****                     // post padding
 1885              		.loc 1 797 21 view .LVU516
 1886 04aa 3346     		mov	r3, r6
 1887 04ac 2246     		mov	r2, r4
 1888 04ae 5946     		mov	r1, fp
 1889 04b0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1890 04b2 B847     		blx	r7
 1891              	.LVL176:
 799:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1892              		.loc 1 799 21 is_stmt 1 view .LVU517
 799:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1893              		.loc 1 799 23 is_stmt 0 view .LVU518
 1894 04b4 BDB9     		cbnz	r5, .L184
 1895              	.LVL177:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 55


 1896              	.L133:
 804:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1897              		.loc 1 804 21 is_stmt 1 view .LVU519
 804:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 1898              		.loc 1 804 27 is_stmt 0 view .LVU520
 1899 04b6 0D9B     		ldr	r3, [sp, #52]
 1900 04b8 0133     		adds	r3, r3, #1
 1901 04ba 0D93     		str	r3, [sp, #52]
 805:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 1902              		.loc 1 805 21 is_stmt 1 view .LVU521
 1903 04bc 4C46     		mov	r4, r9
 1904 04be AAE5     		b	.L150
 1905              	.LVL178:
 1906              	.L131:
 793:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1907              		.loc 1 793 29 view .LVU522
 1908 04c0 02F10109 		add	r9, r2, #1
 1909              	.LVL179:
 793:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1910              		.loc 1 793 29 is_stmt 0 view .LVU523
 1911 04c4 3346     		mov	r3, r6
 1912 04c6 5946     		mov	r1, fp
 1913 04c8 2020     		movs	r0, #32
 1914 04ca B847     		blx	r7
 1915              	.LVL180:
 792:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1916              		.loc 1 792 32 view .LVU524
 1917 04cc 4346     		mov	r3, r8
 793:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1918              		.loc 1 793 29 view .LVU525
 1919 04ce 4A46     		mov	r2, r9
 1920              	.LVL181:
 1921              	.L129:
 792:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1922              		.loc 1 792 30 is_stmt 1 view .LVU526
 792:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1923              		.loc 1 792 32 is_stmt 0 view .LVU527
 1924 04d0 03F10108 		add	r8, r3, #1
 1925              	.LVL182:
 792:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1926              		.loc 1 792 30 view .LVU528
 1927 04d4 9A45     		cmp	r10, r3
 1928 04d6 F3D8     		bhi	.L131
 792:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1929              		.loc 1 792 30 view .LVU529
 1930 04d8 1446     		mov	r4, r2
 1931 04da E1E7     		b	.L130
 1932              	.LVL183:
 1933              	.L163:
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1934              		.loc 1 789 34 view .LVU530
 1935 04dc 0123     		movs	r3, #1
 1936 04de DDF828A0 		ldr	r10, [sp, #40]
 1937              	.LVL184:
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1938              		.loc 1 789 34 view .LVU531
 1939 04e2 2246     		mov	r2, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 56


 1940 04e4 F4E7     		b	.L129
 1941              	.LVL185:
 1942              	.L184:
 789:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1943              		.loc 1 789 34 view .LVU532
 1944 04e6 4A46     		mov	r2, r9
 1945 04e8 DDF82890 		ldr	r9, [sp, #40]
 1946              	.LVL186:
 1947              	.L132:
 800:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1948              		.loc 1 800 30 is_stmt 1 view .LVU533
 800:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1949              		.loc 1 800 32 is_stmt 0 view .LVU534
 1950 04ec 08F10104 		add	r4, r8, #1
 1951              	.LVL187:
 800:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1952              		.loc 1 800 30 view .LVU535
 1953 04f0 C145     		cmp	r9, r8
 1954 04f2 07D9     		bls	.L185
 801:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1955              		.loc 1 801 29 is_stmt 1 view .LVU536
 1956 04f4 551C     		adds	r5, r2, #1
 1957              	.LVL188:
 801:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1958              		.loc 1 801 29 is_stmt 0 view .LVU537
 1959 04f6 3346     		mov	r3, r6
 1960 04f8 5946     		mov	r1, fp
 1961 04fa 2020     		movs	r0, #32
 1962 04fc B847     		blx	r7
 1963              	.LVL189:
 800:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1964              		.loc 1 800 32 view .LVU538
 1965 04fe A046     		mov	r8, r4
 801:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1966              		.loc 1 801 29 view .LVU539
 1967 0500 2A46     		mov	r2, r5
 1968 0502 F3E7     		b	.L132
 1969              	.LVL190:
 1970              	.L185:
 801:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1971              		.loc 1 801 29 view .LVU540
 1972 0504 9146     		mov	r9, r2
 1973 0506 D6E7     		b	.L133
 1974              	.LVL191:
 1975              	.L105:
 801:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 1976              		.loc 1 801 29 view .LVU541
 1977              	.LBE43:
 1978              	.LBB44:
 809:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 1979              		.loc 1 809 21 is_stmt 1 view .LVU542
 809:lvgl/lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 1980              		.loc 1 809 34 is_stmt 0 view .LVU543
 1981 0508 189B     		ldr	r3, [sp, #96]
 1982 050a 1A1D     		adds	r2, r3, #4
 1983 050c 1892     		str	r2, [sp, #96]
 1984 050e D3F80090 		ldr	r9, [r3]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 57


 810:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1985              		.loc 1 810 21 is_stmt 1 view .LVU544
 810:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 1986              		.loc 1 810 38 is_stmt 0 view .LVU545
 1987 0512 BAF1000F 		cmp	r10, #0
 1988 0516 1ED1     		bne	.L135
 1989 0518 4FF0FF33 		mov	r3, #-1
 1990              	.L136:
 1991 051c C846     		mov	r8, r9
 1992 051e 02E0     		b	.L137
 1993              	.LVL192:
 1994              	.L139:
 1995              	.LBB45:
 1996              	.LBB46:
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 1997              		.loc 1 147 39 is_stmt 1 view .LVU546
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 1998              		.loc 1 147 35 view .LVU547
 1999 0520 08F10108 		add	r8, r8, #1
 2000              	.LVL193:
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2001              		.loc 1 147 31 is_stmt 0 view .LVU548
 2002 0524 1346     		mov	r3, r2
 2003              	.LVL194:
 2004              	.L137:
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2005              		.loc 1 147 18 is_stmt 1 view .LVU549
 2006 0526 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2007              		.loc 1 147 5 is_stmt 0 view .LVU550
 2008 052a 12B1     		cbz	r2, .L138
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2009              		.loc 1 147 31 view .LVU551
 2010 052c 5A1E     		subs	r2, r3, #1
 2011              	.LVL195:
 147:lvgl/lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2012              		.loc 1 147 21 view .LVU552
 2013 052e 002B     		cmp	r3, #0
 2014 0530 F6D1     		bne	.L139
 2015              	.LVL196:
 2016              	.L138:
 148:lvgl/lvgl/src/misc/lv_printf.c **** }
 2017              		.loc 1 148 5 is_stmt 1 view .LVU553
 148:lvgl/lvgl/src/misc/lv_printf.c **** }
 2018              		.loc 1 148 29 is_stmt 0 view .LVU554
 2019 0532 A8EB0908 		sub	r8, r8, r9
 2020              	.LVL197:
 148:lvgl/lvgl/src/misc/lv_printf.c **** }
 2021              		.loc 1 148 29 view .LVU555
 2022              	.LBE46:
 2023              	.LBE45:
 812:lvgl/lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2024              		.loc 1 812 21 is_stmt 1 view .LVU556
 812:lvgl/lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2025              		.loc 1 812 23 is_stmt 0 view .LVU557
 2026 0536 15F48063 		ands	r3, r5, #1024
 2027 053a 0B93     		str	r3, [sp, #44]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 58


 2028 053c 02D0     		beq	.L140
 813:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2029              		.loc 1 813 25 is_stmt 1 view .LVU558
 813:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2030              		.loc 1 813 27 is_stmt 0 view .LVU559
 2031 053e D045     		cmp	r8, r10
 2032 0540 28BF     		it	cs
 2033 0542 D046     		movcs	r8, r10
 2034              	.LVL198:
 2035              	.L140:
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2036              		.loc 1 815 21 is_stmt 1 view .LVU560
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2037              		.loc 1 815 23 is_stmt 0 view .LVU561
 2038 0544 15F00203 		ands	r3, r5, #2
 2039 0548 0C93     		str	r3, [sp, #48]
 2040 054a 06D0     		beq	.L186
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2041              		.loc 1 815 23 view .LVU562
 2042 054c 2246     		mov	r2, r4
 2043 054e 5446     		mov	r4, r10
 2044              	.LVL199:
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2045              		.loc 1 815 23 view .LVU563
 2046 0550 B246     		mov	r10, r6
 2047              	.LVL200:
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2048              		.loc 1 815 23 view .LVU564
 2049 0552 0B9E     		ldr	r6, [sp, #44]
 2050              	.LVL201:
 815:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2051              		.loc 1 815 23 view .LVU565
 2052 0554 1DE0     		b	.L144
 2053              	.LVL202:
 2054              	.L135:
 810:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 2055              		.loc 1 810 38 view .LVU566
 2056 0556 5346     		mov	r3, r10
 2057 0558 E0E7     		b	.L136
 2058              	.LVL203:
 2059              	.L186:
 810:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 2060              		.loc 1 810 38 view .LVU567
 2061 055a 2246     		mov	r2, r4
 2062 055c 0A9C     		ldr	r4, [sp, #40]
 2063              	.LVL204:
 810:lvgl/lvgl/src/misc/lv_printf.c ****                     // pre padding
 2064              		.loc 1 810 38 view .LVU568
 2065 055e 4346     		mov	r3, r8
 2066 0560 07E0     		b	.L141
 2067              	.LVL205:
 2068              	.L143:
 817:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 2069              		.loc 1 817 29 is_stmt 1 view .LVU569
 2070 0562 02F10108 		add	r8, r2, #1
 2071              	.LVL206:
 817:lvgl/lvgl/src/misc/lv_printf.c ****                         }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 59


 2072              		.loc 1 817 29 is_stmt 0 view .LVU570
 2073 0566 3346     		mov	r3, r6
 2074 0568 5946     		mov	r1, fp
 2075 056a 2020     		movs	r0, #32
 2076 056c B847     		blx	r7
 2077              	.LVL207:
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2078              		.loc 1 816 32 view .LVU571
 2079 056e 2B46     		mov	r3, r5
 817:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 2080              		.loc 1 817 29 view .LVU572
 2081 0570 4246     		mov	r2, r8
 2082              	.LVL208:
 2083              	.L141:
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2084              		.loc 1 816 30 is_stmt 1 view .LVU573
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2085              		.loc 1 816 32 is_stmt 0 view .LVU574
 2086 0572 5D1C     		adds	r5, r3, #1
 2087              	.LVL209:
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2088              		.loc 1 816 30 view .LVU575
 2089 0574 9C42     		cmp	r4, r3
 2090 0576 F4D8     		bhi	.L143
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2091              		.loc 1 816 32 view .LVU576
 2092 0578 A846     		mov	r8, r5
 2093 057a 5446     		mov	r4, r10
 2094 057c B246     		mov	r10, r6
 2095              	.LVL210:
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2096              		.loc 1 816 32 view .LVU577
 2097 057e 0B9E     		ldr	r6, [sp, #44]
 2098              	.LVL211:
 816:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2099              		.loc 1 816 32 view .LVU578
 2100 0580 07E0     		b	.L144
 2101              	.LVL212:
 2102              	.L164:
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2103              		.loc 1 821 80 view .LVU579
 2104 0582 1C46     		mov	r4, r3
 2105              	.LVL213:
 2106              	.L146:
 822:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2107              		.loc 1 822 25 is_stmt 1 view .LVU580
 822:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2108              		.loc 1 822 32 is_stmt 0 view .LVU581
 2109 0584 09F10109 		add	r9, r9, #1
 2110              	.LVL214:
 822:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2111              		.loc 1 822 25 view .LVU582
 2112 0588 551C     		adds	r5, r2, #1
 2113              	.LVL215:
 822:lvgl/lvgl/src/misc/lv_printf.c ****                     }
 2114              		.loc 1 822 25 view .LVU583
 2115 058a 5346     		mov	r3, r10
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 60


 2116 058c 5946     		mov	r1, fp
 2117 058e B847     		blx	r7
 2118              	.LVL216:
 2119 0590 2A46     		mov	r2, r5
 2120              	.LVL217:
 2121              	.L144:
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2122              		.loc 1 821 26 is_stmt 1 view .LVU584
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2123              		.loc 1 821 28 is_stmt 0 view .LVU585
 2124 0592 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2125              		.loc 1 821 26 view .LVU586
 2126 0596 20B1     		cbz	r0, .L145
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2127              		.loc 1 821 37 discriminator 1 view .LVU587
 2128 0598 002E     		cmp	r6, #0
 2129 059a F3D0     		beq	.L146
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2130              		.loc 1 821 80 discriminator 2 view .LVU588
 2131 059c 631E     		subs	r3, r4, #1
 2132              	.LVL218:
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2133              		.loc 1 821 68 discriminator 2 view .LVU589
 2134 059e 002C     		cmp	r4, #0
 2135 05a0 EFD1     		bne	.L164
 2136              	.LVL219:
 2137              	.L145:
 821:lvgl/lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2138              		.loc 1 821 68 discriminator 2 view .LVU590
 2139 05a2 1446     		mov	r4, r2
 2140 05a4 5646     		mov	r6, r10
 825:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2141              		.loc 1 825 21 is_stmt 1 view .LVU591
 825:lvgl/lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2142              		.loc 1 825 23 is_stmt 0 view .LVU592
 2143 05a6 0C9B     		ldr	r3, [sp, #48]
 2144 05a8 1BB9     		cbnz	r3, .L187
 2145              	.LVL220:
 2146              	.L148:
 830:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 2147              		.loc 1 830 21 is_stmt 1 view .LVU593
 830:lvgl/lvgl/src/misc/lv_printf.c ****                     break;
 2148              		.loc 1 830 27 is_stmt 0 view .LVU594
 2149 05aa 0D9B     		ldr	r3, [sp, #52]
 2150 05ac 0133     		adds	r3, r3, #1
 2151 05ae 0D93     		str	r3, [sp, #52]
 831:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 2152              		.loc 1 831 21 is_stmt 1 view .LVU595
 2153 05b0 31E5     		b	.L150
 2154              	.LVL221:
 2155              	.L187:
 831:lvgl/lvgl/src/misc/lv_printf.c ****                 }
 2156              		.loc 1 831 21 is_stmt 0 view .LVU596
 2157 05b2 DDF82890 		ldr	r9, [sp, #40]
 2158              	.LVL222:
 831:lvgl/lvgl/src/misc/lv_printf.c ****                 }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 61


 2159              		.loc 1 831 21 view .LVU597
 2160 05b6 06E0     		b	.L147
 2161              	.LVL223:
 2162              	.L149:
 827:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 2163              		.loc 1 827 29 is_stmt 1 view .LVU598
 2164 05b8 551C     		adds	r5, r2, #1
 2165              	.LVL224:
 827:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 2166              		.loc 1 827 29 is_stmt 0 view .LVU599
 2167 05ba 3346     		mov	r3, r6
 2168 05bc 5946     		mov	r1, fp
 2169 05be 2020     		movs	r0, #32
 2170 05c0 B847     		blx	r7
 2171              	.LVL225:
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2172              		.loc 1 826 32 view .LVU600
 2173 05c2 A046     		mov	r8, r4
 827:lvgl/lvgl/src/misc/lv_printf.c ****                         }
 2174              		.loc 1 827 29 view .LVU601
 2175 05c4 2A46     		mov	r2, r5
 2176              	.LVL226:
 2177              	.L147:
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2178              		.loc 1 826 30 is_stmt 1 view .LVU602
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2179              		.loc 1 826 32 is_stmt 0 view .LVU603
 2180 05c6 08F10104 		add	r4, r8, #1
 2181              	.LVL227:
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2182              		.loc 1 826 30 view .LVU604
 2183 05ca C145     		cmp	r9, r8
 2184 05cc F4D8     		bhi	.L149
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2185              		.loc 1 826 30 view .LVU605
 2186 05ce 1446     		mov	r4, r2
 2187              	.LVL228:
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2188              		.loc 1 826 30 view .LVU606
 2189 05d0 EBE7     		b	.L148
 2190              	.LVL229:
 2191              	.L107:
 826:lvgl/lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2192              		.loc 1 826 30 view .LVU607
 2193              	.LBE44:
 2194              		.loc 1 835 17 is_stmt 1 view .LVU608
 2195 05d2 651C     		adds	r5, r4, #1
 2196              	.LVL230:
 2197              		.loc 1 835 17 is_stmt 0 view .LVU609
 2198 05d4 3346     		mov	r3, r6
 2199 05d6 2246     		mov	r2, r4
 2200 05d8 5946     		mov	r1, fp
 2201 05da 2520     		movs	r0, #37
 2202 05dc B847     		blx	r7
 2203              	.LVL231:
 836:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 2204              		.loc 1 836 17 is_stmt 1 view .LVU610
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 62


 2205              		.loc 1 836 23 is_stmt 0 view .LVU611
 2206 05de 0D9B     		ldr	r3, [sp, #52]
 2207 05e0 0133     		adds	r3, r3, #1
 2208 05e2 0D93     		str	r3, [sp, #52]
 837:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 2209              		.loc 1 837 17 is_stmt 1 view .LVU612
 835:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 2210              		.loc 1 835 17 is_stmt 0 view .LVU613
 2211 05e4 2C46     		mov	r4, r5
 2212              		.loc 1 837 17 view .LVU614
 2213 05e6 16E5     		b	.L150
 2214              	.LVL232:
 2215              	.L102:
 838:lvgl/lvgl/src/misc/lv_printf.c **** 
 839:lvgl/lvgl/src/misc/lv_printf.c ****             default :
 840:lvgl/lvgl/src/misc/lv_printf.c ****                 out(*format, buffer, idx++, maxlen);
 2216              		.loc 1 840 17 is_stmt 1 view .LVU615
 2217 05e8 651C     		adds	r5, r4, #1
 2218              	.LVL233:
 2219              		.loc 1 840 17 is_stmt 0 view .LVU616
 2220 05ea 3346     		mov	r3, r6
 2221 05ec 2246     		mov	r2, r4
 2222 05ee 5946     		mov	r1, fp
 2223 05f0 B847     		blx	r7
 2224              	.LVL234:
 841:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 2225              		.loc 1 841 17 is_stmt 1 view .LVU617
 2226              		.loc 1 841 23 is_stmt 0 view .LVU618
 2227 05f2 0D9B     		ldr	r3, [sp, #52]
 2228 05f4 0133     		adds	r3, r3, #1
 2229 05f6 0D93     		str	r3, [sp, #52]
 842:lvgl/lvgl/src/misc/lv_printf.c ****                 break;
 2230              		.loc 1 842 17 is_stmt 1 view .LVU619
 840:lvgl/lvgl/src/misc/lv_printf.c ****                 format++;
 2231              		.loc 1 840 17 is_stmt 0 view .LVU620
 2232 05f8 2C46     		mov	r4, r5
 2233              		.loc 1 842 17 view .LVU621
 2234 05fa 0CE5     		b	.L150
 2235              	.LVL235:
 2236              	.L169:
 558:lvgl/lvgl/src/misc/lv_printf.c ****     }
 2237              		.loc 1 558 13 view .LVU622
 2238 05fc 074F     		ldr	r7, .L188
 2239 05fe 09E5     		b	.L75
 2240              	.LVL236:
 2241              	.L170:
 843:lvgl/lvgl/src/misc/lv_printf.c ****         }
 844:lvgl/lvgl/src/misc/lv_printf.c ****     }
 845:lvgl/lvgl/src/misc/lv_printf.c **** 
 846:lvgl/lvgl/src/misc/lv_printf.c ****     // termination
 847:lvgl/lvgl/src/misc/lv_printf.c ****     out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 2242              		.loc 1 847 5 is_stmt 1 view .LVU623
 2243 0600 B442     		cmp	r4, r6
 2244 0602 08D3     		bcc	.L165
 2245              		.loc 1 847 5 is_stmt 0 discriminator 1 view .LVU624
 2246 0604 721E     		subs	r2, r6, #1
 2247              	.L152:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 63


 2248              		.loc 1 847 5 discriminator 4 view .LVU625
 2249 0606 3346     		mov	r3, r6
 2250 0608 5946     		mov	r1, fp
 2251 060a 0020     		movs	r0, #0
 2252 060c B847     		blx	r7
 2253              	.LVL237:
 848:lvgl/lvgl/src/misc/lv_printf.c **** 
 849:lvgl/lvgl/src/misc/lv_printf.c ****     // return written chars without terminating \0
 850:lvgl/lvgl/src/misc/lv_printf.c ****     return (int)idx;
 2254              		.loc 1 850 5 is_stmt 1 discriminator 4 view .LVU626
 851:lvgl/lvgl/src/misc/lv_printf.c **** }
 2255              		.loc 1 851 1 is_stmt 0 discriminator 4 view .LVU627
 2256 060e 2046     		mov	r0, r4
 2257 0610 0FB0     		add	sp, sp, #60
 2258              	.LCFI16:
 2259              		.cfi_remember_state
 2260              		.cfi_def_cfa_offset 36
 2261              		@ sp needed
 2262 0612 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2263              	.LVL238:
 2264              	.L165:
 2265              	.LCFI17:
 2266              		.cfi_restore_state
 847:lvgl/lvgl/src/misc/lv_printf.c **** 
 2267              		.loc 1 847 5 view .LVU628
 2268 0616 2246     		mov	r2, r4
 2269 0618 F5E7     		b	.L152
 2270              	.L189:
 2271 061a 00BF     		.align	2
 2272              	.L188:
 2273 061c 00000000 		.word	_out_null
 2274              		.cfi_endproc
 2275              	.LFE9:
 2277              		.section	.text.lv_snprintf,"ax",%progbits
 2278              		.align	1
 2279              		.global	lv_snprintf
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv4-sp-d16
 2285              	lv_snprintf:
 2286              	.LVL239:
 2287              	.LFB10:
 852:lvgl/lvgl/src/misc/lv_printf.c **** 
 853:lvgl/lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
 854:lvgl/lvgl/src/misc/lv_printf.c **** 
 855:lvgl/lvgl/src/misc/lv_printf.c **** int lv_snprintf(char * buffer, size_t count, const char * format, ...)
 856:lvgl/lvgl/src/misc/lv_printf.c **** {
 2288              		.loc 1 856 1 is_stmt 1 view -0
 2289              		.cfi_startproc
 2290              		@ args = 4, pretend = 8, frame = 8
 2291              		@ frame_needed = 0, uses_anonymous_args = 1
 2292              		.loc 1 856 1 is_stmt 0 view .LVU630
 2293 0000 0CB4     		push	{r2, r3}
 2294              	.LCFI18:
 2295              		.cfi_def_cfa_offset 8
 2296              		.cfi_offset 2, -8
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 64


 2297              		.cfi_offset 3, -4
 2298 0002 10B5     		push	{r4, lr}
 2299              	.LCFI19:
 2300              		.cfi_def_cfa_offset 16
 2301              		.cfi_offset 4, -16
 2302              		.cfi_offset 14, -12
 2303 0004 84B0     		sub	sp, sp, #16
 2304              	.LCFI20:
 2305              		.cfi_def_cfa_offset 32
 2306 0006 0A46     		mov	r2, r1
 2307 0008 06AC     		add	r4, sp, #24
 2308 000a 54F8043B 		ldr	r3, [r4], #4
 857:lvgl/lvgl/src/misc/lv_printf.c ****     va_list va;
 2309              		.loc 1 857 5 is_stmt 1 view .LVU631
 858:lvgl/lvgl/src/misc/lv_printf.c ****     va_start(va, format);
 2310              		.loc 1 858 5 view .LVU632
 2311 000e 0394     		str	r4, [sp, #12]
 859:lvgl/lvgl/src/misc/lv_printf.c ****     const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 2312              		.loc 1 859 5 view .LVU633
 2313              		.loc 1 859 21 is_stmt 0 view .LVU634
 2314 0010 0094     		str	r4, [sp]
 2315 0012 0146     		mov	r1, r0
 2316              	.LVL240:
 2317              		.loc 1 859 21 view .LVU635
 2318 0014 0348     		ldr	r0, .L192
 2319              	.LVL241:
 2320              		.loc 1 859 21 view .LVU636
 2321 0016 FFF7FEFF 		bl	_vsnprintf
 2322              	.LVL242:
 860:lvgl/lvgl/src/misc/lv_printf.c ****     va_end(va);
 2323              		.loc 1 860 5 is_stmt 1 view .LVU637
 861:lvgl/lvgl/src/misc/lv_printf.c ****     return ret;
 2324              		.loc 1 861 5 view .LVU638
 862:lvgl/lvgl/src/misc/lv_printf.c **** }
 2325              		.loc 1 862 1 is_stmt 0 view .LVU639
 2326 001a 04B0     		add	sp, sp, #16
 2327              	.LCFI21:
 2328              		.cfi_def_cfa_offset 16
 2329              		@ sp needed
 2330 001c BDE81040 		pop	{r4, lr}
 2331              	.LCFI22:
 2332              		.cfi_restore 14
 2333              		.cfi_restore 4
 2334              		.cfi_def_cfa_offset 8
 2335 0020 02B0     		add	sp, sp, #8
 2336              	.LCFI23:
 2337              		.cfi_restore 3
 2338              		.cfi_restore 2
 2339              		.cfi_def_cfa_offset 0
 2340 0022 7047     		bx	lr
 2341              	.L193:
 2342              		.align	2
 2343              	.L192:
 2344 0024 00000000 		.word	_out_buffer
 2345              		.cfi_endproc
 2346              	.LFE10:
 2348              		.section	.text.lv_vsnprintf,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 65


 2349              		.align	1
 2350              		.global	lv_vsnprintf
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2354              		.fpu fpv4-sp-d16
 2356              	lv_vsnprintf:
 2357              	.LVL243:
 2358              	.LFB11:
 863:lvgl/lvgl/src/misc/lv_printf.c **** 
 864:lvgl/lvgl/src/misc/lv_printf.c **** int lv_vsnprintf(char * buffer, size_t count, const char * format, va_list va)
 865:lvgl/lvgl/src/misc/lv_printf.c **** {
 2359              		.loc 1 865 1 is_stmt 1 view -0
 2360              		.cfi_startproc
 2361              		@ args = 0, pretend = 0, frame = 0
 2362              		@ frame_needed = 0, uses_anonymous_args = 0
 2363              		.loc 1 865 1 is_stmt 0 view .LVU641
 2364 0000 00B5     		push	{lr}
 2365              	.LCFI24:
 2366              		.cfi_def_cfa_offset 4
 2367              		.cfi_offset 14, -4
 2368 0002 83B0     		sub	sp, sp, #12
 2369              	.LCFI25:
 2370              		.cfi_def_cfa_offset 16
 866:lvgl/lvgl/src/misc/lv_printf.c ****     return _vsnprintf(_out_buffer, buffer, count, format, va);
 2371              		.loc 1 866 5 is_stmt 1 view .LVU642
 2372              		.loc 1 866 12 is_stmt 0 view .LVU643
 2373 0004 0093     		str	r3, [sp]
 2374 0006 1346     		mov	r3, r2
 2375              	.LVL244:
 2376              		.loc 1 866 12 view .LVU644
 2377 0008 0A46     		mov	r2, r1
 2378              	.LVL245:
 2379              		.loc 1 866 12 view .LVU645
 2380 000a 0146     		mov	r1, r0
 2381              	.LVL246:
 2382              		.loc 1 866 12 view .LVU646
 2383 000c 0248     		ldr	r0, .L196
 2384              	.LVL247:
 2385              		.loc 1 866 12 view .LVU647
 2386 000e FFF7FEFF 		bl	_vsnprintf
 2387              	.LVL248:
 867:lvgl/lvgl/src/misc/lv_printf.c **** }
 2388              		.loc 1 867 1 view .LVU648
 2389 0012 03B0     		add	sp, sp, #12
 2390              	.LCFI26:
 2391              		.cfi_def_cfa_offset 4
 2392              		@ sp needed
 2393 0014 5DF804FB 		ldr	pc, [sp], #4
 2394              	.L197:
 2395              		.align	2
 2396              	.L196:
 2397 0018 00000000 		.word	_out_buffer
 2398              		.cfi_endproc
 2399              	.LFE11:
 2401              		.text
 2402              	.Letext0:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 66


 2403              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2404              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2405              		.file 4 "<built-in>"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 lv_printf.c
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:18     .text._out_buffer:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:25     .text._out_buffer:00000000 _out_buffer
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:48     .text._out_null:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:54     .text._out_null:00000000 _out_null
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:72     .text._atoi:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:78     .text._atoi:00000000 _atoi
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:141    .text._out_rev:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:147    .text._out_rev:00000000 _out_rev
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:281    .text._ntoa_format:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:287    .text._ntoa_format:00000000 _ntoa_format
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:569    .text._ntoa_long:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:575    .text._ntoa_long:00000000 _ntoa_long
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:724    .text._ntoa_long_long:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:730    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:900    .text._vsnprintf:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:906    .text._vsnprintf:00000000 _vsnprintf
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1037   .text._vsnprintf:0000006e $d
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1057   .text._vsnprintf:00000094 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1084   .text._vsnprintf:000000b0 $d
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1101   .text._vsnprintf:000000f4 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1354   .text._vsnprintf:000001d4 $d
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:1438   .text._vsnprintf:0000027c $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2273   .text._vsnprintf:0000061c $d
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2278   .text.lv_snprintf:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2285   .text.lv_snprintf:00000000 lv_snprintf
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2344   .text.lv_snprintf:00000024 $d
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2349   .text.lv_vsnprintf:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2356   .text.lv_vsnprintf:00000000 lv_vsnprintf
C:\Users\gx\AppData\Local\Temp\ccgPrfGs.s:2397   .text.lv_vsnprintf:00000018 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
