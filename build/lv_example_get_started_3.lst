ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_get_started_3.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.slider_event_cb.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 256400   		.ascii	"%d\000"
  21              		.section	.text.slider_event_cb,"ax",%progbits
  22              		.align	1
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv4-sp-d16
  29              	slider_event_cb:
  30              	.LVL0:
  31              	.LFB189:
  32              		.file 1 "lvgl/lvgl/examples/get_started/lv_example_get_started_3.c"
   1:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** #include "../lv_examples.h"
   2:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** #if LV_BUILD_EXAMPLES && LV_USE_SLIDER
   3:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** 
   4:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** static lv_obj_t * label;
   5:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** 
   6:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** static void slider_event_cb(lv_event_t * e)
   7:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** {
  33              		.loc 1 7 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 7 1 is_stmt 0 view .LVU1
  38 0000 70B5     		push	{r4, r5, r6, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
  45 0002 82B0     		sub	sp, sp, #8
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
   8:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_t * slider = lv_event_get_target(e);
  48              		.loc 1 8 5 is_stmt 1 view .LVU2
  49              		.loc 1 8 25 is_stmt 0 view .LVU3
  50 0004 FFF7FEFF 		bl	lv_event_get_target
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 2


  51              	.LVL1:
  52              		.loc 1 8 25 view .LVU4
  53 0008 0446     		mov	r4, r0
  54              	.LVL2:
   9:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** 
  10:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     /*Refresh the text*/
  11:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_label_set_text_fmt(label, "%d", lv_slider_get_value(slider));
  55              		.loc 1 11 5 is_stmt 1 view .LVU5
  56 000a 0A4D     		ldr	r5, .L3
  57 000c 2E68     		ldr	r6, [r5]
  58              	.LVL3:
  59              	.LBB10:
  60              	.LBI10:
  61              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @file lv_slider.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #ifndef LV_SLIDER_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #define LV_SLIDER_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #if LV_USE_SLIDER != 0
  19:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*Testing of dependencies*/
  21:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #if LV_USE_BAR == 0
  22:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "../core/lv_obj.h"
  26:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "lv_bar.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*********************
  29:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      DEFINES
  30:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *********************/
  31:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**********************
  33:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      TYPEDEFS
  34:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  **********************/
  35:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  36:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** enum {
  37:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** };
  41:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  43:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef struct {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 3


  44:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_area_t left_knob_area;
  46:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_area_t right_knob_area;
  47:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }lv_slider_t;
  51:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  54:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  55:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  58:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef enum {
  59:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }lv_slider_draw_part_type_t;
  62:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  63:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**********************
  64:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * GLOBAL PROTOTYPES
  65:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  **********************/
  66:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Create a slider objects
  69:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @return          pointer to the created slider
  71:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*=====================
  75:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Setter functions
  76:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *====================*/
  77:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  79:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set a new value on the slider
  80:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
  81:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param value     the new value
  82:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
  88:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set a new value for the left knob of a slider
  91:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
  92:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param value     new value
  93:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  95:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  97:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
  99:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 100:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 4


 101:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to the slider object
 103:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param min       minimum value
 104:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param max       maximum value
 105:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 106:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 107:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 108:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_range(obj, min, max);
 109:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 110:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
 112:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set the mode of slider.
 113:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
 114:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 115:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 116:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 117:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 118:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 119:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 120:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*=====================
 122:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Getter functions
 123:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *====================*/
 124:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 125:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
 126:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Get the value of the main knob of a slider
 127:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
 128:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @return          the value of the main knob of the slider
 129:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 130:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  62              		.loc 2 130 23 view .LVU6
  63              	.LBB11:
 131:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 132:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     return lv_bar_get_value(obj);
  64              		.loc 2 132 5 view .LVU7
  65              		.loc 2 132 12 is_stmt 0 view .LVU8
  66 000e FFF7FEFF 		bl	lv_bar_get_value
  67              	.LVL4:
  68              		.loc 2 132 12 view .LVU9
  69 0012 0246     		mov	r2, r0
  70              	.LVL5:
  71              		.loc 2 132 12 view .LVU10
  72              	.LBE11:
  73              	.LBE10:
  74              		.loc 1 11 5 view .LVU11
  75 0014 0849     		ldr	r1, .L3+4
  76 0016 3046     		mov	r0, r6
  77 0018 FFF7FEFF 		bl	lv_label_set_text_fmt
  78              	.LVL6:
  12:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_align_to(label, slider, LV_ALIGN_OUT_TOP_MID, 0, -15);    /*Align top of the slider*/
  79              		.loc 1 12 5 is_stmt 1 view .LVU12
  80 001c 6FF00E03 		mvn	r3, #14
  81 0020 0093     		str	r3, [sp]
  82 0022 0023     		movs	r3, #0
  83 0024 0B22     		movs	r2, #11
  84 0026 2146     		mov	r1, r4
  85 0028 2868     		ldr	r0, [r5]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 5


  86 002a FFF7FEFF 		bl	lv_obj_align_to
  87              	.LVL7:
  13:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** }
  88              		.loc 1 13 1 is_stmt 0 view .LVU13
  89 002e 02B0     		add	sp, sp, #8
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 16
  92              		@ sp needed
  93 0030 70BD     		pop	{r4, r5, r6, pc}
  94              	.LVL8:
  95              	.L4:
  96              		.loc 1 13 1 view .LVU14
  97 0032 00BF     		.align	2
  98              	.L3:
  99 0034 00000000 		.word	.LANCHOR0
 100 0038 00000000 		.word	.LC0
 101              		.cfi_endproc
 102              	.LFE189:
 104              		.section	.rodata.lv_example_get_started_3.str1.4,"aMS",%progbits,1
 105              		.align	2
 106              	.LC1:
 107 0000 3000     		.ascii	"0\000"
 108              		.section	.text.lv_example_get_started_3,"ax",%progbits
 109              		.align	1
 110              		.global	lv_example_get_started_3
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	lv_example_get_started_3:
 117              	.LFB190:
  14:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** 
  15:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** /**
  16:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****  * Create a slider and write its value on a label.
  17:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****  */
  18:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** void lv_example_get_started_3(void)
  19:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** {
 118              		.loc 1 19 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 30B5     		push	{r4, r5, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 12
 125              		.cfi_offset 4, -12
 126              		.cfi_offset 5, -8
 127              		.cfi_offset 14, -4
 128 0002 83B0     		sub	sp, sp, #12
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 24
  20:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     /*Create a slider in the center of the display*/
  21:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_t * slider = lv_slider_create(lv_scr_act());
 131              		.loc 1 21 5 view .LVU16
 132              	.LBB12:
 133              	.LBI12:
 134              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 6


   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 7


  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 8


 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 135              		.loc 3 163 26 view .LVU17
 136              	.LBB13:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 137              		.loc 3 165 5 view .LVU18
 138              		.loc 3 165 12 is_stmt 0 view .LVU19
 139 0004 FFF7FEFF 		bl	lv_disp_get_default
 140              	.LVL9:
 141 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 9


 142              	.LVL10:
 143              	.LBE13:
 144              	.LBE12:
 145              		.loc 1 21 25 view .LVU20
 146 000c FFF7FEFF 		bl	lv_slider_create
 147              	.LVL11:
 148 0010 0446     		mov	r4, r0
 149              	.LVL12:
  22:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_set_width(slider, 200);                          /*Set the width*/
 150              		.loc 1 22 5 is_stmt 1 view .LVU21
 151 0012 C821     		movs	r1, #200
 152 0014 FFF7FEFF 		bl	lv_obj_set_width
 153              	.LVL13:
  23:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_center(slider);                                  /*Align to the center of the parent (sc
 154              		.loc 1 23 5 view .LVU22
 155              	.LBB14:
 156              	.LBI14:
 157              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 10


  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 11


  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 12


 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 158              		.loc 4 186 20 view .LVU23
 159              	.LBB15:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 160              		.loc 4 188 5 view .LVU24
 161 0018 0023     		movs	r3, #0
 162 001a 1A46     		mov	r2, r3
 163 001c 0921     		movs	r1, #9
 164 001e 2046     		mov	r0, r4
 165 0020 FFF7FEFF 		bl	lv_obj_align
 166              	.LVL14:
 167              		.loc 4 188 5 is_stmt 0 view .LVU25
 168              	.LBE15:
 169              	.LBE14:
  24:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_add_event_cb(slider, slider_event_cb, LV_EVENT_VALUE_CHANGED, NULL);     /*Assign an eve
 170              		.loc 1 24 5 is_stmt 1 view .LVU26
 171 0024 0023     		movs	r3, #0
 172 0026 1C22     		movs	r2, #28
 173 0028 0C49     		ldr	r1, .L7
 174 002a 2046     		mov	r0, r4
 175 002c FFF7FEFF 		bl	lv_obj_add_event_cb
 176              	.LVL15:
  25:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** 
  26:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     /*Create a label below the slider*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 13


  27:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     label = lv_label_create(lv_scr_act());
 177              		.loc 1 27 5 view .LVU27
 178              	.LBB16:
 179              	.LBI16:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 180              		.loc 3 163 26 view .LVU28
 181              	.LBB17:
 182              		.loc 3 165 5 view .LVU29
 183              		.loc 3 165 12 is_stmt 0 view .LVU30
 184 0030 FFF7FEFF 		bl	lv_disp_get_default
 185              	.LVL16:
 186 0034 FFF7FEFF 		bl	lv_disp_get_scr_act
 187              	.LVL17:
 188              	.LBE17:
 189              	.LBE16:
 190              		.loc 1 27 13 view .LVU31
 191 0038 FFF7FEFF 		bl	lv_label_create
 192              	.LVL18:
 193              		.loc 1 27 11 view .LVU32
 194 003c 084D     		ldr	r5, .L7+4
 195 003e 2860     		str	r0, [r5]
  28:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_label_set_text(label, "0");
 196              		.loc 1 28 5 is_stmt 1 view .LVU33
 197 0040 0849     		ldr	r1, .L7+8
 198 0042 FFF7FEFF 		bl	lv_label_set_text
 199              	.LVL19:
  29:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c ****     lv_obj_align_to(label, slider, LV_ALIGN_OUT_TOP_MID, 0, -15);    /*Align top of the slider*/
 200              		.loc 1 29 5 view .LVU34
 201 0046 6FF00E03 		mvn	r3, #14
 202 004a 0093     		str	r3, [sp]
 203 004c 0023     		movs	r3, #0
 204 004e 0B22     		movs	r2, #11
 205 0050 2146     		mov	r1, r4
 206 0052 2868     		ldr	r0, [r5]
 207 0054 FFF7FEFF 		bl	lv_obj_align_to
 208              	.LVL20:
  30:lvgl/lvgl/examples/get_started/lv_example_get_started_3.c **** }
 209              		.loc 1 30 1 is_stmt 0 view .LVU35
 210 0058 03B0     		add	sp, sp, #12
 211              	.LCFI5:
 212              		.cfi_def_cfa_offset 12
 213              		@ sp needed
 214 005a 30BD     		pop	{r4, r5, pc}
 215              	.LVL21:
 216              	.L8:
 217              		.loc 1 30 1 view .LVU36
 218              		.align	2
 219              	.L7:
 220 005c 00000000 		.word	slider_event_cb
 221 0060 00000000 		.word	.LANCHOR0
 222 0064 00000000 		.word	.LC1
 223              		.cfi_endproc
 224              	.LFE190:
 226              		.section	.bss.label,"aw",%nobits
 227              		.align	2
 228              		.set	.LANCHOR0,. + 0
 231              	label:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 14


 232 0000 00000000 		.space	4
 233              		.text
 234              	.Letext0:
 235              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 236              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 237              		.file 7 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 238              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 239              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 240              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 241              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 242              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 243              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 244              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 245              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 246              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 247              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 248              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 249              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 250              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 251              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 252              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 253              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 254              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 255              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 256              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 257              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 258              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 259              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 260              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 261              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 262              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 263              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 264              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 265              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 266              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 267              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 268              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 269              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 270              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 271              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 272              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 273              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 274              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 275              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 276              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 277              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 278              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 279              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 280              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 281              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 282              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 283              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 284              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 285              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 286              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 287              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 288              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 15


ARM GAS  C:\Users\gx\AppData\Local\Temp\ccr9brUw.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_get_started_3.c
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:18     .rodata.slider_event_cb.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:22     .text.slider_event_cb:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:29     .text.slider_event_cb:00000000 slider_event_cb
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:99     .text.slider_event_cb:00000034 $d
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:105    .rodata.lv_example_get_started_3.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:109    .text.lv_example_get_started_3:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:116    .text.lv_example_get_started_3:00000000 lv_example_get_started_3
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:220    .text.lv_example_get_started_3:0000005c $d
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:227    .bss.label:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccr9brUw.s:231    .bss.label:00000000 label

UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_label_set_text_fmt
lv_obj_align_to
lv_disp_get_default
lv_disp_get_scr_act
lv_slider_create
lv_obj_set_width
lv_obj_align
lv_obj_add_event_cb
lv_label_create
lv_label_set_text
