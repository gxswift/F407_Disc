ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_switch_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.event_handler.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4F666600 		.ascii	"Off\000"
  21              		.align	2
  22              	.LC1:
  23 0004 4F6E00   		.ascii	"On\000"
  24 0007 00       		.align	2
  25              	.LC2:
  26 0008 6C76676C 		.ascii	"lvgl/lvgl/examples/widgets/switch/lv_example_switch"
  26      2F6C7667 
  26      6C2F6578 
  26      616D706C 
  26      65732F77 
  27 003b 5F312E63 		.ascii	"_1.c\000"
  27      00
  28              		.align	2
  29              	.LC3:
  30 0040 53746174 		.ascii	"State: %s\012\000"
  30      653A2025 
  30      730A00
  31              		.section	.text.event_handler,"ax",%progbits
  32              		.align	1
  33              		.arch armv7e-m
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  37              		.fpu fpv4-sp-d16
  39              	event_handler:
  40              	.LVL0:
  41              	.LFB189:
  42              		.file 1 "lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c"
   1:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** #if LV_USE_SWITCH && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
   4:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** static void event_handler(lv_event_t * e)
   5:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** {
  43              		.loc 1 5 1 view -0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 2


  47              		.loc 1 5 1 is_stmt 0 view .LVU1
  48 0000 30B5     		push	{r4, r5, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 12
  51              		.cfi_offset 4, -12
  52              		.cfi_offset 5, -8
  53              		.cfi_offset 14, -4
  54 0002 83B0     		sub	sp, sp, #12
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 24
  57 0004 0546     		mov	r5, r0
   6:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_event_code_t code = lv_event_get_code(e);
  58              		.loc 1 6 5 is_stmt 1 view .LVU2
  59              		.loc 1 6 28 is_stmt 0 view .LVU3
  60 0006 FFF7FEFF 		bl	lv_event_get_code
  61              	.LVL1:
  62              		.loc 1 6 28 view .LVU4
  63 000a 0446     		mov	r4, r0
  64              	.LVL2:
   7:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_t * obj = lv_event_get_target(e);
  65              		.loc 1 7 5 is_stmt 1 view .LVU5
  66              		.loc 1 7 22 is_stmt 0 view .LVU6
  67 000c 2846     		mov	r0, r5
  68 000e FFF7FEFF 		bl	lv_event_get_target
  69              	.LVL3:
   8:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
  70              		.loc 1 8 5 is_stmt 1 view .LVU7
  71              		.loc 1 8 7 is_stmt 0 view .LVU8
  72 0012 1C2C     		cmp	r4, #28
  73 0014 01D0     		beq	.L6
  74              	.LVL4:
  75              	.L1:
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
  10:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     }
  11:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** }
  76              		.loc 1 11 1 view .LVU9
  77 0016 03B0     		add	sp, sp, #12
  78              	.LCFI2:
  79              		.cfi_remember_state
  80              		.cfi_def_cfa_offset 12
  81              		@ sp needed
  82 0018 30BD     		pop	{r4, r5, pc}
  83              	.LVL5:
  84              	.L6:
  85              	.LCFI3:
  86              		.cfi_restore_state
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
  87              		.loc 1 9 9 is_stmt 1 view .LVU10
  88 001a 0121     		movs	r1, #1
  89 001c FFF7FEFF 		bl	lv_obj_has_state
  90              	.LVL6:
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
  91              		.loc 1 9 9 is_stmt 0 view .LVU11
  92 0020 50B1     		cbz	r0, .L4
  93 0022 064B     		ldr	r3, .L7
  94              	.L3:
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 3


  95              		.loc 1 9 9 discriminator 4 view .LVU12
  96 0024 0193     		str	r3, [sp, #4]
  97 0026 064B     		ldr	r3, .L7+4
  98 0028 0093     		str	r3, [sp]
  99 002a 064B     		ldr	r3, .L7+8
 100 002c 0922     		movs	r2, #9
 101 002e 0649     		ldr	r1, .L7+12
 102 0030 0420     		movs	r0, #4
 103 0032 FFF7FEFF 		bl	_lv_log_add
 104              	.LVL7:
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
 105              		.loc 1 9 91 is_stmt 1 discriminator 4 view .LVU13
 106              		.loc 1 11 1 is_stmt 0 discriminator 4 view .LVU14
 107 0036 EEE7     		b	.L1
 108              	.L4:
   9:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****         LV_LOG_USER("State: %s\n", lv_obj_has_state(obj, LV_STATE_CHECKED) ? "On" : "Off");
 109              		.loc 1 9 9 view .LVU15
 110 0038 044B     		ldr	r3, .L7+16
 111 003a F3E7     		b	.L3
 112              	.L8:
 113              		.align	2
 114              	.L7:
 115 003c 04000000 		.word	.LC1
 116 0040 40000000 		.word	.LC3
 117 0044 00000000 		.word	.LANCHOR0
 118 0048 08000000 		.word	.LC2
 119 004c 00000000 		.word	.LC0
 120              		.cfi_endproc
 121              	.LFE189:
 123              		.section	.text.lv_example_switch_1,"ax",%progbits
 124              		.align	1
 125              		.global	lv_example_switch_1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	lv_example_switch_1:
 132              	.LFB190:
  12:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  13:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** void lv_example_switch_1(void)
  14:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** {
 133              		.loc 1 14 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 38B5     		push	{r3, r4, r5, lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 3, -16
 141              		.cfi_offset 4, -12
 142              		.cfi_offset 5, -8
 143              		.cfi_offset 14, -4
  15:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_set_flex_flow(lv_scr_act(), LV_FLEX_FLOW_COLUMN);
 144              		.loc 1 15 5 view .LVU17
 145              	.LBB14:
 146              	.LBI14:
 147              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 4


   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 5


  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 6


 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 148              		.loc 2 163 26 view .LVU18
 149              	.LBB15:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 150              		.loc 2 165 5 view .LVU19
 151              		.loc 2 165 12 is_stmt 0 view .LVU20
 152 0002 FFF7FEFF 		bl	lv_disp_get_default
 153              	.LVL8:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 7


 154 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 155              	.LVL9:
 156              	.LBE15:
 157              	.LBE14:
 158              		.loc 1 15 5 view .LVU21
 159 000a 0121     		movs	r1, #1
 160 000c FFF7FEFF 		bl	lv_obj_set_flex_flow
 161              	.LVL10:
  16:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_set_flex_align(lv_scr_act(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_C
 162              		.loc 1 16 5 is_stmt 1 view .LVU22
 163              	.LBB16:
 164              	.LBI16:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165              		.loc 2 163 26 view .LVU23
 166              	.LBB17:
 167              		.loc 2 165 5 view .LVU24
 168              		.loc 2 165 12 is_stmt 0 view .LVU25
 169 0010 FFF7FEFF 		bl	lv_disp_get_default
 170              	.LVL11:
 171 0014 FFF7FEFF 		bl	lv_disp_get_scr_act
 172              	.LVL12:
 173              	.LBE17:
 174              	.LBE16:
 175              		.loc 1 16 5 view .LVU26
 176 0018 0223     		movs	r3, #2
 177 001a 1A46     		mov	r2, r3
 178 001c 1946     		mov	r1, r3
 179 001e FFF7FEFF 		bl	lv_obj_set_flex_align
 180              	.LVL13:
  17:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  18:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_t * sw;
 181              		.loc 1 18 5 is_stmt 1 view .LVU27
  19:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  20:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     sw = lv_switch_create(lv_scr_act());
 182              		.loc 1 20 5 view .LVU28
 183              	.LBB18:
 184              	.LBI18:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 185              		.loc 2 163 26 view .LVU29
 186              	.LBB19:
 187              		.loc 2 165 5 view .LVU30
 188              		.loc 2 165 12 is_stmt 0 view .LVU31
 189 0022 FFF7FEFF 		bl	lv_disp_get_default
 190              	.LVL14:
 191 0026 FFF7FEFF 		bl	lv_disp_get_scr_act
 192              	.LVL15:
 193              	.LBE19:
 194              	.LBE18:
 195              		.loc 1 20 10 view .LVU32
 196 002a FFF7FEFF 		bl	lv_switch_create
 197              	.LVL16:
  21:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_event_cb(sw, event_handler, LV_EVENT_ALL, NULL);
 198              		.loc 1 21 5 is_stmt 1 view .LVU33
 199 002e 1B4C     		ldr	r4, .L11
 200 0030 0023     		movs	r3, #0
 201 0032 1A46     		mov	r2, r3
 202 0034 2146     		mov	r1, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 8


 203 0036 FFF7FEFF 		bl	lv_obj_add_event_cb
 204              	.LVL17:
  22:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  23:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     sw = lv_switch_create(lv_scr_act());
 205              		.loc 1 23 5 view .LVU34
 206              	.LBB20:
 207              	.LBI20:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 208              		.loc 2 163 26 view .LVU35
 209              	.LBB21:
 210              		.loc 2 165 5 view .LVU36
 211              		.loc 2 165 12 is_stmt 0 view .LVU37
 212 003a FFF7FEFF 		bl	lv_disp_get_default
 213              	.LVL18:
 214 003e FFF7FEFF 		bl	lv_disp_get_scr_act
 215              	.LVL19:
 216              	.LBE21:
 217              	.LBE20:
 218              		.loc 1 23 10 view .LVU38
 219 0042 FFF7FEFF 		bl	lv_switch_create
 220              	.LVL20:
 221 0046 0546     		mov	r5, r0
 222              	.LVL21:
  24:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_state(sw, LV_STATE_CHECKED);
 223              		.loc 1 24 5 is_stmt 1 view .LVU39
 224 0048 0121     		movs	r1, #1
 225 004a FFF7FEFF 		bl	lv_obj_add_state
 226              	.LVL22:
  25:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_event_cb(sw, event_handler, LV_EVENT_ALL, NULL);
 227              		.loc 1 25 5 view .LVU40
 228 004e 0023     		movs	r3, #0
 229 0050 1A46     		mov	r2, r3
 230 0052 2146     		mov	r1, r4
 231 0054 2846     		mov	r0, r5
 232 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 233              	.LVL23:
  26:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  27:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     sw = lv_switch_create(lv_scr_act());
 234              		.loc 1 27 5 view .LVU41
 235              	.LBB22:
 236              	.LBI22:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 237              		.loc 2 163 26 view .LVU42
 238              	.LBB23:
 239              		.loc 2 165 5 view .LVU43
 240              		.loc 2 165 12 is_stmt 0 view .LVU44
 241 005a FFF7FEFF 		bl	lv_disp_get_default
 242              	.LVL24:
 243 005e FFF7FEFF 		bl	lv_disp_get_scr_act
 244              	.LVL25:
 245              	.LBE23:
 246              	.LBE22:
 247              		.loc 1 27 10 view .LVU45
 248 0062 FFF7FEFF 		bl	lv_switch_create
 249              	.LVL26:
 250 0066 0546     		mov	r5, r0
 251              	.LVL27:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 9


  28:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_state(sw, LV_STATE_DISABLED);
 252              		.loc 1 28 5 is_stmt 1 view .LVU46
 253 0068 8021     		movs	r1, #128
 254 006a FFF7FEFF 		bl	lv_obj_add_state
 255              	.LVL28:
  29:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_event_cb(sw, event_handler, LV_EVENT_ALL, NULL);
 256              		.loc 1 29 5 view .LVU47
 257 006e 0023     		movs	r3, #0
 258 0070 1A46     		mov	r2, r3
 259 0072 2146     		mov	r1, r4
 260 0074 2846     		mov	r0, r5
 261 0076 FFF7FEFF 		bl	lv_obj_add_event_cb
 262              	.LVL29:
  30:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** 
  31:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     sw = lv_switch_create(lv_scr_act());
 263              		.loc 1 31 5 view .LVU48
 264              	.LBB24:
 265              	.LBI24:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 266              		.loc 2 163 26 view .LVU49
 267              	.LBB25:
 268              		.loc 2 165 5 view .LVU50
 269              		.loc 2 165 12 is_stmt 0 view .LVU51
 270 007a FFF7FEFF 		bl	lv_disp_get_default
 271              	.LVL30:
 272 007e FFF7FEFF 		bl	lv_disp_get_scr_act
 273              	.LVL31:
 274              	.LBE25:
 275              	.LBE24:
 276              		.loc 1 31 10 view .LVU52
 277 0082 FFF7FEFF 		bl	lv_switch_create
 278              	.LVL32:
 279 0086 0546     		mov	r5, r0
 280              	.LVL33:
  32:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_state(sw, LV_STATE_CHECKED | LV_STATE_DISABLED);
 281              		.loc 1 32 5 is_stmt 1 view .LVU53
 282 0088 8121     		movs	r1, #129
 283 008a FFF7FEFF 		bl	lv_obj_add_state
 284              	.LVL34:
  33:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c ****     lv_obj_add_event_cb(sw, event_handler, LV_EVENT_ALL, NULL);
 285              		.loc 1 33 5 view .LVU54
 286 008e 0023     		movs	r3, #0
 287 0090 1A46     		mov	r2, r3
 288 0092 2146     		mov	r1, r4
 289 0094 2846     		mov	r0, r5
 290 0096 FFF7FEFF 		bl	lv_obj_add_event_cb
 291              	.LVL35:
  34:lvgl/lvgl/examples/widgets/switch/lv_example_switch_1.c **** }
 292              		.loc 1 34 1 is_stmt 0 view .LVU55
 293 009a 38BD     		pop	{r3, r4, r5, pc}
 294              	.LVL36:
 295              	.L12:
 296              		.loc 1 34 1 view .LVU56
 297              		.align	2
 298              	.L11:
 299 009c 00000000 		.word	event_handler
 300              		.cfi_endproc
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 10


 301              	.LFE190:
 303              		.section	.rodata.__func__.12315,"a"
 304              		.align	2
 305              		.set	.LANCHOR0,. + 0
 308              	__func__.12315:
 309 0000 6576656E 		.ascii	"event_handler\000"
 309      745F6861 
 309      6E646C65 
 309      7200
 310              		.text
 311              	.Letext0:
 312              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 313              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 314              		.file 5 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 315              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 316              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 317              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 318              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 319              		.file 10 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 320              		.file 11 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 321              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 322              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 323              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 324              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 325              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 326              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 327              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 328              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 329              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 330              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 331              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 332              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 333              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 334              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 335              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 336              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 337              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 338              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 339              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 340              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 341              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 342              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 343              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 344              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 345              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 346              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 347              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 348              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 349              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 350              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 351              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 352              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 353              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 354              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 355              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 356              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 357              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 11


 358              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 359              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 360              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 361              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 362              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 363              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 364              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 365              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 366              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
 367              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_log.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_switch_1.c
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:18     .rodata.event_handler.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:32     .text.event_handler:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:39     .text.event_handler:00000000 event_handler
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:115    .text.event_handler:0000003c $d
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:124    .text.lv_example_switch_1:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:131    .text.lv_example_switch_1:00000000 lv_example_switch_1
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:299    .text.lv_example_switch_1:0000009c $d
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:304    .rodata.__func__.12315:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccLMTnDr.s:308    .rodata.__func__.12315:00000000 __func__.12315

UNDEFINED SYMBOLS
lv_event_get_code
lv_event_get_target
lv_obj_has_state
_lv_log_add
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_set_flex_flow
lv_obj_set_flex_align
lv_switch_create
lv_obj_add_event_cb
lv_obj_add_state
