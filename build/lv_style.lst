ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_style.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_style_init,"ax",%progbits
  18              		.align	1
  19              		.global	lv_style_init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_style_init:
  27              	.LVL0:
  28              	.LFB51:
  29              		.file 1 "lvgl/lvgl/src/misc/lv_style.c"
   1:lvgl/lvgl/src/misc/lv_style.c **** /**
   2:lvgl/lvgl/src/misc/lv_style.c ****  * @file lv_style.c
   3:lvgl/lvgl/src/misc/lv_style.c ****  *
   4:lvgl/lvgl/src/misc/lv_style.c ****  */
   5:lvgl/lvgl/src/misc/lv_style.c **** 
   6:lvgl/lvgl/src/misc/lv_style.c **** /*********************
   7:lvgl/lvgl/src/misc/lv_style.c ****  *      INCLUDES
   8:lvgl/lvgl/src/misc/lv_style.c ****  *********************/
   9:lvgl/lvgl/src/misc/lv_style.c **** #include "lv_style.h"
  10:lvgl/lvgl/src/misc/lv_style.c **** #include "../misc/lv_mem.h"
  11:lvgl/lvgl/src/misc/lv_style.c **** 
  12:lvgl/lvgl/src/misc/lv_style.c **** /*********************
  13:lvgl/lvgl/src/misc/lv_style.c ****  *      DEFINES
  14:lvgl/lvgl/src/misc/lv_style.c ****  *********************/
  15:lvgl/lvgl/src/misc/lv_style.c **** 
  16:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  17:lvgl/lvgl/src/misc/lv_style.c ****  *      TYPEDEFS
  18:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  19:lvgl/lvgl/src/misc/lv_style.c **** 
  20:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  21:lvgl/lvgl/src/misc/lv_style.c ****  *  STATIC PROTOTYPES
  22:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  23:lvgl/lvgl/src/misc/lv_style.c **** 
  24:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  25:lvgl/lvgl/src/misc/lv_style.c ****  *  GLOBAL VARIABLES
  26:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  27:lvgl/lvgl/src/misc/lv_style.c **** 
  28:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  29:lvgl/lvgl/src/misc/lv_style.c ****  *  STATIC VARIABLES
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 2


  30:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  31:lvgl/lvgl/src/misc/lv_style.c **** 
  32:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  33:lvgl/lvgl/src/misc/lv_style.c ****  *      MACROS
  34:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  35:lvgl/lvgl/src/misc/lv_style.c **** 
  36:lvgl/lvgl/src/misc/lv_style.c **** /**********************
  37:lvgl/lvgl/src/misc/lv_style.c ****  *   GLOBAL FUNCTIONS
  38:lvgl/lvgl/src/misc/lv_style.c ****  **********************/
  39:lvgl/lvgl/src/misc/lv_style.c **** 
  40:lvgl/lvgl/src/misc/lv_style.c **** void lv_style_init(lv_style_t * style)
  41:lvgl/lvgl/src/misc/lv_style.c **** {
  30              		.loc 1 41 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 41 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  42:lvgl/lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  43:lvgl/lvgl/src/misc/lv_style.c ****     if(style->sentinel == LV_STYLE_SENTINEL_VALUE && style->prop_cnt > 1) {
  44:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_WARN("Style might be already inited. (Potential memory leak)")
  45:lvgl/lvgl/src/misc/lv_style.c ****     }
  46:lvgl/lvgl/src/misc/lv_style.c **** #endif
  47:lvgl/lvgl/src/misc/lv_style.c **** 
  48:lvgl/lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
  40              		.loc 1 48 5 is_stmt 1 view .LVU2
  41 0002 0821     		movs	r1, #8
  42 0004 FFF7FEFF 		bl	lv_memset_00
  43              	.LVL1:
  49:lvgl/lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  50:lvgl/lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
  51:lvgl/lvgl/src/misc/lv_style.c **** #endif
  52:lvgl/lvgl/src/misc/lv_style.c **** }
  44              		.loc 1 52 1 is_stmt 0 view .LVU3
  45 0008 08BD     		pop	{r3, pc}
  46              		.cfi_endproc
  47              	.LFE51:
  49              		.section	.rodata.lv_style_reset.str1.4,"aMS",%progbits,1
  50              		.align	2
  51              	.LC0:
  52 0000 6C76676C 		.ascii	"lvgl/lvgl/src/misc/lv_style.c\000"
  52      2F6C7667 
  52      6C2F7372 
  52      632F6D69 
  52      73632F6C 
  53 001e 0000     		.align	2
  54              	.LC1:
  55 0020 43616E6E 		.ascii	"Cannot reset const style\000"
  55      6F742072 
  55      65736574 
  55      20636F6E 
  55      73742073 
  56              		.section	.text.lv_style_reset,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 3


  57              		.align	1
  58              		.global	lv_style_reset
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	lv_style_reset:
  65              	.LVL2:
  66              	.LFB52:
  53:lvgl/lvgl/src/misc/lv_style.c **** 
  54:lvgl/lvgl/src/misc/lv_style.c **** void lv_style_reset(lv_style_t * style)
  55:lvgl/lvgl/src/misc/lv_style.c **** {
  67              		.loc 1 55 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 55 1 is_stmt 0 view .LVU5
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI1:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
  77 0002 82B0     		sub	sp, sp, #8
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 16
  56:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
  80              		.loc 1 56 27 is_stmt 1 view .LVU6
  57:lvgl/lvgl/src/misc/lv_style.c **** 
  58:lvgl/lvgl/src/misc/lv_style.c ****     if(style->is_const) {
  81              		.loc 1 58 5 view .LVU7
  82              		.loc 1 58 7 is_stmt 0 view .LVU8
  83 0004 90F90530 		ldrsb	r3, [r0, #5]
  84 0008 002B     		cmp	r3, #0
  85 000a 09DB     		blt	.L8
  86 000c 0446     		mov	r4, r0
  59:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
  60:lvgl/lvgl/src/misc/lv_style.c ****         return;
  61:lvgl/lvgl/src/misc/lv_style.c ****     }
  62:lvgl/lvgl/src/misc/lv_style.c **** 
  63:lvgl/lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) lv_mem_free(style->v_p.values_and_props);
  87              		.loc 1 63 5 is_stmt 1 view .LVU9
  88              		.loc 1 63 13 is_stmt 0 view .LVU10
  89 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  90              		.loc 1 63 7 view .LVU11
  91 0010 012B     		cmp	r3, #1
  92 0012 0ED8     		bhi	.L9
  93              	.LVL3:
  94              	.L6:
  64:lvgl/lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
  95              		.loc 1 64 5 is_stmt 1 view .LVU12
  96 0014 0821     		movs	r1, #8
  97 0016 2046     		mov	r0, r4
  98 0018 FFF7FEFF 		bl	lv_memset_00
  99              	.LVL4:
 100              	.L3:
  65:lvgl/lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  66:lvgl/lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 4


  67:lvgl/lvgl/src/misc/lv_style.c **** #endif
  68:lvgl/lvgl/src/misc/lv_style.c **** 
  69:lvgl/lvgl/src/misc/lv_style.c **** }
 101              		.loc 1 69 1 is_stmt 0 view .LVU13
 102 001c 02B0     		add	sp, sp, #8
 103              	.LCFI3:
 104              		.cfi_remember_state
 105              		.cfi_def_cfa_offset 8
 106              		@ sp needed
 107 001e 10BD     		pop	{r4, pc}
 108              	.LVL5:
 109              	.L8:
 110              	.LCFI4:
 111              		.cfi_restore_state
  59:lvgl/lvgl/src/misc/lv_style.c ****         return;
 112              		.loc 1 59 9 is_stmt 1 view .LVU14
 113 0020 064B     		ldr	r3, .L10
 114 0022 0093     		str	r3, [sp]
 115 0024 064B     		ldr	r3, .L10+4
 116 0026 3B22     		movs	r2, #59
 117 0028 0649     		ldr	r1, .L10+8
 118 002a 0320     		movs	r0, #3
 119              	.LVL6:
  59:lvgl/lvgl/src/misc/lv_style.c ****         return;
 120              		.loc 1 59 9 is_stmt 0 view .LVU15
 121 002c FFF7FEFF 		bl	_lv_log_add
 122              	.LVL7:
  59:lvgl/lvgl/src/misc/lv_style.c ****         return;
 123              		.loc 1 59 49 is_stmt 1 view .LVU16
  60:lvgl/lvgl/src/misc/lv_style.c ****     }
 124              		.loc 1 60 9 view .LVU17
 125 0030 F4E7     		b	.L3
 126              	.LVL8:
 127              	.L9:
  63:lvgl/lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 128              		.loc 1 63 29 discriminator 1 view .LVU18
 129 0032 0068     		ldr	r0, [r0]
 130              	.LVL9:
  63:lvgl/lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 131              		.loc 1 63 29 is_stmt 0 discriminator 1 view .LVU19
 132 0034 FFF7FEFF 		bl	lv_mem_free
 133              	.LVL10:
 134 0038 ECE7     		b	.L6
 135              	.L11:
 136 003a 00BF     		.align	2
 137              	.L10:
 138 003c 20000000 		.word	.LC1
 139 0040 00000000 		.word	.LANCHOR0
 140 0044 00000000 		.word	.LC0
 141              		.cfi_endproc
 142              	.LFE52:
 144              		.section	.text.lv_style_register_prop,"ax",%progbits
 145              		.align	1
 146              		.global	lv_style_register_prop
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 5


 150              		.fpu fpv4-sp-d16
 152              	lv_style_register_prop:
 153              	.LFB53:
  70:lvgl/lvgl/src/misc/lv_style.c **** 
  71:lvgl/lvgl/src/misc/lv_style.c **** lv_style_prop_t lv_style_register_prop(void)
  72:lvgl/lvgl/src/misc/lv_style.c **** {
 154              		.loc 1 72 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
  73:lvgl/lvgl/src/misc/lv_style.c ****     static uint16_t act_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 159              		.loc 1 73 5 view .LVU21
  74:lvgl/lvgl/src/misc/lv_style.c ****     act_id++;
 160              		.loc 1 74 5 view .LVU22
 161              		.loc 1 74 11 is_stmt 0 view .LVU23
 162 0000 024B     		ldr	r3, .L13
 163 0002 1888     		ldrh	r0, [r3]
 164 0004 0130     		adds	r0, r0, #1
 165 0006 80B2     		uxth	r0, r0
 166 0008 1880     		strh	r0, [r3]	@ movhi
  75:lvgl/lvgl/src/misc/lv_style.c ****     return act_id;
 167              		.loc 1 75 5 is_stmt 1 view .LVU24
  76:lvgl/lvgl/src/misc/lv_style.c **** }
 168              		.loc 1 76 1 is_stmt 0 view .LVU25
 169 000a 7047     		bx	lr
 170              	.L14:
 171              		.align	2
 172              	.L13:
 173 000c 00000000 		.word	.LANCHOR1
 174              		.cfi_endproc
 175              	.LFE53:
 177              		.section	.rodata.lv_style_remove_prop.str1.4,"aMS",%progbits,1
 178              		.align	2
 179              	.LC2:
 180 0000 43616E6E 		.ascii	"Cannot remove prop from const style\000"
 180      6F742072 
 180      656D6F76 
 180      65207072 
 180      6F702066 
 181              		.section	.text.lv_style_remove_prop,"ax",%progbits
 182              		.align	1
 183              		.global	lv_style_remove_prop
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	lv_style_remove_prop:
 190              	.LVL11:
 191              	.LFB54:
  77:lvgl/lvgl/src/misc/lv_style.c **** 
  78:lvgl/lvgl/src/misc/lv_style.c **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop)
  79:lvgl/lvgl/src/misc/lv_style.c **** {
 192              		.loc 1 79 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 6


 196              		.loc 1 79 1 is_stmt 0 view .LVU27
 197 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 20
 200              		.cfi_offset 4, -20
 201              		.cfi_offset 5, -16
 202              		.cfi_offset 6, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI6:
 207              		.cfi_def_cfa_offset 32
  80:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 208              		.loc 1 80 27 is_stmt 1 view .LVU28
  81:lvgl/lvgl/src/misc/lv_style.c **** 
  82:lvgl/lvgl/src/misc/lv_style.c ****     if(style->is_const) {
 209              		.loc 1 82 5 view .LVU29
 210              		.loc 1 82 7 is_stmt 0 view .LVU30
 211 0004 90F90530 		ldrsb	r3, [r0, #5]
 212 0008 002B     		cmp	r3, #0
 213 000a 13DB     		blt	.L34
 214 000c 0546     		mov	r5, r0
 215 000e 0C46     		mov	r4, r1
  83:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
  84:lvgl/lvgl/src/misc/lv_style.c ****         return false;
  85:lvgl/lvgl/src/misc/lv_style.c ****     }
  86:lvgl/lvgl/src/misc/lv_style.c **** 
  87:lvgl/lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 0)  return false;
 216              		.loc 1 87 5 is_stmt 1 view .LVU31
 217              		.loc 1 87 13 is_stmt 0 view .LVU32
 218 0010 C179     		ldrb	r1, [r0, #7]	@ zero_extendqisi2
 219              	.LVL12:
 220              		.loc 1 87 7 view .LVU33
 221 0012 0029     		cmp	r1, #0
 222 0014 6BD0     		beq	.L30
  88:lvgl/lvgl/src/misc/lv_style.c **** 
  89:lvgl/lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 1) {
 223              		.loc 1 89 5 is_stmt 1 view .LVU34
 224              		.loc 1 89 7 is_stmt 0 view .LVU35
 225 0016 0129     		cmp	r1, #1
 226 0018 16D0     		beq	.L35
  90:lvgl/lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
  91:lvgl/lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
  92:lvgl/lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
  93:lvgl/lvgl/src/misc/lv_style.c ****             return true;
  94:lvgl/lvgl/src/misc/lv_style.c ****         }
  95:lvgl/lvgl/src/misc/lv_style.c ****         return false;
  96:lvgl/lvgl/src/misc/lv_style.c ****     }
  97:lvgl/lvgl/src/misc/lv_style.c **** 
  98:lvgl/lvgl/src/misc/lv_style.c ****     uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 227              		.loc 1 98 5 is_stmt 1 view .LVU36
 228              		.loc 1 98 31 is_stmt 0 view .LVU37
 229 001a 0768     		ldr	r7, [r0]
 230              		.loc 1 98 56 view .LVU38
 231 001c 0846     		mov	r0, r1
 232              	.LVL13:
 233              		.loc 1 98 15 view .LVU39
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 7


 234 001e 07EB8106 		add	r6, r7, r1, lsl #2
 235              	.LVL14:
  99:lvgl/lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 236              		.loc 1 99 5 is_stmt 1 view .LVU40
 100:lvgl/lvgl/src/misc/lv_style.c ****     uint32_t i;
 237              		.loc 1 100 5 view .LVU41
 101:lvgl/lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 238              		.loc 1 101 5 view .LVU42
 239              		.loc 1 101 11 is_stmt 0 view .LVU43
 240 0022 0023     		movs	r3, #0
 241              	.LVL15:
 242              	.L19:
 243              		.loc 1 101 16 is_stmt 1 discriminator 1 view .LVU44
 244              		.loc 1 101 5 is_stmt 0 discriminator 1 view .LVU45
 245 0024 9842     		cmp	r0, r3
 246 0026 60D9     		bls	.L36
 102:lvgl/lvgl/src/misc/lv_style.c ****         if(old_props[i] == prop) {
 247              		.loc 1 102 9 is_stmt 1 view .LVU46
 248              		.loc 1 102 21 is_stmt 0 view .LVU47
 249 0028 36F81320 		ldrh	r2, [r6, r3, lsl #1]
 250              		.loc 1 102 11 view .LVU48
 251 002c A242     		cmp	r2, r4
 252 002e 1AD0     		beq	.L37
 101:lvgl/lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 253              		.loc 1 101 37 is_stmt 1 discriminator 2 view .LVU49
 101:lvgl/lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 254              		.loc 1 101 38 is_stmt 0 discriminator 2 view .LVU50
 255 0030 0133     		adds	r3, r3, #1
 256              	.LVL16:
 101:lvgl/lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 257              		.loc 1 101 38 discriminator 2 view .LVU51
 258 0032 F7E7     		b	.L19
 259              	.LVL17:
 260              	.L34:
  83:lvgl/lvgl/src/misc/lv_style.c ****         return false;
 261              		.loc 1 83 9 is_stmt 1 view .LVU52
 262 0034 304B     		ldr	r3, .L40
 263 0036 0093     		str	r3, [sp]
 264 0038 304B     		ldr	r3, .L40+4
 265 003a 5322     		movs	r2, #83
 266 003c 3049     		ldr	r1, .L40+8
 267              	.LVL18:
  83:lvgl/lvgl/src/misc/lv_style.c ****         return false;
 268              		.loc 1 83 9 is_stmt 0 view .LVU53
 269 003e 0320     		movs	r0, #3
 270              	.LVL19:
  83:lvgl/lvgl/src/misc/lv_style.c ****         return false;
 271              		.loc 1 83 9 view .LVU54
 272 0040 FFF7FEFF 		bl	_lv_log_add
 273              	.LVL20:
  83:lvgl/lvgl/src/misc/lv_style.c ****         return false;
 274              		.loc 1 83 60 is_stmt 1 view .LVU55
  84:lvgl/lvgl/src/misc/lv_style.c ****     }
 275              		.loc 1 84 9 view .LVU56
  84:lvgl/lvgl/src/misc/lv_style.c ****     }
 276              		.loc 1 84 16 is_stmt 0 view .LVU57
 277 0044 0020     		movs	r0, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 8


 278 0046 53E0     		b	.L17
 279              	.LVL21:
 280              	.L35:
  90:lvgl/lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 281              		.loc 1 90 9 is_stmt 1 view .LVU58
  90:lvgl/lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 282              		.loc 1 90 17 is_stmt 0 view .LVU59
 283 0048 8388     		ldrh	r3, [r0, #4]
 284 004a C3F30E03 		ubfx	r3, r3, #0, #15
  90:lvgl/lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 285              		.loc 1 90 11 view .LVU60
 286 004e A342     		cmp	r3, r4
 287 0050 01D0     		beq	.L38
  95:lvgl/lvgl/src/misc/lv_style.c ****     }
 288              		.loc 1 95 16 view .LVU61
 289 0052 0020     		movs	r0, #0
 290              	.LVL22:
  95:lvgl/lvgl/src/misc/lv_style.c ****     }
 291              		.loc 1 95 16 view .LVU62
 292 0054 4CE0     		b	.L17
 293              	.LVL23:
 294              	.L38:
  91:lvgl/lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 295              		.loc 1 91 13 is_stmt 1 view .LVU63
  91:lvgl/lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 296              		.loc 1 91 26 is_stmt 0 view .LVU64
 297 0056 8388     		ldrh	r3, [r0, #4]
 298 0058 6FF30E03 		bfc	r3, #0, #15
 299 005c 8380     		strh	r3, [r0, #4]	@ movhi
  92:lvgl/lvgl/src/misc/lv_style.c ****             return true;
 300              		.loc 1 92 13 is_stmt 1 view .LVU65
  92:lvgl/lvgl/src/misc/lv_style.c ****             return true;
 301              		.loc 1 92 29 is_stmt 0 view .LVU66
 302 005e 0023     		movs	r3, #0
 303 0060 C371     		strb	r3, [r0, #7]
  93:lvgl/lvgl/src/misc/lv_style.c ****         }
 304              		.loc 1 93 13 is_stmt 1 view .LVU67
  93:lvgl/lvgl/src/misc/lv_style.c ****         }
 305              		.loc 1 93 20 is_stmt 0 view .LVU68
 306 0062 0120     		movs	r0, #1
 307              	.LVL24:
  93:lvgl/lvgl/src/misc/lv_style.c ****         }
 308              		.loc 1 93 20 view .LVU69
 309 0064 44E0     		b	.L17
 310              	.LVL25:
 311              	.L37:
 312              	.LBB14:
 103:lvgl/lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 313              		.loc 1 103 13 is_stmt 1 view .LVU70
 104:lvgl/lvgl/src/misc/lv_style.c **** 
 105:lvgl/lvgl/src/misc/lv_style.c ****             if(style->prop_cnt == 2) {
 314              		.loc 1 105 13 view .LVU71
 315              		.loc 1 105 15 is_stmt 0 view .LVU72
 316 0066 0229     		cmp	r1, #2
 317 0068 11D0     		beq	.L39
 318              	.LBB15:
 106:lvgl/lvgl/src/misc/lv_style.c ****                 style->prop_cnt = 1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 9


 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 108:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 109:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 110:lvgl/lvgl/src/misc/lv_style.c ****                 size_t size = (style->prop_cnt - 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t))
 319              		.loc 1 110 17 is_stmt 1 view .LVU73
 320              		.loc 1 110 48 is_stmt 0 view .LVU74
 321 006a 0139     		subs	r1, r1, #1
 322              		.loc 1 110 24 view .LVU75
 323 006c 01EB4101 		add	r1, r1, r1, lsl #1
 324              	.LVL26:
 111:lvgl/lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 325              		.loc 1 111 17 is_stmt 1 view .LVU76
 326              		.loc 1 111 50 is_stmt 0 view .LVU77
 327 0070 4800     		lsls	r0, r1, #1
 328              	.LVL27:
 329              		.loc 1 111 50 view .LVU78
 330 0072 FFF7FEFF 		bl	lv_mem_alloc
 331              	.LVL28:
 112:lvgl/lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 332              		.loc 1 112 17 is_stmt 1 view .LVU79
 333              		.loc 1 112 19 is_stmt 0 view .LVU80
 334 0076 8446     		mov	ip, r0
 335 0078 0028     		cmp	r0, #0
 336 007a 3BD0     		beq	.L32
 113:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 337              		.loc 1 113 17 is_stmt 1 view .LVU81
 338              		.loc 1 113 45 is_stmt 0 view .LVU82
 339 007c 2860     		str	r0, [r5]
 114:lvgl/lvgl/src/misc/lv_style.c ****                 style->prop_cnt--;
 340              		.loc 1 114 17 is_stmt 1 view .LVU83
 341              		.loc 1 114 22 is_stmt 0 view .LVU84
 342 007e E879     		ldrb	r0, [r5, #7]	@ zero_extendqisi2
 343              	.LVL29:
 344              		.loc 1 114 32 view .LVU85
 345 0080 0138     		subs	r0, r0, #1
 346 0082 C0B2     		uxtb	r0, r0
 347 0084 E871     		strb	r0, [r5, #7]
 115:lvgl/lvgl/src/misc/lv_style.c **** 
 116:lvgl/lvgl/src/misc/lv_style.c ****                 tmp = new_values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 348              		.loc 1 116 17 is_stmt 1 view .LVU86
 349              		.loc 1 116 62 is_stmt 0 view .LVU87
 350 0086 8000     		lsls	r0, r0, #2
 351              	.LVL30:
 117:lvgl/lvgl/src/misc/lv_style.c ****                 uint16_t * new_props = (uint16_t *)tmp;
 352              		.loc 1 117 17 is_stmt 1 view .LVU88
 118:lvgl/lvgl/src/misc/lv_style.c ****                 lv_style_value_t * new_values = (lv_style_value_t *)new_values_and_props;
 353              		.loc 1 118 17 view .LVU89
 119:lvgl/lvgl/src/misc/lv_style.c **** 
 120:lvgl/lvgl/src/misc/lv_style.c ****                 uint32_t j;
 354              		.loc 1 120 17 view .LVU90
 121:lvgl/lvgl/src/misc/lv_style.c ****                 for(i = j = 0; j <= style->prop_cnt; j++) { /*<=: because prop_cnt already reduced 
 355              		.loc 1 121 17 view .LVU91
 356              		.loc 1 121 27 is_stmt 0 view .LVU92
 357 0088 0023     		movs	r3, #0
 358              		.loc 1 121 23 view .LVU93
 359 008a 1A46     		mov	r2, r3
 360              		.loc 1 121 17 view .LVU94
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 10


 361 008c 1AE0     		b	.L26
 362              	.LVL31:
 363              	.L39:
 364              		.loc 1 121 17 view .LVU95
 365              	.LBE15:
 106:lvgl/lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 366              		.loc 1 106 17 is_stmt 1 view .LVU96
 106:lvgl/lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 367              		.loc 1 106 33 is_stmt 0 view .LVU97
 368 008e 0122     		movs	r2, #1
 369 0090 EA71     		strb	r2, [r5, #7]
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 370              		.loc 1 107 17 is_stmt 1 view .LVU98
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 371              		.loc 1 107 54 is_stmt 0 view .LVU99
 372 0092 73B9     		cbnz	r3, .L22
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 373              		.loc 1 107 50 discriminator 1 view .LVU100
 374 0094 7288     		ldrh	r2, [r6, #2]
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 375              		.loc 1 107 54 discriminator 1 view .LVU101
 376 0096 C2F30E02 		ubfx	r2, r2, #0, #15
 377              	.L23:
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 378              		.loc 1 107 30 discriminator 4 view .LVU102
 379 009a A988     		ldrh	r1, [r5, #4]
 380 009c 62F30E01 		bfi	r1, r2, #0, #15
 381 00a0 A980     		strh	r1, [r5, #4]	@ movhi
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 382              		.loc 1 108 17 is_stmt 1 discriminator 4 view .LVU103
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 383              		.loc 1 108 35 is_stmt 0 discriminator 4 view .LVU104
 384 00a2 5BB9     		cbnz	r3, .L24
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 385              		.loc 1 108 35 discriminator 1 view .LVU105
 386 00a4 7B68     		ldr	r3, [r7, #4]
 387              	.LVL32:
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 388              		.loc 1 108 35 discriminator 1 view .LVU106
 389 00a6 2B60     		str	r3, [r5]
 390              	.LVL33:
 391              	.L25:
 122:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 123:lvgl/lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 124:lvgl/lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 125:lvgl/lvgl/src/misc/lv_style.c ****                     }
 126:lvgl/lvgl/src/misc/lv_style.c ****                 }
 127:lvgl/lvgl/src/misc/lv_style.c ****             }
 128:lvgl/lvgl/src/misc/lv_style.c **** 
 129:lvgl/lvgl/src/misc/lv_style.c ****             lv_mem_free(old_values);
 392              		.loc 1 129 13 is_stmt 1 view .LVU107
 393 00a8 3846     		mov	r0, r7
 394 00aa FFF7FEFF 		bl	lv_mem_free
 395              	.LVL34:
 130:lvgl/lvgl/src/misc/lv_style.c ****             return true;
 396              		.loc 1 130 13 view .LVU108
 397              		.loc 1 130 20 is_stmt 0 view .LVU109
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 11


 398 00ae 0120     		movs	r0, #1
 399 00b0 1EE0     		b	.L17
 400              	.LVL35:
 401              	.L22:
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 402              		.loc 1 107 65 discriminator 2 view .LVU110
 403 00b2 37F82120 		ldrh	r2, [r7, r1, lsl #2]
 107:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 404              		.loc 1 107 54 discriminator 2 view .LVU111
 405 00b6 C2F30E02 		ubfx	r2, r2, #0, #15
 406 00ba EEE7     		b	.L23
 407              	.L24:
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 408              		.loc 1 108 35 discriminator 2 view .LVU112
 409 00bc 3B68     		ldr	r3, [r7]
 410              	.LVL36:
 108:lvgl/lvgl/src/misc/lv_style.c ****             } else {
 411              		.loc 1 108 35 discriminator 2 view .LVU113
 412 00be 2B60     		str	r3, [r5]
 413 00c0 F2E7     		b	.L25
 414              	.LVL37:
 415              	.L27:
 416              	.LBB16:
 121:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 417              		.loc 1 121 54 is_stmt 1 discriminator 2 view .LVU114
 121:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 418              		.loc 1 121 55 is_stmt 0 discriminator 2 view .LVU115
 419 00c2 0133     		adds	r3, r3, #1
 420              	.LVL38:
 421              	.L26:
 121:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 422              		.loc 1 121 32 is_stmt 1 discriminator 1 view .LVU116
 121:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 423              		.loc 1 121 42 is_stmt 0 discriminator 1 view .LVU117
 424 00c4 E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 121:lvgl/lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 425              		.loc 1 121 17 discriminator 1 view .LVU118
 426 00c6 9942     		cmp	r1, r3
 427 00c8 EED3     		bcc	.L25
 122:lvgl/lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 428              		.loc 1 122 21 is_stmt 1 view .LVU119
 122:lvgl/lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 429              		.loc 1 122 33 is_stmt 0 view .LVU120
 430 00ca 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 122:lvgl/lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 431              		.loc 1 122 23 view .LVU121
 432 00ce A142     		cmp	r1, r4
 433 00d0 F7D0     		beq	.L27
 123:lvgl/lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 434              		.loc 1 123 25 is_stmt 1 view .LVU122
 123:lvgl/lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 435              		.loc 1 123 39 is_stmt 0 view .LVU123
 436 00d2 57F82310 		ldr	r1, [r7, r3, lsl #2]
 437 00d6 4CF82210 		str	r1, [ip, r2, lsl #2]
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 438              		.loc 1 124 25 is_stmt 1 view .LVU124
 439              	.LVL39:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 12


 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 440              		.loc 1 124 34 is_stmt 0 view .LVU125
 441 00da 00EB4201 		add	r1, r0, r2, lsl #1
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 442              		.loc 1 124 51 view .LVU126
 443 00de 36F813E0 		ldrh	lr, [r6, r3, lsl #1]
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 444              		.loc 1 124 40 view .LVU127
 445 00e2 2CF801E0 		strh	lr, [ip, r1]	@ movhi
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 446              		.loc 1 124 36 view .LVU128
 447 00e6 0132     		adds	r2, r2, #1
 448              	.LVL40:
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 449              		.loc 1 124 36 view .LVU129
 450 00e8 EBE7     		b	.L27
 451              	.LVL41:
 452              	.L36:
 124:lvgl/lvgl/src/misc/lv_style.c ****                     }
 453              		.loc 1 124 36 view .LVU130
 454              	.LBE16:
 455              	.LBE14:
 131:lvgl/lvgl/src/misc/lv_style.c ****         }
 132:lvgl/lvgl/src/misc/lv_style.c ****     }
 133:lvgl/lvgl/src/misc/lv_style.c **** 
 134:lvgl/lvgl/src/misc/lv_style.c ****     return false;
 456              		.loc 1 134 12 view .LVU131
 457 00ea 0020     		movs	r0, #0
 458 00ec 00E0     		b	.L17
 459              	.LVL42:
 460              	.L30:
  87:lvgl/lvgl/src/misc/lv_style.c **** 
 461              		.loc 1 87 38 view .LVU132
 462 00ee 0020     		movs	r0, #0
 463              	.LVL43:
 464              	.L17:
 135:lvgl/lvgl/src/misc/lv_style.c **** }
 465              		.loc 1 135 1 view .LVU133
 466 00f0 03B0     		add	sp, sp, #12
 467              	.LCFI7:
 468              		.cfi_remember_state
 469              		.cfi_def_cfa_offset 20
 470              		@ sp needed
 471 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 472              	.LVL44:
 473              	.L32:
 474              	.LCFI8:
 475              		.cfi_restore_state
 476              	.LBB18:
 477              	.LBB17:
 112:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 478              		.loc 1 112 57 view .LVU134
 479 00f4 0020     		movs	r0, #0
 480              	.LVL45:
 112:lvgl/lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 481              		.loc 1 112 57 view .LVU135
 482 00f6 FBE7     		b	.L17
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 13


 483              	.L41:
 484              		.align	2
 485              	.L40:
 486 00f8 00000000 		.word	.LC2
 487 00fc 00000000 		.word	.LANCHOR2
 488 0100 00000000 		.word	.LC0
 489              	.LBE17:
 490              	.LBE18:
 491              		.cfi_endproc
 492              	.LFE54:
 494              		.section	.text.lv_style_get_prop,"ax",%progbits
 495              		.align	1
 496              		.global	lv_style_get_prop
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv4-sp-d16
 502              	lv_style_get_prop:
 503              	.LVL46:
 504              	.LFB56:
 136:lvgl/lvgl/src/misc/lv_style.c **** 
 137:lvgl/lvgl/src/misc/lv_style.c **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value)
 138:lvgl/lvgl/src/misc/lv_style.c **** {
 139:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 140:lvgl/lvgl/src/misc/lv_style.c **** 
 141:lvgl/lvgl/src/misc/lv_style.c ****     if(style->is_const) {
 142:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 143:lvgl/lvgl/src/misc/lv_style.c ****         return;
 144:lvgl/lvgl/src/misc/lv_style.c ****     }
 145:lvgl/lvgl/src/misc/lv_style.c **** 
 146:lvgl/lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) {
 147:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 148:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 149:lvgl/lvgl/src/misc/lv_style.c ****         int32_t i;
 150:lvgl/lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 151:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 152:lvgl/lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 153:lvgl/lvgl/src/misc/lv_style.c ****                 values[i] = value;
 154:lvgl/lvgl/src/misc/lv_style.c ****                 return;
 155:lvgl/lvgl/src/misc/lv_style.c ****             }
 156:lvgl/lvgl/src/misc/lv_style.c ****         }
 157:lvgl/lvgl/src/misc/lv_style.c **** 
 158:lvgl/lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 159:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 160:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 161:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 162:lvgl/lvgl/src/misc/lv_style.c **** 
 163:lvgl/lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 164:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 165:lvgl/lvgl/src/misc/lv_style.c ****         /*Shift all props to make place for the value before them*/
 166:lvgl/lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 167:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 168:lvgl/lvgl/src/misc/lv_style.c ****         }
 169:lvgl/lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 170:lvgl/lvgl/src/misc/lv_style.c **** 
 171:lvgl/lvgl/src/misc/lv_style.c ****         /*Go to the new position wit the props*/
 172:lvgl/lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 14


 173:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 174:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 175:lvgl/lvgl/src/misc/lv_style.c **** 
 176:lvgl/lvgl/src/misc/lv_style.c ****         /*Set the new property and value*/
 177:lvgl/lvgl/src/misc/lv_style.c ****         props[style->prop_cnt - 1] = prop;
 178:lvgl/lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 179:lvgl/lvgl/src/misc/lv_style.c ****     } else if(style->prop_cnt == 1) {
 180:lvgl/lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 181:lvgl/lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 182:lvgl/lvgl/src/misc/lv_style.c ****             return;
 183:lvgl/lvgl/src/misc/lv_style.c ****         }
 184:lvgl/lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 185:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 186:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 187:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 188:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 189:lvgl/lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 190:lvgl/lvgl/src/misc/lv_style.c **** 
 191:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 192:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 193:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 194:lvgl/lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 195:lvgl/lvgl/src/misc/lv_style.c ****         props[1] = prop;
 196:lvgl/lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 197:lvgl/lvgl/src/misc/lv_style.c ****         values[1] = value;
 198:lvgl/lvgl/src/misc/lv_style.c ****     } else {
 199:lvgl/lvgl/src/misc/lv_style.c ****         style->prop_cnt = 1;
 200:lvgl/lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 201:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 202:lvgl/lvgl/src/misc/lv_style.c ****     }
 203:lvgl/lvgl/src/misc/lv_style.c **** 
 204:lvgl/lvgl/src/misc/lv_style.c ****     uint8_t group = _lv_style_get_prop_group(prop);
 205:lvgl/lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 206:lvgl/lvgl/src/misc/lv_style.c **** }
 207:lvgl/lvgl/src/misc/lv_style.c **** 
 208:lvgl/lvgl/src/misc/lv_style.c **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value)
 209:lvgl/lvgl/src/misc/lv_style.c **** {
 505              		.loc 1 209 1 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              		.loc 1 209 1 is_stmt 0 view .LVU137
 511 0000 0346     		mov	r3, r0
 210:lvgl/lvgl/src/misc/lv_style.c ****    return lv_style_get_prop_inlined(style, prop, value);
 512              		.loc 1 210 4 is_stmt 1 view .LVU138
 513              	.LVL47:
 514              	.LBB24:
 515              	.LBI24:
 516              		.file 2 "lvgl/lvgl/src/misc/lv_style.h"
   1:lvgl/lvgl/src/misc/lv_style.h **** /**
   2:lvgl/lvgl/src/misc/lv_style.h ****  * @file lv_style.h
   3:lvgl/lvgl/src/misc/lv_style.h ****  *
   4:lvgl/lvgl/src/misc/lv_style.h ****  */
   5:lvgl/lvgl/src/misc/lv_style.h **** 
   6:lvgl/lvgl/src/misc/lv_style.h **** #ifndef LV_STYLE_H
   7:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_H
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 15


   8:lvgl/lvgl/src/misc/lv_style.h **** 
   9:lvgl/lvgl/src/misc/lv_style.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/misc/lv_style.h **** extern "C" {
  11:lvgl/lvgl/src/misc/lv_style.h **** #endif
  12:lvgl/lvgl/src/misc/lv_style.h **** 
  13:lvgl/lvgl/src/misc/lv_style.h **** /*********************
  14:lvgl/lvgl/src/misc/lv_style.h ****  *      INCLUDES
  15:lvgl/lvgl/src/misc/lv_style.h ****  *********************/
  16:lvgl/lvgl/src/misc/lv_style.h **** #include <stdbool.h>
  17:lvgl/lvgl/src/misc/lv_style.h **** #include "../font/lv_font.h"
  18:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_color.h"
  19:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_area.h"
  20:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_anim.h"
  21:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_txt.h"
  22:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_types.h"
  23:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_assert.h"
  24:lvgl/lvgl/src/misc/lv_style.h **** #include "lv_bidi.h"
  25:lvgl/lvgl/src/misc/lv_style.h **** 
  26:lvgl/lvgl/src/misc/lv_style.h **** /*********************
  27:lvgl/lvgl/src/misc/lv_style.h ****  *      DEFINES
  28:lvgl/lvgl/src/misc/lv_style.h ****  *********************/
  29:lvgl/lvgl/src/misc/lv_style.h **** 
  30:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  31:lvgl/lvgl/src/misc/lv_style.h **** 
  32:lvgl/lvgl/src/misc/lv_style.h **** /**
  33:lvgl/lvgl/src/misc/lv_style.h ****  * Flags for style properties
  34:lvgl/lvgl/src/misc/lv_style.h ****  */
  35:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  36:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  37:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  38:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  39:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  40:lvgl/lvgl/src/misc/lv_style.h **** 
  41:lvgl/lvgl/src/misc/lv_style.h **** /**
  42:lvgl/lvgl/src/misc/lv_style.h ****  * Other constants
  43:lvgl/lvgl/src/misc/lv_style.h ****  */
  44:lvgl/lvgl/src/misc/lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  45:lvgl/lvgl/src/misc/lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  46:lvgl/lvgl/src/misc/lv_style.h **** 
  47:lvgl/lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
  48:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  49:lvgl/lvgl/src/misc/lv_style.h **** #else
  50:lvgl/lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  51:lvgl/lvgl/src/misc/lv_style.h **** #endif
  52:lvgl/lvgl/src/misc/lv_style.h **** 
  53:lvgl/lvgl/src/misc/lv_style.h **** /**********************
  54:lvgl/lvgl/src/misc/lv_style.h ****  *      TYPEDEFS
  55:lvgl/lvgl/src/misc/lv_style.h ****  **********************/
  56:lvgl/lvgl/src/misc/lv_style.h **** 
  57:lvgl/lvgl/src/misc/lv_style.h **** /**
  58:lvgl/lvgl/src/misc/lv_style.h ****  * Possible options how to blend opaque drawings
  59:lvgl/lvgl/src/misc/lv_style.h ****  */
  60:lvgl/lvgl/src/misc/lv_style.h **** enum {
  61:lvgl/lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  62:lvgl/lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  63:lvgl/lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  64:lvgl/lvgl/src/misc/lv_style.h **** };
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 16


  65:lvgl/lvgl/src/misc/lv_style.h **** 
  66:lvgl/lvgl/src/misc/lv_style.h **** typedef uint8_t lv_blend_mode_t;
  67:lvgl/lvgl/src/misc/lv_style.h **** 
  68:lvgl/lvgl/src/misc/lv_style.h **** /**
  69:lvgl/lvgl/src/misc/lv_style.h ****  * Some options to apply decorations on texts.
  70:lvgl/lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
  71:lvgl/lvgl/src/misc/lv_style.h ****  */
  72:lvgl/lvgl/src/misc/lv_style.h **** enum {
  73:lvgl/lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  74:lvgl/lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  75:lvgl/lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  76:lvgl/lvgl/src/misc/lv_style.h **** };
  77:lvgl/lvgl/src/misc/lv_style.h **** 
  78:lvgl/lvgl/src/misc/lv_style.h **** typedef uint8_t lv_text_decor_t;
  79:lvgl/lvgl/src/misc/lv_style.h **** 
  80:lvgl/lvgl/src/misc/lv_style.h **** /**
  81:lvgl/lvgl/src/misc/lv_style.h ****  * Selects on which sides border should be drawn
  82:lvgl/lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
  83:lvgl/lvgl/src/misc/lv_style.h ****  */
  84:lvgl/lvgl/src/misc/lv_style.h **** enum {
  85:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  86:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  87:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  88:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  89:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  90:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
  91:lvgl/lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
  92:lvgl/lvgl/src/misc/lv_style.h **** };
  93:lvgl/lvgl/src/misc/lv_style.h **** typedef uint8_t lv_border_side_t;
  94:lvgl/lvgl/src/misc/lv_style.h **** 
  95:lvgl/lvgl/src/misc/lv_style.h **** /**
  96:lvgl/lvgl/src/misc/lv_style.h ****  * The direction of the gradient.
  97:lvgl/lvgl/src/misc/lv_style.h ****  */
  98:lvgl/lvgl/src/misc/lv_style.h **** enum {
  99:lvgl/lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 100:lvgl/lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 101:lvgl/lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 102:lvgl/lvgl/src/misc/lv_style.h **** };
 103:lvgl/lvgl/src/misc/lv_style.h **** 
 104:lvgl/lvgl/src/misc/lv_style.h **** typedef uint8_t lv_grad_dir_t;
 105:lvgl/lvgl/src/misc/lv_style.h **** 
 106:lvgl/lvgl/src/misc/lv_style.h **** /**
 107:lvgl/lvgl/src/misc/lv_style.h ****  * A common type to handle all the property types in the same way.
 108:lvgl/lvgl/src/misc/lv_style.h ****  */
 109:lvgl/lvgl/src/misc/lv_style.h **** typedef union {
 110:lvgl/lvgl/src/misc/lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 111:lvgl/lvgl/src/misc/lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 112:lvgl/lvgl/src/misc/lv_style.h ****     lv_color_t color;    /**< Colors*/
 113:lvgl/lvgl/src/misc/lv_style.h **** }lv_style_value_t;
 114:lvgl/lvgl/src/misc/lv_style.h **** 
 115:lvgl/lvgl/src/misc/lv_style.h **** /**
 116:lvgl/lvgl/src/misc/lv_style.h ****  * Enumeration of all built in style properties
 117:lvgl/lvgl/src/misc/lv_style.h ****  */
 118:lvgl/lvgl/src/misc/lv_style.h **** typedef enum {
 119:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 120:lvgl/lvgl/src/misc/lv_style.h **** 
 121:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 0*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 17


 122:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 123:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 124:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 125:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 126:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 127:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 128:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 129:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 130:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 131:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 132:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 133:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 134:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 135:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 136:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 137:lvgl/lvgl/src/misc/lv_style.h **** 
 138:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 1*/
 139:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,
 140:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,
 141:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,
 142:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,
 143:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,
 144:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,
 145:lvgl/lvgl/src/misc/lv_style.h **** 
 146:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 2*/
 147:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 148:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 149:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 150:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 151:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 152:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 153:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 154:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 155:lvgl/lvgl/src/misc/lv_style.h **** 
 156:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 38,
 157:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 39,
 158:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 40,
 159:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,
 160:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,
 161:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 42,
 162:lvgl/lvgl/src/misc/lv_style.h **** 
 163:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 3*/
 164:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 165:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 166:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 167:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 168:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 169:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 170:lvgl/lvgl/src/misc/lv_style.h **** 
 171:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 172:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 173:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 174:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 175:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 176:lvgl/lvgl/src/misc/lv_style.h **** 
 177:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 4*/
 178:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 18


 179:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 180:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 181:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 182:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 183:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 184:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 185:lvgl/lvgl/src/misc/lv_style.h **** 
 186:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 187:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 188:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 189:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 190:lvgl/lvgl/src/misc/lv_style.h **** 
 191:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 192:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 193:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 194:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 195:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 196:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 197:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 198:lvgl/lvgl/src/misc/lv_style.h **** 
 199:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 5*/
 200:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 201:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 202:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 203:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 204:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 205:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 206:lvgl/lvgl/src/misc/lv_style.h **** 
 207:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 208:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 209:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 210:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 211:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 212:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 213:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 214:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 215:lvgl/lvgl/src/misc/lv_style.h **** 
 216:lvgl/lvgl/src/misc/lv_style.h ****     /*Group 6*/
 217:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 218:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 219:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 220:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 221:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 222:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 223:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 224:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 225:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 226:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 227:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 228:lvgl/lvgl/src/misc/lv_style.h **** 
 229:lvgl/lvgl/src/misc/lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 230:lvgl/lvgl/src/misc/lv_style.h **** 
 231:lvgl/lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 232:lvgl/lvgl/src/misc/lv_style.h **** }lv_style_prop_t;
 233:lvgl/lvgl/src/misc/lv_style.h **** 
 234:lvgl/lvgl/src/misc/lv_style.h **** /**
 235:lvgl/lvgl/src/misc/lv_style.h ****  * Descriptor for style transitions
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 19


 236:lvgl/lvgl/src/misc/lv_style.h ****  */
 237:lvgl/lvgl/src/misc/lv_style.h **** typedef struct {
 238:lvgl/lvgl/src/misc/lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 239:lvgl/lvgl/src/misc/lv_style.h **** #if LV_USE_USER_DATA
 240:lvgl/lvgl/src/misc/lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 241:lvgl/lvgl/src/misc/lv_style.h **** #endif
 242:lvgl/lvgl/src/misc/lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 243:lvgl/lvgl/src/misc/lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 244:lvgl/lvgl/src/misc/lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 245:lvgl/lvgl/src/misc/lv_style.h **** }lv_style_transition_dsc_t;
 246:lvgl/lvgl/src/misc/lv_style.h **** 
 247:lvgl/lvgl/src/misc/lv_style.h **** /**
 248:lvgl/lvgl/src/misc/lv_style.h ****  * Descriptor of a constant style property.
 249:lvgl/lvgl/src/misc/lv_style.h ****  */
 250:lvgl/lvgl/src/misc/lv_style.h **** typedef struct {
 251:lvgl/lvgl/src/misc/lv_style.h ****     lv_style_prop_t prop;
 252:lvgl/lvgl/src/misc/lv_style.h ****     lv_style_value_t value;
 253:lvgl/lvgl/src/misc/lv_style.h **** } lv_style_const_prop_t;
 254:lvgl/lvgl/src/misc/lv_style.h **** 
 255:lvgl/lvgl/src/misc/lv_style.h **** /**
 256:lvgl/lvgl/src/misc/lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 257:lvgl/lvgl/src/misc/lv_style.h ****  */
 258:lvgl/lvgl/src/misc/lv_style.h **** typedef struct {
 259:lvgl/lvgl/src/misc/lv_style.h **** 
 260:lvgl/lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
 261:lvgl/lvgl/src/misc/lv_style.h ****     uint32_t sentinel;
 262:lvgl/lvgl/src/misc/lv_style.h **** #endif
 263:lvgl/lvgl/src/misc/lv_style.h **** 
 264:lvgl/lvgl/src/misc/lv_style.h ****     /*If there is only one property store it directly.
 265:lvgl/lvgl/src/misc/lv_style.h ****      *For more properties allocate an array*/
 266:lvgl/lvgl/src/misc/lv_style.h ****     union {
 267:lvgl/lvgl/src/misc/lv_style.h ****         lv_style_value_t value1;
 268:lvgl/lvgl/src/misc/lv_style.h ****         uint8_t * values_and_props;
 269:lvgl/lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t * const_props;
 270:lvgl/lvgl/src/misc/lv_style.h ****     } v_p;
 271:lvgl/lvgl/src/misc/lv_style.h **** 
 272:lvgl/lvgl/src/misc/lv_style.h ****     uint16_t prop1 :15;
 273:lvgl/lvgl/src/misc/lv_style.h ****     uint16_t is_const :1;
 274:lvgl/lvgl/src/misc/lv_style.h ****     uint8_t has_group;
 275:lvgl/lvgl/src/misc/lv_style.h ****     uint8_t prop_cnt;
 276:lvgl/lvgl/src/misc/lv_style.h **** } lv_style_t;
 277:lvgl/lvgl/src/misc/lv_style.h **** 
 278:lvgl/lvgl/src/misc/lv_style.h **** /**********************
 279:lvgl/lvgl/src/misc/lv_style.h ****  * GLOBAL PROTOTYPES
 280:lvgl/lvgl/src/misc/lv_style.h ****  **********************/
 281:lvgl/lvgl/src/misc/lv_style.h **** 
 282:lvgl/lvgl/src/misc/lv_style.h **** 
 283:lvgl/lvgl/src/misc/lv_style.h **** /**
 284:lvgl/lvgl/src/misc/lv_style.h ****  * Initialize a style
 285:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to a style to initialize
 286:lvgl/lvgl/src/misc/lv_style.h ****  * @note Do not call `lv_style_init` on styles that are already have some properties
 287:lvgl/lvgl/src/misc/lv_style.h ****  *       because this function won't free the used memory just set a default state for the style.
 288:lvgl/lvgl/src/misc/lv_style.h ****  *       In other words be sure to initialize styles only once!
 289:lvgl/lvgl/src/misc/lv_style.h ****  */
 290:lvgl/lvgl/src/misc/lv_style.h **** void lv_style_init(lv_style_t * style);
 291:lvgl/lvgl/src/misc/lv_style.h **** 
 292:lvgl/lvgl/src/misc/lv_style.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 20


 293:lvgl/lvgl/src/misc/lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 294:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 295:lvgl/lvgl/src/misc/lv_style.h ****  */
 296:lvgl/lvgl/src/misc/lv_style.h **** void lv_style_reset(lv_style_t * style);
 297:lvgl/lvgl/src/misc/lv_style.h **** 
 298:lvgl/lvgl/src/misc/lv_style.h **** /**
 299:lvgl/lvgl/src/misc/lv_style.h ****  * Register a new style property for custom usage
 300:lvgl/lvgl/src/misc/lv_style.h ****  * @return a new property ID.
 301:lvgl/lvgl/src/misc/lv_style.h ****  * @example
 302:lvgl/lvgl/src/misc/lv_style.h ****  * lv_style_prop_t MY_PROP;
 303:lvgl/lvgl/src/misc/lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 304:lvgl/lvgl/src/misc/lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 305:lvgl/lvgl/src/misc/lv_style.h ****  *
 306:lvgl/lvgl/src/misc/lv_style.h ****  * ...
 307:lvgl/lvgl/src/misc/lv_style.h ****  * MY_PROP = lv_style_register_prop();
 308:lvgl/lvgl/src/misc/lv_style.h ****  * ...
 309:lvgl/lvgl/src/misc/lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 310:lvgl/lvgl/src/misc/lv_style.h ****  */
 311:lvgl/lvgl/src/misc/lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 312:lvgl/lvgl/src/misc/lv_style.h **** 
 313:lvgl/lvgl/src/misc/lv_style.h **** /**
 314:lvgl/lvgl/src/misc/lv_style.h ****  * Remove a property from a style
 315:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 316:lvgl/lvgl/src/misc/lv_style.h ****  * @param prop  a style property ORed with a state.
 317:lvgl/lvgl/src/misc/lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 318:lvgl/lvgl/src/misc/lv_style.h ****  */
 319:lvgl/lvgl/src/misc/lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 320:lvgl/lvgl/src/misc/lv_style.h **** 
 321:lvgl/lvgl/src/misc/lv_style.h **** /**
 322:lvgl/lvgl/src/misc/lv_style.h ****  * Set the value of property in a style.
 323:lvgl/lvgl/src/misc/lv_style.h ****  * This function shouldn't be used directly by the user.
 324:lvgl/lvgl/src/misc/lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 325:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to style
 326:lvgl/lvgl/src/misc/lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STLYE_BG_COLOR`)
 327:lvgl/lvgl/src/misc/lv_style.h ****  * @param value `lv_style_value_t` variable in which a filed is set according to the type of `prop`
 328:lvgl/lvgl/src/misc/lv_style.h ****  */
 329:lvgl/lvgl/src/misc/lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 330:lvgl/lvgl/src/misc/lv_style.h **** 
 331:lvgl/lvgl/src/misc/lv_style.h **** /**
 332:lvgl/lvgl/src/misc/lv_style.h ****  * Get the value of a property
 333:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 334:lvgl/lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 335:lvgl/lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 336:lvgl/lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 337:lvgl/lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 338:lvgl/lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 339:lvgl/lvgl/src/misc/lv_style.h ****  */
 340:lvgl/lvgl/src/misc/lv_style.h **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value);
 341:lvgl/lvgl/src/misc/lv_style.h **** 
 342:lvgl/lvgl/src/misc/lv_style.h **** 
 343:lvgl/lvgl/src/misc/lv_style.h **** /**
 344:lvgl/lvgl/src/misc/lv_style.h ****  * Get the value of a property
 345:lvgl/lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 346:lvgl/lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 347:lvgl/lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 348:lvgl/lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 349:lvgl/lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 21


 350:lvgl/lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 351:lvgl/lvgl/src/misc/lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 352:lvgl/lvgl/src/misc/lv_style.h ****  */
 353:lvgl/lvgl/src/misc/lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style
 517              		.loc 2 353 24 view .LVU139
 518              	.LBB25:
 354:lvgl/lvgl/src/misc/lv_style.h **** {
 355:lvgl/lvgl/src/misc/lv_style.h ****     if(style->is_const) {
 519              		.loc 2 355 5 view .LVU140
 520              		.loc 2 355 7 is_stmt 0 view .LVU141
 521 0002 90F90500 		ldrsb	r0, [r0, #5]
 522              	.LVL48:
 523              		.loc 2 355 7 view .LVU142
 524 0006 0028     		cmp	r0, #0
 525 0008 11DB     		blt	.L57
 356:lvgl/lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t *const_prop;
 357:lvgl/lvgl/src/misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 358:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 359:lvgl/lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 360:lvgl/lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 361:lvgl/lvgl/src/misc/lv_style.h ****             }
 362:lvgl/lvgl/src/misc/lv_style.h ****         }
 363:lvgl/lvgl/src/misc/lv_style.h ****         return LV_RES_INV;
 364:lvgl/lvgl/src/misc/lv_style.h ****     }
 365:lvgl/lvgl/src/misc/lv_style.h **** 
 366:lvgl/lvgl/src/misc/lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
 526              		.loc 2 366 5 is_stmt 1 view .LVU143
 527              		.loc 2 366 13 is_stmt 0 view .LVU144
 528 000a D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 529              		.loc 2 366 7 view .LVU145
 530 000c 70B3     		cbz	r0, .L54
 367:lvgl/lvgl/src/misc/lv_style.h **** 
 368:lvgl/lvgl/src/misc/lv_style.h ****     if(style->prop_cnt > 1) {
 531              		.loc 2 368 5 is_stmt 1 view .LVU146
 532              		.loc 2 368 7 is_stmt 0 view .LVU147
 533 000e 0128     		cmp	r0, #1
 534 0010 21D9     		bls	.L48
 535              	.LBE25:
 536              	.LBE24:
 209:lvgl/lvgl/src/misc/lv_style.c ****    return lv_style_get_prop_inlined(style, prop, value);
 537              		.loc 1 209 1 view .LVU148
 538 0012 70B4     		push	{r4, r5, r6}
 539              	.LCFI9:
 540              		.cfi_def_cfa_offset 12
 541              		.cfi_offset 4, -12
 542              		.cfi_offset 5, -8
 543              		.cfi_offset 6, -4
 544              	.LBB32:
 545              	.LBB30:
 546              	.LBB26:
 369:lvgl/lvgl/src/misc/lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 547              		.loc 2 369 9 is_stmt 1 view .LVU149
 548              		.loc 2 369 35 is_stmt 0 view .LVU150
 549 0014 1D68     		ldr	r5, [r3]
 550              		.loc 2 369 60 view .LVU151
 551 0016 0646     		mov	r6, r0
 552              		.loc 2 369 71 view .LVU152
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 22


 553 0018 8000     		lsls	r0, r0, #2
 554              	.LVL49:
 370:lvgl/lvgl/src/misc/lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 555              		.loc 2 370 9 is_stmt 1 view .LVU153
 371:lvgl/lvgl/src/misc/lv_style.h ****         uint32_t i;
 556              		.loc 2 371 9 view .LVU154
 372:lvgl/lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 557              		.loc 2 372 9 view .LVU155
 558              		.loc 2 372 15 is_stmt 0 view .LVU156
 559 001a 0023     		movs	r3, #0
 560              	.LVL50:
 561              	.L49:
 562              		.loc 2 372 20 is_stmt 1 view .LVU157
 563              		.loc 2 372 9 is_stmt 0 view .LVU158
 564 001c 9E42     		cmp	r6, r3
 565 001e 17D9     		bls	.L58
 373:lvgl/lvgl/src/misc/lv_style.h ****             if(props[i] == prop) {
 566              		.loc 2 373 13 is_stmt 1 view .LVU159
 567              		.loc 2 373 21 is_stmt 0 view .LVU160
 568 0020 2C18     		adds	r4, r5, r0
 569 0022 34F81340 		ldrh	r4, [r4, r3, lsl #1]
 570              		.loc 2 373 15 view .LVU161
 571 0026 A142     		cmp	r1, r4
 572 0028 0DD0     		beq	.L59
 372:lvgl/lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 573              		.loc 2 372 41 is_stmt 1 view .LVU162
 372:lvgl/lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 574              		.loc 2 372 42 is_stmt 0 view .LVU163
 575 002a 0133     		adds	r3, r3, #1
 576              	.LVL51:
 372:lvgl/lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 577              		.loc 2 372 42 view .LVU164
 578 002c F6E7     		b	.L49
 579              	.LVL52:
 580              	.L57:
 581              	.LCFI10:
 582              		.cfi_def_cfa_offset 0
 583              		.cfi_restore 4
 584              		.cfi_restore 5
 585              		.cfi_restore 6
 372:lvgl/lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 586              		.loc 2 372 42 view .LVU165
 587              	.LBE26:
 588              	.LBB28:
 356:lvgl/lvgl/src/misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 589              		.loc 2 356 9 is_stmt 1 view .LVU166
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 590              		.loc 2 357 9 view .LVU167
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 591              		.loc 2 357 24 is_stmt 0 view .LVU168
 592 002e 1B68     		ldr	r3, [r3]
 593              	.LVL53:
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 594              		.loc 2 357 9 view .LVU169
 595 0030 00E0     		b	.L44
 596              	.L45:
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 23


 597              		.loc 2 357 89 is_stmt 1 view .LVU170
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 598              		.loc 2 357 99 is_stmt 0 view .LVU171
 599 0032 0833     		adds	r3, r3, #8
 600              	.LVL54:
 601              	.L44:
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 602              		.loc 2 357 50 is_stmt 1 view .LVU172
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 603              		.loc 2 357 60 is_stmt 0 view .LVU173
 604 0034 1888     		ldrh	r0, [r3]
 357:lvgl/lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 605              		.loc 2 357 9 view .LVU174
 606 0036 28B1     		cbz	r0, .L60
 358:lvgl/lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 607              		.loc 2 358 13 is_stmt 1 view .LVU175
 358:lvgl/lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 608              		.loc 2 358 15 is_stmt 0 view .LVU176
 609 0038 8142     		cmp	r1, r0
 610 003a FAD1     		bne	.L45
 359:lvgl/lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 611              		.loc 2 359 17 is_stmt 1 view .LVU177
 359:lvgl/lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 612              		.loc 2 359 24 is_stmt 0 view .LVU178
 613 003c 5B68     		ldr	r3, [r3, #4]
 614              	.LVL55:
 359:lvgl/lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 615              		.loc 2 359 24 view .LVU179
 616 003e 1360     		str	r3, [r2]
 360:lvgl/lvgl/src/misc/lv_style.h ****             }
 617              		.loc 2 360 17 is_stmt 1 view .LVU180
 360:lvgl/lvgl/src/misc/lv_style.h ****             }
 618              		.loc 2 360 24 is_stmt 0 view .LVU181
 619 0040 0120     		movs	r0, #1
 620 0042 7047     		bx	lr
 621              	.LVL56:
 622              	.L60:
 360:lvgl/lvgl/src/misc/lv_style.h ****             }
 623              		.loc 2 360 24 view .LVU182
 624 0044 7047     		bx	lr
 625              	.LVL57:
 626              	.L59:
 627              	.LCFI11:
 628              		.cfi_def_cfa_offset 12
 629              		.cfi_offset 4, -12
 630              		.cfi_offset 5, -8
 631              		.cfi_offset 6, -4
 360:lvgl/lvgl/src/misc/lv_style.h ****             }
 632              		.loc 2 360 24 view .LVU183
 633              	.LBE28:
 634              	.LBB29:
 635              	.LBB27:
 374:lvgl/lvgl/src/misc/lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 636              		.loc 2 374 17 is_stmt 1 view .LVU184
 375:lvgl/lvgl/src/misc/lv_style.h ****                 *value = values[i];
 637              		.loc 2 375 17 view .LVU185
 638              		.loc 2 375 24 is_stmt 0 view .LVU186
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 24


 639 0046 55F82330 		ldr	r3, [r5, r3, lsl #2]
 640              	.LVL58:
 641              		.loc 2 375 24 view .LVU187
 642 004a 1360     		str	r3, [r2]
 376:lvgl/lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 643              		.loc 2 376 17 is_stmt 1 view .LVU188
 644              		.loc 2 376 24 is_stmt 0 view .LVU189
 645 004c 0120     		movs	r0, #1
 646              	.LVL59:
 647              		.loc 2 376 24 view .LVU190
 648 004e 00E0     		b	.L46
 649              	.LVL60:
 650              	.L58:
 651              		.loc 2 376 24 view .LVU191
 652              	.LBE27:
 653              	.LBE29:
 377:lvgl/lvgl/src/misc/lv_style.h ****             }
 378:lvgl/lvgl/src/misc/lv_style.h ****         }
 379:lvgl/lvgl/src/misc/lv_style.h ****     } else if(style->prop1 == prop) {
 380:lvgl/lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 381:lvgl/lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 382:lvgl/lvgl/src/misc/lv_style.h ****     }
 383:lvgl/lvgl/src/misc/lv_style.h ****     return LV_RES_INV;
 654              		.loc 2 383 12 view .LVU192
 655 0050 0020     		movs	r0, #0
 656              	.LVL61:
 657              	.L46:
 658              		.loc 2 383 12 view .LVU193
 659              	.LBE30:
 660              	.LBE32:
 211:lvgl/lvgl/src/misc/lv_style.c **** }
 661              		.loc 1 211 1 view .LVU194
 662 0052 70BC     		pop	{r4, r5, r6}
 663              	.LCFI12:
 664              		.cfi_restore 6
 665              		.cfi_restore 5
 666              		.cfi_restore 4
 667              		.cfi_def_cfa_offset 0
 668              	.LVL62:
 669              		.loc 1 211 1 view .LVU195
 670 0054 7047     		bx	lr
 671              	.LVL63:
 672              	.L48:
 673              	.LBB33:
 674              	.LBB31:
 379:lvgl/lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 675              		.loc 2 379 12 is_stmt 1 view .LVU196
 379:lvgl/lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 676              		.loc 2 379 20 is_stmt 0 view .LVU197
 677 0056 9888     		ldrh	r0, [r3, #4]
 678 0058 C0F30E00 		ubfx	r0, r0, #0, #15
 379:lvgl/lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 679              		.loc 2 379 14 view .LVU198
 680 005c 8842     		cmp	r0, r1
 681 005e 01D0     		beq	.L61
 682              		.loc 2 383 12 view .LVU199
 683 0060 0020     		movs	r0, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 25


 684 0062 7047     		bx	lr
 685              	.L61:
 380:lvgl/lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 686              		.loc 2 380 9 is_stmt 1 view .LVU200
 380:lvgl/lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 687              		.loc 2 380 16 is_stmt 0 view .LVU201
 688 0064 1B68     		ldr	r3, [r3]
 689              	.LVL64:
 380:lvgl/lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 690              		.loc 2 380 16 view .LVU202
 691 0066 1360     		str	r3, [r2]
 381:lvgl/lvgl/src/misc/lv_style.h ****     }
 692              		.loc 2 381 9 is_stmt 1 view .LVU203
 381:lvgl/lvgl/src/misc/lv_style.h ****     }
 693              		.loc 2 381 16 is_stmt 0 view .LVU204
 694 0068 0120     		movs	r0, #1
 695 006a 7047     		bx	lr
 696              	.LVL65:
 697              	.L54:
 381:lvgl/lvgl/src/misc/lv_style.h ****     }
 698              		.loc 2 381 16 view .LVU205
 699              	.LBE31:
 700              	.LBE33:
 701              		.loc 1 211 1 view .LVU206
 702 006c 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE56:
 706              		.section	.text.lv_style_transition_dsc_init,"ax",%progbits
 707              		.align	1
 708              		.global	lv_style_transition_dsc_init
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	lv_style_transition_dsc_init:
 715              	.LVL66:
 716              	.LFB57:
 212:lvgl/lvgl/src/misc/lv_style.c **** 
 213:lvgl/lvgl/src/misc/lv_style.c **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv
 214:lvgl/lvgl/src/misc/lv_style.c **** {
 717              		.loc 1 214 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 8, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		.loc 1 214 1 is_stmt 0 view .LVU208
 722 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 723              	.LCFI13:
 724              		.cfi_def_cfa_offset 24
 725              		.cfi_offset 3, -24
 726              		.cfi_offset 4, -20
 727              		.cfi_offset 5, -16
 728              		.cfi_offset 6, -12
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 0446     		mov	r4, r0
 732 0004 0F46     		mov	r7, r1
 733 0006 1546     		mov	r5, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 26


 734 0008 1E46     		mov	r6, r3
 215:lvgl/lvgl/src/misc/lv_style.c ****     lv_memset_00(tr, sizeof(lv_style_transition_dsc_t));
 735              		.loc 1 215 5 is_stmt 1 view .LVU209
 736 000a 1421     		movs	r1, #20
 737              	.LVL67:
 738              		.loc 1 215 5 is_stmt 0 view .LVU210
 739 000c FFF7FEFF 		bl	lv_memset_00
 740              	.LVL68:
 216:lvgl/lvgl/src/misc/lv_style.c ****     tr->props = props;
 741              		.loc 1 216 5 is_stmt 1 view .LVU211
 742              		.loc 1 216 15 is_stmt 0 view .LVU212
 743 0010 2760     		str	r7, [r4]
 217:lvgl/lvgl/src/misc/lv_style.c ****     tr->path_xcb = path_cb == NULL ? lv_anim_path_linear : path_cb;
 744              		.loc 1 217 5 is_stmt 1 view .LVU213
 745              		.loc 1 217 58 is_stmt 0 view .LVU214
 746 0012 35B1     		cbz	r5, .L66
 747              	.LVL69:
 748              	.L63:
 749              		.loc 1 217 18 discriminator 4 view .LVU215
 750 0014 A560     		str	r5, [r4, #8]
 218:lvgl/lvgl/src/misc/lv_style.c ****     tr->time = time;
 751              		.loc 1 218 5 is_stmt 1 discriminator 4 view .LVU216
 752              		.loc 1 218 14 is_stmt 0 discriminator 4 view .LVU217
 753 0016 E660     		str	r6, [r4, #12]
 219:lvgl/lvgl/src/misc/lv_style.c ****     tr->delay = delay;
 754              		.loc 1 219 5 is_stmt 1 discriminator 4 view .LVU218
 755              		.loc 1 219 15 is_stmt 0 discriminator 4 view .LVU219
 756 0018 069B     		ldr	r3, [sp, #24]
 757 001a 2361     		str	r3, [r4, #16]
 220:lvgl/lvgl/src/misc/lv_style.c **** #if LV_USE_USER_DATA
 221:lvgl/lvgl/src/misc/lv_style.c ****     tr->user_data = user_data;
 758              		.loc 1 221 5 is_stmt 1 discriminator 4 view .LVU220
 759              		.loc 1 221 19 is_stmt 0 discriminator 4 view .LVU221
 760 001c 079B     		ldr	r3, [sp, #28]
 761 001e 6360     		str	r3, [r4, #4]
 222:lvgl/lvgl/src/misc/lv_style.c **** #else
 223:lvgl/lvgl/src/misc/lv_style.c ****     LV_UNUSED(user_data);
 224:lvgl/lvgl/src/misc/lv_style.c **** #endif
 225:lvgl/lvgl/src/misc/lv_style.c **** }
 762              		.loc 1 225 1 discriminator 4 view .LVU222
 763 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 764              	.LVL70:
 765              	.L66:
 217:lvgl/lvgl/src/misc/lv_style.c ****     tr->time = time;
 766              		.loc 1 217 58 view .LVU223
 767 0022 014D     		ldr	r5, .L67
 768              	.LVL71:
 217:lvgl/lvgl/src/misc/lv_style.c ****     tr->time = time;
 769              		.loc 1 217 58 view .LVU224
 770 0024 F6E7     		b	.L63
 771              	.L68:
 772 0026 00BF     		.align	2
 773              	.L67:
 774 0028 00000000 		.word	lv_anim_path_linear
 775              		.cfi_endproc
 776              	.LFE57:
 778              		.section	.text.lv_style_prop_get_default,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 27


 779              		.align	1
 780              		.global	lv_style_prop_get_default
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	lv_style_prop_get_default:
 787              	.LVL72:
 788              	.LFB58:
 226:lvgl/lvgl/src/misc/lv_style.c **** 
 227:lvgl/lvgl/src/misc/lv_style.c **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop)
 228:lvgl/lvgl/src/misc/lv_style.c **** {
 789              		.loc 1 228 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 229:lvgl/lvgl/src/misc/lv_style.c ****     lv_style_value_t value;
 794              		.loc 1 229 5 view .LVU226
 230:lvgl/lvgl/src/misc/lv_style.c ****     switch(prop) {
 795              		.loc 1 230 5 view .LVU227
 796 0000 5328     		cmp	r0, #83
 797 0002 20D8     		bhi	.L70
 798 0004 2028     		cmp	r0, #32
 799 0006 43D3     		bcc	.L71
 800 0008 2038     		subs	r0, r0, #32
 801              	.LVL73:
 802              		.loc 1 230 5 is_stmt 0 view .LVU228
 803 000a 3328     		cmp	r0, #51
 804 000c 40D8     		bhi	.L71
 805 000e DFE800F0 		tbb	[pc, r0]
 806              	.L73:
 807 0012 4A       		.byte	(.L77-.L73)/2
 808 0013 3F       		.byte	(.L71-.L73)/2
 809 0014 50       		.byte	(.L74-.L73)/2
 810 0015 3F       		.byte	(.L71-.L73)/2
 811 0016 3F       		.byte	(.L71-.L73)/2
 812 0017 54       		.byte	(.L76-.L73)/2
 813 0018 3F       		.byte	(.L71-.L73)/2
 814 0019 48       		.byte	(.L72-.L73)/2
 815 001a 3F       		.byte	(.L71-.L73)/2
 816 001b 3F       		.byte	(.L71-.L73)/2
 817 001c 3F       		.byte	(.L71-.L73)/2
 818 001d 3F       		.byte	(.L71-.L73)/2
 819 001e 3F       		.byte	(.L71-.L73)/2
 820 001f 3F       		.byte	(.L71-.L73)/2
 821 0020 3F       		.byte	(.L71-.L73)/2
 822 0021 3F       		.byte	(.L71-.L73)/2
 823 0022 50       		.byte	(.L74-.L73)/2
 824 0023 48       		.byte	(.L72-.L73)/2
 825 0024 3F       		.byte	(.L71-.L73)/2
 826 0025 56       		.byte	(.L75-.L73)/2
 827 0026 3F       		.byte	(.L71-.L73)/2
 828 0027 3F       		.byte	(.L71-.L73)/2
 829 0028 3F       		.byte	(.L71-.L73)/2
 830 0029 3F       		.byte	(.L71-.L73)/2
 831 002a 3F       		.byte	(.L71-.L73)/2
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 28


 832 002b 3F       		.byte	(.L71-.L73)/2
 833 002c 3F       		.byte	(.L71-.L73)/2
 834 002d 50       		.byte	(.L74-.L73)/2
 835 002e 3F       		.byte	(.L71-.L73)/2
 836 002f 3F       		.byte	(.L71-.L73)/2
 837 0030 3F       		.byte	(.L71-.L73)/2
 838 0031 3F       		.byte	(.L71-.L73)/2
 839 0032 3F       		.byte	(.L71-.L73)/2
 840 0033 3F       		.byte	(.L71-.L73)/2
 841 0034 3F       		.byte	(.L71-.L73)/2
 842 0035 3F       		.byte	(.L71-.L73)/2
 843 0036 50       		.byte	(.L74-.L73)/2
 844 0037 3F       		.byte	(.L71-.L73)/2
 845 0038 48       		.byte	(.L72-.L73)/2
 846 0039 50       		.byte	(.L74-.L73)/2
 847 003a 3F       		.byte	(.L71-.L73)/2
 848 003b 3F       		.byte	(.L71-.L73)/2
 849 003c 3F       		.byte	(.L71-.L73)/2
 850 003d 3F       		.byte	(.L71-.L73)/2
 851 003e 3F       		.byte	(.L71-.L73)/2
 852 003f 50       		.byte	(.L74-.L73)/2
 853 0040 48       		.byte	(.L72-.L73)/2
 854 0041 3F       		.byte	(.L71-.L73)/2
 855 0042 3F       		.byte	(.L71-.L73)/2
 856 0043 3F       		.byte	(.L71-.L73)/2
 857 0044 50       		.byte	(.L74-.L73)/2
 858 0045 48       		.byte	(.L72-.L73)/2
 859              	.LVL74:
 860              		.p2align 1
 861              	.L70:
 862              		.loc 1 230 5 view .LVU229
 863 0046 41F25943 		movw	r3, #5209
 864 004a 9842     		cmp	r0, r3
 865 004c 39D0     		beq	.L78
 866 004e 06D9     		bls	.L84
 867 0050 43F60E03 		movw	r3, #14350
 868 0054 9842     		cmp	r0, r3
 869 0056 1BD1     		bne	.L71
 231:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 232:lvgl/lvgl/src/misc/lv_style.c ****             value.num = LV_IMG_ZOOM_NONE;
 870              		.loc 1 232 13 is_stmt 1 view .LVU230
 871              		.loc 1 232 23 is_stmt 0 view .LVU231
 872 0058 4FF48070 		mov	r0, #256
 873              	.LVL75:
 233:lvgl/lvgl/src/misc/lv_style.c ****             break;
 874              		.loc 1 233 13 is_stmt 1 view .LVU232
 875 005c 7047     		bx	lr
 876              	.LVL76:
 877              	.L84:
 230:lvgl/lvgl/src/misc/lv_style.c ****     switch(prop) {
 878              		.loc 1 230 5 is_stmt 0 view .LVU233
 879 005e 41F20303 		movw	r3, #4099
 880 0062 9842     		cmp	r0, r3
 881 0064 04D0     		beq	.L80
 882 0066 06D9     		bls	.L85
 883 0068 41F20603 		movw	r3, #4102
 884 006c 9842     		cmp	r0, r3
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 29


 885 006e 0FD1     		bne	.L71
 886              	.L80:
 234:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_COLOR:
 235:lvgl/lvgl/src/misc/lv_style.c ****             value.color = lv_color_white();
 236:lvgl/lvgl/src/misc/lv_style.c ****             break;
 237:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_COLOR:
 238:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_COLOR:
 239:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_COLOR:
 240:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_COLOR:
 241:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_COLOR:
 242:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_COLOR:
 243:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_COLOR:
 244:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_RECOLOR:
 245:lvgl/lvgl/src/misc/lv_style.c ****             value.color = lv_color_black();
 246:lvgl/lvgl/src/misc/lv_style.c ****             break;
 247:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_OPA:
 248:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_OPA:
 249:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_OPA:
 250:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_OPA:
 251:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_IMG_OPA:
 252:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_OPA:
 253:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_OPA:
 254:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_OPA:
 255:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_OPA:
 256:lvgl/lvgl/src/misc/lv_style.c ****             value.num = LV_OPA_COVER;
 257:lvgl/lvgl/src/misc/lv_style.c ****             break;
 258:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 259:lvgl/lvgl/src/misc/lv_style.c ****             value.num = 255;
 260:lvgl/lvgl/src/misc/lv_style.c ****             break;
 261:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
 262:lvgl/lvgl/src/misc/lv_style.c ****             value.num = LV_BORDER_SIDE_FULL;
 263:lvgl/lvgl/src/misc/lv_style.c ****             break;
 264:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 265:lvgl/lvgl/src/misc/lv_style.c ****             value.ptr = LV_FONT_DEFAULT;
 266:lvgl/lvgl/src/misc/lv_style.c ****             break;
 267:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 268:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_HEIGHT:
 269:lvgl/lvgl/src/misc/lv_style.c ****             value.num = LV_COORD_MAX;
 887              		.loc 1 269 13 is_stmt 1 view .LVU234
 888              		.loc 1 269 23 is_stmt 0 view .LVU235
 889 0070 4FF4C040 		mov	r0, #24576
 890              	.LVL77:
 270:lvgl/lvgl/src/misc/lv_style.c ****             break;
 891              		.loc 1 270 13 is_stmt 1 view .LVU236
 892 0074 7047     		bx	lr
 893              	.LVL78:
 894              	.L85:
 230:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 895              		.loc 1 230 5 is_stmt 0 view .LVU237
 896 0076 40F26243 		movw	r3, #1122
 897 007a 9842     		cmp	r0, r3
 898 007c 11D0     		beq	.L72
 899 007e 09D9     		bls	.L86
 900 0080 40F63C03 		movw	r3, #2108
 901 0084 9842     		cmp	r0, r3
 902 0086 0CD0     		beq	.L72
 903 0088 40F64503 		movw	r3, #2117
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 30


 904 008c 9842     		cmp	r0, r3
 905 008e 08D0     		beq	.L72
 906              	.LVL79:
 907              	.L71:
 271:lvgl/lvgl/src/misc/lv_style.c ****         default:
 272:lvgl/lvgl/src/misc/lv_style.c ****             value.ptr = NULL;
 908              		.loc 1 272 13 is_stmt 1 view .LVU238
 909              		.loc 1 272 23 is_stmt 0 view .LVU239
 910 0090 0020     		movs	r0, #0
 273:lvgl/lvgl/src/misc/lv_style.c ****             value.num = 0;
 911              		.loc 1 273 13 is_stmt 1 view .LVU240
 274:lvgl/lvgl/src/misc/lv_style.c ****             break;
 912              		.loc 1 274 13 view .LVU241
 275:lvgl/lvgl/src/misc/lv_style.c ****     }
 276:lvgl/lvgl/src/misc/lv_style.c **** 
 277:lvgl/lvgl/src/misc/lv_style.c ****     return value;
 913              		.loc 1 277 5 view .LVU242
 278:lvgl/lvgl/src/misc/lv_style.c **** }
 914              		.loc 1 278 1 is_stmt 0 view .LVU243
 915 0092 7047     		bx	lr
 916              	.LVL80:
 917              	.L86:
 230:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 918              		.loc 1 230 5 view .LVU244
 919 0094 40F25743 		movw	r3, #1111
 920 0098 9842     		cmp	r0, r3
 921 009a 0AD0     		beq	.L74
 922 009c B0F58B6F 		cmp	r0, #1112
 923 00a0 F6D1     		bne	.L71
 924              	.LVL81:
 925              	.L72:
 256:lvgl/lvgl/src/misc/lv_style.c ****             break;
 926              		.loc 1 256 13 is_stmt 1 view .LVU245
 256:lvgl/lvgl/src/misc/lv_style.c ****             break;
 927              		.loc 1 256 23 is_stmt 0 view .LVU246
 928 00a2 FF20     		movs	r0, #255
 257:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 929              		.loc 1 257 13 is_stmt 1 view .LVU247
 930 00a4 7047     		bx	lr
 931              	.L77:
 235:lvgl/lvgl/src/misc/lv_style.c ****             break;
 932              		.loc 1 235 13 view .LVU248
 933              	.LBB34:
 934              	.LBI34:
 935              		.file 3 "lvgl/lvgl/src/misc/lv_color.h"
   1:lvgl/lvgl/src/misc/lv_color.h **** /**
   2:lvgl/lvgl/src/misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/lvgl/src/misc/lv_color.h ****  *
   4:lvgl/lvgl/src/misc/lv_color.h ****  */
   5:lvgl/lvgl/src/misc/lv_color.h **** 
   6:lvgl/lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/lvgl/src/misc/lv_color.h **** 
   9:lvgl/lvgl/src/misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/misc/lv_color.h **** extern "C" {
  11:lvgl/lvgl/src/misc/lv_color.h **** #endif
  12:lvgl/lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 31


  13:lvgl/lvgl/src/misc/lv_color.h **** /*********************
  14:lvgl/lvgl/src/misc/lv_color.h ****  *      INCLUDES
  15:lvgl/lvgl/src/misc/lv_color.h ****  *********************/
  16:lvgl/lvgl/src/misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/lvgl/src/misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/lvgl/src/misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/lvgl/src/misc/lv_color.h **** 
  20:lvgl/lvgl/src/misc/lv_color.h **** /*Error checking*/
  21:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/lvgl/src/misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/lvgl/src/misc/lv_color.h **** #endif
  24:lvgl/lvgl/src/misc/lv_color.h **** 
  25:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/lvgl/src/misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/lvgl/src/misc/lv_color.h **** #endif
  28:lvgl/lvgl/src/misc/lv_color.h **** 
  29:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/lvgl/src/misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/lvgl/src/misc/lv_color.h **** #endif
  32:lvgl/lvgl/src/misc/lv_color.h **** 
  33:lvgl/lvgl/src/misc/lv_color.h **** #include <stdint.h>
  34:lvgl/lvgl/src/misc/lv_color.h **** 
  35:lvgl/lvgl/src/misc/lv_color.h **** /*********************
  36:lvgl/lvgl/src/misc/lv_color.h ****  *      DEFINES
  37:lvgl/lvgl/src/misc/lv_color.h ****  *********************/
  38:lvgl/lvgl/src/misc/lv_color.h **** 
  39:lvgl/lvgl/src/misc/lv_color.h **** /**
  40:lvgl/lvgl/src/misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/lvgl/src/misc/lv_color.h ****  */
  42:lvgl/lvgl/src/misc/lv_color.h **** enum {
  43:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/lvgl/src/misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/lvgl/src/misc/lv_color.h **** };
  57:lvgl/lvgl/src/misc/lv_color.h **** 
  58:lvgl/lvgl/src/misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/lvgl/src/misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/lvgl/src/misc/lv_color.h **** 
  61:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/lvgl/src/misc/lv_color.h **** #else
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 32


  70:lvgl/lvgl/src/misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/lvgl/src/misc/lv_color.h **** #endif
  72:lvgl/lvgl/src/misc/lv_color.h **** 
  73:lvgl/lvgl/src/misc/lv_color.h **** /**
  74:lvgl/lvgl/src/misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/lvgl/src/misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/lvgl/src/misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/lvgl/src/misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/lvgl/src/misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/lvgl/src/misc/lv_color.h ****  * 128: round up from half
  80:lvgl/lvgl/src/misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/lvgl/src/misc/lv_color.h ****  * 254: round up*/
  82:lvgl/lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/lvgl/src/misc/lv_color.h **** #else
  86:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/lvgl/src/misc/lv_color.h **** #endif
  88:lvgl/lvgl/src/misc/lv_color.h **** #endif
  89:lvgl/lvgl/src/misc/lv_color.h **** 
  90:lvgl/lvgl/src/misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/lvgl/src/misc/lv_color.h **** /**
  92:lvgl/lvgl/src/misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/lvgl/src/misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/lvgl/src/misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/lvgl/src/misc/lv_color.h **** */
  96:lvgl/lvgl/src/misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/lvgl/src/misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/lvgl/src/misc/lv_color.h **** #endif
 100:lvgl/lvgl/src/misc/lv_color.h **** #else
 101:lvgl/lvgl/src/misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/lvgl/src/misc/lv_color.h **** #endif
 104:lvgl/lvgl/src/misc/lv_color.h **** #endif
 105:lvgl/lvgl/src/misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/lvgl/src/misc/lv_color.h **** 
 107:lvgl/lvgl/src/misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/lvgl/src/misc/lv_color.h **** #endif
 110:lvgl/lvgl/src/misc/lv_color.h **** 
 111:lvgl/lvgl/src/misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/lvgl/src/misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/lvgl/src/misc/lv_color.h **** #else
 115:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/lvgl/src/misc/lv_color.h **** #endif
 117:lvgl/lvgl/src/misc/lv_color.h **** 
 118:lvgl/lvgl/src/misc/lv_color.h **** /*---------------------------------------
 119:lvgl/lvgl/src/misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 33


 127:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/lvgl/src/misc/lv_color.h **** 
 132:lvgl/lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/lvgl/src/misc/lv_color.h **** 
 135:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/lvgl/src/misc/lv_color.h **** 
 140:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/lvgl/src/misc/lv_color.h **** 
 145:lvgl/lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/lvgl/src/misc/lv_color.h **** 
 148:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/lvgl/src/misc/lv_color.h **** #else
 152:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/lvgl/src/misc/lv_color.h **** #endif
 154:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/lvgl/src/misc/lv_color.h **** 
 157:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/lvgl/src/misc/lv_color.h **** #else
 161:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/lvgl/src/misc/lv_color.h **** #endif
 163:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/lvgl/src/misc/lv_color.h **** 
 166:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/lvgl/src/misc/lv_color.h **** #else
 170:lvgl/lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/lvgl/src/misc/lv_color.h **** #endif
 173:lvgl/lvgl/src/misc/lv_color.h **** 
 174:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/lvgl/src/misc/lv_color.h **** 
 179:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 34


 184:lvgl/lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/lvgl/src/misc/lv_color.h **** 
 187:lvgl/lvgl/src/misc/lv_color.h **** /*---------------------------------------
 188:lvgl/lvgl/src/misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/lvgl/src/misc/lv_color.h **** 
 196:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/lvgl/src/misc/lv_color.h **** 
 201:lvgl/lvgl/src/misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/lvgl/src/misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/lvgl/src/misc/lv_color.h **** 
 204:lvgl/lvgl/src/misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/lvgl/src/misc/lv_color.h **** 
 206:lvgl/lvgl/src/misc/lv_color.h **** /**********************
 207:lvgl/lvgl/src/misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/lvgl/src/misc/lv_color.h ****  **********************/
 209:lvgl/lvgl/src/misc/lv_color.h **** 
 210:lvgl/lvgl/src/misc/lv_color.h **** typedef union {
 211:lvgl/lvgl/src/misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/lvgl/src/misc/lv_color.h ****     union {
 213:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/lvgl/src/misc/lv_color.h ****     } ch;
 217:lvgl/lvgl/src/misc/lv_color.h **** } lv_color1_t;
 218:lvgl/lvgl/src/misc/lv_color.h **** 
 219:lvgl/lvgl/src/misc/lv_color.h **** typedef union {
 220:lvgl/lvgl/src/misc/lv_color.h ****     struct {
 221:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/lvgl/src/misc/lv_color.h ****     } ch;
 225:lvgl/lvgl/src/misc/lv_color.h ****     uint8_t full;
 226:lvgl/lvgl/src/misc/lv_color.h **** } lv_color8_t;
 227:lvgl/lvgl/src/misc/lv_color.h **** 
 228:lvgl/lvgl/src/misc/lv_color.h **** typedef union {
 229:lvgl/lvgl/src/misc/lv_color.h ****     struct {
 230:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/lvgl/src/misc/lv_color.h **** #else
 235:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/lvgl/src/misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/lvgl/src/misc/lv_color.h **** #endif
 240:lvgl/lvgl/src/misc/lv_color.h ****     } ch;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 35


 241:lvgl/lvgl/src/misc/lv_color.h ****     uint16_t full;
 242:lvgl/lvgl/src/misc/lv_color.h **** } lv_color16_t;
 243:lvgl/lvgl/src/misc/lv_color.h **** 
 244:lvgl/lvgl/src/misc/lv_color.h **** typedef union {
 245:lvgl/lvgl/src/misc/lv_color.h ****     struct {
 246:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t blue;
 247:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t green;
 248:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t red;
 249:lvgl/lvgl/src/misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/lvgl/src/misc/lv_color.h ****     } ch;
 251:lvgl/lvgl/src/misc/lv_color.h ****     uint32_t full;
 252:lvgl/lvgl/src/misc/lv_color.h **** } lv_color32_t;
 253:lvgl/lvgl/src/misc/lv_color.h **** 
 254:lvgl/lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/lvgl/src/misc/lv_color.h **** 
 257:lvgl/lvgl/src/misc/lv_color.h **** typedef struct {
 258:lvgl/lvgl/src/misc/lv_color.h ****     uint16_t h;
 259:lvgl/lvgl/src/misc/lv_color.h ****     uint8_t s;
 260:lvgl/lvgl/src/misc/lv_color.h ****     uint8_t v;
 261:lvgl/lvgl/src/misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/lvgl/src/misc/lv_color.h **** 
 263:lvgl/lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/lvgl/src/misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/lvgl/src/misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/lvgl/src/misc/lv_color.h **** //! @endcond
 267:lvgl/lvgl/src/misc/lv_color.h **** 
 268:lvgl/lvgl/src/misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/lvgl/src/misc/lv_color.h **** 
 270:lvgl/lvgl/src/misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/lvgl/src/misc/lv_color.h **** 
 272:lvgl/lvgl/src/misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/lvgl/src/misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/lvgl/src/misc/lv_color.h ****     void * user_data;
 275:lvgl/lvgl/src/misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/lvgl/src/misc/lv_color.h **** 
 277:lvgl/lvgl/src/misc/lv_color.h **** 
 278:lvgl/lvgl/src/misc/lv_color.h **** typedef enum {
 279:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREY,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 36


 298:lvgl/lvgl/src/misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/lvgl/src/misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/lvgl/src/misc/lv_color.h **** }lv_palette_t;
 301:lvgl/lvgl/src/misc/lv_color.h **** 
 302:lvgl/lvgl/src/misc/lv_color.h **** /**********************
 303:lvgl/lvgl/src/misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/lvgl/src/misc/lv_color.h ****  **********************/
 305:lvgl/lvgl/src/misc/lv_color.h **** 
 306:lvgl/lvgl/src/misc/lv_color.h **** /*In color conversations:
 307:lvgl/lvgl/src/misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/lvgl/src/misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/lvgl/src/misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/lvgl/src/misc/lv_color.h ****  *        ----------------------
 311:lvgl/lvgl/src/misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/lvgl/src/misc/lv_color.h ****  *
 313:lvgl/lvgl/src/misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/lvgl/src/misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/lvgl/src/misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/lvgl/src/misc/lv_color.h ****  *        ----------------------
 317:lvgl/lvgl/src/misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/lvgl/src/misc/lv_color.h ****  */
 319:lvgl/lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/lvgl/src/misc/lv_color.h **** {
 321:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/lvgl/src/misc/lv_color.h ****     return color.full;
 323:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/lvgl/src/misc/lv_color.h ****         return 1;
 326:lvgl/lvgl/src/misc/lv_color.h ****     }
 327:lvgl/lvgl/src/misc/lv_color.h ****     else {
 328:lvgl/lvgl/src/misc/lv_color.h ****         return 0;
 329:lvgl/lvgl/src/misc/lv_color.h ****     }
 330:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/lvgl/src/misc/lv_color.h ****         return 1;
 333:lvgl/lvgl/src/misc/lv_color.h ****     }
 334:lvgl/lvgl/src/misc/lv_color.h ****     else {
 335:lvgl/lvgl/src/misc/lv_color.h ****         return 0;
 336:lvgl/lvgl/src/misc/lv_color.h ****     }
 337:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/lvgl/src/misc/lv_color.h ****         return 1;
 340:lvgl/lvgl/src/misc/lv_color.h ****     }
 341:lvgl/lvgl/src/misc/lv_color.h ****     else {
 342:lvgl/lvgl/src/misc/lv_color.h ****         return 0;
 343:lvgl/lvgl/src/misc/lv_color.h ****     }
 344:lvgl/lvgl/src/misc/lv_color.h **** #endif
 345:lvgl/lvgl/src/misc/lv_color.h **** }
 346:lvgl/lvgl/src/misc/lv_color.h **** 
 347:lvgl/lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/lvgl/src/misc/lv_color.h **** {
 349:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/lvgl/src/misc/lv_color.h ****         return 0;
 352:lvgl/lvgl/src/misc/lv_color.h ****     else
 353:lvgl/lvgl/src/misc/lv_color.h ****         return 0xFF;
 354:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 37


 355:lvgl/lvgl/src/misc/lv_color.h ****     return color.full;
 356:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 362:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 368:lvgl/lvgl/src/misc/lv_color.h **** #endif
 369:lvgl/lvgl/src/misc/lv_color.h **** }
 370:lvgl/lvgl/src/misc/lv_color.h **** 
 371:lvgl/lvgl/src/misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/lvgl/src/misc/lv_color.h **** {
 373:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/lvgl/src/misc/lv_color.h ****         return 0;
 376:lvgl/lvgl/src/misc/lv_color.h ****     else
 377:lvgl/lvgl/src/misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 384:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/lvgl/src/misc/lv_color.h ****     return color.full;
 386:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 392:lvgl/lvgl/src/misc/lv_color.h **** #endif
 393:lvgl/lvgl/src/misc/lv_color.h **** }
 394:lvgl/lvgl/src/misc/lv_color.h **** 
 395:lvgl/lvgl/src/misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/lvgl/src/misc/lv_color.h **** {
 397:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/lvgl/src/misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/lvgl/src/misc/lv_color.h ****     else
 401:lvgl/lvgl/src/misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 409:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/lvgl/src/misc/lv_color.h ****     /**
 411:lvgl/lvgl/src/misc/lv_color.h ****      * The floating point math for conversion is:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 38


 412:lvgl/lvgl/src/misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/lvgl/src/misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/lvgl/src/misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/lvgl/src/misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/lvgl/src/misc/lv_color.h ****      *
 417:lvgl/lvgl/src/misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/lvgl/src/misc/lv_color.h ****      *
 419:lvgl/lvgl/src/misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/lvgl/src/misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/lvgl/src/misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/lvgl/src/misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/lvgl/src/misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/lvgl/src/misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/lvgl/src/misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/lvgl/src/misc/lv_color.h ****      *
 428:lvgl/lvgl/src/misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/lvgl/src/misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/lvgl/src/misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/lvgl/src/misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/lvgl/src/misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/lvgl/src/misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/lvgl/src/misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/lvgl/src/misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/lvgl/src/misc/lv_color.h ****      */
 438:lvgl/lvgl/src/misc/lv_color.h **** 
 439:lvgl/lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/lvgl/src/misc/lv_color.h ****     return ret.full;
 445:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/lvgl/src/misc/lv_color.h ****     return color.full;
 447:lvgl/lvgl/src/misc/lv_color.h **** #endif
 448:lvgl/lvgl/src/misc/lv_color.h **** }
 449:lvgl/lvgl/src/misc/lv_color.h **** 
 450:lvgl/lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/lvgl/src/misc/lv_color.h **** 
 452:lvgl/lvgl/src/misc/lv_color.h **** /**
 453:lvgl/lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/lvgl/src/misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/lvgl/src/misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/lvgl/src/misc/lv_color.h ****  * @return the mixed color
 458:lvgl/lvgl/src/misc/lv_color.h ****  */
 459:lvgl/lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:lvgl/lvgl/src/misc/lv_color.h **** {
 461:lvgl/lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 462:lvgl/lvgl/src/misc/lv_color.h **** 
 463:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:lvgl/lvgl/src/misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:lvgl/lvgl/src/misc/lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:lvgl/lvgl/src/misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:lvgl/lvgl/src/misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:lvgl/lvgl/src/misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 39


 469:lvgl/lvgl/src/misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:lvgl/lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:lvgl/lvgl/src/misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:lvgl/lvgl/src/misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:lvgl/lvgl/src/misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:lvgl/lvgl/src/misc/lv_color.h **** #else
 480:lvgl/lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:lvgl/lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:lvgl/lvgl/src/misc/lv_color.h **** #endif
 483:lvgl/lvgl/src/misc/lv_color.h **** 
 484:lvgl/lvgl/src/misc/lv_color.h ****     return ret;
 485:lvgl/lvgl/src/misc/lv_color.h **** }
 486:lvgl/lvgl/src/misc/lv_color.h **** 
 487:lvgl/lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:lvgl/lvgl/src/misc/lv_color.h **** {
 489:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:lvgl/lvgl/src/misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:lvgl/lvgl/src/misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:lvgl/lvgl/src/misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:lvgl/lvgl/src/misc/lv_color.h **** #else
 494:lvgl/lvgl/src/misc/lv_color.h ****     (void) mix;
 495:lvgl/lvgl/src/misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:lvgl/lvgl/src/misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:lvgl/lvgl/src/misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:lvgl/lvgl/src/misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:lvgl/lvgl/src/misc/lv_color.h **** #endif
 500:lvgl/lvgl/src/misc/lv_color.h **** 
 501:lvgl/lvgl/src/misc/lv_color.h **** }
 502:lvgl/lvgl/src/misc/lv_color.h **** 
 503:lvgl/lvgl/src/misc/lv_color.h **** /**
 504:lvgl/lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:lvgl/lvgl/src/misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:lvgl/lvgl/src/misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:lvgl/lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:lvgl/lvgl/src/misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:lvgl/lvgl/src/misc/lv_color.h ****  * @return the mixed color
 510:lvgl/lvgl/src/misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:lvgl/lvgl/src/misc/lv_color.h ****  */
 512:lvgl/lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:lvgl/lvgl/src/misc/lv_color.h **** {
 514:lvgl/lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 515:lvgl/lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:lvgl/lvgl/src/misc/lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:lvgl/lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:lvgl/lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 40


 526:lvgl/lvgl/src/misc/lv_color.h **** #else
 527:lvgl/lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:lvgl/lvgl/src/misc/lv_color.h ****     /*Restore color1*/
 529:lvgl/lvgl/src/misc/lv_color.h ****     lv_color_t c1;
 530:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:lvgl/lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:lvgl/lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:lvgl/lvgl/src/misc/lv_color.h **** #endif
 535:lvgl/lvgl/src/misc/lv_color.h **** 
 536:lvgl/lvgl/src/misc/lv_color.h ****     return ret;
 537:lvgl/lvgl/src/misc/lv_color.h **** }
 538:lvgl/lvgl/src/misc/lv_color.h **** 
 539:lvgl/lvgl/src/misc/lv_color.h **** /**
 540:lvgl/lvgl/src/misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:lvgl/lvgl/src/misc/lv_color.h ****  * @param bg_color background color
 542:lvgl/lvgl/src/misc/lv_color.h ****  * @param bg_opa alpha of the background color
 543:lvgl/lvgl/src/misc/lv_color.h ****  * @param fg_color foreground color
 544:lvgl/lvgl/src/misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:lvgl/lvgl/src/misc/lv_color.h ****  * @param res_color the result color
 546:lvgl/lvgl/src/misc/lv_color.h ****  * @param res_opa the result opacity
 547:lvgl/lvgl/src/misc/lv_color.h ****  */
 548:lvgl/lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:lvgl/lvgl/src/misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:lvgl/lvgl/src/misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:lvgl/lvgl/src/misc/lv_color.h **** {
 552:lvgl/lvgl/src/misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:lvgl/lvgl/src/misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:lvgl/lvgl/src/misc/lv_color.h ****         res_color->full = fg_color.full;
 555:lvgl/lvgl/src/misc/lv_color.h ****         *res_opa = fg_opa;
 556:lvgl/lvgl/src/misc/lv_color.h ****     }
 557:lvgl/lvgl/src/misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 558:lvgl/lvgl/src/misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:lvgl/lvgl/src/misc/lv_color.h ****         res_color->full = bg_color.full;
 560:lvgl/lvgl/src/misc/lv_color.h ****         *res_opa = bg_opa;
 561:lvgl/lvgl/src/misc/lv_color.h ****     }
 562:lvgl/lvgl/src/misc/lv_color.h ****     /*Opaque background: use simple mix*/
 563:lvgl/lvgl/src/misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:lvgl/lvgl/src/misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:lvgl/lvgl/src/misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:lvgl/lvgl/src/misc/lv_color.h ****     }
 567:lvgl/lvgl/src/misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:lvgl/lvgl/src/misc/lv_color.h ****     else {
 569:lvgl/lvgl/src/misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:lvgl/lvgl/src/misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:lvgl/lvgl/src/misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:lvgl/lvgl/src/misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:lvgl/lvgl/src/misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:lvgl/lvgl/src/misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:lvgl/lvgl/src/misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:lvgl/lvgl/src/misc/lv_color.h **** 
 577:lvgl/lvgl/src/misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:lvgl/lvgl/src/misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:lvgl/lvgl/src/misc/lv_color.h ****             fg_opa_save        = fg_opa;
 580:lvgl/lvgl/src/misc/lv_color.h ****             bg_opa_save        = bg_opa;
 581:lvgl/lvgl/src/misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 582:lvgl/lvgl/src/misc/lv_color.h ****             bg_color_save.full = bg_color.full;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 41


 583:lvgl/lvgl/src/misc/lv_color.h ****             /*Info:
 584:lvgl/lvgl/src/misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:lvgl/lvgl/src/misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:lvgl/lvgl/src/misc/lv_color.h ****             if(res_opa_saved == 0) {
 587:lvgl/lvgl/src/misc/lv_color.h ****                 while(1)
 588:lvgl/lvgl/src/misc/lv_color.h ****                     ;
 589:lvgl/lvgl/src/misc/lv_color.h ****             }
 590:lvgl/lvgl/src/misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:lvgl/lvgl/src/misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:lvgl/lvgl/src/misc/lv_color.h **** 
 593:lvgl/lvgl/src/misc/lv_color.h ****         }
 594:lvgl/lvgl/src/misc/lv_color.h **** 
 595:lvgl/lvgl/src/misc/lv_color.h ****         res_color->full = res_color_saved.full;
 596:lvgl/lvgl/src/misc/lv_color.h ****         *res_opa = res_opa_saved;
 597:lvgl/lvgl/src/misc/lv_color.h ****     }
 598:lvgl/lvgl/src/misc/lv_color.h **** }
 599:lvgl/lvgl/src/misc/lv_color.h **** 
 600:lvgl/lvgl/src/misc/lv_color.h **** //! @endcond
 601:lvgl/lvgl/src/misc/lv_color.h **** 
 602:lvgl/lvgl/src/misc/lv_color.h **** /**
 603:lvgl/lvgl/src/misc/lv_color.h ****  * Get the brightness of a color
 604:lvgl/lvgl/src/misc/lv_color.h ****  * @param color a color
 605:lvgl/lvgl/src/misc/lv_color.h ****  * @return the brightness [0..255]
 606:lvgl/lvgl/src/misc/lv_color.h ****  */
 607:lvgl/lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:lvgl/lvgl/src/misc/lv_color.h **** {
 609:lvgl/lvgl/src/misc/lv_color.h ****     lv_color32_t c32;
 610:lvgl/lvgl/src/misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 611:lvgl/lvgl/src/misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:lvgl/lvgl/src/misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 613:lvgl/lvgl/src/misc/lv_color.h **** }
 614:lvgl/lvgl/src/misc/lv_color.h **** 
 615:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:lvgl/lvgl/src/misc/lv_color.h **** {
 617:lvgl/lvgl/src/misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:lvgl/lvgl/src/misc/lv_color.h **** }
 619:lvgl/lvgl/src/misc/lv_color.h **** 
 620:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:lvgl/lvgl/src/misc/lv_color.h **** {
 622:lvgl/lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:lvgl/lvgl/src/misc/lv_color.h **** }
 624:lvgl/lvgl/src/misc/lv_color.h **** 
 625:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 626:lvgl/lvgl/src/misc/lv_color.h **** {
 627:lvgl/lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 628:lvgl/lvgl/src/misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 629:lvgl/lvgl/src/misc/lv_color.h **** }
 630:lvgl/lvgl/src/misc/lv_color.h **** 
 631:lvgl/lvgl/src/misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 632:lvgl/lvgl/src/misc/lv_color.h **** {
 633:lvgl/lvgl/src/misc/lv_color.h ****     dsc->filter_cb = cb;
 634:lvgl/lvgl/src/misc/lv_color.h **** }
 635:lvgl/lvgl/src/misc/lv_color.h **** 
 636:lvgl/lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 637:lvgl/lvgl/src/misc/lv_color.h **** //!
 638:lvgl/lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 639:lvgl/lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 42


 640:lvgl/lvgl/src/misc/lv_color.h **** //! @endcond
 641:lvgl/lvgl/src/misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 642:lvgl/lvgl/src/misc/lv_color.h **** 
 643:lvgl/lvgl/src/misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 644:lvgl/lvgl/src/misc/lv_color.h **** 
 645:lvgl/lvgl/src/misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 646:lvgl/lvgl/src/misc/lv_color.h **** 
 647:lvgl/lvgl/src/misc/lv_color.h **** /**
 648:lvgl/lvgl/src/misc/lv_color.h ****  * Convert a HSV color to RGB
 649:lvgl/lvgl/src/misc/lv_color.h ****  * @param h hue [0..359]
 650:lvgl/lvgl/src/misc/lv_color.h ****  * @param s saturation [0..100]
 651:lvgl/lvgl/src/misc/lv_color.h ****  * @param v value [0..100]
 652:lvgl/lvgl/src/misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 653:lvgl/lvgl/src/misc/lv_color.h ****  */
 654:lvgl/lvgl/src/misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 655:lvgl/lvgl/src/misc/lv_color.h **** 
 656:lvgl/lvgl/src/misc/lv_color.h **** /**
 657:lvgl/lvgl/src/misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 658:lvgl/lvgl/src/misc/lv_color.h ****  * @param r8 8-bit red
 659:lvgl/lvgl/src/misc/lv_color.h ****  * @param g8 8-bit green
 660:lvgl/lvgl/src/misc/lv_color.h ****  * @param b8 8-bit blue
 661:lvgl/lvgl/src/misc/lv_color.h ****  * @return the given RGB color in HSV
 662:lvgl/lvgl/src/misc/lv_color.h ****  */
 663:lvgl/lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 664:lvgl/lvgl/src/misc/lv_color.h **** 
 665:lvgl/lvgl/src/misc/lv_color.h **** /**
 666:lvgl/lvgl/src/misc/lv_color.h ****  * Convert a color to HSV
 667:lvgl/lvgl/src/misc/lv_color.h ****  * @param color color
 668:lvgl/lvgl/src/misc/lv_color.h ****  * @return the given color in HSV
 669:lvgl/lvgl/src/misc/lv_color.h ****  */
 670:lvgl/lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 671:lvgl/lvgl/src/misc/lv_color.h **** 
 672:lvgl/lvgl/src/misc/lv_color.h **** /**
 673:lvgl/lvgl/src/misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 674:lvgl/lvgl/src/misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 675:lvgl/lvgl/src/misc/lv_color.h ****  */
 676:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 677:lvgl/lvgl/src/misc/lv_color.h **** {
 678:lvgl/lvgl/src/misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 679:lvgl/lvgl/src/misc/lv_color.h **** }
 680:lvgl/lvgl/src/misc/lv_color.h **** 
 681:lvgl/lvgl/src/misc/lv_color.h **** /**********************
 682:lvgl/lvgl/src/misc/lv_color.h ****  *  PREDEFINED COLORS
 683:lvgl/lvgl/src/misc/lv_color.h ****  **********************/
 684:lvgl/lvgl/src/misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 685:lvgl/lvgl/src/misc/lv_color.h **** 
 686:lvgl/lvgl/src/misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 687:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 936              		.loc 3 687 26 view .LVU249
 937              	.LBB35:
 938              		.loc 3 687 49 view .LVU250
 939              	.LVL82:
 940              	.LBB36:
 941              	.LBI36:
 615:lvgl/lvgl/src/misc/lv_color.h **** {
 942              		.loc 3 615 26 view .LVU251
 943              	.LBB37:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 43


 617:lvgl/lvgl/src/misc/lv_color.h **** }
 944              		.loc 3 617 5 view .LVU252
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 945              		.loc 3 617 5 is_stmt 0 view .LVU253
 946 00a6 0020     		movs	r0, #0
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 947              		.loc 3 617 5 view .LVU254
 948 00a8 4FF6FF73 		movw	r3, #65535
 949 00ac 63F30F00 		bfi	r0, r3, #0, #16
 950              	.LVL83:
 951              	.LVL84:
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 952              		.loc 3 617 5 view .LVU255
 953              	.LBE37:
 954              	.LBE36:
 955              		.loc 3 687 56 view .LVU256
 956 00b0 7047     		bx	lr
 957              	.L74:
 958              	.LBE35:
 959              	.LBE34:
 245:lvgl/lvgl/src/misc/lv_style.c ****             break;
 960              		.loc 1 245 13 is_stmt 1 view .LVU257
 961              	.LBB38:
 962              	.LBI38:
 688:lvgl/lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
 963              		.loc 3 688 26 view .LVU258
 964              	.LBB39:
 965              		.loc 3 688 49 view .LVU259
 966              	.LVL85:
 967              	.LBB40:
 968              	.LBI40:
 615:lvgl/lvgl/src/misc/lv_color.h **** {
 969              		.loc 3 615 26 view .LVU260
 970              	.LBB41:
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 971              		.loc 3 617 5 view .LVU261
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 972              		.loc 3 617 5 is_stmt 0 view .LVU262
 973 00b2 0020     		movs	r0, #0
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 974              		.loc 3 617 5 view .LVU263
 975 00b4 6FF30F00 		bfc	r0, #0, #16
 976              	.LVL86:
 977              	.LVL87:
 617:lvgl/lvgl/src/misc/lv_color.h **** }
 978              		.loc 3 617 5 view .LVU264
 979              	.LBE41:
 980              	.LBE40:
 981              		.loc 3 688 56 view .LVU265
 982 00b8 7047     		bx	lr
 983              	.L76:
 984              	.LBE39:
 985              	.LBE38:
 259:lvgl/lvgl/src/misc/lv_style.c ****             break;
 986              		.loc 1 259 13 is_stmt 1 view .LVU266
 259:lvgl/lvgl/src/misc/lv_style.c ****             break;
 987              		.loc 1 259 23 is_stmt 0 view .LVU267
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 44


 988 00ba FF20     		movs	r0, #255
 260:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
 989              		.loc 1 260 13 is_stmt 1 view .LVU268
 990 00bc 7047     		bx	lr
 991              	.L75:
 262:lvgl/lvgl/src/misc/lv_style.c ****             break;
 992              		.loc 1 262 13 view .LVU269
 262:lvgl/lvgl/src/misc/lv_style.c ****             break;
 993              		.loc 1 262 23 is_stmt 0 view .LVU270
 994 00be 0F20     		movs	r0, #15
 263:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 995              		.loc 1 263 13 is_stmt 1 view .LVU271
 996 00c0 7047     		bx	lr
 997              	.LVL88:
 998              	.L78:
 265:lvgl/lvgl/src/misc/lv_style.c ****             break;
 999              		.loc 1 265 13 view .LVU272
 265:lvgl/lvgl/src/misc/lv_style.c ****             break;
 1000              		.loc 1 265 23 is_stmt 0 view .LVU273
 1001 00c2 0148     		ldr	r0, .L87
 1002              	.LVL89:
 266:lvgl/lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 1003              		.loc 1 266 13 is_stmt 1 view .LVU274
 1004 00c4 7047     		bx	lr
 1005              	.L88:
 1006 00c6 00BF     		.align	2
 1007              	.L87:
 1008 00c8 00000000 		.word	lv_font_montserrat_14
 1009              		.cfi_endproc
 1010              	.LFE58:
 1012              		.section	.text.lv_style_is_empty,"ax",%progbits
 1013              		.align	1
 1014              		.global	lv_style_is_empty
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv4-sp-d16
 1020              	lv_style_is_empty:
 1021              	.LVL90:
 1022              	.LFB59:
 279:lvgl/lvgl/src/misc/lv_style.c **** 
 280:lvgl/lvgl/src/misc/lv_style.c **** bool lv_style_is_empty(const lv_style_t * style)
 281:lvgl/lvgl/src/misc/lv_style.c **** {
 1023              		.loc 1 281 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 282:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1028              		.loc 1 282 27 view .LVU276
 283:lvgl/lvgl/src/misc/lv_style.c **** 
 284:lvgl/lvgl/src/misc/lv_style.c ****     return style->prop_cnt == 0 ? true : false;
 1029              		.loc 1 284 5 view .LVU277
 1030              		.loc 1 284 17 is_stmt 0 view .LVU278
 1031 0000 C079     		ldrb	r0, [r0, #7]	@ zero_extendqisi2
 1032              	.LVL91:
 285:lvgl/lvgl/src/misc/lv_style.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 45


 1033              		.loc 1 285 1 view .LVU279
 1034 0002 B0FA80F0 		clz	r0, r0
 1035 0006 4009     		lsrs	r0, r0, #5
 1036 0008 7047     		bx	lr
 1037              		.cfi_endproc
 1038              	.LFE59:
 1040              		.section	.text._lv_style_get_prop_group,"ax",%progbits
 1041              		.align	1
 1042              		.global	_lv_style_get_prop_group
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	_lv_style_get_prop_group:
 1049              	.LVL92:
 1050              	.LFB60:
 286:lvgl/lvgl/src/misc/lv_style.c **** 
 287:lvgl/lvgl/src/misc/lv_style.c **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop)
 288:lvgl/lvgl/src/misc/lv_style.c **** {
 1051              		.loc 1 288 1 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 289:lvgl/lvgl/src/misc/lv_style.c ****     uint16_t group = (prop & 0x1FF) >> 4;
 1056              		.loc 1 289 5 view .LVU281
 1057              		.loc 1 289 37 is_stmt 0 view .LVU282
 1058 0000 0309     		lsrs	r3, r0, #4
 1059              		.loc 1 289 14 view .LVU283
 1060 0002 C0F30410 		ubfx	r0, r0, #4, #5
 1061              	.LVL93:
 290:lvgl/lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 1062              		.loc 1 290 5 is_stmt 1 view .LVU284
 1063              		.loc 1 290 7 is_stmt 0 view .LVU285
 1064 0006 13F0180F 		tst	r3, #24
 1065 000a 00D0     		beq	.L91
 1066              		.loc 1 290 25 view .LVU286
 1067 000c 0720     		movs	r0, #7
 1068              	.LVL94:
 1069              	.L91:
 291:lvgl/lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 1070              		.loc 1 291 5 is_stmt 1 view .LVU287
 292:lvgl/lvgl/src/misc/lv_style.c **** }
 1071              		.loc 1 292 1 is_stmt 0 view .LVU288
 1072 000e 7047     		bx	lr
 1073              		.cfi_endproc
 1074              	.LFE60:
 1076              		.section	.rodata.lv_style_set_prop.str1.4,"aMS",%progbits,1
 1077              		.align	2
 1078              	.LC3:
 1079 0000 43616E6E 		.ascii	"Cannot set property of constant style\000"
 1079      6F742073 
 1079      65742070 
 1079      726F7065 
 1079      72747920 
 1080              		.section	.text.lv_style_set_prop,"ax",%progbits
 1081              		.align	1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 46


 1082              		.global	lv_style_set_prop
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
 1086              		.fpu fpv4-sp-d16
 1088              	lv_style_set_prop:
 1089              	.LVL95:
 1090              	.LFB55:
 138:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1091              		.loc 1 138 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 138:lvgl/lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1095              		.loc 1 138 1 is_stmt 0 view .LVU290
 1096 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1097              	.LCFI14:
 1098              		.cfi_def_cfa_offset 20
 1099              		.cfi_offset 4, -20
 1100              		.cfi_offset 5, -16
 1101              		.cfi_offset 6, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 83B0     		sub	sp, sp, #12
 1105              	.LCFI15:
 1106              		.cfi_def_cfa_offset 32
 139:lvgl/lvgl/src/misc/lv_style.c **** 
 1107              		.loc 1 139 27 is_stmt 1 view .LVU291
 141:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 1108              		.loc 1 141 5 view .LVU292
 141:lvgl/lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 1109              		.loc 1 141 7 is_stmt 0 view .LVU293
 1110 0004 90F90530 		ldrsb	r3, [r0, #5]
 1111 0008 002B     		cmp	r3, #0
 1112 000a 11DB     		blt	.L107
 1113 000c 0546     		mov	r5, r0
 1114 000e 0E46     		mov	r6, r1
 1115 0010 1746     		mov	r7, r2
 1116              	.LVL96:
 146:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1117              		.loc 1 146 5 is_stmt 1 view .LVU294
 146:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1118              		.loc 1 146 13 is_stmt 0 view .LVU295
 1119 0012 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 146:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1120              		.loc 1 146 7 view .LVU296
 1121 0014 012A     		cmp	r2, #1
 1122 0016 3FD9     		bls	.L96
 1123              	.LBB42:
 147:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1124              		.loc 1 147 9 is_stmt 1 view .LVU297
 147:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1125              		.loc 1 147 35 is_stmt 0 view .LVU298
 1126 0018 0068     		ldr	r0, [r0]
 1127              	.LVL97:
 147:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1128              		.loc 1 147 71 view .LVU299
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 47


 1129 001a 9100     		lsls	r1, r2, #2
 1130              	.LVL98:
 148:lvgl/lvgl/src/misc/lv_style.c ****         int32_t i;
 1131              		.loc 1 148 9 is_stmt 1 view .LVU300
 149:lvgl/lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1132              		.loc 1 149 9 view .LVU301
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1133              		.loc 1 150 9 view .LVU302
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1134              		.loc 1 150 15 is_stmt 0 view .LVU303
 1135 001c 531E     		subs	r3, r2, #1
 1136              	.LVL99:
 1137              	.L97:
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1138              		.loc 1 150 38 is_stmt 1 discriminator 1 view .LVU304
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1139              		.loc 1 150 9 is_stmt 0 discriminator 1 view .LVU305
 1140 001e 002B     		cmp	r3, #0
 1141 0020 12DB     		blt	.L108
 151:lvgl/lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1142              		.loc 1 151 13 is_stmt 1 view .LVU306
 151:lvgl/lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1143              		.loc 1 151 21 is_stmt 0 view .LVU307
 1144 0022 4418     		adds	r4, r0, r1
 1145 0024 34F81340 		ldrh	r4, [r4, r3, lsl #1]
 151:lvgl/lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1146              		.loc 1 151 15 view .LVU308
 1147 0028 B442     		cmp	r4, r6
 1148 002a 0AD0     		beq	.L109
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1149              		.loc 1 150 46 is_stmt 1 discriminator 2 view .LVU309
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1150              		.loc 1 150 47 is_stmt 0 discriminator 2 view .LVU310
 1151 002c 013B     		subs	r3, r3, #1
 1152              	.LVL100:
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1153              		.loc 1 150 47 discriminator 2 view .LVU311
 1154 002e F6E7     		b	.L97
 1155              	.LVL101:
 1156              	.L107:
 150:lvgl/lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1157              		.loc 1 150 47 discriminator 2 view .LVU312
 1158              	.LBE42:
 142:lvgl/lvgl/src/misc/lv_style.c ****         return;
 1159              		.loc 1 142 9 is_stmt 1 view .LVU313
 1160 0030 334B     		ldr	r3, .L112
 1161 0032 0093     		str	r3, [sp]
 1162 0034 334B     		ldr	r3, .L112+4
 1163 0036 8E22     		movs	r2, #142
 1164              	.LVL102:
 142:lvgl/lvgl/src/misc/lv_style.c ****         return;
 1165              		.loc 1 142 9 is_stmt 0 view .LVU314
 1166 0038 3349     		ldr	r1, .L112+8
 1167              	.LVL103:
 142:lvgl/lvgl/src/misc/lv_style.c ****         return;
 1168              		.loc 1 142 9 view .LVU315
 1169 003a 0320     		movs	r0, #3
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 48


 1170              	.LVL104:
 142:lvgl/lvgl/src/misc/lv_style.c ****         return;
 1171              		.loc 1 142 9 view .LVU316
 1172 003c FFF7FEFF 		bl	_lv_log_add
 1173              	.LVL105:
 142:lvgl/lvgl/src/misc/lv_style.c ****         return;
 1174              		.loc 1 142 62 is_stmt 1 view .LVU317
 143:lvgl/lvgl/src/misc/lv_style.c ****     }
 1175              		.loc 1 143 9 view .LVU318
 1176 0040 3BE0     		b	.L93
 1177              	.LVL106:
 1178              	.L109:
 1179              	.LBB44:
 1180              	.LBB43:
 152:lvgl/lvgl/src/misc/lv_style.c ****                 values[i] = value;
 1181              		.loc 1 152 17 view .LVU319
 153:lvgl/lvgl/src/misc/lv_style.c ****                 return;
 1182              		.loc 1 153 17 view .LVU320
 153:lvgl/lvgl/src/misc/lv_style.c ****                 return;
 1183              		.loc 1 153 27 is_stmt 0 view .LVU321
 1184 0042 40F82370 		str	r7, [r0, r3, lsl #2]
 154:lvgl/lvgl/src/misc/lv_style.c ****             }
 1185              		.loc 1 154 17 is_stmt 1 view .LVU322
 1186 0046 38E0     		b	.L93
 1187              	.LVL107:
 1188              	.L108:
 154:lvgl/lvgl/src/misc/lv_style.c ****             }
 1189              		.loc 1 154 17 is_stmt 0 view .LVU323
 1190              	.LBE43:
 158:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1191              		.loc 1 158 9 is_stmt 1 view .LVU324
 158:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1192              		.loc 1 158 40 is_stmt 0 view .LVU325
 1193 0048 0132     		adds	r2, r2, #1
 158:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1194              		.loc 1 158 16 view .LVU326
 1195 004a 02EB4202 		add	r2, r2, r2, lsl #1
 1196              	.LVL108:
 159:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1197              		.loc 1 159 9 is_stmt 1 view .LVU327
 159:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1198              		.loc 1 159 38 is_stmt 0 view .LVU328
 1199 004e 5100     		lsls	r1, r2, #1
 1200              	.LVL109:
 159:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1201              		.loc 1 159 38 view .LVU329
 1202 0050 FFF7FEFF 		bl	lv_mem_realloc
 1203              	.LVL110:
 160:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1204              		.loc 1 160 9 is_stmt 1 view .LVU330
 160:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1205              		.loc 1 160 11 is_stmt 0 view .LVU331
 1206 0054 0446     		mov	r4, r0
 1207 0056 80B3     		cbz	r0, .L93
 161:lvgl/lvgl/src/misc/lv_style.c **** 
 1208              		.loc 1 161 9 is_stmt 1 view .LVU332
 161:lvgl/lvgl/src/misc/lv_style.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 49


 1209              		.loc 1 161 37 is_stmt 0 view .LVU333
 1210 0058 2860     		str	r0, [r5]
 163:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1211              		.loc 1 163 9 is_stmt 1 view .LVU334
 163:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1212              		.loc 1 163 39 is_stmt 0 view .LVU335
 1213 005a EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 163:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1214              		.loc 1 163 13 view .LVU336
 1215 005c 00EB8302 		add	r2, r0, r3, lsl #2
 1216              	.LVL111:
 164:lvgl/lvgl/src/misc/lv_style.c ****         /*Shift all props to make place for the value before them*/
 1217              		.loc 1 164 9 is_stmt 1 view .LVU337
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1218              		.loc 1 166 9 view .LVU338
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1219              		.loc 1 166 15 is_stmt 0 view .LVU339
 1220 0060 013B     		subs	r3, r3, #1
 1221              	.LVL112:
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1222              		.loc 1 166 9 view .LVU340
 1223 0062 05E0     		b	.L100
 1224              	.LVL113:
 1225              	.L101:
 167:lvgl/lvgl/src/misc/lv_style.c ****         }
 1226              		.loc 1 167 13 is_stmt 1 discriminator 3 view .LVU341
 167:lvgl/lvgl/src/misc/lv_style.c ****         }
 1227              		.loc 1 167 18 is_stmt 0 discriminator 3 view .LVU342
 1228 0064 991C     		adds	r1, r3, #2
 167:lvgl/lvgl/src/misc/lv_style.c ****         }
 1229              		.loc 1 167 74 discriminator 3 view .LVU343
 1230 0066 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 167:lvgl/lvgl/src/misc/lv_style.c ****         }
 1231              		.loc 1 167 67 discriminator 3 view .LVU344
 1232 006a 22F81100 		strh	r0, [r2, r1, lsl #1]	@ movhi
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1233              		.loc 1 166 46 is_stmt 1 discriminator 3 view .LVU345
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1234              		.loc 1 166 47 is_stmt 0 discriminator 3 view .LVU346
 1235 006e 013B     		subs	r3, r3, #1
 1236              	.LVL114:
 1237              	.L100:
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1238              		.loc 1 166 38 is_stmt 1 discriminator 1 view .LVU347
 166:lvgl/lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) /sizeof(uint16_t)] = props[i];
 1239              		.loc 1 166 9 is_stmt 0 discriminator 1 view .LVU348
 1240 0070 002B     		cmp	r3, #0
 1241 0072 F7DA     		bge	.L101
 169:lvgl/lvgl/src/misc/lv_style.c **** 
 1242              		.loc 1 169 9 is_stmt 1 view .LVU349
 169:lvgl/lvgl/src/misc/lv_style.c **** 
 1243              		.loc 1 169 14 is_stmt 0 view .LVU350
 1244 0074 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 1245              	.LVL115:
 169:lvgl/lvgl/src/misc/lv_style.c **** 
 1246              		.loc 1 169 24 view .LVU351
 1247 0076 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 50


 1248 0078 DAB2     		uxtb	r2, r3
 1249              	.LVL116:
 169:lvgl/lvgl/src/misc/lv_style.c **** 
 1250              		.loc 1 169 24 view .LVU352
 1251 007a EA71     		strb	r2, [r5, #7]
 172:lvgl/lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1252              		.loc 1 172 9 is_stmt 1 view .LVU353
 1253              	.LVL117:
 173:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1254              		.loc 1 173 9 view .LVU354
 174:lvgl/lvgl/src/misc/lv_style.c **** 
 1255              		.loc 1 174 9 view .LVU355
 177:lvgl/lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1256              		.loc 1 177 9 view .LVU356
 177:lvgl/lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1257              		.loc 1 177 14 is_stmt 0 view .LVU357
 1258 007c 02F10043 		add	r3, r2, #-2147483648
 1259 0080 013B     		subs	r3, r3, #1
 1260 0082 5B00     		lsls	r3, r3, #1
 1261 0084 03EB8203 		add	r3, r3, r2, lsl #2
 177:lvgl/lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1262              		.loc 1 177 36 view .LVU358
 1263 0088 E652     		strh	r6, [r4, r3]	@ movhi
 178:lvgl/lvgl/src/misc/lv_style.c ****     } else if(style->prop_cnt == 1) {
 1264              		.loc 1 178 9 is_stmt 1 view .LVU359
 178:lvgl/lvgl/src/misc/lv_style.c ****     } else if(style->prop_cnt == 1) {
 1265              		.loc 1 178 21 is_stmt 0 view .LVU360
 1266 008a EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 178:lvgl/lvgl/src/misc/lv_style.c ****     } else if(style->prop_cnt == 1) {
 1267              		.loc 1 178 15 view .LVU361
 1268 008c 03F18043 		add	r3, r3, #1073741824
 1269 0090 013B     		subs	r3, r3, #1
 1270              	.LVL118:
 178:lvgl/lvgl/src/misc/lv_style.c ****     } else if(style->prop_cnt == 1) {
 1271              		.loc 1 178 37 view .LVU362
 1272 0092 44F82370 		str	r7, [r4, r3, lsl #2]
 1273              	.LBE44:
 1274 0096 08E0     		b	.L102
 1275              	.LVL119:
 1276              	.L96:
 179:lvgl/lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 1277              		.loc 1 179 12 is_stmt 1 view .LVU363
 179:lvgl/lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 1278              		.loc 1 179 14 is_stmt 0 view .LVU364
 1279 0098 012A     		cmp	r2, #1
 1280 009a 10D0     		beq	.L110
 199:lvgl/lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 1281              		.loc 1 199 9 is_stmt 1 view .LVU365
 199:lvgl/lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 1282              		.loc 1 199 25 is_stmt 0 view .LVU366
 1283 009c 0123     		movs	r3, #1
 1284 009e C371     		strb	r3, [r0, #7]
 200:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 1285              		.loc 1 200 9 is_stmt 1 view .LVU367
 200:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 1286              		.loc 1 200 22 is_stmt 0 view .LVU368
 1287 00a0 8388     		ldrh	r3, [r0, #4]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 51


 1288 00a2 61F30E03 		bfi	r3, r1, #0, #15
 1289 00a6 8380     		strh	r3, [r0, #4]	@ movhi
 201:lvgl/lvgl/src/misc/lv_style.c ****     }
 1290              		.loc 1 201 9 is_stmt 1 view .LVU369
 1291              	.LVL120:
 201:lvgl/lvgl/src/misc/lv_style.c ****     }
 1292              		.loc 1 201 27 is_stmt 0 view .LVU370
 1293 00a8 0760     		str	r7, [r0]
 1294              	.LVL121:
 1295              	.L102:
 204:lvgl/lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1296              		.loc 1 204 5 is_stmt 1 view .LVU371
 204:lvgl/lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1297              		.loc 1 204 21 is_stmt 0 view .LVU372
 1298 00aa 3046     		mov	r0, r6
 1299              	.LVL122:
 204:lvgl/lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1300              		.loc 1 204 21 view .LVU373
 1301 00ac FFF7FEFF 		bl	_lv_style_get_prop_group
 1302              	.LVL123:
 205:lvgl/lvgl/src/misc/lv_style.c **** }
 1303              		.loc 1 205 5 is_stmt 1 view .LVU374
 205:lvgl/lvgl/src/misc/lv_style.c **** }
 1304              		.loc 1 205 27 is_stmt 0 view .LVU375
 1305 00b0 0123     		movs	r3, #1
 1306 00b2 8340     		lsls	r3, r3, r0
 205:lvgl/lvgl/src/misc/lv_style.c **** }
 1307              		.loc 1 205 22 view .LVU376
 1308 00b4 A879     		ldrb	r0, [r5, #6]	@ zero_extendqisi2
 1309              	.LVL124:
 205:lvgl/lvgl/src/misc/lv_style.c **** }
 1310              		.loc 1 205 22 view .LVU377
 1311 00b6 1843     		orrs	r0, r0, r3
 1312 00b8 A871     		strb	r0, [r5, #6]
 1313              	.LVL125:
 1314              	.L93:
 206:lvgl/lvgl/src/misc/lv_style.c **** 
 1315              		.loc 1 206 1 view .LVU378
 1316 00ba 03B0     		add	sp, sp, #12
 1317              	.LCFI16:
 1318              		.cfi_remember_state
 1319              		.cfi_def_cfa_offset 20
 1320              		@ sp needed
 1321 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1322              	.LVL126:
 1323              	.L110:
 1324              	.LCFI17:
 1325              		.cfi_restore_state
 1326              	.LBB45:
 180:lvgl/lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1327              		.loc 1 180 9 is_stmt 1 view .LVU379
 180:lvgl/lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1328              		.loc 1 180 17 is_stmt 0 view .LVU380
 1329 00be 8388     		ldrh	r3, [r0, #4]
 1330 00c0 C3F30E03 		ubfx	r3, r3, #0, #15
 180:lvgl/lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1331              		.loc 1 180 11 view .LVU381
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 52


 1332 00c4 8B42     		cmp	r3, r1
 1333 00c6 19D0     		beq	.L111
 184:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1334              		.loc 1 184 9 is_stmt 1 view .LVU382
 184:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1335              		.loc 1 184 40 is_stmt 0 view .LVU383
 1336 00c8 0132     		adds	r2, r2, #1
 184:lvgl/lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1337              		.loc 1 184 16 view .LVU384
 1338 00ca 02EB4202 		add	r2, r2, r2, lsl #1
 1339              	.LVL127:
 185:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1340              		.loc 1 185 9 is_stmt 1 view .LVU385
 185:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1341              		.loc 1 185 38 is_stmt 0 view .LVU386
 1342 00ce 5000     		lsls	r0, r2, #1
 1343              	.LVL128:
 185:lvgl/lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1344              		.loc 1 185 38 view .LVU387
 1345 00d0 FFF7FEFF 		bl	lv_mem_alloc
 1346              	.LVL129:
 186:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1347              		.loc 1 186 9 is_stmt 1 view .LVU388
 186:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1348              		.loc 1 186 11 is_stmt 0 view .LVU389
 1349 00d4 0246     		mov	r2, r0
 1350 00d6 0028     		cmp	r0, #0
 1351 00d8 EFD0     		beq	.L93
 187:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1352              		.loc 1 187 9 is_stmt 1 view .LVU390
 187:lvgl/lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1353              		.loc 1 187 26 is_stmt 0 view .LVU391
 1354 00da 2868     		ldr	r0, [r5]
 1355              	.LVL130:
 188:lvgl/lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1356              		.loc 1 188 9 is_stmt 1 view .LVU392
 188:lvgl/lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1357              		.loc 1 188 37 is_stmt 0 view .LVU393
 1358 00dc 2A60     		str	r2, [r5]
 189:lvgl/lvgl/src/misc/lv_style.c **** 
 1359              		.loc 1 189 9 is_stmt 1 view .LVU394
 189:lvgl/lvgl/src/misc/lv_style.c **** 
 1360              		.loc 1 189 14 is_stmt 0 view .LVU395
 1361 00de EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 189:lvgl/lvgl/src/misc/lv_style.c **** 
 1362              		.loc 1 189 24 view .LVU396
 1363 00e0 0133     		adds	r3, r3, #1
 1364 00e2 DBB2     		uxtb	r3, r3
 1365 00e4 EB71     		strb	r3, [r5, #7]
 191:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1366              		.loc 1 191 9 is_stmt 1 view .LVU397
 191:lvgl/lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1367              		.loc 1 191 19 is_stmt 0 view .LVU398
 1368 00e6 02EB8304 		add	r4, r2, r3, lsl #2
 1369              	.LVL131:
 192:lvgl/lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1370              		.loc 1 192 9 is_stmt 1 view .LVU399
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 53


 193:lvgl/lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 1371              		.loc 1 193 9 view .LVU400
 194:lvgl/lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1372              		.loc 1 194 9 view .LVU401
 194:lvgl/lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1373              		.loc 1 194 25 is_stmt 0 view .LVU402
 1374 00ea A988     		ldrh	r1, [r5, #4]
 1375 00ec C1F30E01 		ubfx	r1, r1, #0, #15
 194:lvgl/lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1376              		.loc 1 194 18 view .LVU403
 1377 00f0 22F82310 		strh	r1, [r2, r3, lsl #2]	@ movhi
 195:lvgl/lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1378              		.loc 1 195 9 is_stmt 1 view .LVU404
 195:lvgl/lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1379              		.loc 1 195 18 is_stmt 0 view .LVU405
 1380 00f4 6680     		strh	r6, [r4, #2]	@ movhi
 196:lvgl/lvgl/src/misc/lv_style.c ****         values[1] = value;
 1381              		.loc 1 196 9 is_stmt 1 view .LVU406
 1382              	.LVL132:
 196:lvgl/lvgl/src/misc/lv_style.c ****         values[1] = value;
 1383              		.loc 1 196 19 is_stmt 0 view .LVU407
 1384 00f6 1060     		str	r0, [r2]
 197:lvgl/lvgl/src/misc/lv_style.c ****     } else {
 1385              		.loc 1 197 9 is_stmt 1 view .LVU408
 1386              	.LVL133:
 197:lvgl/lvgl/src/misc/lv_style.c ****     } else {
 1387              		.loc 1 197 19 is_stmt 0 view .LVU409
 1388 00f8 5760     		str	r7, [r2, #4]
 1389              	.LBE45:
 1390 00fa D6E7     		b	.L102
 1391              	.LVL134:
 1392              	.L111:
 1393              	.LBB46:
 181:lvgl/lvgl/src/misc/lv_style.c ****             return;
 1394              		.loc 1 181 13 is_stmt 1 view .LVU410
 181:lvgl/lvgl/src/misc/lv_style.c ****             return;
 1395              		.loc 1 181 31 is_stmt 0 view .LVU411
 1396 00fc 0760     		str	r7, [r0]
 182:lvgl/lvgl/src/misc/lv_style.c ****         }
 1397              		.loc 1 182 13 is_stmt 1 view .LVU412
 1398 00fe DCE7     		b	.L93
 1399              	.L113:
 1400              		.align	2
 1401              	.L112:
 1402 0100 00000000 		.word	.LC3
 1403 0104 00000000 		.word	.LANCHOR3
 1404 0108 00000000 		.word	.LC0
 1405              	.LBE46:
 1406              		.cfi_endproc
 1407              	.LFE55:
 1409              		.section	.data.act_id.7247,"aw"
 1410              		.align	1
 1411              		.set	.LANCHOR1,. + 0
 1414              	act_id.7247:
 1415 0000 6F00     		.short	111
 1416              		.section	.rodata.__func__.7243,"a"
 1417              		.align	2
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 54


 1418              		.set	.LANCHOR0,. + 0
 1421              	__func__.7243:
 1422 0000 6C765F73 		.ascii	"lv_style_reset\000"
 1422      74796C65 
 1422      5F726573 
 1422      657400
 1423              		.section	.rodata.__func__.7252,"a"
 1424              		.align	2
 1425              		.set	.LANCHOR2,. + 0
 1428              	__func__.7252:
 1429 0000 6C765F73 		.ascii	"lv_style_remove_prop\000"
 1429      74796C65 
 1429      5F72656D 
 1429      6F76655F 
 1429      70726F70 
 1430              		.section	.rodata.__func__.7273,"a"
 1431              		.align	2
 1432              		.set	.LANCHOR3,. + 0
 1435              	__func__.7273:
 1436 0000 6C765F73 		.ascii	"lv_style_set_prop\000"
 1436      74796C65 
 1436      5F736574 
 1436      5F70726F 
 1436      7000
 1437              		.text
 1438              	.Letext0:
 1439              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1440              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1441              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 1442              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1443              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1444              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1445              		.file 10 "lvgl/lvgl/src/misc/../font/../misc/lv_area.h"
 1446              		.file 11 "lvgl/lvgl/src/misc/../font/lv_font.h"
 1447              		.file 12 "lvgl/lvgl/src/misc/lv_types.h"
 1448              		.file 13 "lvgl/lvgl/src/misc/lv_anim.h"
 1449              		.file 14 "lvgl/lvgl/src/misc/lv_txt.h"
 1450              		.file 15 "lvgl/lvgl/src/misc/../misc/lv_mem.h"
 1451              		.file 16 "lvgl/lvgl/src/misc/../misc/lv_log.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckOW927.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 lv_style.c
C:\Users\gx\AppData\Local\Temp\cckOW927.s:18     .text.lv_style_init:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:26     .text.lv_style_init:00000000 lv_style_init
C:\Users\gx\AppData\Local\Temp\cckOW927.s:50     .rodata.lv_style_reset.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:57     .text.lv_style_reset:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:64     .text.lv_style_reset:00000000 lv_style_reset
C:\Users\gx\AppData\Local\Temp\cckOW927.s:138    .text.lv_style_reset:0000003c $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:145    .text.lv_style_register_prop:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:152    .text.lv_style_register_prop:00000000 lv_style_register_prop
C:\Users\gx\AppData\Local\Temp\cckOW927.s:173    .text.lv_style_register_prop:0000000c $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:178    .rodata.lv_style_remove_prop.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:182    .text.lv_style_remove_prop:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:189    .text.lv_style_remove_prop:00000000 lv_style_remove_prop
C:\Users\gx\AppData\Local\Temp\cckOW927.s:486    .text.lv_style_remove_prop:000000f8 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:495    .text.lv_style_get_prop:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:502    .text.lv_style_get_prop:00000000 lv_style_get_prop
C:\Users\gx\AppData\Local\Temp\cckOW927.s:707    .text.lv_style_transition_dsc_init:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:714    .text.lv_style_transition_dsc_init:00000000 lv_style_transition_dsc_init
C:\Users\gx\AppData\Local\Temp\cckOW927.s:774    .text.lv_style_transition_dsc_init:00000028 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:779    .text.lv_style_prop_get_default:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:786    .text.lv_style_prop_get_default:00000000 lv_style_prop_get_default
C:\Users\gx\AppData\Local\Temp\cckOW927.s:807    .text.lv_style_prop_get_default:00000012 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:860    .text.lv_style_prop_get_default:00000046 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1008   .text.lv_style_prop_get_default:000000c8 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1013   .text.lv_style_is_empty:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1020   .text.lv_style_is_empty:00000000 lv_style_is_empty
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1041   .text._lv_style_get_prop_group:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1048   .text._lv_style_get_prop_group:00000000 _lv_style_get_prop_group
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1077   .rodata.lv_style_set_prop.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1081   .text.lv_style_set_prop:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1088   .text.lv_style_set_prop:00000000 lv_style_set_prop
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1402   .text.lv_style_set_prop:00000100 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1410   .data.act_id.7247:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1414   .data.act_id.7247:00000000 act_id.7247
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1417   .rodata.__func__.7243:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1421   .rodata.__func__.7243:00000000 __func__.7243
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1424   .rodata.__func__.7252:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1428   .rodata.__func__.7252:00000000 __func__.7252
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1431   .rodata.__func__.7273:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckOW927.s:1435   .rodata.__func__.7273:00000000 __func__.7273

UNDEFINED SYMBOLS
lv_memset_00
_lv_log_add
lv_mem_free
lv_mem_alloc
lv_anim_path_linear
lv_font_montserrat_14
lv_mem_realloc
