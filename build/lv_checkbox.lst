ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_checkbox.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_checkbox_draw,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	lv_checkbox_draw:
  26              	.LVL0:
  27              	.LFB159:
  28              		.file 1 "lvgl/lvgl/src/widgets/lv_checkbox.c"
   1:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**
   2:lvgl/lvgl/src/widgets/lv_checkbox.c ****  * @file lv_cb.c
   3:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *
   4:lvgl/lvgl/src/widgets/lv_checkbox.c ****  */
   5:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
   6:lvgl/lvgl/src/widgets/lv_checkbox.c **** /*********************
   7:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *      INCLUDES
   8:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *********************/
   9:lvgl/lvgl/src/widgets/lv_checkbox.c **** #include "lv_checkbox.h"
  10:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_CHECKBOX != 0
  11:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  12:lvgl/lvgl/src/widgets/lv_checkbox.c **** #include "../misc/lv_assert.h"
  13:lvgl/lvgl/src/widgets/lv_checkbox.c **** #include "../misc/lv_txt_ap.h"
  14:lvgl/lvgl/src/widgets/lv_checkbox.c **** #include "../core/lv_group.h"
  15:lvgl/lvgl/src/widgets/lv_checkbox.c **** #include "../draw/lv_draw.h"
  16:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  17:lvgl/lvgl/src/widgets/lv_checkbox.c **** /*********************
  18:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *      DEFINES
  19:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *********************/
  20:lvgl/lvgl/src/widgets/lv_checkbox.c **** #define MY_CLASS &lv_checkbox_class
  21:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  22:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
  23:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *      TYPEDEFS
  24:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
  25:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  26:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
  27:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *  STATIC PROTOTYPES
  28:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
  29:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  30:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 2


  31:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_event(const lv_obj_class_t * class_p, lv_event_t * e);
  32:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_draw(lv_event_t * e);
  33:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  34:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
  35:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *  STATIC VARIABLES
  36:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
  37:lvgl/lvgl/src/widgets/lv_checkbox.c **** const lv_obj_class_t lv_checkbox_class = {
  38:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .constructor_cb = lv_checkbox_constructor,
  39:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .destructor_cb = lv_checkbox_destructor,
  40:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .event_cb = lv_checkbox_event,
  41:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .width_def = LV_SIZE_CONTENT,
  42:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .height_def = LV_SIZE_CONTENT,
  43:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_TRUE,
  44:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .instance_size = sizeof(lv_checkbox_t),
  45:lvgl/lvgl/src/widgets/lv_checkbox.c ****     .base_class = &lv_obj_class
  46:lvgl/lvgl/src/widgets/lv_checkbox.c **** };
  47:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  48:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
  49:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *      MACROS
  50:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
  51:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  52:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
  53:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *   GLOBAL FUNCTIONS
  54:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
  55:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  56:lvgl/lvgl/src/widgets/lv_checkbox.c **** lv_obj_t * lv_checkbox_create(lv_obj_t * parent)
  57:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
  58:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_LOG_INFO("begin")
  59:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
  60:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_class_init_obj(obj);
  61:lvgl/lvgl/src/widgets/lv_checkbox.c ****     return obj;
  62:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
  63:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  64:lvgl/lvgl/src/widgets/lv_checkbox.c **** /*=====================
  65:lvgl/lvgl/src/widgets/lv_checkbox.c ****  * Setter functions
  66:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *====================*/
  67:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  68:lvgl/lvgl/src/widgets/lv_checkbox.c **** void lv_checkbox_set_text(lv_obj_t * obj, const char * txt)
  69:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
  70:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
  71:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
  72:lvgl/lvgl/src/widgets/lv_checkbox.c ****     size_t len = _lv_txt_ap_calc_bytes_cnt(txt);
  73:lvgl/lvgl/src/widgets/lv_checkbox.c **** #else
  74:lvgl/lvgl/src/widgets/lv_checkbox.c ****     size_t len = strlen(txt);
  75:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
  76:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(!cb->static_txt) cb->txt = lv_mem_realloc(cb->txt, len + 1);
  78:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
  79:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
  80:lvgl/lvgl/src/widgets/lv_checkbox.c ****     _lv_txt_ap_proc(txt, cb->txt);
  81:lvgl/lvgl/src/widgets/lv_checkbox.c **** #else
  82:lvgl/lvgl/src/widgets/lv_checkbox.c ****     strcpy(cb->txt, txt);
  83:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
  84:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  85:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 0;
  86:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  87:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_refresh_self_size(obj);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 3


  88:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
  89:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  90:lvgl/lvgl/src/widgets/lv_checkbox.c **** void lv_checkbox_set_text_static(lv_obj_t * obj, const char * txt)
  91:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
  92:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
  93:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  94:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(!cb->static_txt) lv_mem_free(cb->txt);
  95:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  96:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->txt = (char*)txt;
  97:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
  98:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
  99:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_refresh_self_size(obj);
 100:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 101:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 102:lvgl/lvgl/src/widgets/lv_checkbox.c **** /*=====================
 103:lvgl/lvgl/src/widgets/lv_checkbox.c ****  * Getter functions
 104:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *====================*/
 105:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 106:lvgl/lvgl/src/widgets/lv_checkbox.c **** const char * lv_checkbox_get_text(const lv_obj_t * obj)
 107:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
 108:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 109:lvgl/lvgl/src/widgets/lv_checkbox.c ****     return cb->txt;
 110:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 111:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 112:lvgl/lvgl/src/widgets/lv_checkbox.c **** /**********************
 113:lvgl/lvgl/src/widgets/lv_checkbox.c ****  *   STATIC FUNCTIONS
 114:lvgl/lvgl/src/widgets/lv_checkbox.c ****  **********************/
 115:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 116:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
 117:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
 118:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 119:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("begin");
 120:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 121:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 122:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 123:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->txt = "Check box";
 124:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
 125:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CLICKABLE);
 126:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CHECKABLE);
 127:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_SCROLL_ON_FOCUS);
 128:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 129:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("finished");
 130:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 131:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 132:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
 133:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
 134:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 135:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("begin");
 136:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 137:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 138:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(!cb->static_txt) {
 139:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_mem_free(cb->txt);
 140:lvgl/lvgl/src/widgets/lv_checkbox.c ****         cb->txt = NULL;
 141:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 142:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("finished");
 143:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 144:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 4


 145:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_event(const lv_obj_class_t * class_p, lv_event_t * e)
 146:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
 147:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 148:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 149:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_res_t res;
 150:lvgl/lvgl/src/widgets/lv_checkbox.c ****     /*Call the ancestor's event handler*/
 151:lvgl/lvgl/src/widgets/lv_checkbox.c ****     res = lv_obj_event_base(MY_CLASS, e);
 152:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(res != LV_RES_OK) return;
 153:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 154:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_event_code_t code = lv_event_get_code(e);
 155:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_event_get_target(e);
 156:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 157:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if (code == LV_EVENT_PRESSED || code == LV_EVENT_RELEASED) {
 158:lvgl/lvgl/src/widgets/lv_checkbox.c ****        lv_obj_invalidate(obj);
 159:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 160:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else if (code == LV_EVENT_GET_SELF_SIZE) {
 161:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t * p = lv_event_get_param(e);
 162:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 163:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 164:lvgl/lvgl/src/widgets/lv_checkbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(obj, LV_PART_MAIN);
 165:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t font_h = lv_font_get_line_height(font);
 166:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t line_space = lv_obj_get_style_text_line_space(obj, LV_PART_MAIN);
 167:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t letter_space = lv_obj_get_style_text_letter_space(obj, LV_PART_MAIN);
 168:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 169:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t txt_size;
 170:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_txt_get_size(&txt_size, cb->txt, font, letter_space, line_space, LV_COORD_MAX, LV_TEXT_F
 171:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 172:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t bg_colp = lv_obj_get_style_pad_column(obj, LV_PART_MAIN);
 173:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_leftp = lv_obj_get_style_pad_left(obj, LV_PART_INDICATOR);
 174:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_rightp = lv_obj_get_style_pad_right(obj, LV_PART_INDICATOR);
 175:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_topp = lv_obj_get_style_pad_top(obj, LV_PART_INDICATOR);
 176:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_bottomp = lv_obj_get_style_pad_bottom(obj, LV_PART_INDICATOR);
 177:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t marker_size;
 178:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.x = font_h + marker_leftp + marker_rightp;
 179:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.y = font_h + marker_topp + marker_bottomp;
 180:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->x = marker_size.x + txt_size.x + bg_colp;
 182:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 183:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 184:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else if(code == LV_EVENT_REFR_EXT_DRAW_SIZE) {
 185:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t *s = lv_event_get_param(e);
 186:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t m = lv_obj_calculate_ext_draw_size(obj, LV_PART_INDICATOR);
 187:lvgl/lvgl/src/widgets/lv_checkbox.c ****         *s = LV_MAX(*s, m);
 188:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 189:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else if(code == LV_EVENT_RELEASED) {
 190:lvgl/lvgl/src/widgets/lv_checkbox.c ****         uint32_t v = lv_obj_get_state(obj) & LV_STATE_CHECKED ? 1 : 0;
 191:lvgl/lvgl/src/widgets/lv_checkbox.c ****         res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, &v);
 192:lvgl/lvgl/src/widgets/lv_checkbox.c ****         if(res != LV_RES_OK) return;
 193:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 194:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_obj_invalidate(obj);
 195:lvgl/lvgl/src/widgets/lv_checkbox.c ****     } else if(code == LV_EVENT_DRAW_MAIN) {
 196:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_draw(e);
 197:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 198:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 199:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 200:lvgl/lvgl/src/widgets/lv_checkbox.c **** static void lv_checkbox_draw(lv_event_t * e)
 201:lvgl/lvgl/src/widgets/lv_checkbox.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 5


  29              		.loc 1 201 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 200
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 201 1 is_stmt 0 view .LVU1
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 B7B0     		sub	sp, sp, #220
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 256
  49 0006 0446     		mov	r4, r0
 202:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_event_get_target(e);
  50              		.loc 1 202 5 is_stmt 1 view .LVU2
  51              		.loc 1 202 22 is_stmt 0 view .LVU3
  52 0008 FFF7FEFF 		bl	lv_event_get_target
  53              	.LVL1:
  54              		.loc 1 202 22 view .LVU4
  55 000c 0546     		mov	r5, r0
  56              	.LVL2:
 203:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
  57              		.loc 1 203 5 is_stmt 1 view .LVU5
 204:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 205:lvgl/lvgl/src/widgets/lv_checkbox.c ****     const lv_area_t * clip_area = lv_event_get_param(e);
  58              		.loc 1 205 5 view .LVU6
  59              		.loc 1 205 35 is_stmt 0 view .LVU7
  60 000e 2046     		mov	r0, r4
  61              	.LVL3:
  62              		.loc 1 205 35 view .LVU8
  63 0010 FFF7FEFF 		bl	lv_event_get_param
  64              	.LVL4:
  65 0014 0490     		str	r0, [sp, #16]
  66              	.LVL5:
 206:lvgl/lvgl/src/widgets/lv_checkbox.c ****     const lv_font_t * font = lv_obj_get_style_text_font(obj, LV_PART_MAIN);
  67              		.loc 1 206 5 is_stmt 1 view .LVU9
  68              	.LBB53:
  69              	.LBI53:
  70              		.file 2 "lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h"
   1:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   3:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
   6:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
   7:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   9:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 6


  11:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  12:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  13:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  15:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  18:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  19:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  21:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  24:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  25:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  27:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  30:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  31:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  33:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  36:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  37:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  39:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  42:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  43:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  45:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  48:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  49:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  51:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  54:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  55:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  57:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  60:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  61:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  63:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  66:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  67:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 7


  68:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  69:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  72:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  73:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  75:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  78:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  79:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  81:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  84:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  85:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  87:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  90:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  91:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
  92:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  96:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  97:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
  98:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  99:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 100:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 102:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 103:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 104:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 108:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 109:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 110:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 111:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 112:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 114:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 115:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 116:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 117:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 118:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 120:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 121:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 122:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 123:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 124:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 8


 125:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 126:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 127:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
 128:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 129:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_RADIUS);
 130:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 132:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 133:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
 134:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 135:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_CLIP_CORNER);
 136:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 137:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 138:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 139:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
 140:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 141:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA);
 142:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 143:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 144:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 145:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_
 146:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 147:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_DSC);
 148:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_color_filter_dsc_t *)v.ptr;
 149:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 150:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 151:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t par
 152:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 153:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_OPA);
 154:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 155:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 156:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 157:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
 158:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 159:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_TIME);
 160:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 161:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 162:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 163:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
 164:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 165:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_SPEED);
 166:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 167:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 168:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 169:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t 
 170:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 171:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSITION);
 172:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_style_transition_dsc_t *)v.ptr;
 173:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 174:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 175:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t pa
 176:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 177:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BLEND_MODE);
 178:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_blend_mode_t)v.num;
 179:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 180:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 181:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 9


 182:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 183:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LAYOUT);
 184:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 185:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 186:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 187:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)
 188:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 189:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BASE_DIR);
 190:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 191:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 192:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 193:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 194:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 195:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 196:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 197:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 198:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 199:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 200:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 201:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR_FILTERED);
 202:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 203:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 204:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 205:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 206:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 207:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 208:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 209:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 210:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 211:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 212:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 213:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 214:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 215:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 216:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 217:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 218:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 219:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR_FILTERED);
 220:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 221:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 222:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 223:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 224:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 225:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 226:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 227:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 228:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 229:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 230:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 231:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 232:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 233:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 234:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 235:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
 236:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 237:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 238:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 10


 239:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 240:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 241:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 242:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 243:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 244:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 245:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 246:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 247:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 248:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 249:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 250:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 251:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 252:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 253:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 254:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 255:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 256:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 257:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 258:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 259:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 260:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 261:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_FILTERED);
 262:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 263:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 264:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 265:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 266:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 267:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 268:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 269:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 270:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 271:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 272:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 273:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
 274:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 275:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 276:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 277:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 278:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 279:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 280:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 281:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 282:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 283:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 284:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 285:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR_FILTERED);
 286:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 287:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 288:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 289:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 290:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 291:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 292:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 293:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 294:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 295:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 11


 296:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 297:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 298:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 300:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 301:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 302:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 303:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 304:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 305:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 306:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 307:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 308:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 309:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 310:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 311:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 312:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 313:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 314:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 315:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 316:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 317:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 318:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 319:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 320:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 321:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR_FILTERED);
 322:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 323:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 324:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 325:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 326:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 327:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
 328:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 329:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 330:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 331:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
  71              		.loc 2 331 33 view .LVU10
  72              	.LBB54:
 332:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 333:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
  73              		.loc 2 333 5 view .LVU11
  74              		.loc 2 333 26 is_stmt 0 view .LVU12
  75 0016 41F25942 		movw	r2, #5209
  76 001a 0021     		movs	r1, #0
  77 001c 2846     		mov	r0, r5
  78              	.LVL6:
  79              		.loc 2 333 26 view .LVU13
  80 001e FFF7FEFF 		bl	lv_obj_get_style_prop
  81              	.LVL7:
 334:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
  82              		.loc 2 334 5 is_stmt 1 view .LVU14
  83              		.loc 2 334 5 is_stmt 0 view .LVU15
  84              	.LBE54:
  85              	.LBE53:
 207:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t font_h = lv_font_get_line_height(font);
  86              		.loc 1 207 5 is_stmt 1 view .LVU16
  87              	.LBB55:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 12


  88              	.LBI55:
  89              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @file lv_font.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #ifndef LV_FONT_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #define LV_FONT_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include <stdint.h>
  18:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include <stddef.h>
  19:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include <stdbool.h>
  20:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  21:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include "lv_symbol_def.h"
  22:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #include "../misc/lv_area.h"
  23:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /*********************
  25:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *      DEFINES
  26:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**********************
  29:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *      TYPEDEFS
  30:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  **********************/
  31:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /*------------------
  33:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * General types
  34:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *-----------------*/
  35:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  36:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /** Describes the properties of a glyph.*/
  37:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** typedef struct {
  38:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width.*/
  39:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     uint16_t box_w;  /**< Width of the glyph's bounding box*/
  40:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     uint16_t box_h;  /**< Height of the glyph's bounding box*/
  41:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     int16_t ofs_x;   /**< x offset of the bounding box*/
  42:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  43:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     uint8_t bpp;   /**< Bit-per-pixel: 1, 2, 4, 8*/
  44:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** } lv_font_glyph_dsc_t;
  45:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  46:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering.*/
  47:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** enum {
  48:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_NONE,
  49:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_HOR,
  50:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_VER,
  51:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_BOTH,
  52:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** };
  53:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  54:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** typedef uint8_t lv_font_subpx_t;
  55:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 13


  56:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** struct _lv_font_t;
  57:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /** Describe the properties of a font*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** typedef struct _lv_font_t {
  60:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     /** Get a glyph's descriptor from a font*/
  61:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_t *, lv_font_glyph_dsc_t *, uint32_t letter, uint32
  62:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  63:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     /** Get a glyph's bitmap from a font*/
  64:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_t *, uint32_t);
  65:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  66:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  67:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  68:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  69:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  70:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  71:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  72:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  73:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     const void * dsc;                     /**< Store implementation specific or run_time data or ca
  75:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #if LV_USE_USER_DATA
  76:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     void * user_data;               /**< Custom user data for font.*/
  77:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** #endif
  78:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** } lv_font_t;
  80:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  81:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**********************
  82:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * GLOBAL PROTOTYPES
  83:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  **********************/
  84:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  85:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**
  86:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * Return with the bitmap of a font.
  87:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param font_p pointer to a font
  88:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param letter an UNICODE character code
  89:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @return pointer to the bitmap of the letter
  90:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  */
  91:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  92:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
  93:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**
  94:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * Get the descriptor of a glyph
  95:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param font_p pointer to font
  96:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param dsc_out store the result descriptor here
  97:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param letter an UNICODE letter code
  98:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
  99:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
 100:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 102:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****                            uint32_t letter_next);
 103:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
 104:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**
 105:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * Get the width of a glyph with kerning
 106:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param font pointer to a font
 107:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param letter an UNICODE letter
 108:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 109:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @return the width of the glyph
 110:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  */
 111:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 112:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 14


 113:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** /**
 114:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * Get the line height of a font. All characters fit into this height
 115:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @param font_p pointer to a font
 116:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  * @return the height of a font
 117:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****  */
 118:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
  90              		.loc 3 118 26 view .LVU17
  91              	.LBB56:
 119:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** {
 120:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h ****     return font_p->line_height;
  92              		.loc 3 120 5 view .LVU18
  93              		.loc 3 120 18 is_stmt 0 view .LVU19
  94 0022 0690     		str	r0, [sp, #24]
  95 0024 B0F90810 		ldrsh	r1, [r0, #8]
  96 0028 0591     		str	r1, [sp, #20]
  97              	.LVL8:
  98              		.loc 3 120 18 view .LVU20
  99              	.LBE56:
 100              	.LBE55:
 208:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 209:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t bg_topp = lv_obj_get_style_pad_top(obj, LV_PART_MAIN);
 101              		.loc 1 209 5 is_stmt 1 view .LVU21
 102              	.LBB57:
 103              	.LBI57:
  91:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 104              		.loc 2 91 26 view .LVU22
 105              	.LBB58:
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 106              		.loc 2 93 5 view .LVU23
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107              		.loc 2 93 26 is_stmt 0 view .LVU24
 108 002a 41F21002 		movw	r2, #4112
 109 002e 0021     		movs	r1, #0
 110 0030 2846     		mov	r0, r5
 111              	.LVL9:
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 112              		.loc 2 93 26 view .LVU25
 113 0032 FFF7FEFF 		bl	lv_obj_get_style_prop
 114              	.LVL10:
 115 0036 0446     		mov	r4, r0
 116              	.LVL11:
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 117              		.loc 2 94 5 is_stmt 1 view .LVU26
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 118              		.loc 2 94 5 is_stmt 0 view .LVU27
 119              	.LBE58:
 120              	.LBE57:
 210:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t bg_leftp = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 121              		.loc 1 210 5 is_stmt 1 view .LVU28
 122              	.LBB59:
 123              	.LBI59:
 103:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 124              		.loc 2 103 26 view .LVU29
 125              	.LBB60:
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 126              		.loc 2 105 5 view .LVU30
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 15


 127              		.loc 2 105 26 is_stmt 0 view .LVU31
 128 0038 41F21202 		movw	r2, #4114
 129 003c 0021     		movs	r1, #0
 130 003e 2846     		mov	r0, r5
 131 0040 FFF7FEFF 		bl	lv_obj_get_style_prop
 132              	.LVL12:
 133 0044 8046     		mov	r8, r0
 134              	.LVL13:
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 135              		.loc 2 106 5 is_stmt 1 view .LVU32
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 136              		.loc 2 106 5 is_stmt 0 view .LVU33
 137              	.LBE60:
 138              	.LBE59:
 211:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t bg_colp = lv_obj_get_style_pad_column(obj, LV_PART_MAIN);
 139              		.loc 1 211 5 is_stmt 1 view .LVU34
 140              	.LBB61:
 141              	.LBI61:
 121:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 142              		.loc 2 121 26 view .LVU35
 143              	.LBB62:
 123:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 144              		.loc 2 123 5 view .LVU36
 123:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 145              		.loc 2 123 26 is_stmt 0 view .LVU37
 146 0046 41F21502 		movw	r2, #4117
 147 004a 0021     		movs	r1, #0
 148 004c 2846     		mov	r0, r5
 149 004e FFF7FEFF 		bl	lv_obj_get_style_prop
 150              	.LVL14:
 151 0052 0790     		str	r0, [sp, #28]
 124:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 152              		.loc 2 124 5 is_stmt 1 view .LVU38
 153              	.LVL15:
 124:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 154              		.loc 2 124 5 is_stmt 0 view .LVU39
 155              	.LBE62:
 156              	.LBE61:
 212:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 213:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t marker_leftp = lv_obj_get_style_pad_left(obj, LV_PART_INDICATOR);
 157              		.loc 1 213 5 is_stmt 1 view .LVU40
 158              	.LBB63:
 159              	.LBI63:
 103:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 160              		.loc 2 103 26 view .LVU41
 161              	.LBB64:
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 162              		.loc 2 105 5 view .LVU42
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 163              		.loc 2 105 26 is_stmt 0 view .LVU43
 164 0054 41F21202 		movw	r2, #4114
 165 0058 4FF40031 		mov	r1, #131072
 166 005c 2846     		mov	r0, r5
 167 005e FFF7FEFF 		bl	lv_obj_get_style_prop
 168              	.LVL16:
 169 0062 0746     		mov	r7, r0
 170              	.LVL17:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 16


 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 171              		.loc 2 106 5 is_stmt 1 view .LVU44
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 172              		.loc 2 106 5 is_stmt 0 view .LVU45
 173              	.LBE64:
 174              	.LBE63:
 214:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t marker_rightp = lv_obj_get_style_pad_right(obj, LV_PART_INDICATOR);
 175              		.loc 1 214 5 is_stmt 1 view .LVU46
 176              	.LBB65:
 177              	.LBI65:
 109:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 178              		.loc 2 109 26 view .LVU47
 179              	.LBB66:
 111:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 180              		.loc 2 111 5 view .LVU48
 111:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 181              		.loc 2 111 26 is_stmt 0 view .LVU49
 182 0064 41F21302 		movw	r2, #4115
 183 0068 4FF40031 		mov	r1, #131072
 184 006c 2846     		mov	r0, r5
 185 006e FFF7FEFF 		bl	lv_obj_get_style_prop
 186              	.LVL18:
 187 0072 0646     		mov	r6, r0
 188              	.LVL19:
 112:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 189              		.loc 2 112 5 is_stmt 1 view .LVU50
 112:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 190              		.loc 2 112 5 is_stmt 0 view .LVU51
 191              	.LBE66:
 192              	.LBE65:
 215:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t marker_topp = lv_obj_get_style_pad_top(obj, LV_PART_INDICATOR);
 193              		.loc 1 215 5 is_stmt 1 view .LVU52
 194              	.LBB67:
 195              	.LBI67:
  91:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 196              		.loc 2 91 26 view .LVU53
 197              	.LBB68:
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 198              		.loc 2 93 5 view .LVU54
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 199              		.loc 2 93 26 is_stmt 0 view .LVU55
 200 0074 41F21002 		movw	r2, #4112
 201 0078 4FF40031 		mov	r1, #131072
 202 007c 2846     		mov	r0, r5
 203 007e FFF7FEFF 		bl	lv_obj_get_style_prop
 204              	.LVL20:
 205 0082 8346     		mov	fp, r0
 206              	.LVL21:
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 207              		.loc 2 94 5 is_stmt 1 view .LVU56
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 208              		.loc 2 94 5 is_stmt 0 view .LVU57
 209              	.LBE68:
 210              	.LBE67:
 216:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t marker_bottomp = lv_obj_get_style_pad_bottom(obj, LV_PART_INDICATOR);
 211              		.loc 1 216 5 is_stmt 1 view .LVU58
 212              	.LBB69:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 17


 213              	.LBI69:
  97:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 214              		.loc 2 97 26 view .LVU59
 215              	.LBB70:
  99:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 216              		.loc 2 99 5 view .LVU60
  99:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 217              		.loc 2 99 26 is_stmt 0 view .LVU61
 218 0084 41F21102 		movw	r2, #4113
 219 0088 4FF40031 		mov	r1, #131072
 220 008c 2846     		mov	r0, r5
 221 008e FFF7FEFF 		bl	lv_obj_get_style_prop
 222              	.LVL22:
 223 0092 8146     		mov	r9, r0
 224              	.LVL23:
 100:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 225              		.loc 2 100 5 is_stmt 1 view .LVU62
 100:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 226              		.loc 2 100 5 is_stmt 0 view .LVU63
 227              	.LBE70:
 228              	.LBE69:
 217:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 218:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t transf_w = lv_obj_get_style_transform_width(obj, LV_PART_INDICATOR);
 229              		.loc 1 218 5 is_stmt 1 view .LVU64
 230              	.LBB71:
 231              	.LBI71:
  55:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 232              		.loc 2 55 26 view .LVU65
 233              	.LBB72:
  57:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 234              		.loc 2 57 5 view .LVU66
  57:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 235              		.loc 2 57 26 is_stmt 0 view .LVU67
 236 0094 40F60A02 		movw	r2, #2058
 237 0098 4FF40031 		mov	r1, #131072
 238 009c 2846     		mov	r0, r5
 239 009e FFF7FEFF 		bl	lv_obj_get_style_prop
 240              	.LVL24:
 241 00a2 0890     		str	r0, [sp, #32]
  58:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 242              		.loc 2 58 5 is_stmt 1 view .LVU68
 243              	.LVL25:
  58:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 244              		.loc 2 58 5 is_stmt 0 view .LVU69
 245              	.LBE72:
 246              	.LBE71:
 219:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t transf_h = lv_obj_get_style_transform_height(obj, LV_PART_INDICATOR);
 247              		.loc 1 219 5 is_stmt 1 view .LVU70
 248              	.LBB73:
 249              	.LBI73:
  61:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 250              		.loc 2 61 26 view .LVU71
 251              	.LBB74:
  63:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 252              		.loc 2 63 5 view .LVU72
  63:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 253              		.loc 2 63 26 is_stmt 0 view .LVU73
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 18


 254 00a4 40F60B02 		movw	r2, #2059
 255 00a8 4FF40031 		mov	r1, #131072
 256 00ac 2846     		mov	r0, r5
 257 00ae FFF7FEFF 		bl	lv_obj_get_style_prop
 258              	.LVL26:
 259 00b2 0990     		str	r0, [sp, #36]
  64:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 260              		.loc 2 64 5 is_stmt 1 view .LVU74
 261              	.LVL27:
  64:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 262              		.loc 2 64 5 is_stmt 0 view .LVU75
 263              	.LBE74:
 264              	.LBE73:
 220:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 221:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_rect_dsc_t indic_dsc;
 265              		.loc 1 221 5 is_stmt 1 view .LVU76
 222:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_rect_dsc_init(&indic_dsc);
 266              		.loc 1 222 5 view .LVU77
 267 00b4 0DF1A40A 		add	r10, sp, #164
 268 00b8 5046     		mov	r0, r10
 269 00ba FFF7FEFF 		bl	lv_draw_rect_dsc_init
 270              	.LVL28:
 223:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_init_draw_rect_dsc(obj, LV_PART_INDICATOR, &indic_dsc);
 271              		.loc 1 223 5 view .LVU78
 272 00be 5246     		mov	r2, r10
 273 00c0 4FF40031 		mov	r1, #131072
 274 00c4 2846     		mov	r0, r5
 275 00c6 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 276              	.LVL29:
 224:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_area_t marker_area;
 277              		.loc 1 224 5 view .LVU79
 225:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area.x1 = obj->coords.x1 + bg_leftp;
 278              		.loc 1 225 5 view .LVU80
 279              		.loc 1 225 33 is_stmt 0 view .LVU81
 280 00ca AA8A     		ldrh	r2, [r5, #20]
 281              		.loc 1 225 37 view .LVU82
 282 00cc 9044     		add	r8, r8, r2
 283              	.LVL30:
 284              		.loc 1 225 37 view .LVU83
 285 00ce 1FFA88F2 		uxth	r2, r8
 226:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area.x2 = marker_area.x1 + font_h + marker_leftp + marker_rightp - 1;
 286              		.loc 1 226 5 is_stmt 1 view .LVU84
 287              		.loc 1 226 37 is_stmt 0 view .LVU85
 288 00d2 BDF81430 		ldrh	r3, [sp, #20]
 289 00d6 D018     		adds	r0, r2, r3
 290              		.loc 1 226 46 view .LVU86
 291 00d8 17FA80F7 		uxtah	r7, r7, r0
 292              	.LVL31:
 293              		.loc 1 226 61 view .LVU87
 294 00dc 16FA87F6 		uxtah	r6, r6, r7
 295              	.LVL32:
 296              		.loc 1 226 61 view .LVU88
 297 00e0 B6B2     		uxth	r6, r6
 298              		.loc 1 226 77 view .LVU89
 299 00e2 013E     		subs	r6, r6, #1
 300 00e4 B6B2     		uxth	r6, r6
 227:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area.y1 = obj->coords.y1 + bg_topp;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 19


 301              		.loc 1 227 5 is_stmt 1 view .LVU90
 302              		.loc 1 227 33 is_stmt 0 view .LVU91
 303 00e6 B5F81680 		ldrh	r8, [r5, #22]
 304              		.loc 1 227 37 view .LVU92
 305 00ea A7B2     		uxth	r7, r4
 306 00ec B844     		add	r8, r8, r7
 307 00ee 1FFA88F8 		uxth	r8, r8
 228:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area.y2 = marker_area.y1 + font_h + marker_topp + marker_bottomp - 1;
 308              		.loc 1 228 5 is_stmt 1 view .LVU93
 309              		.loc 1 228 37 is_stmt 0 view .LVU94
 310 00f2 03EB0804 		add	r4, r3, r8
 311              	.LVL33:
 312              		.loc 1 228 46 view .LVU95
 313 00f6 1BFA84F4 		uxtah	r4, fp, r4
 314              		.loc 1 228 60 view .LVU96
 315 00fa 19FA84F4 		uxtah	r4, r9, r4
 316 00fe A4B2     		uxth	r4, r4
 317              		.loc 1 228 77 view .LVU97
 318 0100 013C     		subs	r4, r4, #1
 319 0102 A4B2     		uxth	r4, r4
 229:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 230:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_area_t marker_area_transf;
 320              		.loc 1 230 5 is_stmt 1 view .LVU98
 231:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_area_copy(&marker_area_transf, &marker_area);
 321              		.loc 1 231 5 view .LVU99
 322              	.LVL34:
 323              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @file lv_area.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_AREA_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <string.h>
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <stdbool.h>
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #include <stdint.h>
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*********************
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      DEFINES
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *********************/
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef int32_t lv_coord_t;
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #else
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef int16_t lv_coord_t;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 20


  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**********************
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  *      TYPEDEFS
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  **********************/
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Represents a point on the screen.
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef struct {
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x;
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y;
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** } lv_point_t;
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /** Represents an area of the screen.*/
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef struct {
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x1;
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y1;
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t x2;
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     lv_coord_t y2;
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** } lv_area_t;
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /** Alignments*/
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** enum {
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_MID,
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_CENTER,
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** };
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_align_t;
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 21


  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** enum {
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** };
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_dir_t;
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**********************
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * GLOBAL PROTOTYPES
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  **********************/
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Initialize an area
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x1 left coordinate of the area
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param y1 top coordinate of the area
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param x2 right coordinate of the area
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param y2 bottom coordinate of the area
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Copy an area
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param dest pointer to the destination area
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param src pointer to the source area
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->x1 = src->x1;
 324              		.loc 4 122 5 view .LVU100
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 325              		.loc 4 123 5 view .LVU101
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 326              		.loc 4 124 5 view .LVU102
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 327              		.loc 4 125 5 view .LVU103
 232:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area_transf.x1 -= transf_w;
 328              		.loc 1 232 5 view .LVU104
 329              		.loc 1 232 27 is_stmt 0 view .LVU105
 330 0104 BDF82000 		ldrh	r0, [sp, #32]
 331 0108 121A     		subs	r2, r2, r0
 332 010a ADF89C20 		strh	r2, [sp, #156]	@ movhi
 233:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area_transf.x2 += transf_w;
 333              		.loc 1 233 5 is_stmt 1 view .LVU106
 334              		.loc 1 233 27 is_stmt 0 view .LVU107
 335 010e 3044     		add	r0, r0, r6
 336 0110 ADF8A000 		strh	r0, [sp, #160]	@ movhi
 234:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area_transf.y1 -= transf_h;
 337              		.loc 1 234 5 is_stmt 1 view .LVU108
 338              		.loc 1 234 27 is_stmt 0 view .LVU109
 339 0114 BDF82400 		ldrh	r0, [sp, #36]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 22


 340 0118 A8EB0003 		sub	r3, r8, r0
 341 011c ADF89E30 		strh	r3, [sp, #158]	@ movhi
 235:lvgl/lvgl/src/widgets/lv_checkbox.c ****     marker_area_transf.y2 += transf_h;
 342              		.loc 1 235 5 is_stmt 1 view .LVU110
 343              		.loc 1 235 27 is_stmt 0 view .LVU111
 344 0120 2044     		add	r0, r0, r4
 345 0122 ADF8A200 		strh	r0, [sp, #162]	@ movhi
 236:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 237:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_draw_part_dsc_t part_draw_dsc;
 346              		.loc 1 237 5 is_stmt 1 view .LVU112
 238:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_draw_dsc_init(&part_draw_dsc, clip_area);
 347              		.loc 1 238 5 view .LVU113
 348 0126 0499     		ldr	r1, [sp, #16]
 349 0128 16A8     		add	r0, sp, #88
 350 012a FFF7FEFF 		bl	lv_obj_draw_dsc_init
 351              	.LVL35:
 239:lvgl/lvgl/src/widgets/lv_checkbox.c ****     part_draw_dsc.rect_dsc = &indic_dsc;
 352              		.loc 1 239 5 view .LVU114
 353              		.loc 1 239 28 is_stmt 0 view .LVU115
 354 012e CDF868A0 		str	r10, [sp, #104]
 240:lvgl/lvgl/src/widgets/lv_checkbox.c ****     part_draw_dsc.class_p = MY_CLASS;
 355              		.loc 1 240 5 is_stmt 1 view .LVU116
 356              		.loc 1 240 27 is_stmt 0 view .LVU117
 357 0132 384B     		ldr	r3, .L3
 358 0134 1793     		str	r3, [sp, #92]
 241:lvgl/lvgl/src/widgets/lv_checkbox.c ****     part_draw_dsc.type = LV_CHECKBOX_DRAW_PART_BOX;
 359              		.loc 1 241 5 is_stmt 1 view .LVU118
 360              		.loc 1 241 24 is_stmt 0 view .LVU119
 361 0136 4FF00009 		mov	r9, #0
 362              	.LVL36:
 363              		.loc 1 241 24 view .LVU120
 364 013a CDF86090 		str	r9, [sp, #96]
 242:lvgl/lvgl/src/widgets/lv_checkbox.c ****     part_draw_dsc.draw_area = &marker_area_transf;
 365              		.loc 1 242 5 is_stmt 1 view .LVU121
 366              		.loc 1 242 29 is_stmt 0 view .LVU122
 367 013e 0DF19C0B 		add	fp, sp, #156
 368              	.LVL37:
 369              		.loc 1 242 29 view .LVU123
 370 0142 CDF864B0 		str	fp, [sp, #100]
 243:lvgl/lvgl/src/widgets/lv_checkbox.c ****     part_draw_dsc.part = LV_PART_INDICATOR;
 371              		.loc 1 243 5 is_stmt 1 view .LVU124
 372              		.loc 1 243 24 is_stmt 0 view .LVU125
 373 0146 4FF40033 		mov	r3, #131072
 374 014a 2293     		str	r3, [sp, #136]
 244:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 245:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 375              		.loc 1 245 5 is_stmt 1 view .LVU126
 376 014c 0DF1580C 		add	ip, sp, #88
 377 0150 6246     		mov	r2, ip
 378 0152 1A21     		movs	r1, #26
 379 0154 2846     		mov	r0, r5
 380 0156 FFF7FEFF 		bl	lv_event_send
 381              	.LVL38:
 246:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_rect(&marker_area_transf, clip_area, &indic_dsc);
 382              		.loc 1 246 5 view .LVU127
 383 015a 5246     		mov	r2, r10
 384 015c 0499     		ldr	r1, [sp, #16]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 23


 385 015e 5846     		mov	r0, fp
 386 0160 FFF7FEFF 		bl	lv_draw_rect
 387              	.LVL39:
 247:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 388              		.loc 1 247 5 view .LVU128
 389 0164 0DF1580C 		add	ip, sp, #88
 390 0168 6246     		mov	r2, ip
 391 016a 1B21     		movs	r1, #27
 392 016c 2846     		mov	r0, r5
 393 016e FFF7FEFF 		bl	lv_event_send
 394              	.LVL40:
 248:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 249:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t line_space = lv_obj_get_style_text_line_space(obj, LV_PART_MAIN);
 395              		.loc 1 249 5 view .LVU129
 396              	.LBB75:
 397              	.LBI75:
 335:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 336:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 337:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t 
 338:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 339:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LETTER_SPACE);
 340:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 341:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 342:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 343:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t pa
 398              		.loc 2 343 26 view .LVU130
 399              	.LBB76:
 344:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 345:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LINE_SPACE);
 400              		.loc 2 345 5 view .LVU131
 401              		.loc 2 345 26 is_stmt 0 view .LVU132
 402 0172 41F25B42 		movw	r2, #5211
 403 0176 4946     		mov	r1, r9
 404 0178 2846     		mov	r0, r5
 405 017a FFF7FEFF 		bl	lv_obj_get_style_prop
 406              	.LVL41:
 346:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 407              		.loc 2 346 5 is_stmt 1 view .LVU133
 408              		.loc 2 346 12 is_stmt 0 view .LVU134
 409 017e 0FFA80FA 		sxth	r10, r0
 410              	.LVL42:
 411              		.loc 2 346 12 view .LVU135
 412              	.LBE76:
 413              	.LBE75:
 250:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t letter_space = lv_obj_get_style_text_letter_space(obj, LV_PART_MAIN);
 414              		.loc 1 250 5 is_stmt 1 view .LVU136
 415              	.LBB77:
 416              	.LBI77:
 337:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 417              		.loc 2 337 26 view .LVU137
 418              	.LBB78:
 339:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 419              		.loc 2 339 5 view .LVU138
 339:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 420              		.loc 2 339 26 is_stmt 0 view .LVU139
 421 0182 41F25A42 		movw	r2, #5210
 422 0186 4946     		mov	r1, r9
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 24


 423 0188 2846     		mov	r0, r5
 424 018a FFF7FEFF 		bl	lv_obj_get_style_prop
 425              	.LVL43:
 340:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 426              		.loc 2 340 5 is_stmt 1 view .LVU140
 340:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 427              		.loc 2 340 5 is_stmt 0 view .LVU141
 428              	.LBE78:
 429              	.LBE77:
 251:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 252:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_point_t txt_size;
 430              		.loc 1 252 5 is_stmt 1 view .LVU142
 253:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_txt_get_size(&txt_size, cb->txt, font, letter_space, line_space, LV_COORD_MAX, LV_TEXT_FLAG_
 431              		.loc 1 253 5 view .LVU143
 432              		.loc 1 253 34 is_stmt 0 view .LVU144
 433 018e 696A     		ldr	r1, [r5, #36]
 434              		.loc 1 253 5 view .LVU145
 435 0190 CDF80890 		str	r9, [sp, #8]
 436 0194 4FF4C043 		mov	r3, #24576
 437 0198 0193     		str	r3, [sp, #4]
 438 019a CDF800A0 		str	r10, [sp]
 439 019e 03B2     		sxth	r3, r0
 440 01a0 069A     		ldr	r2, [sp, #24]
 441 01a2 15A8     		add	r0, sp, #84
 442              	.LVL44:
 443              		.loc 1 253 5 view .LVU146
 444 01a4 FFF7FEFF 		bl	lv_txt_get_size
 445              	.LVL45:
 254:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 255:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_label_dsc_t txt_dsc;
 446              		.loc 1 255 5 is_stmt 1 view .LVU147
 256:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_label_dsc_init(&txt_dsc);
 447              		.loc 1 256 5 view .LVU148
 448 01a8 0DAB     		add	r3, sp, #52
 449 01aa 1846     		mov	r0, r3
 450 01ac FFF7FEFF 		bl	lv_draw_label_dsc_init
 451              	.LVL46:
 257:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_init_draw_label_dsc(obj, LV_PART_MAIN, &txt_dsc);
 452              		.loc 1 257 5 view .LVU149
 453 01b0 0DAB     		add	r3, sp, #52
 454 01b2 1A46     		mov	r2, r3
 455 01b4 4946     		mov	r1, r9
 456 01b6 2846     		mov	r0, r5
 457 01b8 FFF7FEFF 		bl	lv_obj_init_draw_label_dsc
 458              	.LVL47:
 258:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 259:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_coord_t y_ofs = (lv_area_get_height(&marker_area) - font_h) / 2;
 459              		.loc 1 259 5 view .LVU150
 460              	.LBB79:
 461              	.LBI79:
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** }
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Get the width of an area
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 25


 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** }
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** /**
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * Get the height of an area
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****  */
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 462              		.loc 4 143 26 view .LVU151
 463              	.LBB80:
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h **** {
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 464              		.loc 4 145 5 view .LVU152
 465              		.loc 4 145 36 is_stmt 0 view .LVU153
 466 01bc A4EB0803 		sub	r3, r4, r8
 467 01c0 9BB2     		uxth	r3, r3
 468              		.loc 4 145 49 view .LVU154
 469 01c2 0133     		adds	r3, r3, #1
 470              		.loc 4 145 12 view .LVU155
 471 01c4 1BB2     		sxth	r3, r3
 472              	.LVL48:
 473              		.loc 4 145 12 view .LVU156
 474              	.LBE80:
 475              	.LBE79:
 476              		.loc 1 259 58 view .LVU157
 477 01c6 059A     		ldr	r2, [sp, #20]
 478 01c8 9B1A     		subs	r3, r3, r2
 479              		.loc 1 259 68 view .LVU158
 480 01ca 03EBD373 		add	r3, r3, r3, lsr #31
 481              	.LVL49:
 260:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_area_t txt_area;
 482              		.loc 1 260 5 is_stmt 1 view .LVU159
 261:lvgl/lvgl/src/widgets/lv_checkbox.c ****     txt_area.x1 = marker_area.x2 + bg_colp;
 483              		.loc 1 261 5 view .LVU160
 484              		.loc 1 261 34 is_stmt 0 view .LVU161
 485 01ce 079A     		ldr	r2, [sp, #28]
 486              	.LVL50:
 487              		.loc 1 261 34 view .LVU162
 488 01d0 1644     		add	r6, r6, r2
 489              		.loc 1 261 17 view .LVU163
 490 01d2 ADF82C60 		strh	r6, [sp, #44]	@ movhi
 262:lvgl/lvgl/src/widgets/lv_checkbox.c ****     txt_area.x2 = txt_area.x1 + txt_size.x;
 491              		.loc 1 262 5 is_stmt 1 view .LVU164
 492              		.loc 1 262 41 is_stmt 0 view .LVU165
 493 01d6 BDF85400 		ldrh	r0, [sp, #84]
 494              		.loc 1 262 31 view .LVU166
 495 01da 10FA86F6 		uxtah	r6, r0, r6
 496              		.loc 1 262 17 view .LVU167
 497 01de ADF83060 		strh	r6, [sp, #48]	@ movhi
 263:lvgl/lvgl/src/widgets/lv_checkbox.c ****     txt_area.y1 = obj->coords.y1 + bg_topp + y_ofs;
 498              		.loc 1 263 5 is_stmt 1 view .LVU168
 499              		.loc 1 263 30 is_stmt 0 view .LVU169
 500 01e2 E88A     		ldrh	r0, [r5, #22]
 501              		.loc 1 263 34 view .LVU170
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 26


 502 01e4 0744     		add	r7, r7, r0
 503              	.LVL51:
 504              		.loc 1 263 34 view .LVU171
 505 01e6 BFB2     		uxth	r7, r7
 506              		.loc 1 263 44 view .LVU172
 507 01e8 07EB6303 		add	r3, r7, r3, asr #1
 508              	.LVL52:
 509              		.loc 1 263 17 view .LVU173
 510 01ec ADF82E30 		strh	r3, [sp, #46]	@ movhi
 264:lvgl/lvgl/src/widgets/lv_checkbox.c ****     txt_area.y2 = txt_area.y1 + txt_size.y;
 511              		.loc 1 264 5 is_stmt 1 view .LVU174
 512              		.loc 1 264 41 is_stmt 0 view .LVU175
 513 01f0 BDF85670 		ldrh	r7, [sp, #86]
 514              		.loc 1 264 31 view .LVU176
 515 01f4 17FA83F3 		uxtah	r3, r7, r3
 516              		.loc 1 264 17 view .LVU177
 517 01f8 ADF83230 		strh	r3, [sp, #50]	@ movhi
 265:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 266:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_draw_label(&txt_area, clip_area, &txt_dsc, cb->txt, NULL);
 518              		.loc 1 266 5 is_stmt 1 view .LVU178
 519              		.loc 1 266 53 is_stmt 0 view .LVU179
 520 01fc 6B6A     		ldr	r3, [r5, #36]
 521              		.loc 1 266 5 view .LVU180
 522 01fe CDF80090 		str	r9, [sp]
 523 0202 0DAA     		add	r2, sp, #52
 524              	.LVL53:
 525              		.loc 1 266 5 view .LVU181
 526 0204 0499     		ldr	r1, [sp, #16]
 527 0206 0BA8     		add	r0, sp, #44
 528 0208 FFF7FEFF 		bl	lv_draw_label
 529              	.LVL54:
 267:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 530              		.loc 1 267 1 view .LVU182
 531 020c 37B0     		add	sp, sp, #220
 532              	.LCFI2:
 533              		.cfi_def_cfa_offset 36
 534              		@ sp needed
 535 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 536              	.LVL55:
 537              	.L4:
 538              		.loc 1 267 1 view .LVU183
 539 0212 00BF     		.align	2
 540              	.L3:
 541 0214 00000000 		.word	.LANCHOR0
 542              		.cfi_endproc
 543              	.LFE159:
 545              		.section	.text.lv_checkbox_event,"ax",%progbits
 546              		.align	1
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv4-sp-d16
 552              	lv_checkbox_event:
 553              	.LVL56:
 554              	.LFB158:
 146:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 555              		.loc 1 146 1 is_stmt 1 view -0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 27


 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 8
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 146:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 559              		.loc 1 146 1 is_stmt 0 view .LVU185
 560 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 561              	.LCFI3:
 562              		.cfi_def_cfa_offset 32
 563              		.cfi_offset 4, -32
 564              		.cfi_offset 5, -28
 565              		.cfi_offset 6, -24
 566              		.cfi_offset 7, -20
 567              		.cfi_offset 8, -16
 568              		.cfi_offset 9, -12
 569              		.cfi_offset 10, -8
 570              		.cfi_offset 14, -4
 571 0004 86B0     		sub	sp, sp, #24
 572              	.LCFI4:
 573              		.cfi_def_cfa_offset 56
 574 0006 0C46     		mov	r4, r1
 147:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 575              		.loc 1 147 5 is_stmt 1 view .LVU186
 149:lvgl/lvgl/src/widgets/lv_checkbox.c ****     /*Call the ancestor's event handler*/
 576              		.loc 1 149 5 view .LVU187
 151:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(res != LV_RES_OK) return;
 577              		.loc 1 151 5 view .LVU188
 151:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(res != LV_RES_OK) return;
 578              		.loc 1 151 11 is_stmt 0 view .LVU189
 579 0008 4B48     		ldr	r0, .L15
 580              	.LVL57:
 151:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(res != LV_RES_OK) return;
 581              		.loc 1 151 11 view .LVU190
 582 000a FFF7FEFF 		bl	lv_obj_event_base
 583              	.LVL58:
 152:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 584              		.loc 1 152 5 is_stmt 1 view .LVU191
 152:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 585              		.loc 1 152 7 is_stmt 0 view .LVU192
 586 000e 0128     		cmp	r0, #1
 587 0010 02D0     		beq	.L12
 588              	.LVL59:
 589              	.L5:
 198:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 590              		.loc 1 198 1 view .LVU193
 591 0012 06B0     		add	sp, sp, #24
 592              	.LCFI5:
 593              		.cfi_remember_state
 594              		.cfi_def_cfa_offset 32
 595              		@ sp needed
 596 0014 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 597              	.LVL60:
 598              	.L12:
 599              	.LCFI6:
 600              		.cfi_restore_state
 154:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_event_get_target(e);
 601              		.loc 1 154 5 is_stmt 1 view .LVU194
 154:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_event_get_target(e);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 28


 602              		.loc 1 154 28 is_stmt 0 view .LVU195
 603 0018 2046     		mov	r0, r4
 604              	.LVL61:
 154:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_event_get_target(e);
 605              		.loc 1 154 28 view .LVU196
 606 001a FFF7FEFF 		bl	lv_event_get_code
 607              	.LVL62:
 608 001e 0546     		mov	r5, r0
 609              	.LVL63:
 155:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 610              		.loc 1 155 5 is_stmt 1 view .LVU197
 155:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 611              		.loc 1 155 22 is_stmt 0 view .LVU198
 612 0020 2046     		mov	r0, r4
 613 0022 FFF7FEFF 		bl	lv_event_get_target
 614              	.LVL64:
 615 0026 0646     		mov	r6, r0
 616              	.LVL65:
 157:lvgl/lvgl/src/widgets/lv_checkbox.c ****        lv_obj_invalidate(obj);
 617              		.loc 1 157 5 is_stmt 1 view .LVU199
 157:lvgl/lvgl/src/widgets/lv_checkbox.c ****        lv_obj_invalidate(obj);
 618              		.loc 1 157 8 is_stmt 0 view .LVU200
 619 0028 012D     		cmp	r5, #1
 620 002a 0BD0     		beq	.L7
 157:lvgl/lvgl/src/widgets/lv_checkbox.c ****        lv_obj_invalidate(obj);
 621              		.loc 1 157 34 discriminator 1 view .LVU201
 622 002c 082D     		cmp	r5, #8
 623 002e 09D0     		beq	.L7
 160:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t * p = lv_event_get_param(e);
 624              		.loc 1 160 10 is_stmt 1 view .LVU202
 160:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t * p = lv_event_get_param(e);
 625              		.loc 1 160 13 is_stmt 0 view .LVU203
 626 0030 262D     		cmp	r5, #38
 627 0032 0BD0     		beq	.L13
 184:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t *s = lv_event_get_param(e);
 628              		.loc 1 184 10 is_stmt 1 view .LVU204
 184:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t *s = lv_event_get_param(e);
 629              		.loc 1 184 12 is_stmt 0 view .LVU205
 630 0034 132D     		cmp	r5, #19
 631 0036 6FD0     		beq	.L14
 189:lvgl/lvgl/src/widgets/lv_checkbox.c ****         uint32_t v = lv_obj_get_state(obj) & LV_STATE_CHECKED ? 1 : 0;
 632              		.loc 1 189 10 is_stmt 1 view .LVU206
 195:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_draw(e);
 633              		.loc 1 195 12 view .LVU207
 195:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_draw(e);
 634              		.loc 1 195 14 is_stmt 0 view .LVU208
 635 0038 152D     		cmp	r5, #21
 636 003a EAD1     		bne	.L5
 196:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 637              		.loc 1 196 9 is_stmt 1 view .LVU209
 638 003c 2046     		mov	r0, r4
 639              	.LVL66:
 196:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 640              		.loc 1 196 9 is_stmt 0 view .LVU210
 641 003e FFF7FEFF 		bl	lv_checkbox_draw
 642              	.LVL67:
 643 0042 E6E7     		b	.L5
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 29


 644              	.LVL68:
 645              	.L7:
 158:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 646              		.loc 1 158 8 is_stmt 1 view .LVU211
 647 0044 3046     		mov	r0, r6
 648              	.LVL69:
 158:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 649              		.loc 1 158 8 is_stmt 0 view .LVU212
 650 0046 FFF7FEFF 		bl	lv_obj_invalidate
 651              	.LVL70:
 652 004a E2E7     		b	.L5
 653              	.LVL71:
 654              	.L13:
 655              	.LBB81:
 161:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 656              		.loc 1 161 9 is_stmt 1 view .LVU213
 161:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 657              		.loc 1 161 26 is_stmt 0 view .LVU214
 658 004c 2046     		mov	r0, r4
 659              	.LVL72:
 161:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 660              		.loc 1 161 26 view .LVU215
 661 004e FFF7FEFF 		bl	lv_event_get_param
 662              	.LVL73:
 663 0052 0546     		mov	r5, r0
 664              	.LVL74:
 162:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 665              		.loc 1 162 9 is_stmt 1 view .LVU216
 164:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t font_h = lv_font_get_line_height(font);
 666              		.loc 1 164 9 view .LVU217
 667              	.LBB82:
 668              	.LBI82:
 331:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 669              		.loc 2 331 33 view .LVU218
 670              	.LBB83:
 333:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 671              		.loc 2 333 5 view .LVU219
 333:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 672              		.loc 2 333 26 is_stmt 0 view .LVU220
 673 0054 41F25942 		movw	r2, #5209
 674 0058 0021     		movs	r1, #0
 675 005a 3046     		mov	r0, r6
 676              	.LVL75:
 333:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 677              		.loc 2 333 26 view .LVU221
 678 005c FFF7FEFF 		bl	lv_obj_get_style_prop
 679              	.LVL76:
 680 0060 0746     		mov	r7, r0
 681              	.LVL77:
 334:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 682              		.loc 2 334 5 is_stmt 1 view .LVU222
 334:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 683              		.loc 2 334 5 is_stmt 0 view .LVU223
 684              	.LBE83:
 685              	.LBE82:
 165:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t line_space = lv_obj_get_style_text_line_space(obj, LV_PART_MAIN);
 686              		.loc 1 165 9 is_stmt 1 view .LVU224
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 30


 687              	.LBB84:
 688              	.LBI84:
 118:d:\practise\f407_disc\lvgl\lvgl\src\font\lv_font.h **** {
 689              		.loc 3 118 26 view .LVU225
 690              	.LBB85:
 691              		.loc 3 120 5 view .LVU226
 692              		.loc 3 120 18 is_stmt 0 view .LVU227
 693 0062 B0F90840 		ldrsh	r4, [r0, #8]
 694              	.LVL78:
 695              		.loc 3 120 18 view .LVU228
 696              	.LBE85:
 697              	.LBE84:
 166:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t letter_space = lv_obj_get_style_text_letter_space(obj, LV_PART_MAIN);
 698              		.loc 1 166 9 is_stmt 1 view .LVU229
 699              	.LBB86:
 700              	.LBI86:
 343:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 701              		.loc 2 343 26 view .LVU230
 702              	.LBB87:
 345:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 703              		.loc 2 345 5 view .LVU231
 345:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 704              		.loc 2 345 26 is_stmt 0 view .LVU232
 705 0066 41F25B42 		movw	r2, #5211
 706 006a 0021     		movs	r1, #0
 707 006c 3046     		mov	r0, r6
 708              	.LVL79:
 345:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 709              		.loc 2 345 26 view .LVU233
 710 006e FFF7FEFF 		bl	lv_obj_get_style_prop
 711              	.LVL80:
 712              		.loc 2 346 5 is_stmt 1 view .LVU234
 713              		.loc 2 346 12 is_stmt 0 view .LVU235
 714 0072 0FFA80F8 		sxth	r8, r0
 715              	.LVL81:
 716              		.loc 2 346 12 view .LVU236
 717              	.LBE87:
 718              	.LBE86:
 167:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 719              		.loc 1 167 9 is_stmt 1 view .LVU237
 720              	.LBB88:
 721              	.LBI88:
 337:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 722              		.loc 2 337 26 view .LVU238
 723              	.LBB89:
 339:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 724              		.loc 2 339 5 view .LVU239
 339:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 725              		.loc 2 339 26 is_stmt 0 view .LVU240
 726 0076 41F25A42 		movw	r2, #5210
 727 007a 0021     		movs	r1, #0
 728 007c 3046     		mov	r0, r6
 729 007e FFF7FEFF 		bl	lv_obj_get_style_prop
 730              	.LVL82:
 340:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 731              		.loc 2 340 5 is_stmt 1 view .LVU241
 340:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 31


 732              		.loc 2 340 5 is_stmt 0 view .LVU242
 733              	.LBE89:
 734              	.LBE88:
 169:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_txt_get_size(&txt_size, cb->txt, font, letter_space, line_space, LV_COORD_MAX, LV_TEXT_F
 735              		.loc 1 169 9 is_stmt 1 view .LVU243
 170:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 736              		.loc 1 170 9 view .LVU244
 170:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 737              		.loc 1 170 38 is_stmt 0 view .LVU245
 738 0082 716A     		ldr	r1, [r6, #36]
 170:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 739              		.loc 1 170 9 view .LVU246
 740 0084 4FF00009 		mov	r9, #0
 741 0088 CDF80890 		str	r9, [sp, #8]
 742 008c 4FF4C043 		mov	r3, #24576
 743 0090 0193     		str	r3, [sp, #4]
 744 0092 CDF80080 		str	r8, [sp]
 745 0096 03B2     		sxth	r3, r0
 746              	.LVL83:
 170:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 747              		.loc 1 170 9 view .LVU247
 748 0098 3A46     		mov	r2, r7
 749 009a 05A8     		add	r0, sp, #20
 750              	.LVL84:
 170:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 751              		.loc 1 170 9 view .LVU248
 752 009c FFF7FEFF 		bl	lv_txt_get_size
 753              	.LVL85:
 172:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_leftp = lv_obj_get_style_pad_left(obj, LV_PART_INDICATOR);
 754              		.loc 1 172 9 is_stmt 1 view .LVU249
 755              	.LBB90:
 756              	.LBI90:
 121:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 757              		.loc 2 121 26 view .LVU250
 758              	.LBB91:
 123:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 759              		.loc 2 123 5 view .LVU251
 123:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 760              		.loc 2 123 26 is_stmt 0 view .LVU252
 761 00a0 41F21502 		movw	r2, #4117
 762 00a4 4946     		mov	r1, r9
 763 00a6 3046     		mov	r0, r6
 764 00a8 FFF7FEFF 		bl	lv_obj_get_style_prop
 765              	.LVL86:
 766 00ac 0746     		mov	r7, r0
 767              	.LVL87:
 124:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 768              		.loc 2 124 5 is_stmt 1 view .LVU253
 124:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 769              		.loc 2 124 5 is_stmt 0 view .LVU254
 770              	.LBE91:
 771              	.LBE90:
 173:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_rightp = lv_obj_get_style_pad_right(obj, LV_PART_INDICATOR);
 772              		.loc 1 173 9 is_stmt 1 view .LVU255
 773              	.LBB92:
 774              	.LBI92:
 103:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 32


 775              		.loc 2 103 26 view .LVU256
 776              	.LBB93:
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 777              		.loc 2 105 5 view .LVU257
 105:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 778              		.loc 2 105 26 is_stmt 0 view .LVU258
 779 00ae 41F21202 		movw	r2, #4114
 780 00b2 4FF40031 		mov	r1, #131072
 781 00b6 3046     		mov	r0, r6
 782 00b8 FFF7FEFF 		bl	lv_obj_get_style_prop
 783              	.LVL88:
 784 00bc 8046     		mov	r8, r0
 785              	.LVL89:
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 786              		.loc 2 106 5 is_stmt 1 view .LVU259
 106:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 787              		.loc 2 106 5 is_stmt 0 view .LVU260
 788              	.LBE93:
 789              	.LBE92:
 174:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_topp = lv_obj_get_style_pad_top(obj, LV_PART_INDICATOR);
 790              		.loc 1 174 9 is_stmt 1 view .LVU261
 791              	.LBB94:
 792              	.LBI94:
 109:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 793              		.loc 2 109 26 view .LVU262
 794              	.LBB95:
 111:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 795              		.loc 2 111 5 view .LVU263
 111:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 796              		.loc 2 111 26 is_stmt 0 view .LVU264
 797 00be 41F21302 		movw	r2, #4115
 798 00c2 4FF40031 		mov	r1, #131072
 799 00c6 3046     		mov	r0, r6
 800 00c8 FFF7FEFF 		bl	lv_obj_get_style_prop
 801              	.LVL90:
 802 00cc 8246     		mov	r10, r0
 112:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 803              		.loc 2 112 5 is_stmt 1 view .LVU265
 804              	.LVL91:
 112:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 805              		.loc 2 112 5 is_stmt 0 view .LVU266
 806              	.LBE95:
 807              	.LBE94:
 175:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t marker_bottomp = lv_obj_get_style_pad_bottom(obj, LV_PART_INDICATOR);
 808              		.loc 1 175 9 is_stmt 1 view .LVU267
 809              	.LBB96:
 810              	.LBI96:
  91:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 811              		.loc 2 91 26 view .LVU268
 812              	.LBB97:
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 813              		.loc 2 93 5 view .LVU269
  93:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 814              		.loc 2 93 26 is_stmt 0 view .LVU270
 815 00ce 41F21002 		movw	r2, #4112
 816 00d2 4FF40031 		mov	r1, #131072
 817 00d6 3046     		mov	r0, r6
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 33


 818 00d8 FFF7FEFF 		bl	lv_obj_get_style_prop
 819              	.LVL92:
 820 00dc 8146     		mov	r9, r0
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 821              		.loc 2 94 5 is_stmt 1 view .LVU271
 822              	.LVL93:
  94:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 823              		.loc 2 94 5 is_stmt 0 view .LVU272
 824              	.LBE97:
 825              	.LBE96:
 176:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_point_t marker_size;
 826              		.loc 1 176 9 is_stmt 1 view .LVU273
 827              	.LBB98:
 828              	.LBI98:
  97:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 829              		.loc 2 97 26 view .LVU274
 830              	.LBB99:
  99:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 831              		.loc 2 99 5 view .LVU275
  99:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 832              		.loc 2 99 26 is_stmt 0 view .LVU276
 833 00de 41F21102 		movw	r2, #4113
 834 00e2 4FF40031 		mov	r1, #131072
 835 00e6 3046     		mov	r0, r6
 836 00e8 FFF7FEFF 		bl	lv_obj_get_style_prop
 837              	.LVL94:
 100:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 838              		.loc 2 100 5 is_stmt 1 view .LVU277
 100:lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 839              		.loc 2 100 5 is_stmt 0 view .LVU278
 840              	.LBE99:
 841              	.LBE98:
 177:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.x = font_h + marker_leftp + marker_rightp;
 842              		.loc 1 177 9 is_stmt 1 view .LVU279
 178:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.y = font_h + marker_topp + marker_bottomp;
 843              		.loc 1 178 9 view .LVU280
 178:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.y = font_h + marker_topp + marker_bottomp;
 844              		.loc 1 178 32 is_stmt 0 view .LVU281
 845 00ec A3B2     		uxth	r3, r4
 846 00ee 9844     		add	r8, r8, r3
 847              	.LVL95:
 178:lvgl/lvgl/src/widgets/lv_checkbox.c ****         marker_size.y = font_h + marker_topp + marker_bottomp;
 848              		.loc 1 178 47 view .LVU282
 849 00f0 1AFA88F8 		uxtah	r8, r10, r8
 179:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 850              		.loc 1 179 9 is_stmt 1 view .LVU283
 179:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 851              		.loc 1 179 32 is_stmt 0 view .LVU284
 852 00f4 4B44     		add	r3, r3, r9
 179:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 853              		.loc 1 179 46 view .LVU285
 854 00f6 10FA83F3 		uxtah	r3, r0, r3
 855 00fa 1BB2     		sxth	r3, r3
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 856              		.loc 1 181 9 is_stmt 1 view .LVU286
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 857              		.loc 1 181 40 is_stmt 0 view .LVU287
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 34


 858 00fc BDF81420 		ldrh	r2, [sp, #20]
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 859              		.loc 1 181 30 view .LVU288
 860 0100 12FA88F8 		uxtah	r8, r2, r8
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 861              		.loc 1 181 43 view .LVU289
 862 0104 17FA88F7 		uxtah	r7, r7, r8
 863              	.LVL96:
 181:lvgl/lvgl/src/widgets/lv_checkbox.c ****         p->y = LV_MAX(marker_size.y, txt_size.y);
 864              		.loc 1 181 14 view .LVU290
 865 0108 2F80     		strh	r7, [r5]	@ movhi
 182:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 866              		.loc 1 182 9 is_stmt 1 view .LVU291
 182:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 867              		.loc 1 182 16 is_stmt 0 view .LVU292
 868 010a BDF91620 		ldrsh	r2, [sp, #22]
 869 010e 9342     		cmp	r3, r2
 870 0110 B8BF     		it	lt
 871 0112 1346     		movlt	r3, r2
 182:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 872              		.loc 1 182 14 view .LVU293
 873 0114 6B80     		strh	r3, [r5, #2]	@ movhi
 874              	.LBE81:
 875 0116 7CE7     		b	.L5
 876              	.LVL97:
 877              	.L14:
 878              	.LBB100:
 185:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t m = lv_obj_calculate_ext_draw_size(obj, LV_PART_INDICATOR);
 879              		.loc 1 185 9 is_stmt 1 view .LVU294
 185:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t m = lv_obj_calculate_ext_draw_size(obj, LV_PART_INDICATOR);
 880              		.loc 1 185 25 is_stmt 0 view .LVU295
 881 0118 2046     		mov	r0, r4
 882              	.LVL98:
 185:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_coord_t m = lv_obj_calculate_ext_draw_size(obj, LV_PART_INDICATOR);
 883              		.loc 1 185 25 view .LVU296
 884 011a FFF7FEFF 		bl	lv_event_get_param
 885              	.LVL99:
 886 011e 0446     		mov	r4, r0
 887              	.LVL100:
 186:lvgl/lvgl/src/widgets/lv_checkbox.c ****         *s = LV_MAX(*s, m);
 888              		.loc 1 186 9 is_stmt 1 view .LVU297
 186:lvgl/lvgl/src/widgets/lv_checkbox.c ****         *s = LV_MAX(*s, m);
 889              		.loc 1 186 24 is_stmt 0 view .LVU298
 890 0120 4FF40031 		mov	r1, #131072
 891 0124 3046     		mov	r0, r6
 892              	.LVL101:
 186:lvgl/lvgl/src/widgets/lv_checkbox.c ****         *s = LV_MAX(*s, m);
 893              		.loc 1 186 24 view .LVU299
 894 0126 FFF7FEFF 		bl	lv_obj_calculate_ext_draw_size
 895              	.LVL102:
 187:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 896              		.loc 1 187 9 is_stmt 1 view .LVU300
 187:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 897              		.loc 1 187 14 is_stmt 0 view .LVU301
 898 012a B4F90030 		ldrsh	r3, [r4]
 899 012e 8342     		cmp	r3, r0
 900 0130 B8BF     		it	lt
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 35


 901 0132 0346     		movlt	r3, r0
 187:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 902              		.loc 1 187 12 view .LVU302
 903 0134 2380     		strh	r3, [r4]	@ movhi
 904              	.LBE100:
 905 0136 6CE7     		b	.L5
 906              	.L16:
 907              		.align	2
 908              	.L15:
 909 0138 00000000 		.word	.LANCHOR0
 910              		.cfi_endproc
 911              	.LFE158:
 913              		.section	.text.lv_checkbox_destructor,"ax",%progbits
 914              		.align	1
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	lv_checkbox_destructor:
 921              	.LVL103:
 922              	.LFB157:
 133:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 923              		.loc 1 133 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 134:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("begin");
 927              		.loc 1 134 5 view .LVU304
 135:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 928              		.loc 1 135 5 view .LVU305
 135:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 929              		.loc 1 135 5 view .LVU306
 135:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 930              		.loc 1 135 5 view .LVU307
 135:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 931              		.loc 1 135 33 view .LVU308
 137:lvgl/lvgl/src/widgets/lv_checkbox.c ****     if(!cb->static_txt) {
 932              		.loc 1 137 5 view .LVU309
 138:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_mem_free(cb->txt);
 933              		.loc 1 138 5 view .LVU310
 138:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_mem_free(cb->txt);
 934              		.loc 1 138 8 is_stmt 0 view .LVU311
 935 0000 91F82830 		ldrb	r3, [r1, #40]	@ zero_extendqisi2
 138:lvgl/lvgl/src/widgets/lv_checkbox.c ****         lv_mem_free(cb->txt);
 936              		.loc 1 138 7 view .LVU312
 937 0004 13F0010F 		tst	r3, #1
 938 0008 00D0     		beq	.L23
 939 000a 7047     		bx	lr
 940              	.L23:
 133:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 941              		.loc 1 133 1 view .LVU313
 942 000c 10B5     		push	{r4, lr}
 943              	.LCFI7:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 14, -4
 947 000e 0C46     		mov	r4, r1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 36


 139:lvgl/lvgl/src/widgets/lv_checkbox.c ****         cb->txt = NULL;
 948              		.loc 1 139 9 is_stmt 1 view .LVU314
 949 0010 486A     		ldr	r0, [r1, #36]
 950              	.LVL104:
 139:lvgl/lvgl/src/widgets/lv_checkbox.c ****         cb->txt = NULL;
 951              		.loc 1 139 9 is_stmt 0 view .LVU315
 952 0012 FFF7FEFF 		bl	lv_mem_free
 953              	.LVL105:
 140:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 954              		.loc 1 140 9 is_stmt 1 view .LVU316
 140:lvgl/lvgl/src/widgets/lv_checkbox.c ****     }
 955              		.loc 1 140 17 is_stmt 0 view .LVU317
 956 0016 0023     		movs	r3, #0
 957 0018 6362     		str	r3, [r4, #36]
 142:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 958              		.loc 1 142 5 is_stmt 1 view .LVU318
 142:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 959              		.loc 1 142 5 view .LVU319
 142:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 960              		.loc 1 142 5 view .LVU320
 142:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 961              		.loc 1 142 36 view .LVU321
 143:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 962              		.loc 1 143 1 is_stmt 0 view .LVU322
 963 001a 10BD     		pop	{r4, pc}
 143:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 964              		.loc 1 143 1 view .LVU323
 965              		.cfi_endproc
 966              	.LFE157:
 968              		.section	.rodata.lv_checkbox_constructor.str1.4,"aMS",%progbits,1
 969              		.align	2
 970              	.LC0:
 971 0000 43686563 		.ascii	"Check box\000"
 971      6B20626F 
 971      7800
 972              		.section	.text.lv_checkbox_constructor,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu fpv4-sp-d16
 979              	lv_checkbox_constructor:
 980              	.LVL106:
 981              	.LFB156:
 117:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 982              		.loc 1 117 1 is_stmt 1 view -0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 117:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_UNUSED(class_p);
 986              		.loc 1 117 1 is_stmt 0 view .LVU325
 987 0000 10B5     		push	{r4, lr}
 988              	.LCFI8:
 989              		.cfi_def_cfa_offset 8
 990              		.cfi_offset 4, -8
 991              		.cfi_offset 14, -4
 992 0002 0C46     		mov	r4, r1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 37


 118:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_TRACE_OBJ_CREATE("begin");
 993              		.loc 1 118 5 is_stmt 1 view .LVU326
 119:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 994              		.loc 1 119 5 view .LVU327
 119:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 995              		.loc 1 119 5 view .LVU328
 119:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 996              		.loc 1 119 5 view .LVU329
 119:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 997              		.loc 1 119 33 view .LVU330
 121:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 998              		.loc 1 121 5 view .LVU331
 999              	.LVL107:
 123:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
 1000              		.loc 1 123 5 view .LVU332
 123:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
 1001              		.loc 1 123 13 is_stmt 0 view .LVU333
 1002 0004 0A4B     		ldr	r3, .L26
 1003 0006 4B62     		str	r3, [r1, #36]
 124:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CLICKABLE);
 1004              		.loc 1 124 5 is_stmt 1 view .LVU334
 124:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CLICKABLE);
 1005              		.loc 1 124 20 is_stmt 0 view .LVU335
 1006 0008 91F82830 		ldrb	r3, [r1, #40]	@ zero_extendqisi2
 1007 000c 43F00103 		orr	r3, r3, #1
 1008 0010 81F82830 		strb	r3, [r1, #40]
 125:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CHECKABLE);
 1009              		.loc 1 125 5 is_stmt 1 view .LVU336
 1010 0014 0221     		movs	r1, #2
 1011              	.LVL108:
 125:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CHECKABLE);
 1012              		.loc 1 125 5 is_stmt 0 view .LVU337
 1013 0016 2046     		mov	r0, r4
 1014              	.LVL109:
 125:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_CHECKABLE);
 1015              		.loc 1 125 5 view .LVU338
 1016 0018 FFF7FEFF 		bl	lv_obj_add_flag
 1017              	.LVL110:
 126:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_add_flag(obj, LV_OBJ_FLAG_SCROLL_ON_FOCUS);
 1018              		.loc 1 126 5 is_stmt 1 view .LVU339
 1019 001c 0821     		movs	r1, #8
 1020 001e 2046     		mov	r0, r4
 1021 0020 FFF7FEFF 		bl	lv_obj_add_flag
 1022              	.LVL111:
 127:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1023              		.loc 1 127 5 view .LVU340
 1024 0024 4FF40071 		mov	r1, #512
 1025 0028 2046     		mov	r0, r4
 1026 002a FFF7FEFF 		bl	lv_obj_add_flag
 1027              	.LVL112:
 129:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1028              		.loc 1 129 5 view .LVU341
 129:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1029              		.loc 1 129 5 view .LVU342
 129:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1030              		.loc 1 129 5 view .LVU343
 129:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 38


 1031              		.loc 1 129 36 view .LVU344
 130:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1032              		.loc 1 130 1 is_stmt 0 view .LVU345
 1033 002e 10BD     		pop	{r4, pc}
 1034              	.LVL113:
 1035              	.L27:
 130:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1036              		.loc 1 130 1 view .LVU346
 1037              		.align	2
 1038              	.L26:
 1039 0030 00000000 		.word	.LC0
 1040              		.cfi_endproc
 1041              	.LFE156:
 1043              		.section	.text.lv_checkbox_create,"ax",%progbits
 1044              		.align	1
 1045              		.global	lv_checkbox_create
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv4-sp-d16
 1051              	lv_checkbox_create:
 1052              	.LVL114:
 1053              	.LFB152:
  57:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_LOG_INFO("begin")
 1054              		.loc 1 57 1 is_stmt 1 view -0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
  57:lvgl/lvgl/src/widgets/lv_checkbox.c ****     LV_LOG_INFO("begin")
 1058              		.loc 1 57 1 is_stmt 0 view .LVU348
 1059 0000 10B5     		push	{r4, lr}
 1060              	.LCFI9:
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 4, -8
 1063              		.cfi_offset 14, -4
 1064 0002 0146     		mov	r1, r0
  58:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 1065              		.loc 1 58 5 is_stmt 1 view .LVU349
  58:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 1066              		.loc 1 58 5 view .LVU350
  58:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 1067              		.loc 1 58 5 view .LVU351
  59:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_class_init_obj(obj);
 1068              		.loc 1 59 5 view .LVU352
  59:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_class_init_obj(obj);
 1069              		.loc 1 59 22 is_stmt 0 view .LVU353
 1070 0004 0348     		ldr	r0, .L30
 1071              	.LVL115:
  59:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_class_init_obj(obj);
 1072              		.loc 1 59 22 view .LVU354
 1073 0006 FFF7FEFF 		bl	lv_obj_class_create_obj
 1074              	.LVL116:
  59:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_obj_class_init_obj(obj);
 1075              		.loc 1 59 22 view .LVU355
 1076 000a 0446     		mov	r4, r0
 1077              	.LVL117:
  60:lvgl/lvgl/src/widgets/lv_checkbox.c ****     return obj;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 39


 1078              		.loc 1 60 5 is_stmt 1 view .LVU356
 1079 000c FFF7FEFF 		bl	lv_obj_class_init_obj
 1080              	.LVL118:
  61:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1081              		.loc 1 61 5 view .LVU357
  62:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1082              		.loc 1 62 1 is_stmt 0 view .LVU358
 1083 0010 2046     		mov	r0, r4
 1084 0012 10BD     		pop	{r4, pc}
 1085              	.LVL119:
 1086              	.L31:
  62:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1087              		.loc 1 62 1 view .LVU359
 1088              		.align	2
 1089              	.L30:
 1090 0014 00000000 		.word	.LANCHOR0
 1091              		.cfi_endproc
 1092              	.LFE152:
 1094              		.section	.text.lv_checkbox_set_text,"ax",%progbits
 1095              		.align	1
 1096              		.global	lv_checkbox_set_text
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu fpv4-sp-d16
 1102              	lv_checkbox_set_text:
 1103              	.LVL120:
 1104              	.LFB153:
  69:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 1105              		.loc 1 69 1 is_stmt 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
  69:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 1109              		.loc 1 69 1 is_stmt 0 view .LVU361
 1110 0000 38B5     		push	{r3, r4, r5, lr}
 1111              	.LCFI10:
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 3, -16
 1114              		.cfi_offset 4, -12
 1115              		.cfi_offset 5, -8
 1116              		.cfi_offset 14, -4
 1117 0002 0446     		mov	r4, r0
 1118 0004 0D46     		mov	r5, r1
  70:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 1119              		.loc 1 70 5 is_stmt 1 view .LVU362
 1120              	.LVL121:
  74:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
 1121              		.loc 1 74 5 view .LVU363
  74:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
 1122              		.loc 1 74 18 is_stmt 0 view .LVU364
 1123 0006 0846     		mov	r0, r1
 1124              	.LVL122:
  74:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
 1125              		.loc 1 74 18 view .LVU365
 1126 0008 FFF7FEFF 		bl	strlen
 1127              	.LVL123:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 40


  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1128              		.loc 1 77 5 is_stmt 1 view .LVU366
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1129              		.loc 1 77 8 is_stmt 0 view .LVU367
 1130 000c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1131              		.loc 1 77 7 view .LVU368
 1132 0010 13F0010F 		tst	r3, #1
 1133 0014 12D1     		bne	.L33
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1134              		.loc 1 77 25 is_stmt 1 discriminator 1 view .LVU369
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1135              		.loc 1 77 35 is_stmt 0 discriminator 1 view .LVU370
 1136 0016 411C     		adds	r1, r0, #1
 1137 0018 606A     		ldr	r0, [r4, #36]
 1138              	.LVL124:
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1139              		.loc 1 77 35 discriminator 1 view .LVU371
 1140 001a FFF7FEFF 		bl	lv_mem_realloc
 1141              	.LVL125:
  77:lvgl/lvgl/src/widgets/lv_checkbox.c ****     else  cb->txt = lv_mem_alloc(len + 1);
 1142              		.loc 1 77 33 discriminator 1 view .LVU372
 1143 001e 6062     		str	r0, [r4, #36]
 1144              	.L34:
  82:lvgl/lvgl/src/widgets/lv_checkbox.c **** #endif
 1145              		.loc 1 82 5 is_stmt 1 view .LVU373
 1146 0020 2946     		mov	r1, r5
 1147 0022 606A     		ldr	r0, [r4, #36]
 1148 0024 FFF7FEFF 		bl	strcpy
 1149              	.LVL126:
  85:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1150              		.loc 1 85 5 view .LVU374
  85:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1151              		.loc 1 85 20 is_stmt 0 view .LVU375
 1152 0028 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1153 002c 6FF30003 		bfc	r3, #0, #1
 1154 0030 84F82830 		strb	r3, [r4, #40]
  87:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1155              		.loc 1 87 5 is_stmt 1 view .LVU376
 1156 0034 2046     		mov	r0, r4
 1157 0036 FFF7FEFF 		bl	lv_obj_refresh_self_size
 1158              	.LVL127:
  88:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1159              		.loc 1 88 1 is_stmt 0 view .LVU377
 1160 003a 38BD     		pop	{r3, r4, r5, pc}
 1161              	.LVL128:
 1162              	.L33:
  78:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 1163              		.loc 1 78 11 is_stmt 1 view .LVU378
  78:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 1164              		.loc 1 78 21 is_stmt 0 view .LVU379
 1165 003c 0130     		adds	r0, r0, #1
 1166              	.LVL129:
  78:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 1167              		.loc 1 78 21 view .LVU380
 1168 003e FFF7FEFF 		bl	lv_mem_alloc
 1169              	.LVL130:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 41


  78:lvgl/lvgl/src/widgets/lv_checkbox.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 1170              		.loc 1 78 19 view .LVU381
 1171 0042 6062     		str	r0, [r4, #36]
 1172 0044 ECE7     		b	.L34
 1173              		.cfi_endproc
 1174              	.LFE153:
 1176              		.section	.text.lv_checkbox_set_text_static,"ax",%progbits
 1177              		.align	1
 1178              		.global	lv_checkbox_set_text_static
 1179              		.syntax unified
 1180              		.thumb
 1181              		.thumb_func
 1182              		.fpu fpv4-sp-d16
 1184              	lv_checkbox_set_text_static:
 1185              	.LVL131:
 1186              	.LFB154:
  91:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 1187              		.loc 1 91 1 is_stmt 1 view -0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
  91:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 1191              		.loc 1 91 1 is_stmt 0 view .LVU383
 1192 0000 38B5     		push	{r3, r4, r5, lr}
 1193              	.LCFI11:
 1194              		.cfi_def_cfa_offset 16
 1195              		.cfi_offset 3, -16
 1196              		.cfi_offset 4, -12
 1197              		.cfi_offset 5, -8
 1198              		.cfi_offset 14, -4
 1199 0002 0446     		mov	r4, r0
 1200 0004 0D46     		mov	r5, r1
  92:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1201              		.loc 1 92 5 is_stmt 1 view .LVU384
 1202              	.LVL132:
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1203              		.loc 1 94 5 view .LVU385
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1204              		.loc 1 94 8 is_stmt 0 view .LVU386
 1205 0006 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1206              		.loc 1 94 7 view .LVU387
 1207 000a 13F0010F 		tst	r3, #1
 1208 000e 0AD0     		beq	.L39
 1209              	.LVL133:
 1210              	.L37:
  96:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
 1211              		.loc 1 96 5 is_stmt 1 view .LVU388
  96:lvgl/lvgl/src/widgets/lv_checkbox.c ****     cb->static_txt = 1;
 1212              		.loc 1 96 13 is_stmt 0 view .LVU389
 1213 0010 6562     		str	r5, [r4, #36]
  97:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1214              		.loc 1 97 5 is_stmt 1 view .LVU390
  97:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1215              		.loc 1 97 20 is_stmt 0 view .LVU391
 1216 0012 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1217 0016 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 42


 1218 001a 84F82830 		strb	r3, [r4, #40]
  99:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1219              		.loc 1 99 5 is_stmt 1 view .LVU392
 1220 001e 2046     		mov	r0, r4
 1221 0020 FFF7FEFF 		bl	lv_obj_refresh_self_size
 1222              	.LVL134:
 100:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1223              		.loc 1 100 1 is_stmt 0 view .LVU393
 1224 0024 38BD     		pop	{r3, r4, r5, pc}
 1225              	.LVL135:
 1226              	.L39:
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1227              		.loc 1 94 25 is_stmt 1 discriminator 1 view .LVU394
 1228 0026 406A     		ldr	r0, [r0, #36]
 1229              	.LVL136:
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1230              		.loc 1 94 25 is_stmt 0 discriminator 1 view .LVU395
 1231 0028 FFF7FEFF 		bl	lv_mem_free
 1232              	.LVL137:
  94:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1233              		.loc 1 94 25 discriminator 1 view .LVU396
 1234 002c F0E7     		b	.L37
 1235              		.cfi_endproc
 1236              	.LFE154:
 1238              		.section	.text.lv_checkbox_get_text,"ax",%progbits
 1239              		.align	1
 1240              		.global	lv_checkbox_get_text
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	lv_checkbox_get_text:
 1247              	.LVL138:
 1248              	.LFB155:
 107:lvgl/lvgl/src/widgets/lv_checkbox.c ****     lv_checkbox_t * cb = (lv_checkbox_t *)obj;
 1249              		.loc 1 107 1 is_stmt 1 view -0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 108:lvgl/lvgl/src/widgets/lv_checkbox.c ****     return cb->txt;
 1254              		.loc 1 108 5 view .LVU398
 109:lvgl/lvgl/src/widgets/lv_checkbox.c **** }
 1255              		.loc 1 109 5 view .LVU399
 110:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1256              		.loc 1 110 1 is_stmt 0 view .LVU400
 1257 0000 406A     		ldr	r0, [r0, #36]
 1258              	.LVL139:
 110:lvgl/lvgl/src/widgets/lv_checkbox.c **** 
 1259              		.loc 1 110 1 view .LVU401
 1260 0002 7047     		bx	lr
 1261              		.cfi_endproc
 1262              	.LFE155:
 1264              		.global	lv_checkbox_class
 1265              		.section	.rodata.lv_checkbox_class,"a"
 1266              		.align	2
 1267              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 43


 1270              	lv_checkbox_class:
 1271 0000 00000000 		.word	lv_obj_class
 1272 0004 00000000 		.word	lv_checkbox_constructor
 1273 0008 00000000 		.word	lv_checkbox_destructor
 1274 000c 00000000 		.space	4
 1275 0010 00000000 		.word	lv_checkbox_event
 1276 0014 D127     		.short	10193
 1277 0016 D127     		.short	10193
 1278 0018 C4       		.byte	196
 1279 0019 02       		.byte	2
 1280 001a 00       		.byte	0
 1281 001b 00       		.space	1
 1282              		.text
 1283              	.Letext0:
 1284              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1285              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1286              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 1287              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1288              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1289              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 1290              		.file 11 "lvgl/lvgl/src/widgets/../core/../misc/lv_types.h"
 1291              		.file 12 "lvgl/lvgl/src/widgets/../core/../misc/lv_color.h"
 1292              		.file 13 "lvgl/lvgl/src/widgets/../core/../misc/lv_txt.h"
 1293              		.file 14 "lvgl/lvgl/src/widgets/../core/../misc/lv_bidi.h"
 1294              		.file 15 "lvgl/lvgl/src/widgets/../core/../misc/lv_style.h"
 1295              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_ll.h"
 1296              		.file 17 "lvgl/lvgl/src/widgets/../core/lv_obj.h"
 1297              		.file 18 "lvgl/lvgl/src/widgets/../core/lv_group.h"
 1298              		.file 19 "lvgl/lvgl/src/widgets/../core/lv_obj_scroll.h"
 1299              		.file 20 "lvgl/lvgl/src/widgets/../core/lv_obj_style.h"
 1300              		.file 21 "lvgl/lvgl/src/widgets/../core/../draw/lv_draw_rect.h"
 1301              		.file 22 "lvgl/lvgl/src/widgets/../core/../draw/lv_draw_label.h"
 1302              		.file 23 "lvgl/lvgl/src/widgets/../core/../draw/lv_draw_img.h"
 1303              		.file 24 "lvgl/lvgl/src/widgets/../core/../draw/lv_draw_line.h"
 1304              		.file 25 "lvgl/lvgl/src/widgets/../core/../draw/lv_draw_arc.h"
 1305              		.file 26 "lvgl/lvgl/src/widgets/../core/lv_obj_draw.h"
 1306              		.file 27 "lvgl/lvgl/src/widgets/../core/lv_obj_class.h"
 1307              		.file 28 "lvgl/lvgl/src/widgets/../core/lv_event.h"
 1308              		.file 29 "lvgl/lvgl/src/widgets/lv_checkbox.h"
 1309              		.file 30 "lvgl/lvgl/src/widgets/../core/lv_obj_pos.h"
 1310              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_mem.h"
 1311              		.file 32 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
ARM GAS  C:\Users\gx\AppData\Local\Temp\cclvI39r.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 lv_checkbox.c
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:18     .text.lv_checkbox_draw:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:25     .text.lv_checkbox_draw:00000000 lv_checkbox_draw
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:541    .text.lv_checkbox_draw:00000214 $d
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:546    .text.lv_checkbox_event:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:552    .text.lv_checkbox_event:00000000 lv_checkbox_event
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:909    .text.lv_checkbox_event:00000138 $d
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:914    .text.lv_checkbox_destructor:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:920    .text.lv_checkbox_destructor:00000000 lv_checkbox_destructor
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:969    .rodata.lv_checkbox_constructor.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:973    .text.lv_checkbox_constructor:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:979    .text.lv_checkbox_constructor:00000000 lv_checkbox_constructor
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1039   .text.lv_checkbox_constructor:00000030 $d
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1044   .text.lv_checkbox_create:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1051   .text.lv_checkbox_create:00000000 lv_checkbox_create
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1090   .text.lv_checkbox_create:00000014 $d
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1095   .text.lv_checkbox_set_text:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1102   .text.lv_checkbox_set_text:00000000 lv_checkbox_set_text
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1177   .text.lv_checkbox_set_text_static:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1184   .text.lv_checkbox_set_text_static:00000000 lv_checkbox_set_text_static
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1239   .text.lv_checkbox_get_text:00000000 $t
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1246   .text.lv_checkbox_get_text:00000000 lv_checkbox_get_text
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1270   .rodata.lv_checkbox_class:00000000 lv_checkbox_class
C:\Users\gx\AppData\Local\Temp\cclvI39r.s:1266   .rodata.lv_checkbox_class:00000000 $d

UNDEFINED SYMBOLS
lv_event_get_target
lv_event_get_param
lv_obj_get_style_prop
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_obj_draw_dsc_init
lv_event_send
lv_draw_rect
lv_txt_get_size
lv_draw_label_dsc_init
lv_obj_init_draw_label_dsc
lv_draw_label
lv_obj_event_base
lv_event_get_code
lv_obj_invalidate
lv_obj_calculate_ext_draw_size
lv_mem_free
lv_obj_add_flag
lv_obj_class_create_obj
lv_obj_class_init_obj
strlen
lv_mem_realloc
strcpy
lv_obj_refresh_self_size
lv_mem_alloc
lv_obj_class
