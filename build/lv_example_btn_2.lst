ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_btn_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.lv_example_btn_2.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 42757474 		.ascii	"Button\000"
  20      6F6E00
  21              		.section	.text.lv_example_btn_2,"ax",%progbits
  22              		.align	1
  23              		.global	lv_example_btn_2
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	lv_example_btn_2:
  31              	.LFB189:
  32              		.file 1 "lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c"
   1:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** #if LV_USE_BTN && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
   4:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** /**
   5:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****  * Style a button from scratch
   6:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****  */
   7:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** void lv_example_btn_2(void)
   8:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** {
  33              		.loc 1 8 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 20
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 83B0     		sub	sp, sp, #12
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
   9:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     /*Init the style for the default state*/
  10:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     static lv_style_t style;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 2


  48              		.loc 1 10 5 view .LVU1
  11:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_init(&style);
  49              		.loc 1 11 5 view .LVU2
  50 0004 5F4C     		ldr	r4, .L3
  51 0006 2046     		mov	r0, r4
  52 0008 FFF7FEFF 		bl	lv_style_init
  53              	.LVL0:
  12:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  13:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_radius(&style, 3);
  54              		.loc 1 13 5 view .LVU3
  55 000c 0321     		movs	r1, #3
  56 000e 2046     		mov	r0, r4
  57 0010 FFF7FEFF 		bl	lv_style_set_radius
  58              	.LVL1:
  14:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  15:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_opa(&style, LV_OPA_100);
  59              		.loc 1 15 5 view .LVU4
  60 0014 FF21     		movs	r1, #255
  61 0016 2046     		mov	r0, r4
  62 0018 FFF7FEFF 		bl	lv_style_set_bg_opa
  63              	.LVL2:
  16:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_color(&style, lv_palette_main(LV_PALETTE_BLUE));
  64              		.loc 1 16 5 view .LVU5
  65 001c 0520     		movs	r0, #5
  66 001e FFF7FEFF 		bl	lv_palette_main
  67              	.LVL3:
  68 0022 0146     		mov	r1, r0	@ movhi
  69 0024 2046     		mov	r0, r4
  70 0026 FFF7FEFF 		bl	lv_style_set_bg_color
  71              	.LVL4:
  17:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_grad_color(&style, lv_palette_darken(LV_PALETTE_BLUE, 2));
  72              		.loc 1 17 5 view .LVU6
  73 002a 0221     		movs	r1, #2
  74 002c 0520     		movs	r0, #5
  75 002e FFF7FEFF 		bl	lv_palette_darken
  76              	.LVL5:
  77 0032 0146     		mov	r1, r0	@ movhi
  78 0034 2046     		mov	r0, r4
  79 0036 FFF7FEFF 		bl	lv_style_set_bg_grad_color
  80              	.LVL6:
  18:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_grad_dir(&style, LV_GRAD_DIR_VER);
  81              		.loc 1 18 5 view .LVU7
  82 003a 0121     		movs	r1, #1
  83 003c 2046     		mov	r0, r4
  84 003e FFF7FEFF 		bl	lv_style_set_bg_grad_dir
  85              	.LVL7:
  19:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  20:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_border_opa(&style, LV_OPA_40);
  86              		.loc 1 20 5 view .LVU8
  87 0042 6621     		movs	r1, #102
  88 0044 2046     		mov	r0, r4
  89 0046 FFF7FEFF 		bl	lv_style_set_border_opa
  90              	.LVL8:
  21:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_border_width(&style, 2);
  91              		.loc 1 21 5 view .LVU9
  92 004a 0221     		movs	r1, #2
  93 004c 2046     		mov	r0, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 3


  94 004e FFF7FEFF 		bl	lv_style_set_border_width
  95              	.LVL9:
  22:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_border_color(&style, lv_palette_main(LV_PALETTE_GREY));
  96              		.loc 1 22 5 view .LVU10
  97 0052 1220     		movs	r0, #18
  98 0054 FFF7FEFF 		bl	lv_palette_main
  99              	.LVL10:
 100 0058 0146     		mov	r1, r0	@ movhi
 101 005a 2046     		mov	r0, r4
 102 005c FFF7FEFF 		bl	lv_style_set_border_color
 103              	.LVL11:
  23:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  24:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_shadow_width(&style, 8);
 104              		.loc 1 24 5 view .LVU11
 105 0060 0821     		movs	r1, #8
 106 0062 2046     		mov	r0, r4
 107 0064 FFF7FEFF 		bl	lv_style_set_shadow_width
 108              	.LVL12:
  25:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_shadow_color(&style, lv_palette_main(LV_PALETTE_GREY));
 109              		.loc 1 25 5 view .LVU12
 110 0068 1220     		movs	r0, #18
 111 006a FFF7FEFF 		bl	lv_palette_main
 112              	.LVL13:
 113 006e 0146     		mov	r1, r0	@ movhi
 114 0070 2046     		mov	r0, r4
 115 0072 FFF7FEFF 		bl	lv_style_set_shadow_color
 116              	.LVL14:
  26:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_shadow_ofs_y(&style, 8);
 117              		.loc 1 26 5 view .LVU13
 118 0076 0821     		movs	r1, #8
 119 0078 2046     		mov	r0, r4
 120 007a FFF7FEFF 		bl	lv_style_set_shadow_ofs_y
 121              	.LVL15:
  27:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  28:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_outline_opa(&style, LV_OPA_COVER);
 122              		.loc 1 28 5 view .LVU14
 123 007e FF21     		movs	r1, #255
 124 0080 2046     		mov	r0, r4
 125 0082 FFF7FEFF 		bl	lv_style_set_outline_opa
 126              	.LVL16:
  29:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_outline_color(&style, lv_palette_main(LV_PALETTE_BLUE));
 127              		.loc 1 29 5 view .LVU15
 128 0086 0520     		movs	r0, #5
 129 0088 FFF7FEFF 		bl	lv_palette_main
 130              	.LVL17:
 131 008c 0146     		mov	r1, r0	@ movhi
 132 008e 2046     		mov	r0, r4
 133 0090 FFF7FEFF 		bl	lv_style_set_outline_color
 134              	.LVL18:
  30:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  31:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_text_color(&style, lv_color_white());
 135              		.loc 1 31 5 view .LVU16
 136              	.LBB29:
 137              	.LBI29:
 138              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 4


   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Error checking*/
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      DEFINES
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** enum {
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** };
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 5


  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Adjust color mix functions rounding.
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Should be in range of 0..254
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 64: round up from x.75
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 128: round up from half
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 192: round up from x.25
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 254: round up*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** */
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 6


 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 7


 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     union {
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full;
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 8


 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t full;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green;
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red;
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t full;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct {
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t h;
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t s;
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t v;
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     void * user_data;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_color_filter_dsc_t;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef enum {
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 9


 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_palette_t;
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*In color conversations:
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 10


 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF;
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 11


 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /**
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      */
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 440:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 445:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 447:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 448:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 449:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 450:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 451:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 452:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 453:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 454:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 458:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 12


 459:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 461:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 462:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 463:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 469:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 480:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 483:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 484:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 485:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 486:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 487:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 489:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 494:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     (void) mix;
 495:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 500:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 501:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 502:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 503:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 504:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 510:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 512:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 514:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 515:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 13


 516:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 527:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 529:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 530:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 535:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 536:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 537:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 538:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 539:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 540:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 542:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 543:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 544:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 546:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
 547:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 548:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 552:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 555:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 556:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 557:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 558:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 560:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 561:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 562:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 563:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 567:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 569:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 14


 573:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 577:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 580:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 581:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 582:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
 583:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             /*Info:
 584:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             if(res_opa_saved == 0) {
 587:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                 while(1)
 588:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                     ;
 589:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             }
 590:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 593:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         }
 594:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 595:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 596:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 597:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 598:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 599:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 600:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 601:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 602:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 603:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
 604:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color a color
 605:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 606:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 607:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 609:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 613:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 614:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 619:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 620:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 622:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 624:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 625:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 626:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 627:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 628:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 629:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 15


 630:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 631:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 632:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 633:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     dsc->filter_cb = cb;
 634:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 635:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 636:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 637:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //!
 638:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 639:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 640:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 641:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 642:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 643:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 644:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 645:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 646:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 647:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 648:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Convert a HSV color to RGB
 649:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param h hue [0..359]
 650:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param s saturation [0..100]
 651:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param v value [0..100]
 652:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 653:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 654:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 655:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 656:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 657:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Convert a 32-bit RGB color to HSV
 658:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param r8 8-bit red
 659:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param g8 8-bit green
 660:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param b8 8-bit blue
 661:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the given RGB color in HSV
 662:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 663:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 664:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 665:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 666:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Convert a color to HSV
 667:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color color
 668:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the given color in HSV
 669:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 670:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 671:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 672:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 673:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 674:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 675:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 676:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 677:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 678:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 679:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 680:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 681:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 682:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *  PREDEFINED COLORS
 683:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 684:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 685:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 686:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 16


 687:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 139              		.loc 2 687 26 view .LVU17
 140              	.LBE29:
 141              		.loc 2 687 49 view .LVU18
 142              	.LBB32:
 143              	.LBB30:
 144              	.LBI30:
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 145              		.loc 2 615 26 view .LVU19
 146              	.LBB31:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 147              		.loc 2 617 5 view .LVU20
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 148              		.loc 2 617 5 is_stmt 0 view .LVU21
 149              	.LBE31:
 150              	.LBE30:
 151              	.LBE32:
 152              		.loc 1 31 5 view .LVU22
 153 0094 4FF0FF31 		mov	r1, #-1	@ movhi
 154 0098 2046     		mov	r0, r4
 155 009a FFF7FEFF 		bl	lv_style_set_text_color
 156              	.LVL19:
  32:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_pad_all(&style, 10);
 157              		.loc 1 32 5 is_stmt 1 view .LVU23
 158              	.LBB33:
 159              	.LBI33:
 160              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @file lv_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifndef LV_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include <stdbool.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "../font/lv_font.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_color.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_area.h"
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_anim.h"
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_txt.h"
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_types.h"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_assert.h"
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_bidi.h"
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      DEFINES
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 17


  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Flags for style properties
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Other constants
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #else
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      TYPEDEFS
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Possible options how to blend opaque drawings
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_blend_mode_t;
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Some options to apply decorations on texts.
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_text_decor_t;
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Selects on which sides border should be drawn
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 18


  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_border_side_t;
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * The direction of the gradient.
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_grad_dir_t;
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * A common type to handle all the property types in the same way.
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef union {
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_color_t color;    /**< Colors*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_value_t;
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Enumeration of all built in style properties
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef enum {
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 0*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 1*/
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 19


 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 2*/
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 38,
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 39,
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 40,
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 42,
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 3*/
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 4*/
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 5*/
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 20


 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 6*/
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_prop_t;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor for style transitions
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_USER_DATA
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_transition_dsc_t;
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a constant style property.
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_prop_t prop;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_value_t value;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_const_prop_t;
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 21


 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t sentinel;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*If there is only one property store it directly.
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****      *For more properties allocate an array*/
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     union {
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         lv_style_value_t value1;
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * values_and_props;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t * const_props;
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } v_p;
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t prop1 :15;
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t is_const :1;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t has_group;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t prop_cnt;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_t;
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * GLOBAL PROTOTYPES
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a style
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style to initialize
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note Do not call `lv_style_init` on styles that are already have some properties
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       because this function won't free the used memory just set a default state for the style.
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       In other words be sure to initialize styles only once!
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_init(lv_style_t * style);
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_reset(lv_style_t * style);
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Register a new style property for custom usage
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return a new property ID.
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_prop_t MY_PROP;
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * MY_PROP = lv_style_register_prop();
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Remove a property from a style
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 22


 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  a style property ORed with a state.
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Set the value of property in a style.
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * This function shouldn't be used directly by the user.
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to style
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STLYE_BG_COLOR`)
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value `lv_style_value_t` variable in which a filed is set according to the type of `prop`
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value);
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** {
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->is_const) {
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t *const_prop;
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(const_prop->prop == prop) {
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = const_prop->value;
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_INV;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt > 1) {
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint32_t i;
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 23


 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(props[i] == prop) {
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = values[i];
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } else if(style->prop1 == prop) {
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         *value = style->v_p.value1;
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_OK;
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     return LV_RES_INV;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a transition descriptor.
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param tr        pointer to a transition descriptor to initialize
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param props     an array with the properties to transition. The last element must be zero.
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param path_cb   an animation path (ease) callback. If `NULL` liner path will be used.
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param time      duration of the transition in [ms]
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param delay     delay before the transition in [ms]
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param user_data any custom data that will be saved in the transition animation and will be avai
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 };
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  static lv_style_transition_dsc_t trans1;
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL);
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the default value of a property
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the default value
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop);
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Checks if a style is empty (has no properties)
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_is_empty(const lv_style_t * style);
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Tell the group of a property. If the a property from a group is set in a style the (1 << group) 
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * It allows early skipping the style if the property is not exists in the style at all.
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop a style property
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the group [0..7] 7 means all the custom properties with index > 112
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop);
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_style_gen.h"
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value) {
 161              		.loc 3 425 20 view .LVU24
 162              	.LBB34:
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
 163              		.loc 3 426 5 view .LVU25
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 24


 164 009e 0A21     		movs	r1, #10
 165 00a0 2046     		mov	r0, r4
 166 00a2 FFF7FEFF 		bl	lv_style_set_pad_left
 167              	.LVL20:
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 168              		.loc 3 427 5 view .LVU26
 169 00a6 0A21     		movs	r1, #10
 170 00a8 2046     		mov	r0, r4
 171 00aa FFF7FEFF 		bl	lv_style_set_pad_right
 172              	.LVL21:
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
 173              		.loc 3 428 5 view .LVU27
 174 00ae 0A21     		movs	r1, #10
 175 00b0 2046     		mov	r0, r4
 176 00b2 FFF7FEFF 		bl	lv_style_set_pad_top
 177              	.LVL22:
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 178              		.loc 3 429 5 view .LVU28
 179 00b6 0A21     		movs	r1, #10
 180 00b8 2046     		mov	r0, r4
 181 00ba FFF7FEFF 		bl	lv_style_set_pad_bottom
 182              	.LVL23:
 183              		.loc 3 429 5 is_stmt 0 view .LVU29
 184              	.LBE34:
 185              	.LBE33:
  33:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  34:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     /*Init the pressed style*/
  35:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     static lv_style_t style_pr;
 186              		.loc 1 35 5 is_stmt 1 view .LVU30
  36:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_init(&style_pr);
 187              		.loc 1 36 5 view .LVU31
 188 00be 324D     		ldr	r5, .L3+4
 189 00c0 2846     		mov	r0, r5
 190 00c2 FFF7FEFF 		bl	lv_style_init
 191              	.LVL24:
  37:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  38:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     /*Ad a large outline when pressed*/
  39:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_outline_width(&style_pr, 30);
 192              		.loc 1 39 5 view .LVU32
 193 00c6 1E21     		movs	r1, #30
 194 00c8 2846     		mov	r0, r5
 195 00ca FFF7FEFF 		bl	lv_style_set_outline_width
 196              	.LVL25:
  40:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_outline_opa(&style_pr, LV_OPA_TRANSP);
 197              		.loc 1 40 5 view .LVU33
 198 00ce 0021     		movs	r1, #0
 199 00d0 2846     		mov	r0, r5
 200 00d2 FFF7FEFF 		bl	lv_style_set_outline_opa
 201              	.LVL26:
  41:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  42:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_translate_y(&style_pr, 5);
 202              		.loc 1 42 5 view .LVU34
 203 00d6 0521     		movs	r1, #5
 204 00d8 2846     		mov	r0, r5
 205 00da FFF7FEFF 		bl	lv_style_set_translate_y
 206              	.LVL27:
  43:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_shadow_ofs_y(&style_pr, 3);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 25


 207              		.loc 1 43 5 view .LVU35
 208 00de 0321     		movs	r1, #3
 209 00e0 2846     		mov	r0, r5
 210 00e2 FFF7FEFF 		bl	lv_style_set_shadow_ofs_y
 211              	.LVL28:
  44:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_color(&style_pr, lv_palette_darken(LV_PALETTE_BLUE, 2));
 212              		.loc 1 44 5 view .LVU36
 213 00e6 0221     		movs	r1, #2
 214 00e8 0520     		movs	r0, #5
 215 00ea FFF7FEFF 		bl	lv_palette_darken
 216              	.LVL29:
 217 00ee 0146     		mov	r1, r0	@ movhi
 218 00f0 2846     		mov	r0, r5
 219 00f2 FFF7FEFF 		bl	lv_style_set_bg_color
 220              	.LVL30:
  45:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_bg_grad_color(&style_pr, lv_palette_darken(LV_PALETTE_BLUE, 4));
 221              		.loc 1 45 5 view .LVU37
 222 00f6 0421     		movs	r1, #4
 223 00f8 0520     		movs	r0, #5
 224 00fa FFF7FEFF 		bl	lv_palette_darken
 225              	.LVL31:
 226 00fe 0146     		mov	r1, r0	@ movhi
 227 0100 2846     		mov	r0, r5
 228 0102 FFF7FEFF 		bl	lv_style_set_bg_grad_color
 229              	.LVL32:
  46:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  47:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     /*Add a transition to the the outline*/
  48:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     static lv_style_transition_dsc_t trans;
 230              		.loc 1 48 5 view .LVU38
  49:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     static lv_style_prop_t props[] = {LV_STYLE_OUTLINE_WIDTH, LV_STYLE_OUTLINE_OPA, 0};
 231              		.loc 1 49 5 view .LVU39
  50:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_transition_dsc_init(&trans, props, lv_anim_path_linear, 300, 0, NULL);
 232              		.loc 1 50 5 view .LVU40
 233 0106 214F     		ldr	r7, .L3+8
 234 0108 0026     		movs	r6, #0
 235 010a 0196     		str	r6, [sp, #4]
 236 010c 0096     		str	r6, [sp]
 237 010e 4FF49673 		mov	r3, #300
 238 0112 1F4A     		ldr	r2, .L3+12
 239 0114 1F49     		ldr	r1, .L3+16
 240 0116 3846     		mov	r0, r7
 241 0118 FFF7FEFF 		bl	lv_style_transition_dsc_init
 242              	.LVL33:
  51:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  52:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_style_set_transition(&style_pr, &trans);
 243              		.loc 1 52 5 view .LVU41
 244 011c 3946     		mov	r1, r7
 245 011e 2846     		mov	r0, r5
 246 0120 FFF7FEFF 		bl	lv_style_set_transition
 247              	.LVL34:
  53:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  54:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 248              		.loc 1 54 5 view .LVU42
 249              	.LBB35:
 250              	.LBI35:
 251              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 26


   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 27


  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 28


 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 252              		.loc 4 163 26 view .LVU43
 253              	.LBB36:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 254              		.loc 4 165 5 view .LVU44
 255              		.loc 4 165 12 is_stmt 0 view .LVU45
 256 0124 FFF7FEFF 		bl	lv_disp_get_default
 257              	.LVL35:
 258 0128 FFF7FEFF 		bl	lv_disp_get_scr_act
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 29


 259              	.LVL36:
 260              	.LBE36:
 261              	.LBE35:
 262              		.loc 1 54 23 view .LVU46
 263 012c FFF7FEFF 		bl	lv_btn_create
 264              	.LVL37:
 265 0130 0746     		mov	r7, r0
 266              	.LVL38:
  55:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_remove_style_all(btn1);                          /*Remove the style coming from the them
 267              		.loc 1 55 5 is_stmt 1 view .LVU47
 268              	.LBB37:
 269              	.LBI37:
 270              		.file 5 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @file lv_obj_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include <stdint.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include <stdbool.h>
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** struct _lv_obj_t;
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef enum {
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef struct {
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_t * style;
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t selector :24;
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t is_local :1;
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t is_trans :1;
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** }_lv_obj_style_t;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 30


  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef struct {
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint16_t time;
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint16_t delay;
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_selector_t selector;
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_prop_t prop;
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #if LV_USE_USER_DATA
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     void * user_data;
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #endif
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**********************
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  **********************/
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Initialize the object related style manager module.
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void _lv_obj_style_init(void);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Add a style to an object.
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param style     pointer to a style to add
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Add a style to an object.
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Remove all styles from an object
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
 271              		.loc 5 92 20 view .LVU48
 272              	.LBB38:
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** {
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
 273              		.loc 5 94 5 view .LVU49
 274 0132 194A     		ldr	r2, .L3+20
 275 0134 3146     		mov	r1, r6
 276 0136 FFF7FEFF 		bl	lv_obj_remove_style
 277              	.LVL39:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 31


 278              		.loc 5 94 5 is_stmt 0 view .LVU50
 279              	.LBE38:
 280              	.LBE37:
  56:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_add_style(btn1, &style, 0);
 281              		.loc 1 56 5 is_stmt 1 view .LVU51
 282 013a 3246     		mov	r2, r6
 283 013c 2146     		mov	r1, r4
 284 013e 3846     		mov	r0, r7
 285 0140 FFF7FEFF 		bl	lv_obj_add_style
 286              	.LVL40:
  57:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_add_style(btn1, &style_pr, LV_STATE_PRESSED);
 287              		.loc 1 57 5 view .LVU52
 288 0144 2022     		movs	r2, #32
 289 0146 2946     		mov	r1, r5
 290 0148 3846     		mov	r0, r7
 291 014a FFF7FEFF 		bl	lv_obj_add_style
 292              	.LVL41:
  58:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_set_size(btn1, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 293              		.loc 1 58 5 view .LVU53
 294 014e 42F2D172 		movw	r2, #10193
 295 0152 1146     		mov	r1, r2
 296 0154 3846     		mov	r0, r7
 297 0156 FFF7FEFF 		bl	lv_obj_set_size
 298              	.LVL42:
  59:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_center(btn1);
 299              		.loc 1 59 5 view .LVU54
 300              	.LBB39:
 301              	.LBI39:
 302              		.file 6 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 32


  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 33


  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 34


 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 303              		.loc 6 186 20 view .LVU55
 304              	.LBB40:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 305              		.loc 6 188 5 view .LVU56
 306 015a 3346     		mov	r3, r6
 307 015c 3246     		mov	r2, r6
 308 015e 0921     		movs	r1, #9
 309 0160 3846     		mov	r0, r7
 310 0162 FFF7FEFF 		bl	lv_obj_align
 311              	.LVL43:
 312              		.loc 6 188 5 is_stmt 0 view .LVU57
 313              	.LBE40:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 35


 314              	.LBE39:
  60:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** 
  61:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_t * label = lv_label_create(btn1);
 315              		.loc 1 61 5 is_stmt 1 view .LVU58
 316              		.loc 1 61 24 is_stmt 0 view .LVU59
 317 0166 3846     		mov	r0, r7
 318 0168 FFF7FEFF 		bl	lv_label_create
 319              	.LVL44:
 320 016c 0446     		mov	r4, r0
 321              	.LVL45:
  62:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_label_set_text(label, "Button");
 322              		.loc 1 62 5 is_stmt 1 view .LVU60
 323 016e 0B49     		ldr	r1, .L3+24
 324 0170 FFF7FEFF 		bl	lv_label_set_text
 325              	.LVL46:
  63:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c ****     lv_obj_center(label);
 326              		.loc 1 63 5 view .LVU61
 327              	.LBB41:
 328              	.LBI41:
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 329              		.loc 6 186 20 view .LVU62
 330              	.LBB42:
 331              		.loc 6 188 5 view .LVU63
 332 0174 3346     		mov	r3, r6
 333 0176 3246     		mov	r2, r6
 334 0178 0921     		movs	r1, #9
 335 017a 2046     		mov	r0, r4
 336 017c FFF7FEFF 		bl	lv_obj_align
 337              	.LVL47:
 338              		.loc 6 188 5 is_stmt 0 view .LVU64
 339              	.LBE42:
 340              	.LBE41:
  64:lvgl/lvgl/examples/widgets/btn/lv_example_btn_2.c **** }
 341              		.loc 1 64 1 view .LVU65
 342 0180 03B0     		add	sp, sp, #12
 343              	.LCFI2:
 344              		.cfi_def_cfa_offset 20
 345              		@ sp needed
 346 0182 F0BD     		pop	{r4, r5, r6, r7, pc}
 347              	.LVL48:
 348              	.L4:
 349              		.loc 1 64 1 view .LVU66
 350              		.align	2
 351              	.L3:
 352 0184 00000000 		.word	.LANCHOR0
 353 0188 00000000 		.word	.LANCHOR1
 354 018c 00000000 		.word	.LANCHOR3
 355 0190 00000000 		.word	lv_anim_path_linear
 356 0194 00000000 		.word	.LANCHOR2
 357 0198 FFFF0F00 		.word	1048575
 358 019c 00000000 		.word	.LC0
 359              		.cfi_endproc
 360              	.LFE189:
 362              		.section	.bss.style.12313,"aw",%nobits
 363              		.align	2
 364              		.set	.LANCHOR0,. + 0
 367              	style.12313:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 36


 368 0000 00000000 		.space	8
 368      00000000 
 369              		.section	.bss.style_pr.12314,"aw",%nobits
 370              		.align	2
 371              		.set	.LANCHOR1,. + 0
 374              	style_pr.12314:
 375 0000 00000000 		.space	8
 375      00000000 
 376              		.section	.bss.trans.12315,"aw",%nobits
 377              		.align	2
 378              		.set	.LANCHOR3,. + 0
 381              	trans.12315:
 382 0000 00000000 		.space	20
 382      00000000 
 382      00000000 
 382      00000000 
 382      00000000 
 383              		.section	.data.props.12316,"aw"
 384              		.align	2
 385              		.set	.LANCHOR2,. + 0
 388              	props.12316:
 389 0000 3A08     		.short	2106
 390 0002 3C08     		.short	2108
 391 0004 0000     		.short	0
 392              		.text
 393              	.Letext0:
 394              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 395              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 396              		.file 9 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 397              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-non
 398              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 399              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 400              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 401              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_anim.h"
 402              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 403              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 404              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 405              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 406              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 407              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 408              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 409              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 410              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 411              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 412              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 413              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 414              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 415              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 416              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 417              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 418              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 419              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 420              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 421              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 422              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 423              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 424              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 37


 425              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 426              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 427              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 428              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 429              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 430              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 431              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 432              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 433              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 434              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 435              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 436              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 437              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 438              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 439              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 440              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 441              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 442              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 443              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 444              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 445              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 446              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style_gen.h"
 447              		.file 60 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_btn_2.c
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:18     .rodata.lv_example_btn_2.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:22     .text.lv_example_btn_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:30     .text.lv_example_btn_2:00000000 lv_example_btn_2
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:352    .text.lv_example_btn_2:00000184 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:363    .bss.style.12313:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:367    .bss.style.12313:00000000 style.12313
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:370    .bss.style_pr.12314:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:374    .bss.style_pr.12314:00000000 style_pr.12314
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:377    .bss.trans.12315:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:381    .bss.trans.12315:00000000 trans.12315
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:384    .data.props.12316:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccv0kPC9.s:388    .data.props.12316:00000000 props.12316

UNDEFINED SYMBOLS
lv_style_init
lv_style_set_radius
lv_style_set_bg_opa
lv_palette_main
lv_style_set_bg_color
lv_palette_darken
lv_style_set_bg_grad_color
lv_style_set_bg_grad_dir
lv_style_set_border_opa
lv_style_set_border_width
lv_style_set_border_color
lv_style_set_shadow_width
lv_style_set_shadow_color
lv_style_set_shadow_ofs_y
lv_style_set_outline_opa
lv_style_set_outline_color
lv_style_set_text_color
lv_style_set_pad_left
lv_style_set_pad_right
lv_style_set_pad_top
lv_style_set_pad_bottom
lv_style_set_outline_width
lv_style_set_translate_y
lv_style_transition_dsc_init
lv_style_set_transition
lv_disp_get_default
lv_disp_get_scr_act
lv_btn_create
lv_obj_remove_style
lv_obj_add_style
lv_obj_set_size
lv_obj_align
lv_label_create
lv_label_set_text
lv_anim_path_linear
