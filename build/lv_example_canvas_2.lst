ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_canvas_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_example_canvas_2,"ax",%progbits
  18              		.align	1
  19              		.global	lv_example_canvas_2
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_example_canvas_2:
  27              	.LFB189:
  28              		.file 1 "lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c"
   1:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** #if LV_USE_CANVAS && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
   4:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** #define CANVAS_WIDTH  50
   5:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** #define CANVAS_HEIGHT  50
   6:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
   7:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** /**
   8:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****  * Create a transparent canvas with Chroma keying and indexed color format (palette).
   9:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****  */
  10:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** void lv_example_canvas_2(void)
  11:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** {
  29              		.loc 1 11 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  12:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Create a button to better see the transparency*/
  13:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_btn_create(lv_scr_act());
  44              		.loc 1 13 5 view .LVU1
  45              	.LBB12:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 2


  46              	.LBI12:
  47              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 3


  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 4


 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  48              		.loc 2 163 26 view .LVU2
  49              	.LBB13:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  50              		.loc 2 165 5 view .LVU3
  51              		.loc 2 165 12 is_stmt 0 view .LVU4
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 5


  52 0004 FFF7FEFF 		bl	lv_disp_get_default
  53              	.LVL0:
  54 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
  55              	.LVL1:
  56              	.LBE13:
  57              	.LBE12:
  58              		.loc 1 13 5 view .LVU5
  59 000c FFF7FEFF 		bl	lv_btn_create
  60              	.LVL2:
  14:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  15:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Create a buffer for the canvas*/
  16:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     static lv_color_t cbuf[LV_CANVAS_BUF_SIZE_INDEXED_1BIT(CANVAS_WIDTH, CANVAS_HEIGHT)];
  61              		.loc 1 16 5 is_stmt 1 view .LVU6
  17:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  18:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Create a canvas and initialize its the palette*/
  19:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_obj_t * canvas = lv_canvas_create(lv_scr_act());
  62              		.loc 1 19 5 view .LVU7
  63              	.LBB14:
  64              	.LBI14:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
  65              		.loc 2 163 26 view .LVU8
  66              	.LBB15:
  67              		.loc 2 165 5 view .LVU9
  68              		.loc 2 165 12 is_stmt 0 view .LVU10
  69 0010 FFF7FEFF 		bl	lv_disp_get_default
  70              	.LVL3:
  71 0014 FFF7FEFF 		bl	lv_disp_get_scr_act
  72              	.LVL4:
  73              	.LBE15:
  74              	.LBE14:
  75              		.loc 1 19 25 view .LVU11
  76 0018 FFF7FEFF 		bl	lv_canvas_create
  77              	.LVL5:
  78 001c 0646     		mov	r6, r0
  79              	.LVL6:
  20:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_canvas_set_buffer(canvas, cbuf, CANVAS_WIDTH, CANVAS_HEIGHT, LV_IMG_CF_INDEXED_1BIT);
  80              		.loc 1 20 5 is_stmt 1 view .LVU12
  81 001e 0723     		movs	r3, #7
  82 0020 0093     		str	r3, [sp]
  83 0022 3223     		movs	r3, #50
  84 0024 1A46     		mov	r2, r3
  85 0026 1549     		ldr	r1, .L8
  86 0028 FFF7FEFF 		bl	lv_canvas_set_buffer
  87              	.LVL7:
  21:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_canvas_set_palette(canvas, 0, LV_COLOR_CHROMA_KEY);
  88              		.loc 1 21 5 view .LVU13
  89              	.LBB16:
  90              	.LBI16:
  91              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 6


   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Error checking*/
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      DEFINES
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** enum {
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** };
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 7


  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Adjust color mix functions rounding.
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Should be in range of 0..254
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 64: round up from x.75
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 128: round up from half
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 192: round up from x.25
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 254: round up*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** */
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 8


 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 9


 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     union {
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full;
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 10


 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t full;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green;
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red;
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t full;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct {
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t h;
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t s;
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t v;
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     void * user_data;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_color_filter_dsc_t;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef enum {
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 11


 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_palette_t;
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*In color conversations:
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 12


 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF;
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 13


 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /**
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      */
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 440:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 445:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 447:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 448:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 449:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 450:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 451:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 452:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 453:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 454:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 458:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 459:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 461:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 462:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 463:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 14


 465:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 469:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 480:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 483:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 484:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 485:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 486:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 487:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 489:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 494:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     (void) mix;
 495:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 500:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 501:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 502:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 503:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 504:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 510:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 512:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 514:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 515:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 15


 522:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 527:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 529:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 530:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 535:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 536:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 537:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 538:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 539:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 540:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 542:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 543:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 544:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 546:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
 547:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 548:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 552:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 555:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 556:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 557:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 558:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 560:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 561:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 562:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 563:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 567:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 569:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 577:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 16


 579:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 580:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 581:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 582:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
 583:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             /*Info:
 584:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             if(res_opa_saved == 0) {
 587:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                 while(1)
 588:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                     ;
 589:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             }
 590:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 593:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         }
 594:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 595:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 596:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 597:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 598:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 599:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 600:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 601:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 602:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 603:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
 604:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color a color
 605:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 606:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 607:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 609:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 613:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 614:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 619:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 620:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
  92              		.loc 3 620 26 view .LVU14
  93              	.LBE16:
 621:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 622:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
  94              		.loc 3 622 5 view .LVU15
  95              	.LBB19:
  96              	.LBB17:
  97              	.LBI17:
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
  98              		.loc 3 615 26 view .LVU16
  99              	.LBB18:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 100              		.loc 3 617 5 view .LVU17
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 101              		.loc 3 617 5 is_stmt 0 view .LVU18
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 17


 102              	.LBE18:
 103              	.LBE17:
 104              	.LBE19:
 105              		.loc 1 21 5 view .LVU19
 106 002c 4FF4FC62 		mov	r2, #2016	@ movhi
 107 0030 0021     		movs	r1, #0
 108 0032 3046     		mov	r0, r6
 109 0034 FFF7FEFF 		bl	lv_canvas_set_palette
 110              	.LVL8:
  22:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_canvas_set_palette(canvas, 1, lv_palette_main(LV_PALETTE_RED));
 111              		.loc 1 22 5 is_stmt 1 view .LVU20
 112 0038 0020     		movs	r0, #0
 113 003a FFF7FEFF 		bl	lv_palette_main
 114              	.LVL9:
 115 003e 0246     		mov	r2, r0	@ movhi
 116 0040 0121     		movs	r1, #1
 117 0042 3046     		mov	r0, r6
 118 0044 FFF7FEFF 		bl	lv_canvas_set_palette
 119              	.LVL10:
  23:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  24:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Create colors with the indices of the palette*/
  25:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_color_t c0;
 120              		.loc 1 25 5 view .LVU21
  26:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_color_t c1;
 121              		.loc 1 26 5 view .LVU22
  27:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  28:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     c0.full = 0;
 122              		.loc 1 28 5 view .LVU23
 123              		.loc 1 28 13 is_stmt 0 view .LVU24
 124 0048 4FF00007 		mov	r7, #0	@ movhi
 125              	.LVL11:
  29:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     c1.full = 1;
 126              		.loc 1 29 5 is_stmt 1 view .LVU25
  30:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  31:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Red background (There is no dedicated alpha channel in indexed images so LV_OPA_COVER is igno
  32:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     lv_canvas_fill_bg(canvas, c1, LV_OPA_COVER);
 127              		.loc 1 32 5 view .LVU26
 128 004c FF22     		movs	r2, #255
 129 004e 4FF00101 		mov	r1, #1	@ movhi
 130 0052 3046     		mov	r0, r6
 131 0054 FFF7FEFF 		bl	lv_canvas_fill_bg
 132              	.LVL12:
  33:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  34:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     /*Create hole on the canvas*/
  35:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     uint32_t x;
 133              		.loc 1 35 5 view .LVU27
  36:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     uint32_t y;
 134              		.loc 1 36 5 view .LVU28
  37:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     for( y = 10; y < 30; y++) {
 135              		.loc 1 37 5 view .LVU29
 136              		.loc 1 37 12 is_stmt 0 view .LVU30
 137 0058 0A25     		movs	r5, #10
 138              		.loc 1 37 5 view .LVU31
 139 005a 09E0     		b	.L2
 140              	.LVL13:
 141              	.L3:
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 18


  39:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****             lv_canvas_set_px(canvas, x, y, c0);
 142              		.loc 1 39 13 is_stmt 1 discriminator 3 view .LVU32
 143 005c 3B46     		mov	r3, r7	@ movhi
 144 005e 2AB2     		sxth	r2, r5
 145 0060 21B2     		sxth	r1, r4
 146 0062 3046     		mov	r0, r6
 147 0064 FFF7FEFF 		bl	lv_canvas_set_px
 148              	.LVL14:
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
 149              		.loc 1 38 29 discriminator 3 view .LVU33
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
 150              		.loc 1 38 30 is_stmt 0 discriminator 3 view .LVU34
 151 0068 0134     		adds	r4, r4, #1
 152              	.LVL15:
 153              	.L4:
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
 154              		.loc 1 38 21 is_stmt 1 discriminator 1 view .LVU35
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
 155              		.loc 1 38 9 is_stmt 0 discriminator 1 view .LVU36
 156 006a 132C     		cmp	r4, #19
 157 006c F6D9     		bls	.L3
  37:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     for( y = 10; y < 30; y++) {
 158              		.loc 1 37 26 is_stmt 1 discriminator 2 view .LVU37
  37:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     for( y = 10; y < 30; y++) {
 159              		.loc 1 37 27 is_stmt 0 discriminator 2 view .LVU38
 160 006e 0135     		adds	r5, r5, #1
 161              	.LVL16:
 162              	.L2:
  37:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     for( y = 10; y < 30; y++) {
 163              		.loc 1 37 18 is_stmt 1 discriminator 1 view .LVU39
  37:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     for( y = 10; y < 30; y++) {
 164              		.loc 1 37 5 is_stmt 0 discriminator 1 view .LVU40
 165 0070 1D2D     		cmp	r5, #29
 166 0072 01D8     		bhi	.L7
  38:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         for( x = 5; x < 20; x++) {
 167              		.loc 1 38 16 view .LVU41
 168 0074 0524     		movs	r4, #5
 169 0076 F8E7     		b	.L4
 170              	.L7:
  40:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****         }
  41:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c ****     }
  42:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** 
  43:lvgl/lvgl/examples/widgets/canvas/lv_example_canvas_2.c **** }
 171              		.loc 1 43 1 view .LVU42
 172 0078 03B0     		add	sp, sp, #12
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 20
 175              		@ sp needed
 176 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 177              	.LVL17:
 178              	.L9:
 179              		.loc 1 43 1 view .LVU43
 180              		.align	2
 181              	.L8:
 182 007c 00000000 		.word	.LANCHOR0
 183              		.cfi_endproc
 184              	.LFE189:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 19


 186              		.section	.bss.cbuf.12313,"aw",%nobits
 187              		.align	2
 188              		.set	.LANCHOR0,. + 0
 191              	cbuf.12313:
 192 0000 00000000 		.space	716
 192      00000000 
 192      00000000 
 192      00000000 
 192      00000000 
 193              		.text
 194              	.Letext0:
 195              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 196              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 197              		.file 6 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 198              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 199              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 200              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 201              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 202              		.file 11 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 203              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_img_buf.h"
 204              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 205              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 206              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 207              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 208              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 209              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 210              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 211              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 212              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 213              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 214              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 215              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 216              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 217              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 218              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 219              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 220              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 221              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 222              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 223              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 224              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 225              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 226              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 227              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 228              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 229              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 230              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 231              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 232              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 233              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 234              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 235              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 236              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 237              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 238              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 239              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 240              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 20


 241              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 242              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 243              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 244              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 245              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 246              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 247              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 248              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 249              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_canvas_2.c
C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s:18     .text.lv_example_canvas_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s:26     .text.lv_example_canvas_2:00000000 lv_example_canvas_2
C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s:182    .text.lv_example_canvas_2:0000007c $d
C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s:187    .bss.cbuf.12313:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc1Zwvs5.s:191    .bss.cbuf.12313:00000000 cbuf.12313

UNDEFINED SYMBOLS
lv_disp_get_default
lv_disp_get_scr_act
lv_btn_create
lv_canvas_create
lv_canvas_set_buffer
lv_canvas_set_palette
lv_palette_main
lv_canvas_fill_bg
lv_canvas_set_px
