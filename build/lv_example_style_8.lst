ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_style_8.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.lv_example_style_8.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 54657874 		.ascii	"Text of\012a label\000"
  20      206F660A 
  20      61206C61 
  20      62656C00 
  21              		.section	.text.lv_example_style_8,"ax",%progbits
  22              		.align	1
  23              		.global	lv_example_style_8
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	lv_example_style_8:
  31              	.LFB189:
  32              		.file 1 "lvgl/lvgl/examples/styles/lv_example_style_8.c"
   1:lvgl/lvgl/examples/styles/lv_example_style_8.c **** #include "../lv_examples.h"
   2:lvgl/lvgl/examples/styles/lv_example_style_8.c **** #if LV_BUILD_EXAMPLES && LV_USE_LABEL
   3:lvgl/lvgl/examples/styles/lv_example_style_8.c **** 
   4:lvgl/lvgl/examples/styles/lv_example_style_8.c **** /**
   5:lvgl/lvgl/examples/styles/lv_example_style_8.c ****  * Using the text style properties
   6:lvgl/lvgl/examples/styles/lv_example_style_8.c ****  */
   7:lvgl/lvgl/examples/styles/lv_example_style_8.c **** void lv_example_style_8(void)
   8:lvgl/lvgl/examples/styles/lv_example_style_8.c **** {
  33              		.loc 1 8 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 38B5     		push	{r3, r4, r5, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 3, -16
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
   9:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     static lv_style_t style;
  44              		.loc 1 9 5 view .LVU1
  10:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_init(&style);
  45              		.loc 1 10 5 view .LVU2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 2


  46 0002 2C4C     		ldr	r4, .L3
  47 0004 2046     		mov	r0, r4
  48 0006 FFF7FEFF 		bl	lv_style_init
  49              	.LVL0:
  11:lvgl/lvgl/examples/styles/lv_example_style_8.c **** 
  12:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_radius(&style, 5);
  50              		.loc 1 12 5 view .LVU3
  51 000a 0521     		movs	r1, #5
  52 000c 2046     		mov	r0, r4
  53 000e FFF7FEFF 		bl	lv_style_set_radius
  54              	.LVL1:
  13:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_bg_opa(&style, LV_OPA_COVER);
  55              		.loc 1 13 5 view .LVU4
  56 0012 FF21     		movs	r1, #255
  57 0014 2046     		mov	r0, r4
  58 0016 FFF7FEFF 		bl	lv_style_set_bg_opa
  59              	.LVL2:
  14:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_bg_color(&style, lv_palette_lighten(LV_PALETTE_GREY, 2));
  60              		.loc 1 14 5 view .LVU5
  61 001a 0221     		movs	r1, #2
  62 001c 1220     		movs	r0, #18
  63 001e FFF7FEFF 		bl	lv_palette_lighten
  64              	.LVL3:
  65 0022 0146     		mov	r1, r0	@ movhi
  66 0024 2046     		mov	r0, r4
  67 0026 FFF7FEFF 		bl	lv_style_set_bg_color
  68              	.LVL4:
  15:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_border_width(&style, 2);
  69              		.loc 1 15 5 view .LVU6
  70 002a 0221     		movs	r1, #2
  71 002c 2046     		mov	r0, r4
  72 002e FFF7FEFF 		bl	lv_style_set_border_width
  73              	.LVL5:
  16:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_border_color(&style, lv_palette_main(LV_PALETTE_BLUE));
  74              		.loc 1 16 5 view .LVU7
  75 0032 0520     		movs	r0, #5
  76 0034 FFF7FEFF 		bl	lv_palette_main
  77              	.LVL6:
  78 0038 0146     		mov	r1, r0	@ movhi
  79 003a 2046     		mov	r0, r4
  80 003c FFF7FEFF 		bl	lv_style_set_border_color
  81              	.LVL7:
  17:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_pad_all(&style, 10);
  82              		.loc 1 17 5 view .LVU8
  83              	.LBB12:
  84              	.LBI12:
  85              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @file lv_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifndef LV_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** extern "C" {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 3


  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include <stdbool.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "../font/lv_font.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_color.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_area.h"
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_anim.h"
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_txt.h"
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_types.h"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_assert.h"
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_bidi.h"
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      DEFINES
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Flags for style properties
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Other constants
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #else
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      TYPEDEFS
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Possible options how to blend opaque drawings
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_blend_mode_t;
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 4


  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Some options to apply decorations on texts.
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_text_decor_t;
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Selects on which sides border should be drawn
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_border_side_t;
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * The direction of the gradient.
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_grad_dir_t;
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * A common type to handle all the property types in the same way.
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef union {
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_color_t color;    /**< Colors*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_value_t;
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Enumeration of all built in style properties
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef enum {
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 0*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 5


 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 1*/
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 2*/
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 38,
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 39,
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 40,
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 42,
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 3*/
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 4*/
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 6


 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 5*/
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 6*/
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_prop_t;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor for style transitions
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 7


 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_USER_DATA
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_transition_dsc_t;
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a constant style property.
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_prop_t prop;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_value_t value;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_const_prop_t;
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t sentinel;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*If there is only one property store it directly.
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****      *For more properties allocate an array*/
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     union {
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         lv_style_value_t value1;
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * values_and_props;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t * const_props;
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } v_p;
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t prop1 :15;
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t is_const :1;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t has_group;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t prop_cnt;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_t;
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * GLOBAL PROTOTYPES
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a style
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style to initialize
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note Do not call `lv_style_init` on styles that are already have some properties
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       because this function won't free the used memory just set a default state for the style.
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       In other words be sure to initialize styles only once!
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_init(lv_style_t * style);
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 8


 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_reset(lv_style_t * style);
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Register a new style property for custom usage
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return a new property ID.
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_prop_t MY_PROP;
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * MY_PROP = lv_style_register_prop();
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Remove a property from a style
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  a style property ORed with a state.
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Set the value of property in a style.
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * This function shouldn't be used directly by the user.
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to style
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STLYE_BG_COLOR`)
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value `lv_style_value_t` variable in which a filed is set according to the type of `prop`
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value);
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 9


 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** {
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->is_const) {
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t *const_prop;
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(const_prop->prop == prop) {
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = const_prop->value;
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_INV;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt > 1) {
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint32_t i;
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(props[i] == prop) {
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = values[i];
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } else if(style->prop1 == prop) {
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         *value = style->v_p.value1;
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_OK;
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     return LV_RES_INV;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a transition descriptor.
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param tr        pointer to a transition descriptor to initialize
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param props     an array with the properties to transition. The last element must be zero.
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param path_cb   an animation path (ease) callback. If `NULL` liner path will be used.
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param time      duration of the transition in [ms]
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param delay     delay before the transition in [ms]
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param user_data any custom data that will be saved in the transition animation and will be avai
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 };
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  static lv_style_transition_dsc_t trans1;
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL);
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the default value of a property
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the default value
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop);
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Checks if a style is empty (has no properties)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 10


 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_is_empty(const lv_style_t * style);
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Tell the group of a property. If the a property from a group is set in a style the (1 << group) 
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * It allows early skipping the style if the property is not exists in the style at all.
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop a style property
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the group [0..7] 7 means all the custom properties with index > 112
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop);
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_style_gen.h"
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value) {
  86              		.loc 2 425 20 view .LVU9
  87              	.LBB13:
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
  88              		.loc 2 426 5 view .LVU10
  89 0040 0A21     		movs	r1, #10
  90 0042 2046     		mov	r0, r4
  91 0044 FFF7FEFF 		bl	lv_style_set_pad_left
  92              	.LVL8:
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
  93              		.loc 2 427 5 view .LVU11
  94 0048 0A21     		movs	r1, #10
  95 004a 2046     		mov	r0, r4
  96 004c FFF7FEFF 		bl	lv_style_set_pad_right
  97              	.LVL9:
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
  98              		.loc 2 428 5 view .LVU12
  99 0050 0A21     		movs	r1, #10
 100 0052 2046     		mov	r0, r4
 101 0054 FFF7FEFF 		bl	lv_style_set_pad_top
 102              	.LVL10:
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 103              		.loc 2 429 5 view .LVU13
 104 0058 0A21     		movs	r1, #10
 105 005a 2046     		mov	r0, r4
 106 005c FFF7FEFF 		bl	lv_style_set_pad_bottom
 107              	.LVL11:
 108              		.loc 2 429 5 is_stmt 0 view .LVU14
 109              	.LBE13:
 110              	.LBE12:
  18:lvgl/lvgl/examples/styles/lv_example_style_8.c **** 
  19:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_text_color(&style, lv_palette_main(LV_PALETTE_BLUE));
 111              		.loc 1 19 5 is_stmt 1 view .LVU15
 112 0060 0520     		movs	r0, #5
 113 0062 FFF7FEFF 		bl	lv_palette_main
 114              	.LVL12:
 115 0066 0146     		mov	r1, r0	@ movhi
 116 0068 2046     		mov	r0, r4
 117 006a FFF7FEFF 		bl	lv_style_set_text_color
 118              	.LVL13:
  20:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_text_letter_space(&style, 5);
 119              		.loc 1 20 5 view .LVU16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 11


 120 006e 0521     		movs	r1, #5
 121 0070 2046     		mov	r0, r4
 122 0072 FFF7FEFF 		bl	lv_style_set_text_letter_space
 123              	.LVL14:
  21:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_text_line_space(&style, 20);
 124              		.loc 1 21 5 view .LVU17
 125 0076 1421     		movs	r1, #20
 126 0078 2046     		mov	r0, r4
 127 007a FFF7FEFF 		bl	lv_style_set_text_line_space
 128              	.LVL15:
  22:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_style_set_text_decor(&style, LV_TEXT_DECOR_UNDERLINE);
 129              		.loc 1 22 5 view .LVU18
 130 007e 0121     		movs	r1, #1
 131 0080 2046     		mov	r0, r4
 132 0082 FFF7FEFF 		bl	lv_style_set_text_decor
 133              	.LVL16:
  23:lvgl/lvgl/examples/styles/lv_example_style_8.c **** 
  24:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     /*Create an object with the new style*/
  25:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_obj_t * obj = lv_label_create(lv_scr_act());
 134              		.loc 1 25 5 view .LVU19
 135              	.LBB14:
 136              	.LBI14:
 137              		.file 3 "lvgl/lvgl/examples/styles/../../src/core/lv_disp.h"
   1:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
   2:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *
   4:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
   5:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
   6:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
   9:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #endif
  12:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  13:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  14:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  20:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  21:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  24:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  25:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  28:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 12


  35:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  41:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  42:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  44:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  45:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  46:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  49:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  51:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  53:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  54:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  57:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  59:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  61:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  62:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Make a screen active
  63:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  65:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  67:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  68:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  72:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  74:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  75:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * layer)
  77:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  80:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  82:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  83:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the theme of a display
  84:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  85:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  87:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  89:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  90:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the theme of a display
  91:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 13


  92:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  94:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
  96:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  97:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background color of a display
  98:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  99:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param color color of the background
 100:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 101:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 103:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 104:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background image of a display
 105:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 106:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 108:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 110:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 111:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Opacity of the background
 112:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 113:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 115:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 117:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 118:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Switch screen with animation
 119:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param time time of the animation
 122:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param delay delay before the transition
 123:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 125:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 127:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 128:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 132:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 134:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 135:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 138:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 140:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 141:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 144:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 146:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 147:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 14


 149:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 150:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 152:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 154:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /*------------------------------------------------
 155:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * To improve backward compatibility
 156:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 157:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 158:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** 
 159:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 160:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 161:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 162:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 163:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 138              		.loc 3 163 26 view .LVU20
 139              	.LBB15:
 164:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h **** {
 165:lvgl/lvgl/examples/styles/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 140              		.loc 3 165 5 view .LVU21
 141              		.loc 3 165 12 is_stmt 0 view .LVU22
 142 0086 FFF7FEFF 		bl	lv_disp_get_default
 143              	.LVL17:
 144 008a FFF7FEFF 		bl	lv_disp_get_scr_act
 145              	.LVL18:
 146              	.LBE15:
 147              	.LBE14:
 148              		.loc 1 25 22 view .LVU23
 149 008e FFF7FEFF 		bl	lv_label_create
 150              	.LVL19:
 151 0092 0546     		mov	r5, r0
 152              	.LVL20:
  26:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_obj_add_style(obj, &style, 0);
 153              		.loc 1 26 5 is_stmt 1 view .LVU24
 154 0094 0022     		movs	r2, #0
 155 0096 2146     		mov	r1, r4
 156 0098 FFF7FEFF 		bl	lv_obj_add_style
 157              	.LVL21:
  27:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_label_set_text(obj, "Text of\n"
 158              		.loc 1 27 5 view .LVU25
 159 009c 0649     		ldr	r1, .L3+4
 160 009e 2846     		mov	r0, r5
 161 00a0 FFF7FEFF 		bl	lv_label_set_text
 162              	.LVL22:
  28:lvgl/lvgl/examples/styles/lv_example_style_8.c ****                             "a label");
  29:lvgl/lvgl/examples/styles/lv_example_style_8.c **** 
  30:lvgl/lvgl/examples/styles/lv_example_style_8.c ****     lv_obj_center(obj);
 163              		.loc 1 30 5 view .LVU26
 164              	.LBB16:
 165              	.LBI16:
 166              		.file 4 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h"
   1:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
   2:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *
   4:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
   5:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
   6:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 15


   7:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
   9:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** extern "C" {
  11:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** #endif
  12:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  13:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /*********************
  14:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *      INCLUDES
  15:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *********************/
  16:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  18:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /*********************
  19:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *      DEFINES
  20:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *********************/
  21:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  22:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**********************
  23:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  **********************/
  25:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  27:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** typedef struct {
  29:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****     void * user_data;
  31:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  33:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**********************
  34:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  **********************/
  36:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  37:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  38:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  43:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  45:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  46:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  50:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  52:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  53:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  57:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  59:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  60:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param w         the new width
  63:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param h         the new height
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 16


  64:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  70:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  72:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  73:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  77:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  79:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  80:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the width of an object
  81:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param w         the new width
  83:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
  89:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
  91:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
  92:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the height of an object
  93:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param h         the new height
  95:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 101:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 103:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 104:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 108:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 110:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 111:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 115:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 117:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 118:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 17


 121:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 122:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 124:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 125:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 129:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 131:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 132:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 135:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 137:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 138:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 141:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 143:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 144:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 149:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 151:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 152:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 156:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 158:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 159:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Equivalent to:
 161:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 168:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 170:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 171:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 18


 178:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 179:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** 
 181:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** /**
 182:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****  */
 186:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 167              		.loc 4 186 20 view .LVU27
 168              	.LBB17:
 187:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h **** {
 188:lvgl/lvgl/examples/styles/../../src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 169              		.loc 4 188 5 view .LVU28
 170 00a4 0023     		movs	r3, #0
 171 00a6 1A46     		mov	r2, r3
 172 00a8 0921     		movs	r1, #9
 173 00aa 2846     		mov	r0, r5
 174 00ac FFF7FEFF 		bl	lv_obj_align
 175              	.LVL23:
 176              		.loc 4 188 5 is_stmt 0 view .LVU29
 177              	.LBE17:
 178              	.LBE16:
  31:lvgl/lvgl/examples/styles/lv_example_style_8.c **** }
 179              		.loc 1 31 1 view .LVU30
 180 00b0 38BD     		pop	{r3, r4, r5, pc}
 181              	.LVL24:
 182              	.L4:
 183              		.loc 1 31 1 view .LVU31
 184 00b2 00BF     		.align	2
 185              	.L3:
 186 00b4 00000000 		.word	.LANCHOR0
 187 00b8 00000000 		.word	.LC0
 188              		.cfi_endproc
 189              	.LFE189:
 191              		.section	.bss.style.12313,"aw",%nobits
 192              		.align	2
 193              		.set	.LANCHOR0,. + 0
 196              	style.12313:
 197 0000 00000000 		.space	8
 197      00000000 
 198              		.text
 199              	.Letext0:
 200              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 201              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 202              		.file 7 "lvgl/lvgl/examples/styles/../../src/misc/lv_ll.h"
 203              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 204              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 205              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 206              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 207              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 208              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 209              		.file 14 "lvgl/lvgl/examples/styles/../../src/core/lv_obj.h"
 210              		.file 15 "lvgl/lvgl/examples/styles/../../src/core/lv_group.h"
 211              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 212              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 213              		.file 18 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_scroll.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 19


 214              		.file 19 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_style.h"
 215              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 216              		.file 21 "lvgl/lvgl/examples/styles/../../src/core/lv_obj_class.h"
 217              		.file 22 "lvgl/lvgl/examples/styles/../../src/core/lv_event.h"
 218              		.file 23 "lvgl/lvgl/examples/styles/../../src/widgets/lv_arc.h"
 219              		.file 24 "lvgl/lvgl/examples/styles/../../src/widgets/lv_btn.h"
 220              		.file 25 "lvgl/lvgl/examples/styles/../../src/widgets/lv_img.h"
 221              		.file 26 "lvgl/lvgl/examples/styles/../../src/widgets/lv_label.h"
 222              		.file 27 "lvgl/lvgl/examples/styles/../../src/widgets/lv_line.h"
 223              		.file 28 "lvgl/lvgl/examples/styles/../../src/widgets/lv_table.h"
 224              		.file 29 "lvgl/lvgl/examples/styles/../../src/widgets/lv_checkbox.h"
 225              		.file 30 "lvgl/lvgl/examples/styles/../../src/widgets/lv_bar.h"
 226              		.file 31 "lvgl/lvgl/examples/styles/../../src/widgets/lv_slider.h"
 227              		.file 32 "lvgl/lvgl/examples/styles/../../src/widgets/lv_btnmatrix.h"
 228              		.file 33 "lvgl/lvgl/examples/styles/../../src/widgets/lv_dropdown.h"
 229              		.file 34 "lvgl/lvgl/examples/styles/../../src/widgets/lv_roller.h"
 230              		.file 35 "lvgl/lvgl/examples/styles/../../src/widgets/lv_textarea.h"
 231              		.file 36 "lvgl/lvgl/examples/styles/../../src/widgets/lv_canvas.h"
 232              		.file 37 "lvgl/lvgl/examples/styles/../../src/widgets/lv_switch.h"
 233              		.file 38 "lvgl/lvgl/examples/styles/../../src/extra/widgets/animimg/lv_animimg.h"
 234              		.file 39 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar.h"
 235              		.file 40 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar_header_arrow.h"
 236              		.file 41 "lvgl/lvgl/examples/styles/../../src/extra/widgets/calendar/lv_calendar_header_dropdown.h
 237              		.file 42 "lvgl/lvgl/examples/styles/../../src/extra/widgets/chart/lv_chart.h"
 238              		.file 43 "lvgl/lvgl/examples/styles/../../src/extra/widgets/keyboard/lv_keyboard.h"
 239              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 240              		.file 45 "lvgl/lvgl/examples/styles/../../src/extra/widgets/list/lv_list.h"
 241              		.file 46 "lvgl/lvgl/examples/styles/../../src/extra/widgets/msgbox/lv_msgbox.h"
 242              		.file 47 "lvgl/lvgl/examples/styles/../../src/extra/widgets/meter/lv_meter.h"
 243              		.file 48 "lvgl/lvgl/examples/styles/../../src/extra/widgets/spinbox/lv_spinbox.h"
 244              		.file 49 "lvgl/lvgl/examples/styles/../../src/extra/widgets/spinner/lv_spinner.h"
 245              		.file 50 "lvgl/lvgl/examples/styles/../../src/extra/widgets/tabview/lv_tabview.h"
 246              		.file 51 "lvgl/lvgl/examples/styles/../../src/extra/widgets/tileview/lv_tileview.h"
 247              		.file 52 "lvgl/lvgl/examples/styles/../../src/extra/widgets/win/lv_win.h"
 248              		.file 53 "lvgl/lvgl/examples/styles/../../src/extra/widgets/colorwheel/lv_colorwheel.h"
 249              		.file 54 "lvgl/lvgl/examples/styles/../../src/extra/widgets/led/lv_led.h"
 250              		.file 55 "lvgl/lvgl/examples/styles/../../src/extra/widgets/imgbtn/lv_imgbtn.h"
 251              		.file 56 "lvgl/lvgl/examples/styles/../../src/extra/widgets/span/lv_span.h"
 252              		.file 57 "lvgl/lvgl/examples/styles/../../src/extra/layouts/grid/lv_grid.h"
 253              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style_gen.h"
 254              		.file 59 "lvgl/lvgl/examples/styles/../../src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_style_8.c
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:18     .rodata.lv_example_style_8.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:22     .text.lv_example_style_8:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:30     .text.lv_example_style_8:00000000 lv_example_style_8
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:186    .text.lv_example_style_8:000000b4 $d
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:192    .bss.style.12313:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccXhRFUE.s:196    .bss.style.12313:00000000 style.12313

UNDEFINED SYMBOLS
lv_style_init
lv_style_set_radius
lv_style_set_bg_opa
lv_palette_lighten
lv_style_set_bg_color
lv_style_set_border_width
lv_palette_main
lv_style_set_border_color
lv_style_set_pad_left
lv_style_set_pad_right
lv_style_set_pad_top
lv_style_set_pad_bottom
lv_style_set_text_color
lv_style_set_text_letter_space
lv_style_set_text_line_space
lv_style_set_text_decor
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_obj_add_style
lv_label_set_text
lv_obj_align
