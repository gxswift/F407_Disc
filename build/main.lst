ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._write,"ax",%progbits
  18              		.align	1
  19              		.global	_write
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_write:
  27              	.LVL0:
  28              	.LFB131:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2020 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 2


  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* USER CODE END Header */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  52:Src/main.c    **** #include "main.h"
  53:Src/main.c    **** #include "cmsis_os.h"
  54:Src/main.c    **** #include "crc.h"
  55:Src/main.c    **** #include "fatfs.h"
  56:Src/main.c    **** #include "i2c.h"
  57:Src/main.c    **** #include "rtc.h"
  58:Src/main.c    **** #include "sdio.h"
  59:Src/main.c    **** #include "spi.h"
  60:Src/main.c    **** #include "usart.h"
  61:Src/main.c    **** #include "usb_device.h"
  62:Src/main.c    **** #include "gpio.h"
  63:Src/main.c    **** #include "fsmc.h"
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN Includes */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END Includes */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN PTD */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PTD */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  76:Src/main.c    **** /* USER CODE BEGIN PD */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END PD */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  81:Src/main.c    **** /* USER CODE BEGIN PM */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PM */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  86:Src/main.c    **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 3


  87:Src/main.c    **** /* USER CODE BEGIN PV */
  88:Src/main.c    **** #if 0
  89:Src/main.c    **** #include "stdio.h"
  90:Src/main.c    **** int fputc(int ch, FILE *f)
  91:Src/main.c    ****  {
  92:Src/main.c    **** 	HAL_UART_Transmit(&huart1,(uint8_t *)&ch,1,100);
  93:Src/main.c    **** 	return ch;
  94:Src/main.c    ****  }
  95:Src/main.c    **** #else
  96:Src/main.c    **** int _write(int file, char *ptr, int len)
  97:Src/main.c    **** {
  30              		.loc 1 97 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 97 1 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 1446     		mov	r4, r2
  98:Src/main.c    ****   /*  
  99:Src/main.c    ****   int DataIdx;
 100:Src/main.c    ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 101:Src/main.c    ****   {
 102:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)ptr++, 1, 100);
 103:Src/main.c    ****     // __io_putchar( *ptr++ );
 104:Src/main.c    ****   }
 105:Src/main.c    ****   */
 106:Src/main.c    ****   HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 1000);
  41              		.loc 1 106 3 is_stmt 1 view .LVU2
  42 0004 4FF47A73 		mov	r3, #1000
  43 0008 92B2     		uxth	r2, r2
  44              	.LVL1:
  45              		.loc 1 106 3 is_stmt 0 view .LVU3
  46 000a 0248     		ldr	r0, .L3
  47              	.LVL2:
  48              		.loc 1 106 3 view .LVU4
  49 000c FFF7FEFF 		bl	HAL_UART_Transmit
  50              	.LVL3:
 107:Src/main.c    ****   return len;
  51              		.loc 1 107 3 is_stmt 1 view .LVU5
 108:Src/main.c    **** }
  52              		.loc 1 108 1 is_stmt 0 view .LVU6
  53 0010 2046     		mov	r0, r4
  54 0012 10BD     		pop	{r4, pc}
  55              	.LVL4:
  56              	.L4:
  57              		.loc 1 108 1 view .LVU7
  58              		.align	2
  59              	.L3:
  60 0014 00000000 		.word	huart1
  61              		.cfi_endproc
  62              	.LFE131:
  64              		.section	.text.SystemClock_Config,"ax",%progbits
  65              		.align	1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 4


  66              		.global	SystemClock_Config
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	SystemClock_Config:
  73              	.LFB133:
 109:Src/main.c    **** #endif
 110:Src/main.c    **** /* USER CODE END PV */
 111:Src/main.c    **** 
 112:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 113:Src/main.c    **** void SystemClock_Config(void);
 114:Src/main.c    **** void MX_FREERTOS_Init(void);
 115:Src/main.c    **** /* USER CODE BEGIN PFP */
 116:Src/main.c    **** 
 117:Src/main.c    **** /* USER CODE END PFP */
 118:Src/main.c    **** 
 119:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 120:Src/main.c    **** /* USER CODE BEGIN 0 */
 121:Src/main.c    **** 
 122:Src/main.c    **** /* USER CODE END 0 */
 123:Src/main.c    **** 
 124:Src/main.c    **** /**
 125:Src/main.c    ****   * @brief  The application entry point.
 126:Src/main.c    ****   * @retval int
 127:Src/main.c    ****   */
 128:Src/main.c    **** int main(void)
 129:Src/main.c    **** {
 130:Src/main.c    ****   /* USER CODE BEGIN 1 */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END 1 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 137:Src/main.c    ****   HAL_Init();
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE BEGIN Init */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE END Init */
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* Configure the system clock */
 144:Src/main.c    ****   SystemClock_Config();
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 147:Src/main.c    **** 
 148:Src/main.c    ****   /* USER CODE END SysInit */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Initialize all configured peripherals */
 151:Src/main.c    ****   MX_GPIO_Init();
 152:Src/main.c    ****   MX_RTC_Init();
 153:Src/main.c    ****   MX_CRC_Init();
 154:Src/main.c    ****   MX_SDIO_SD_Init();
 155:Src/main.c    ****   MX_USART1_UART_Init();
 156:Src/main.c    ****   MX_FSMC_Init();
 157:Src/main.c    ****   MX_SPI1_Init();
 158:Src/main.c    ****   MX_I2C1_Init();
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 5


 159:Src/main.c    ****   MX_USART2_UART_Init();
 160:Src/main.c    ****   /* USER CODE BEGIN 2 */
 161:Src/main.c    ****   printf("Compiled %s %s\r\n",__DATE__,__TIME__);
 162:Src/main.c    ****   /* USER CODE END 2 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 165:Src/main.c    ****   MX_FREERTOS_Init();
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* Start scheduler */
 168:Src/main.c    ****   osKernelStart();
 169:Src/main.c    ****   
 170:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* Infinite loop */
 173:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 174:Src/main.c    ****   while (1)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     /* USER CODE END WHILE */
 177:Src/main.c    **** 
 178:Src/main.c    ****     /* USER CODE BEGIN 3 */
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /* USER CODE END 3 */
 181:Src/main.c    **** }
 182:Src/main.c    **** 
 183:Src/main.c    **** /**
 184:Src/main.c    ****   * @brief System Clock Configuration
 185:Src/main.c    ****   * @retval None
 186:Src/main.c    ****   */
 187:Src/main.c    **** void SystemClock_Config(void)
 188:Src/main.c    **** {
  74              		.loc 1 188 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 96
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 30B5     		push	{r4, r5, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 12
  81              		.cfi_offset 4, -12
  82              		.cfi_offset 5, -8
  83              		.cfi_offset 14, -4
  84 0002 99B0     		sub	sp, sp, #100
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 112
 189:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  87              		.loc 1 189 3 view .LVU9
  88              		.loc 1 189 22 is_stmt 0 view .LVU10
  89 0004 3022     		movs	r2, #48
  90 0006 0021     		movs	r1, #0
  91 0008 0DEB0200 		add	r0, sp, r2
  92 000c FFF7FEFF 		bl	memset
  93              	.LVL5:
 190:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  94              		.loc 1 190 3 is_stmt 1 view .LVU11
  95              		.loc 1 190 22 is_stmt 0 view .LVU12
  96 0010 0024     		movs	r4, #0
  97 0012 0794     		str	r4, [sp, #28]
  98 0014 0894     		str	r4, [sp, #32]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 6


  99 0016 0994     		str	r4, [sp, #36]
 100 0018 0A94     		str	r4, [sp, #40]
 101 001a 0B94     		str	r4, [sp, #44]
 191:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 102              		.loc 1 191 3 is_stmt 1 view .LVU13
 103              		.loc 1 191 28 is_stmt 0 view .LVU14
 104 001c 0394     		str	r4, [sp, #12]
 105 001e 0494     		str	r4, [sp, #16]
 106 0020 0594     		str	r4, [sp, #20]
 107 0022 0694     		str	r4, [sp, #24]
 192:Src/main.c    **** 
 193:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 108              		.loc 1 195 3 is_stmt 1 view .LVU15
 109              	.LBB2:
 110              		.loc 1 195 3 view .LVU16
 111 0024 0194     		str	r4, [sp, #4]
 112              		.loc 1 195 3 view .LVU17
 113 0026 214B     		ldr	r3, .L7
 114 0028 1A6C     		ldr	r2, [r3, #64]
 115 002a 42F08052 		orr	r2, r2, #268435456
 116 002e 1A64     		str	r2, [r3, #64]
 117              		.loc 1 195 3 view .LVU18
 118 0030 1B6C     		ldr	r3, [r3, #64]
 119 0032 03F08053 		and	r3, r3, #268435456
 120 0036 0193     		str	r3, [sp, #4]
 121              		.loc 1 195 3 view .LVU19
 122 0038 019B     		ldr	r3, [sp, #4]
 123              	.LBE2:
 124              		.loc 1 195 3 view .LVU20
 196:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125              		.loc 1 196 3 view .LVU21
 126              	.LBB3:
 127              		.loc 1 196 3 view .LVU22
 128 003a 0294     		str	r4, [sp, #8]
 129              		.loc 1 196 3 view .LVU23
 130 003c 1C4B     		ldr	r3, .L7+4
 131 003e 1A68     		ldr	r2, [r3]
 132 0040 42F48042 		orr	r2, r2, #16384
 133 0044 1A60     		str	r2, [r3]
 134              		.loc 1 196 3 view .LVU24
 135 0046 1B68     		ldr	r3, [r3]
 136 0048 03F48043 		and	r3, r3, #16384
 137 004c 0293     		str	r3, [sp, #8]
 138              		.loc 1 196 3 view .LVU25
 139 004e 029B     		ldr	r3, [sp, #8]
 140              	.LBE3:
 141              		.loc 1 196 3 view .LVU26
 197:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 198:Src/main.c    ****   */
 199:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 142              		.loc 1 199 3 view .LVU27
 143              		.loc 1 199 36 is_stmt 0 view .LVU28
 144 0050 0923     		movs	r3, #9
 145 0052 0C93     		str	r3, [sp, #48]
 200:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 7


 146              		.loc 1 200 3 is_stmt 1 view .LVU29
 147              		.loc 1 200 30 is_stmt 0 view .LVU30
 148 0054 4FF48033 		mov	r3, #65536
 149 0058 0D93     		str	r3, [sp, #52]
 201:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 150              		.loc 1 201 3 is_stmt 1 view .LVU31
 151              		.loc 1 201 30 is_stmt 0 view .LVU32
 152 005a 0123     		movs	r3, #1
 153 005c 1193     		str	r3, [sp, #68]
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154              		.loc 1 202 3 is_stmt 1 view .LVU33
 155              		.loc 1 202 34 is_stmt 0 view .LVU34
 156 005e 0225     		movs	r5, #2
 157 0060 1295     		str	r5, [sp, #72]
 203:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 158              		.loc 1 203 3 is_stmt 1 view .LVU35
 159              		.loc 1 203 35 is_stmt 0 view .LVU36
 160 0062 4FF48003 		mov	r3, #4194304
 161 0066 1393     		str	r3, [sp, #76]
 204:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 162              		.loc 1 204 3 is_stmt 1 view .LVU37
 163              		.loc 1 204 30 is_stmt 0 view .LVU38
 164 0068 0823     		movs	r3, #8
 165 006a 1493     		str	r3, [sp, #80]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 166              		.loc 1 205 3 is_stmt 1 view .LVU39
 167              		.loc 1 205 30 is_stmt 0 view .LVU40
 168 006c 4FF4A873 		mov	r3, #336
 169 0070 1593     		str	r3, [sp, #84]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 170              		.loc 1 206 3 is_stmt 1 view .LVU41
 171              		.loc 1 206 30 is_stmt 0 view .LVU42
 172 0072 1695     		str	r5, [sp, #88]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 173              		.loc 1 207 3 is_stmt 1 view .LVU43
 174              		.loc 1 207 30 is_stmt 0 view .LVU44
 175 0074 0723     		movs	r3, #7
 176 0076 1793     		str	r3, [sp, #92]
 208:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177              		.loc 1 208 3 is_stmt 1 view .LVU45
 178              		.loc 1 208 7 is_stmt 0 view .LVU46
 179 0078 0CA8     		add	r0, sp, #48
 180 007a FFF7FEFF 		bl	HAL_RCC_OscConfig
 181              	.LVL6:
 209:Src/main.c    ****   {
 210:Src/main.c    ****     Error_Handler();
 211:Src/main.c    ****   }
 212:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 213:Src/main.c    ****   */
 214:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 182              		.loc 1 214 3 is_stmt 1 view .LVU47
 183              		.loc 1 214 31 is_stmt 0 view .LVU48
 184 007e 0F23     		movs	r3, #15
 185 0080 0793     		str	r3, [sp, #28]
 215:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 216:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 186              		.loc 1 216 3 is_stmt 1 view .LVU49
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 8


 187              		.loc 1 216 34 is_stmt 0 view .LVU50
 188 0082 0895     		str	r5, [sp, #32]
 217:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 189              		.loc 1 217 3 is_stmt 1 view .LVU51
 190              		.loc 1 217 35 is_stmt 0 view .LVU52
 191 0084 0994     		str	r4, [sp, #36]
 218:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 192              		.loc 1 218 3 is_stmt 1 view .LVU53
 193              		.loc 1 218 36 is_stmt 0 view .LVU54
 194 0086 4FF4A053 		mov	r3, #5120
 195 008a 0A93     		str	r3, [sp, #40]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 196              		.loc 1 219 3 is_stmt 1 view .LVU55
 197              		.loc 1 219 36 is_stmt 0 view .LVU56
 198 008c 4FF48053 		mov	r3, #4096
 199 0090 0B93     		str	r3, [sp, #44]
 220:Src/main.c    **** 
 221:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 200              		.loc 1 221 3 is_stmt 1 view .LVU57
 201              		.loc 1 221 7 is_stmt 0 view .LVU58
 202 0092 0521     		movs	r1, #5
 203 0094 07A8     		add	r0, sp, #28
 204 0096 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 205              	.LVL7:
 222:Src/main.c    ****   {
 223:Src/main.c    ****     Error_Handler();
 224:Src/main.c    ****   }
 225:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 206              		.loc 1 225 3 is_stmt 1 view .LVU59
 207              		.loc 1 225 44 is_stmt 0 view .LVU60
 208 009a 0395     		str	r5, [sp, #12]
 226:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 209              		.loc 1 226 3 is_stmt 1 view .LVU61
 210              		.loc 1 226 41 is_stmt 0 view .LVU62
 211 009c 4FF40073 		mov	r3, #512
 212 00a0 0693     		str	r3, [sp, #24]
 227:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 213              		.loc 1 227 3 is_stmt 1 view .LVU63
 214              		.loc 1 227 7 is_stmt 0 view .LVU64
 215 00a2 03A8     		add	r0, sp, #12
 216 00a4 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 217              	.LVL8:
 228:Src/main.c    ****   {
 229:Src/main.c    ****     Error_Handler();
 230:Src/main.c    ****   }
 231:Src/main.c    **** }
 218              		.loc 1 231 1 view .LVU65
 219 00a8 19B0     		add	sp, sp, #100
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 12
 222              		@ sp needed
 223 00aa 30BD     		pop	{r4, r5, pc}
 224              	.L8:
 225              		.align	2
 226              	.L7:
 227 00ac 00380240 		.word	1073887232
 228 00b0 00700040 		.word	1073770496
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 9


 229              		.cfi_endproc
 230              	.LFE133:
 232              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 233              		.align	2
 234              	.LC0:
 235 0000 32333A35 		.ascii	"23:53:48\000"
 235      333A3438 
 235      00
 236 0009 000000   		.align	2
 237              	.LC1:
 238 000c 41756720 		.ascii	"Aug  7 2021\000"
 238      20372032 
 238      30323100 
 239              		.align	2
 240              	.LC2:
 241 0018 436F6D70 		.ascii	"Compiled %s %s\015\012\000"
 241      696C6564 
 241      20257320 
 241      25730D0A 
 241      00
 242              		.section	.text.main,"ax",%progbits
 243              		.align	1
 244              		.global	main
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	main:
 251              	.LFB132:
 129:Src/main.c    ****   /* USER CODE BEGIN 1 */
 252              		.loc 1 129 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ Volatile: function does not return.
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI4:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 137:Src/main.c    **** 
 262              		.loc 1 137 3 view .LVU67
 263 0002 FFF7FEFF 		bl	HAL_Init
 264              	.LVL9:
 144:Src/main.c    **** 
 265              		.loc 1 144 3 view .LVU68
 266 0006 FFF7FEFF 		bl	SystemClock_Config
 267              	.LVL10:
 151:Src/main.c    ****   MX_RTC_Init();
 268              		.loc 1 151 3 view .LVU69
 269 000a FFF7FEFF 		bl	MX_GPIO_Init
 270              	.LVL11:
 152:Src/main.c    ****   MX_CRC_Init();
 271              		.loc 1 152 3 view .LVU70
 272 000e FFF7FEFF 		bl	MX_RTC_Init
 273              	.LVL12:
 153:Src/main.c    ****   MX_SDIO_SD_Init();
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 10


 274              		.loc 1 153 3 view .LVU71
 275 0012 FFF7FEFF 		bl	MX_CRC_Init
 276              	.LVL13:
 154:Src/main.c    ****   MX_USART1_UART_Init();
 277              		.loc 1 154 3 view .LVU72
 278 0016 FFF7FEFF 		bl	MX_SDIO_SD_Init
 279              	.LVL14:
 155:Src/main.c    ****   MX_FSMC_Init();
 280              		.loc 1 155 3 view .LVU73
 281 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 282              	.LVL15:
 156:Src/main.c    ****   MX_SPI1_Init();
 283              		.loc 1 156 3 view .LVU74
 284 001e FFF7FEFF 		bl	MX_FSMC_Init
 285              	.LVL16:
 157:Src/main.c    ****   MX_I2C1_Init();
 286              		.loc 1 157 3 view .LVU75
 287 0022 FFF7FEFF 		bl	MX_SPI1_Init
 288              	.LVL17:
 158:Src/main.c    ****   MX_USART2_UART_Init();
 289              		.loc 1 158 3 view .LVU76
 290 0026 FFF7FEFF 		bl	MX_I2C1_Init
 291              	.LVL18:
 159:Src/main.c    ****   /* USER CODE BEGIN 2 */
 292              		.loc 1 159 3 view .LVU77
 293 002a FFF7FEFF 		bl	MX_USART2_UART_Init
 294              	.LVL19:
 161:Src/main.c    ****   /* USER CODE END 2 */
 295              		.loc 1 161 3 view .LVU78
 296 002e 054A     		ldr	r2, .L12
 297 0030 0549     		ldr	r1, .L12+4
 298 0032 0648     		ldr	r0, .L12+8
 299 0034 FFF7FEFF 		bl	printf
 300              	.LVL20:
 165:Src/main.c    **** 
 301              		.loc 1 165 3 view .LVU79
 302 0038 FFF7FEFF 		bl	MX_FREERTOS_Init
 303              	.LVL21:
 168:Src/main.c    ****   
 304              		.loc 1 168 3 view .LVU80
 305 003c FFF7FEFF 		bl	osKernelStart
 306              	.LVL22:
 307              	.L10:
 174:Src/main.c    ****   {
 308              		.loc 1 174 3 discriminator 1 view .LVU81
 179:Src/main.c    ****   /* USER CODE END 3 */
 309              		.loc 1 179 3 discriminator 1 view .LVU82
 174:Src/main.c    ****   {
 310              		.loc 1 174 9 discriminator 1 view .LVU83
 311 0040 FEE7     		b	.L10
 312              	.L13:
 313 0042 00BF     		.align	2
 314              	.L12:
 315 0044 00000000 		.word	.LC0
 316 0048 0C000000 		.word	.LC1
 317 004c 18000000 		.word	.LC2
 318              		.cfi_endproc
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 11


 319              	.LFE132:
 321              		.section	.text.Error_Handler,"ax",%progbits
 322              		.align	1
 323              		.global	Error_Handler
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv4-sp-d16
 329              	Error_Handler:
 330              	.LFB134:
 232:Src/main.c    **** 
 233:Src/main.c    **** /* USER CODE BEGIN 4 */
 234:Src/main.c    **** 
 235:Src/main.c    **** /* USER CODE END 4 */
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 239:Src/main.c    ****   * @retval None
 240:Src/main.c    ****   */
 241:Src/main.c    **** void Error_Handler(void)
 242:Src/main.c    **** {
 331              		.loc 1 242 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 243:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 244:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 245:Src/main.c    **** 
 246:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 247:Src/main.c    **** }
 336              		.loc 1 247 1 view .LVU85
 337 0000 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE134:
 341              		.text
 342              	.Letext0:
 343              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 344              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 345              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 346              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 347              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 348              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 349              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 350              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 351              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 352              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 353              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 354              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 355              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 356              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_crc.h"
 357              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 358              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 359              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 360              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 361              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 362              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 12


 363              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 364              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 365              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 366              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 367              		.file 26 "Inc/crc.h"
 368              		.file 27 "Middlewares/Third_Party/FatFs/src/integer.h"
 369              		.file 28 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 370              		.file 29 "Middlewares/Third_Party/FatFs/src/ff.h"
 371              		.file 30 "Middlewares/Third_Party/FatFs/src/diskio.h"
 372              		.file 31 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 373              		.file 32 "Inc/user_diskio.h"
 374              		.file 33 "Inc/fatfs.h"
 375              		.file 34 "Inc/rtc.h"
 376              		.file 35 "Inc/spi.h"
 377              		.file 36 "Inc/usart.h"
 378              		.file 37 "Inc/fsmc.h"
 379              		.file 38 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 380              		.file 39 "Inc/gpio.h"
 381              		.file 40 "Inc/sdio.h"
 382              		.file 41 "Inc/i2c.h"
 383              		.file 42 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 384              		.file 43 "<built-in>"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cccxUtVj.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:18     .text._write:00000000 $t
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:26     .text._write:00000000 _write
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:60     .text._write:00000014 $d
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:65     .text.SystemClock_Config:00000000 $t
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:72     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:227    .text.SystemClock_Config:000000ac $d
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:233    .rodata.main.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:243    .text.main:00000000 $t
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:250    .text.main:00000000 main
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:315    .text.main:00000044 $d
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:322    .text.Error_Handler:00000000 $t
C:\Users\gx\AppData\Local\Temp\cccxUtVj.s:329    .text.Error_Handler:00000000 Error_Handler

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_RTC_Init
MX_CRC_Init
MX_SDIO_SD_Init
MX_USART1_UART_Init
MX_FSMC_Init
MX_SPI1_Init
MX_I2C1_Init
MX_USART2_UART_Init
printf
MX_FREERTOS_Init
osKernelStart
