ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_roller_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.event_handler.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 6C76676C 		.ascii	"lvgl/lvgl/examples/widgets/roller/lv_example_roller"
  20      2F6C7667 
  20      6C2F6578 
  20      616D706C 
  20      65732F77 
  21 0033 5F312E63 		.ascii	"_1.c\000"
  21      00
  22              		.align	2
  23              	.LC1:
  24 0038 53656C65 		.ascii	"Selected month: %s\012\000"
  24      63746564 
  24      206D6F6E 
  24      74683A20 
  24      25730A00 
  25              		.section	.text.event_handler,"ax",%progbits
  26              		.align	1
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	event_handler:
  34              	.LVL0:
  35              	.LFB189:
  36              		.file 1 "lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c"
   1:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** #if LV_USE_ROLLER && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** 
   4:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** static void event_handler(lv_event_t * e)
   5:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** {
  37              		.loc 1 5 1 view -0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 32
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              		.loc 1 5 1 is_stmt 0 view .LVU1
  42 0000 30B5     		push	{r4, r5, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 2


  45              		.cfi_offset 4, -12
  46              		.cfi_offset 5, -8
  47              		.cfi_offset 14, -4
  48 0002 8BB0     		sub	sp, sp, #44
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 56
  51 0004 0546     		mov	r5, r0
   6:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_event_code_t code = lv_event_get_code(e);
  52              		.loc 1 6 5 is_stmt 1 view .LVU2
  53              		.loc 1 6 28 is_stmt 0 view .LVU3
  54 0006 FFF7FEFF 		bl	lv_event_get_code
  55              	.LVL1:
  56              		.loc 1 6 28 view .LVU4
  57 000a 0446     		mov	r4, r0
  58              	.LVL2:
   7:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_obj_t * obj = lv_event_get_target(e);
  59              		.loc 1 7 5 is_stmt 1 view .LVU5
  60              		.loc 1 7 22 is_stmt 0 view .LVU6
  61 000c 2846     		mov	r0, r5
  62 000e FFF7FEFF 		bl	lv_event_get_target
  63              	.LVL3:
   8:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
  64              		.loc 1 8 5 is_stmt 1 view .LVU7
  65              		.loc 1 8 7 is_stmt 0 view .LVU8
  66 0012 1C2C     		cmp	r4, #28
  67 0014 01D0     		beq	.L4
  68              	.LVL4:
  69              	.L1:
   9:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         char buf[32];
  10:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         lv_roller_get_selected_str(obj, buf, sizeof(buf));
  11:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         LV_LOG_USER("Selected month: %s\n", buf);
  12:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     }
  13:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** }
  70              		.loc 1 13 1 view .LVU9
  71 0016 0BB0     		add	sp, sp, #44
  72              	.LCFI2:
  73              		.cfi_remember_state
  74              		.cfi_def_cfa_offset 12
  75              		@ sp needed
  76 0018 30BD     		pop	{r4, r5, pc}
  77              	.LVL5:
  78              	.L4:
  79              	.LCFI3:
  80              		.cfi_restore_state
  81              	.LBB6:
   9:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         char buf[32];
  82              		.loc 1 9 9 is_stmt 1 view .LVU10
  10:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         LV_LOG_USER("Selected month: %s\n", buf);
  83              		.loc 1 10 9 view .LVU11
  84 001a 02AC     		add	r4, sp, #8
  85              	.LVL6:
  10:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****         LV_LOG_USER("Selected month: %s\n", buf);
  86              		.loc 1 10 9 is_stmt 0 view .LVU12
  87 001c 2022     		movs	r2, #32
  88 001e 2146     		mov	r1, r4
  89 0020 FFF7FEFF 		bl	lv_roller_get_selected_str
  90              	.LVL7:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 3


  11:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     }
  91              		.loc 1 11 9 is_stmt 1 view .LVU13
  92 0024 0194     		str	r4, [sp, #4]
  93 0026 044B     		ldr	r3, .L5
  94 0028 0093     		str	r3, [sp]
  95 002a 044B     		ldr	r3, .L5+4
  96 002c 0B22     		movs	r2, #11
  97 002e 0449     		ldr	r1, .L5+8
  98 0030 0420     		movs	r0, #4
  99 0032 FFF7FEFF 		bl	_lv_log_add
 100              	.LVL8:
  11:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     }
 101              		.loc 1 11 49 view .LVU14
 102              	.LBE6:
 103              		.loc 1 13 1 is_stmt 0 view .LVU15
 104 0036 EEE7     		b	.L1
 105              	.L6:
 106              		.align	2
 107              	.L5:
 108 0038 38000000 		.word	.LC1
 109 003c 00000000 		.word	.LANCHOR0
 110 0040 00000000 		.word	.LC0
 111              		.cfi_endproc
 112              	.LFE189:
 114              		.section	.rodata.lv_example_roller_1.str1.4,"aMS",%progbits,1
 115              		.align	2
 116              	.LC2:
 117 0000 4A616E75 		.ascii	"January\012February\012March\012April\012May\012Jun"
 117      6172790A 
 117      46656272 
 117      75617279 
 117      0A4D6172 
 118 0024 650A4A75 		.ascii	"e\012July\012August\012September\012October\012Nove"
 118      6C790A41 
 118      75677573 
 118      740A5365 
 118      7074656D 
 119 0048 6D626572 		.ascii	"mber\012December\000"
 119      0A446563 
 119      656D6265 
 119      7200
 120              		.section	.text.lv_example_roller_1,"ax",%progbits
 121              		.align	1
 122              		.global	lv_example_roller_1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	lv_example_roller_1:
 129              	.LFB190:
  14:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** 
  15:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** /**
  16:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****  * An infinite roller with the name of the months
  17:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****  */
  18:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** void lv_example_roller_1(void)
  19:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** {
 130              		.loc 1 19 1 is_stmt 1 view -0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 4


 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 10B5     		push	{r4, lr}
 135              	.LCFI4:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 4, -8
 138              		.cfi_offset 14, -4
  20:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_obj_t *roller1 = lv_roller_create(lv_scr_act());
 139              		.loc 1 20 5 view .LVU17
 140              	.LBB7:
 141              	.LBI7:
 142              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 5


  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 6


 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 7


 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 143              		.loc 2 163 26 view .LVU18
 144              	.LBB8:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 145              		.loc 2 165 5 view .LVU19
 146              		.loc 2 165 12 is_stmt 0 view .LVU20
 147 0002 FFF7FEFF 		bl	lv_disp_get_default
 148              	.LVL9:
 149 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 150              	.LVL10:
 151              	.LBE8:
 152              	.LBE7:
 153              		.loc 1 20 25 view .LVU21
 154 000a FFF7FEFF 		bl	lv_roller_create
 155              	.LVL11:
 156 000e 0446     		mov	r4, r0
 157              	.LVL12:
  21:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_roller_set_options(roller1,
 158              		.loc 1 21 5 is_stmt 1 view .LVU22
 159 0010 0122     		movs	r2, #1
 160 0012 0A49     		ldr	r1, .L9
 161 0014 FFF7FEFF 		bl	lv_roller_set_options
 162              	.LVL13:
  22:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "January\n"
  23:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "February\n"
  24:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "March\n"
  25:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "April\n"
  26:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "May\n"
  27:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "June\n"
  28:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "July\n"
  29:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "August\n"
  30:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "September\n"
  31:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "October\n"
  32:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "November\n"
  33:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         "December",
  34:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****                         LV_ROLLER_MODE_INFINITE);
  35:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** 
  36:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_roller_set_visible_row_count(roller1, 4);
 163              		.loc 1 36 5 view .LVU23
 164 0018 0421     		movs	r1, #4
 165 001a 2046     		mov	r0, r4
 166 001c FFF7FEFF 		bl	lv_roller_set_visible_row_count
 167              	.LVL14:
  37:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_obj_center(roller1);
 168              		.loc 1 37 5 view .LVU24
 169              	.LBB9:
 170              	.LBI9:
 171              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 8


   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 9


  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 10


 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 11


 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 172              		.loc 3 186 20 view .LVU25
 173              	.LBB10:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 174              		.loc 3 188 5 view .LVU26
 175 0020 0023     		movs	r3, #0
 176 0022 1A46     		mov	r2, r3
 177 0024 0921     		movs	r1, #9
 178 0026 2046     		mov	r0, r4
 179 0028 FFF7FEFF 		bl	lv_obj_align
 180              	.LVL15:
 181              		.loc 3 188 5 is_stmt 0 view .LVU27
 182              	.LBE10:
 183              	.LBE9:
  38:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c ****     lv_obj_add_event_cb(roller1, event_handler, LV_EVENT_ALL, NULL);
 184              		.loc 1 38 5 is_stmt 1 view .LVU28
 185 002c 0023     		movs	r3, #0
 186 002e 1A46     		mov	r2, r3
 187 0030 0349     		ldr	r1, .L9+4
 188 0032 2046     		mov	r0, r4
 189 0034 FFF7FEFF 		bl	lv_obj_add_event_cb
 190              	.LVL16:
  39:lvgl/lvgl/examples/widgets/roller/lv_example_roller_1.c **** }
 191              		.loc 1 39 1 is_stmt 0 view .LVU29
 192 0038 10BD     		pop	{r4, pc}
 193              	.LVL17:
 194              	.L10:
 195              		.loc 1 39 1 view .LVU30
 196 003a 00BF     		.align	2
 197              	.L9:
 198 003c 00000000 		.word	.LC2
 199 0040 00000000 		.word	event_handler
 200              		.cfi_endproc
 201              	.LFE190:
 203              		.section	.rodata.__func__.12316,"a"
 204              		.align	2
 205              		.set	.LANCHOR0,. + 0
 208              	__func__.12316:
 209 0000 6576656E 		.ascii	"event_handler\000"
 209      745F6861 
 209      6E646C65 
 209      7200
 210              		.text
 211              	.Letext0:
 212              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 213              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 12


 214              		.file 6 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 215              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 216              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 217              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 218              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 219              		.file 11 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 220              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 221              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 222              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 223              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 224              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 225              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 226              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 227              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 228              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 229              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 230              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 231              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 232              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 233              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 234              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 235              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 236              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 237              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 238              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 239              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 240              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 241              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 242              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 243              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 244              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 245              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 246              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 247              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 248              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 249              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 250              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 251              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 252              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 253              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 254              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 255              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 256              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 257              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 258              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 259              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 260              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 261              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 262              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 263              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 264              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 265              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 266              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
 267              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_log.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cckjfbPW.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_roller_1.c
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:18     .rodata.event_handler.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:26     .text.event_handler:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:33     .text.event_handler:00000000 event_handler
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:108    .text.event_handler:00000038 $d
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:115    .rodata.lv_example_roller_1.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:121    .text.lv_example_roller_1:00000000 $t
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:128    .text.lv_example_roller_1:00000000 lv_example_roller_1
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:198    .text.lv_example_roller_1:0000003c $d
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:204    .rodata.__func__.12316:00000000 $d
C:\Users\gx\AppData\Local\Temp\cckjfbPW.s:208    .rodata.__func__.12316:00000000 __func__.12316

UNDEFINED SYMBOLS
lv_event_get_code
lv_event_get_target
lv_roller_get_selected_str
_lv_log_add
lv_disp_get_default
lv_disp_get_scr_act
lv_roller_create
lv_roller_set_options
lv_roller_set_visible_row_count
lv_obj_align
lv_obj_add_event_cb
