ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_draw_blend.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.color_blend_true_color_additive,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	color_blend_true_color_additive:
  26              	.LVL0:
  27              	.LFB160:
  28              		.file 1 "lvgl/lvgl/src/draw/lv_draw_blend.c"
   1:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
   2:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @file lv_draw_blend.c
   3:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *
   4:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
   5:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
   6:lvgl/lvgl/src/draw/lv_draw_blend.c **** /*********************
   7:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *      INCLUDES
   8:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *********************/
   9:lvgl/lvgl/src/draw/lv_draw_blend.c **** #include "lv_draw_blend.h"
  10:lvgl/lvgl/src/draw/lv_draw_blend.c **** #include "lv_img_decoder.h"
  11:lvgl/lvgl/src/draw/lv_draw_blend.c **** #include "../misc/lv_math.h"
  12:lvgl/lvgl/src/draw/lv_draw_blend.c **** #include "../hal/lv_hal_disp.h"
  13:lvgl/lvgl/src/draw/lv_draw_blend.c **** #include "../core/lv_refr.h"
  14:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  15:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
  16:lvgl/lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_pxp.h"
  17:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
  18:lvgl/lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_nxp_vglite.h"
  19:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
  20:lvgl/lvgl/src/draw/lv_draw_blend.c ****     #include "../gpu/lv_gpu_stm32_dma2d.h"
  21:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
  22:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  23:lvgl/lvgl/src/draw/lv_draw_blend.c **** /*********************
  24:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *      DEFINES
  25:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *********************/
  26:lvgl/lvgl/src/draw/lv_draw_blend.c **** #define GPU_SIZE_LIMIT      240
  27:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  28:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
  29:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *      TYPEDEFS
  30:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 2


  31:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  32:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
  33:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *  STATIC PROTOTYPES
  34:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
  35:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  36:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  37:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
  38:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  39:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  40:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  41:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
  42:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
  43:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  44:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  45:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  46:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
  47:lvgl/lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
  48:lvgl/lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  49:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
  50:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  51:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
  52:lvgl/lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  53:lvgl/lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  54:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  55:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
  56:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
  57:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
  58:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res);
  59:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  60:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
  61:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
  62:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
  63:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode);
  64:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  65:lvgl/lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  66:lvgl/lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  67:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
  68:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  69:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
  70:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *  STATIC VARIABLES
  71:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
  72:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  73:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
  74:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *      MACROS
  75:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
  76:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP == 0
  77:lvgl/lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                                          \
  78:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(*mask == LV_OPA_COVER) *disp_buf_first = color;                                 \
  79:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else *disp_buf_first = lv_color_mix(color, *disp_buf_first, *mask);            \
  80:lvgl/lvgl/src/draw/lv_draw_blend.c ****     mask++;                                                         \
  81:lvgl/lvgl/src/draw/lv_draw_blend.c ****     disp_buf_first++;
  82:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  83:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
  84:lvgl/lvgl/src/draw/lv_draw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                               \
  85:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(*mask == LV_OPA_COVER) *disp_buf_first = color;                                 \
  86:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else if(disp->driver->screen_transp) lv_color_mix_with_alpha(*disp_buf_first, disp_buf_first->c
  87:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else *disp_buf_first = lv_color_mix(color, *disp_buf_first, *mask);            \
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 3


  88:lvgl/lvgl/src/draw/lv_draw_blend.c ****     mask++;                                                         \
  89:lvgl/lvgl/src/draw/lv_draw_blend.c ****     disp_buf_first++;
  90:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
  91:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  92:lvgl/lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  93:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
  94:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
  95:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
  96:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
  97:lvgl/lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
  98:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  99:lvgl/lvgl/src/draw/lv_draw_blend.c **** #define MAP_NORMAL_MASK_PX_SCR_TRANSP(x)                        \
 100:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(*mask_tmp_x) {          \
 101:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) disp_buf_first[x] = map_buf_first[x];                      
 102:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_fi
 103:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                         map_buf_first[x], *mask_tmp
 104:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], *mask_tmp_x);   
 105:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }                                                                                              
 106:lvgl/lvgl/src/draw/lv_draw_blend.c ****     mask_tmp_x++;
 107:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 108:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
 109:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *   GLOBAL FUNCTIONS
 110:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
 111:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 112:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
 113:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * Fill and area in the display buffer.
 114:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the fill to this area  (absolute coordinates)
 115:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param fill_area fill this area  (absolute coordinates) (should be clipped)
 116:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 117:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on the fill (uint8_t array with 0x00..0xff values).
 118:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *             Relative to fill area but its width is truncated to clip area.
 119:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 120:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 121:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 122:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 123:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 124:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
 125:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_fill(const lv_area_t * clip_area, const lv_area_t * fill_area,
 126:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                           lv_color_t color, lv_opa_t * mask, lv_draw_mask_res_t mas
 127:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                           lv_blend_mode_t mode)
 128:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 129:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 130:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 131:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 132:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 133:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 134:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 135:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 136:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 137:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 138:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 139:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 140:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 141:lvgl/lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 142:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 143:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!_lv_area_intersect(&draw_area, clip_area, fill_area)) return;
 144:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 4


 145:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 146:lvgl/lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify the drawing to `disp_buf`*/
 147:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_area_move(&draw_area, -disp_area->x1, -disp_area->y1);
 148:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 149:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0 && mask) {
 151:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 152:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 154:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 155:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 156:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 157:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 158:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 159:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 160:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 161:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 162:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 163:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 164:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_blended(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res, mode);
 165:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 166:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 167:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 168:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 169:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
 170:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * Copy a map (image) to a display buffer.
 171:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param clip_area clip the map to this area (absolute coordinates)
 172:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param map_area area of the image  (absolute coordinates)
 173:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf a pixels of the map (image)
 174:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 175:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                Relative to map area but its width is truncated to clip area.
 176:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 177:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 178:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 179:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param opa  overall opacity in 0x00..0xff range
 180:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 181:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
 182:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM void _lv_blend_map(const lv_area_t * clip_area, const lv_area_t * map_area,
 183:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                          const lv_color_t * map_buf,
 184:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t * mask, lv_draw_mask_res_t mask_res,
 185:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                          lv_opa_t opa, lv_blend_mode_t mode)
 186:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 187:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 188:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa < LV_OPA_MIN) return;
 189:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 190:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 191:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get clipped fill area which is the real draw area.
 192:lvgl/lvgl/src/draw/lv_draw_blend.c ****      *It is always the same or inside `fill_area`*/
 193:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_area_t draw_area;
 194:lvgl/lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 196:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 197:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 198:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 199:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 200:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 201:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 5


 202:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 203:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->gpu_wait_cb) disp->driver->gpu_wait_cb(disp->driver);
 204:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 205:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Now `draw_area` has absolute coordinates.
 206:lvgl/lvgl/src/draw/lv_draw_blend.c ****      *Make it relative to `disp_area` to simplify draw to `disp_buf`*/
 207:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.x1 -= disp_area->x1;
 208:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 209:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 210:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 211:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 212:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Round the values in the mask if anti-aliasing is disabled*/
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask && disp->driver->antialiasing == 0)
 214:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 215:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 216:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 218:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 219:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(disp->driver->set_px_cb) {
 220:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 221:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 222:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else if(mode == LV_BLEND_MODE_NORMAL) {
 223:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 224:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 225:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 226:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 227:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_blended(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res, mode);
 228:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 229:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 230:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 231:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 232:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**********************
 233:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *   STATIC FUNCTIONS
 234:lvgl/lvgl/src/draw/lv_draw_blend.c ****  **********************/
 235:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 236:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void fill_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 237:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_color_t color, lv_opa_t opa,
 238:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 239:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 240:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 241:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 242:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 243:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 244:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 245:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 246:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 247:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 248:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 249:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 252:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 253:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 254:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 255:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 256:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 257:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 258:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 6


 259:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 260:lvgl/lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 261:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 262:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 263:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 264:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 267:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 268:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 269:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 270:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 271:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 272:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 273:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 274:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 275:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 276:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 277:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
 278:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color
 279:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 280:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 281:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 282:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 283:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 284:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 285:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 286:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 287:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 288:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 289:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
 290:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 291:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               const lv_area_t * draw_area,
 292:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               lv_color_t color, lv_opa_t opa,
 293:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                               const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 295:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 296:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 297:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 298:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 299:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 300:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 301:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 302:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 303:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 304:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to the first pixel of the destination area*/
 305:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 306:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 307:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 308:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 309:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 310:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 311:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 312:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 313:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 314:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_SIZE_LIMIT) {
 315:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 7


 316:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 317:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 318:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 319:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_SIZE_LIMIT) {
 320:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 321:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     return;
 322:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 323:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 324:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 325:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 326:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_fill(disp_buf_first, disp_w, color, draw_area_w, draw_area_h);
 327:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 328:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 329:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 330:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(disp->driver->gpu_fill_cb && lv_area_get_size(draw_area) > GPU_SIZE_LIMIT) {
 332:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 333:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 334:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 335:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 336:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 337:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 338:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 339:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 340:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 341:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 342:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*No mask with opacity*/
 343:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else {
 344:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 345:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_FILL_OPA_SIZE_LIMIT) {
 346:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_fill(disp_buf, disp_w, draw_area, color, opa);
 347:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 348:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 349:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_NXP_VG_LITE
 350:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_FILL_OPA_SIZE_LIMIT) {
 351:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_fill(disp_buf, disp_w, lv_area_get_height(disp_area), draw_are
 352:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     return;
 353:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 354:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 355:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 356:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 357:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 358:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 359:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 360:lvgl/lvgl/src/draw/lv_draw_blend.c ****             uint16_t color_premult[3];
 361:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 362:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 363:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 367:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 368:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 369:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 370:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 371:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 372:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                     &last_res_color.ch.alpha);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 8


 373:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 374:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         else
 375:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 376:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         {
 377:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             last_res_color = lv_color_mix_premult(color_premult, disp_buf_first[x],
 378:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 379:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 380:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp_buf_first[x] = last_res_color;
 381:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 382:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 383:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 384:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 385:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 386:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 387:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 388:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t x_end4 = draw_area_w - 4;
 389:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 390:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 16
 391:lvgl/lvgl/src/draw/lv_draw_blend.c ****         uint32_t c32 = color.full + ((uint32_t)color.full << 16);
 392:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 393:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 394:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 395:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 399:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 400:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 401:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(; x <= x_end4; x += 4) {
 402:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 403:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 404:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 16
 405:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if((lv_uintptr_t)disp_buf_first & 0x3) {
 406:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 0) = color;
 407:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             uint32_t * d = (uint32_t * )(disp_buf_first + 1);
 408:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *d = c32;
 409:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 3) = color;
 410:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         } else {
 411:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             uint32_t * d = (uint32_t * )disp_buf_first;
 412:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *d = c32;
 413:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(d + 1) = c32;
 414:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 415:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 416:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[0] = color;
 417:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[1] = color;
 418:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[2] = color;
 419:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[3] = color;
 420:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 421:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first+= 4;
 422:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         mask += 4;
 423:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 424:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     else if(mask32) {
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 429:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 9


 430:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         mask += 4;
 431:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first += 4;
 432:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 433:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 434:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 435:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 437:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 438:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += (disp_w-draw_area_w);
 439:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 440:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 441:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 442:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else {
 443:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 444:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_dest_color;
 445:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color;
 446:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 447:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_dest_color.full = disp_buf_first[0].full;
 448:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_res_color.full = disp_buf_first[0].full;
 449:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 450:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = draw_area->y1; y <= draw_area->y2; y++) {
 452:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 454:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 456:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 457:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 458:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 459:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             if(disp->driver->screen_transp) {
 460:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alp
 461:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                         &last_res_color.ch.alpha);
 462:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             }
 463:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             else
 464:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 465:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             {
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 467:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 468:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             }
 469:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             last_mask = *mask_tmp_x;
 470:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 471:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 472:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = last_res_color;
 473:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 474:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     mask_tmp_x++;
 475:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 476:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 477:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 478:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 479:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 480:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 481:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 482:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 483:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 484:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
 485:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * Fill an area with a color but apply blending algorithms
 486:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 10


 487:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 488:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param draw_area fill this area (relative to `disp_area`)
 489:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param color fill color
 490:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 491:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 492:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 493:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 494:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 495:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 496:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mode blend mode from `lv_blend_mode_t`
 497:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
 498:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void fill_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * dra
 499:lvgl/lvgl/src/draw/lv_draw_blend.c ****                          lv_color_t color, lv_opa_t opa,
 500:lvgl/lvgl/src/draw/lv_draw_blend.c ****                          const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 501:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 502:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 503:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 504:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 505:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 506:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 507:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 508:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 509:lvgl/lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 510:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 511:lvgl/lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 512:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 513:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 514:lvgl/lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 515:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 516:lvgl/lvgl/src/draw/lv_draw_blend.c ****         default:
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 518:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 519:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 520:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 521:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 522:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 523:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 524:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 525:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 526:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 527:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 531:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 532:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 533:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 534:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 535:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 536:lvgl/lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 537:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 538:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 539:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 540:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 541:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 542:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t draw_area_w = lv_area_get_width(draw_area);
 543:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 11


 544:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 545:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 546:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 547:lvgl/lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 548:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 549:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 550:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color;
 551:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 552:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 553:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 554:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 555:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 558:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 560:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 561:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 562:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa_tmp);
 563:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 564:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 565:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 566:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = last_res_color;
 567:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 568:lvgl/lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 569:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 570:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 571:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 572:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 573:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 574:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 575:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void map_set_px(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw_
 576:lvgl/lvgl/src/draw/lv_draw_blend.c ****                        const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 577:lvgl/lvgl/src/draw/lv_draw_blend.c ****                        const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 578:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 579:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 580:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 581:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 582:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 583:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 584:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 585:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 586:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 587:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 588:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 589:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 590:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 591:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 592:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 593:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 594:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 595:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 596:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 597:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 598:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 599:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 12


 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 602:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 603:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 604:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 605:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 606:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 607:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 608:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 609:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 610:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 611:lvgl/lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 612:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 615:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 616:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 617:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 618:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 619:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 620:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 621:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 622:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 623:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 624:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 625:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 626:lvgl/lvgl/src/draw/lv_draw_blend.c **** /**
 627:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * Copy an image to an area
 628:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_area the current display area (destination area)
 629:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param disp_buf destination buffer
 630:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param map_area coordinates of the map (image) to copy. (absolute coordinates)
 631:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param map_buf the pixel of the image
 632:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param opa overall opacity in 0x00..0xff range
 633:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask a mask to apply on every pixel (uint8_t array with 0x00..0xff values).
 634:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                It fits into draw_area.
 635:lvgl/lvgl/src/draw/lv_draw_blend.c ****  * @param mask_res LV_MASK_RES_COVER: the mask has only 0xff values (no mask),
 636:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_TRANSP: the mask has only 0x00 values (full transparent),
 637:lvgl/lvgl/src/draw/lv_draw_blend.c ****  *                 LV_MASK_RES_CHANGED: the mask has mixed values
 638:lvgl/lvgl/src/draw/lv_draw_blend.c ****  */
 639:lvgl/lvgl/src/draw/lv_draw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(const lv_area_t * disp_area, lv_color_t * disp_buf,
 640:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * draw_area,
 641:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_area_t * map_area, const lv_color_t * map_buf
 642:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                              const lv_opa_t * mask, lv_draw_mask_res_t mask_res)
 643:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 644:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 645:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 646:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 647:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 648:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 649:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 650:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 651:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 652:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
 653:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 654:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to first pixel to draw*/
 655:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_first = disp_buf + disp_w * draw_area->y1 + draw_area->x1;
 656:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 657:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to first pixel to draw from the map*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 13


 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_first = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area
 659:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 660:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 661:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 662:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 663:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 664:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 665:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 666:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 667:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 668:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 669:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 670:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 671:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 672:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_SIZE_LIMIT) {
 673:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 674:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 675:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 676:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 677:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_SIZE_LIMIT) {
 678:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 679:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 680:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 681:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 682:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = draw_area_w;
 683:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = draw_area_h;
 684:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 685:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 686:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 687:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w;
 688:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h;
 689:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 690:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 691:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 692:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 693:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 694:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 695:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 696:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w;
 697:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h;
 698:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 699:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 700:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 701:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 702:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     return;
 703:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 704:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 705:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 706:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 707:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 708:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_copy(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, 
 709:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 710:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 711:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 712:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 713:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 14


 715:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 716:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 717:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 718:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 719:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 720:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else {
 721:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 722:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_PXP_BLIT_OPA_SIZE_LIMIT) {
 723:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_pxp_blit(disp_buf_first, disp_w, map_buf_first, map_w, draw_area_w, draw
 724:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 725:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 726:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif (LV_USE_GPU_NXP_VG_LITE)
 727:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= LV_GPU_NXP_VG_LITE_BLIT_OPA_SIZE_LIMIT) {
 728:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 729:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_nxp_vglite_blit_info_t blit;
 730:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 731:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src = map_buf;
 732:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_width = lv_area_get_width(map_area);
 733:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_height = lv_area_get_height(map_area);
 734:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_stride = lv_area_get_width(map_area) * sizeof(lv_color_t);
 735:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x1 = (draw_area->x1 - (map_area->x1 - disp_area->x1));
 736:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y1 = (draw_area->y1 - (map_area->y1 - disp_area->y1));
 737:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.x2 = blit.src_area.x1 + draw_area_w;
 738:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.src_area.y2 = blit.src_area.y1 + draw_area_h;
 739:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 740:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst = disp_buf;
 741:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_width = lv_area_get_width(disp_area);
 742:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_height = lv_area_get_height(disp_area);
 743:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_stride = lv_area_get_width(disp_area) * sizeof(lv_color_t);
 744:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x1 = draw_area->x1;
 745:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y1 = draw_area->y1;
 746:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.x2 = blit.dst_area.x1 + draw_area_w;
 747:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.dst_area.y2 = blit.dst_area.y1 + draw_area_h;
 748:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 749:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 blit.opa = opa;
 750:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 751:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(lv_gpu_nxp_vglite_blit(&blit) == LV_RES_OK) {
 752:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     return;
 753:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 754:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 /*Fall down to SW render in case of error*/
 755:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 756:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_USE_GPU_STM32_DMA2D
 757:lvgl/lvgl/src/draw/lv_draw_blend.c ****             if(lv_area_get_size(draw_area) >= 240) {
 758:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_gpu_stm32_dma2d_blend(disp_buf_first, disp_w, map_buf_first, opa, map_w, draw_ar
 759:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 760:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 761:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 762:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 763:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Software rendering*/
 764:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 766:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 767:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 768:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(disp->driver->screen_transp) {
 769:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, map_
 770:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                 &disp_buf_first[x].ch.alpha);
 771:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 15


 772:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     else
 773:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 774:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     {
 775:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], opa);
 776:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 777:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 778:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 779:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 780:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 781:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 782:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 783:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 784:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 785:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Only the mask matters*/
 786:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 787:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 788:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 789:lvgl/lvgl/src/draw/lv_draw_blend.c ****             int32_t x_end4 = draw_area_w - 4;
 790:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 792:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 793:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if 0
 794:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 795:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 796:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 797:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 798:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 799:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 800:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 801:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 802:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 803:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 804:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 805:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 806:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 807:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(; x < x_end4; x += 4) {
 808:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 809:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 810:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 811:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 812:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 813:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 814:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 815:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         else {
 816:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 817:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 818:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 819:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 1)
 820:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 2)
 821:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 3)
 822:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 826:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 827:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 828:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 16


 829:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 830:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     mask32++;
 831:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 832:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 833:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 834:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(; x < draw_area_w ; x++) {
 835:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 836:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 837:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 838:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 839:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 840:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 841:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 842:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 843:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 844:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 845:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 846:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 847:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Handle opa and mask values too*/
 848:lvgl/lvgl/src/draw/lv_draw_blend.c ****         else {
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 851:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 852:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 853:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 854:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(disp->driver->screen_transp) {
 855:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             lv_color_mix_with_alpha(disp_buf_first[x], disp_buf_first[x].ch.alpha, 
 856:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                     &disp_buf_first[x].ch.alpha);
 857:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 858:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         else
 859:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 860:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         {
 861:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = lv_color_mix(map_buf_first[x], disp_buf_first[x], o
 862:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 863:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 864:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 865:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 866:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 867:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 868:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 869:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 870:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 871:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 872:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 873:lvgl/lvgl/src/draw/lv_draw_blend.c **** static void map_blended(const lv_area_t * disp_area, lv_color_t * disp_buf,  const lv_area_t * draw
 874:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_area_t * map_area, const lv_color_t * map_buf, lv_opa_t opa,
 875:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         const lv_opa_t * mask, lv_draw_mask_res_t mask_res, lv_blend_mode_t mode)
 876:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 877:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 878:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 879:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t disp_w = lv_area_get_width(disp_area);
 880:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 881:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `draw_area` it will be used to go to the next line of the mask*/
 882:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_w = lv_area_get_width(draw_area);
 883:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 884:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `mask_area` it will be used to go to the next line*/
 885:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t map_w = lv_area_get_width(map_area);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 17


 886:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 887:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. disp_buf which always point to current line to draw*/
 888:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf_tmp = disp_buf + disp_w * draw_area->y1;
 889:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 890:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Create a temp. map_buf which always point to current line to draw*/
 891:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_color_t * map_buf_tmp = map_buf + map_w * (draw_area->y1 - (map_area->y1 - disp_area->
 892:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 893:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 894:lvgl/lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 895:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 896:lvgl/lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_additive;
 897:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 898:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 899:lvgl/lvgl/src/draw/lv_draw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 900:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 901:lvgl/lvgl/src/draw/lv_draw_blend.c ****         default:
 902:lvgl/lvgl/src/draw/lv_draw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 903:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 904:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 905:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 906:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 907:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 908:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 909:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 910:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_FULL_COVER) {
 911:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 912:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 913:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 914:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*The map will be indexed from `draw_area->x1` so compensate it.*/
 915:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 916:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 919:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 920:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 921:lvgl/lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 922:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 923:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 924:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 925:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Masked*/
 926:lvgl/lvgl/src/draw/lv_draw_blend.c ****     else {
 927:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*The mask is relative to the clipped area.
 928:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *In the cycles below mask will be indexed from `draw_area.x1`
 929:lvgl/lvgl/src/draw/lv_draw_blend.c ****          *but it corresponds to zero index. So prepare `mask_tmp` accordingly.*/
 930:lvgl/lvgl/src/draw/lv_draw_blend.c ****         const lv_opa_t * mask_tmp = mask - draw_area->x1;
 931:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 932:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_buf_tmp -= draw_area->x1;
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 935:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 937:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 938:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 939:lvgl/lvgl/src/draw/lv_draw_blend.c ****             disp_buf_tmp += disp_w;
 940:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 941:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 942:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 18


 943:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 944:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 945:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 946:lvgl/lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 947:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
  29              		.loc 1 947 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 948:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 949:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
  34              		.loc 1 949 5 view .LVU1
  35              		.loc 1 949 7 is_stmt 0 view .LVU2
  36 0000 022A     		cmp	r2, #2
  37 0002 36D9     		bls	.L8
 947:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
  38              		.loc 1 947 1 view .LVU3
  39 0004 10B4     		push	{r4}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 4, -4
 950:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 951:lvgl/lvgl/src/draw/lv_draw_blend.c ****     uint32_t tmp;
  43              		.loc 1 951 5 is_stmt 1 view .LVU4
 952:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 1
 953:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.full + fg.full;
 954:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 955:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 956:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
  44              		.loc 1 956 5 view .LVU5
  45              		.loc 1 956 16 is_stmt 0 view .LVU6
  46 0006 C1F3C423 		ubfx	r3, r1, #11, #5
  47              		.loc 1 956 28 view .LVU7
  48 000a C0F3C424 		ubfx	r4, r0, #11, #5
  49              		.loc 1 956 21 view .LVU8
  50 000e 2344     		add	r3, r3, r4
  51              	.LVL1:
 957:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 958:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 959:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 960:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
  52              		.loc 1 960 5 is_stmt 1 view .LVU9
  53              		.loc 1 960 17 is_stmt 0 view .LVU10
  54 0010 1F2B     		cmp	r3, #31
  55 0012 28BF     		it	cs
  56 0014 1F23     		movcs	r3, #31
  57              	.LVL2:
  58              		.loc 1 960 15 view .LVU11
  59 0016 63F3CF20 		bfi	r0, r3, #11, #5
 961:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 962:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 963:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 964:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 965:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 966:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 967:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 19


 968:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
 969:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
  60              		.loc 1 969 5 is_stmt 1 view .LVU12
  61              		.loc 1 969 16 is_stmt 0 view .LVU13
  62 001a C1F34513 		ubfx	r3, r1, #5, #6
  63              		.loc 1 969 30 view .LVU14
  64 001e C0F34514 		ubfx	r4, r0, #5, #6
  65              	.LVL3:
  66              		.loc 1 969 23 view .LVU15
  67 0022 2344     		add	r3, r3, r4
  68              	.LVL4:
 970:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
  69              		.loc 1 970 5 is_stmt 1 view .LVU16
  70              		.loc 1 970 19 is_stmt 0 view .LVU17
  71 0024 3F2B     		cmp	r3, #63
  72 0026 28BF     		it	cs
  73 0028 3F23     		movcs	r3, #63
  74              	.LVL5:
  75              		.loc 1 970 17 view .LVU18
  76 002a 63F34A10 		bfi	r0, r3, #5, #6
 971:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
 972:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 973:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MIN(tmp, 63);
 974:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
 975:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 976:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 977:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 978:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 979:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 980:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 981:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 982:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
  77              		.loc 1 982 5 is_stmt 1 view .LVU19
  78              		.loc 1 982 16 is_stmt 0 view .LVU20
  79 002e 01F01F03 		and	r3, r1, #31
  80              		.loc 1 982 29 view .LVU21
  81 0032 00F01F04 		and	r4, r0, #31
  82              	.LVL6:
  83              		.loc 1 982 22 view .LVU22
  84 0036 2344     		add	r3, r3, r4
  85              	.LVL7:
 983:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 8
 984:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
 985:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 16
 986:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
  86              		.loc 1 986 5 is_stmt 1 view .LVU23
  87              		.loc 1 986 18 is_stmt 0 view .LVU24
  88 0038 1F2B     		cmp	r3, #31
  89 003a 28BF     		it	cs
  90 003c 1F23     		movcs	r3, #31
  91              	.LVL8:
  92              		.loc 1 986 16 view .LVU25
  93 003e 63F30400 		bfi	r0, r3, #0, #5
 987:lvgl/lvgl/src/draw/lv_draw_blend.c **** #elif LV_COLOR_DEPTH == 32
 988:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 989:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 990:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 20


 991:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 992:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
  94              		.loc 1 992 5 is_stmt 1 view .LVU26
  95              		.loc 1 992 7 is_stmt 0 view .LVU27
  96 0042 FF2A     		cmp	r2, #255
  97 0044 12D0     		beq	.L3
 993:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 994:lvgl/lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
  98              		.loc 1 994 5 is_stmt 1 view .LVU28
  99              	.LVL9:
 100              	.LBB111:
 101              	.LBI111:
 102              		.file 2 "lvgl/lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/lvgl/src/draw/../misc/lv_color.h **** enum {
  43:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 21


  45:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  58:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 100:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 22


 102:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 115:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 157:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 23


 159:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 173:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 24


 216:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 239:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 25


 273:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 296:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 328:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 26


 330:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 343:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 344:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
 353:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 27


 387:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
 401:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 28


 444:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 103              		.loc 2 459 48 view .LVU29
 104              	.LBB112:
 460:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 105              		.loc 2 461 5 view .LVU30
 462:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 463:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     mix = ( mix + 4 ) >> 3;
 106              		.loc 2 465 5 view .LVU31
 107              		.loc 2 465 17 is_stmt 0 view .LVU32
 108 0046 0432     		adds	r2, r2, #4
 109              	.LVL10:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 110              		.loc 2 466 5 is_stmt 1 view .LVU33
 111              		.loc 2 466 42 is_stmt 0 view .LVU34
 112 0048 8BB2     		uxth	r3, r1
 113              		.loc 2 466 19 view .LVU35
 114 004a 43EA0141 		orr	r1, r3, r1, lsl #16
 115              	.LVL11:
 116              		.loc 2 466 14 view .LVU36
 117 004e 0A4B     		ldr	r3, .L9
 118 0050 1940     		ands	r1, r1, r3
 119              	.LVL12:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 120              		.loc 2 467 5 is_stmt 1 view .LVU37
 121              		.loc 2 467 42 is_stmt 0 view .LVU38
 122 0052 84B2     		uxth	r4, r0
 123              		.loc 2 467 19 view .LVU39
 124 0054 44EA0040 		orr	r0, r4, r0, lsl #16
 125              	.LVL13:
 126              		.loc 2 467 14 view .LVU40
 127 0058 1840     		ands	r0, r0, r3
 128              	.LVL14:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 129              		.loc 2 468 5 is_stmt 1 view .LVU41
 130              		.loc 2 468 30 is_stmt 0 view .LVU42
 131 005a 401A     		subs	r0, r0, r1
 132              	.LVL15:
 133              		.loc 2 468 36 view .LVU43
 134 005c D208     		lsrs	r2, r2, #3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 29


 135              	.LVL16:
 136              		.loc 2 468 36 view .LVU44
 137 005e 00FB02F2 		mul	r2, r0, r2
 138              		.loc 2 468 49 view .LVU45
 139 0062 01EB5210 		add	r0, r1, r2, lsr #5
 140              		.loc 2 468 14 view .LVU46
 141 0066 1840     		ands	r0, r0, r3
 142              	.LVL17:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 143              		.loc 2 469 5 is_stmt 1 view .LVU47
 470:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 480:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 483:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 484:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret;
 144              		.loc 2 484 5 view .LVU48
 145 0068 40EA1040 		orr	r0, r0, r0, lsr #16
 146              	.LVL18:
 147              	.L3:
 148              	.LVL19:
 149              		.loc 2 484 5 is_stmt 0 view .LVU49
 150              	.LBE112:
 151              	.LBE111:
 995:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
 152              		.loc 1 995 1 view .LVU50
 153 006c 5DF8044B 		ldr	r4, [sp], #4
 154              	.LCFI1:
 155              		.cfi_restore 4
 156              		.cfi_def_cfa_offset 0
 157 0070 7047     		bx	lr
 158              	.LVL20:
 159              	.L8:
 949:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 160              		.loc 1 949 27 is_stmt 1 discriminator 1 view .LVU51
 949:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 161              		.loc 1 949 34 is_stmt 0 discriminator 1 view .LVU52
 162 0072 0846     		mov	r0, r1	@ movhi
 163              	.LVL21:
 164              		.loc 1 995 1 discriminator 1 view .LVU53
 165 0074 7047     		bx	lr
 166              	.L10:
 167 0076 00BF     		.align	2
 168              	.L9:
 169 0078 1FF8E007 		.word	132184095
 170              		.cfi_endproc
 171              	.LFE160:
 173              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 30


 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	color_blend_true_color_subtractive:
 181              	.LVL22:
 182              	.LFB161:
 996:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 997:lvgl/lvgl/src/draw/lv_draw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
 998:lvgl/lvgl/src/draw/lv_draw_blend.c **** {
 183              		.loc 1 998 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 999:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1000:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 188              		.loc 1 1000 5 view .LVU55
 189              		.loc 1 1000 7 is_stmt 0 view .LVU56
 190 0000 022A     		cmp	r2, #2
 191 0002 33D9     		bls	.L18
 998:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 192              		.loc 1 998 1 view .LVU57
 193 0004 10B4     		push	{r4}
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 4, -4
1001:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1002:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t tmp;
 197              		.loc 1 1002 5 is_stmt 1 view .LVU58
1003:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 198              		.loc 1 1003 5 view .LVU59
 199              		.loc 1 1003 16 is_stmt 0 view .LVU60
 200 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 201              		.loc 1 1003 28 view .LVU61
 202 000a C0F3C424 		ubfx	r4, r0, #11, #5
 203              		.loc 1 1003 9 view .LVU62
 204 000e 1B1B     		subs	r3, r3, r4
 205              	.LVL23:
1004:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 206              		.loc 1 1004 5 is_stmt 1 view .LVU63
 207              		.loc 1 1004 17 is_stmt 0 view .LVU64
 208 0010 23EAE373 		bic	r3, r3, r3, asr #31
 209              	.LVL24:
 210              		.loc 1 1004 15 view .LVU65
 211 0014 63F3CF20 		bfi	r0, r3, #11, #5
1005:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1006:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_16_SWAP == 0
1007:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 212              		.loc 1 1007 5 is_stmt 1 view .LVU66
 213              		.loc 1 1007 16 is_stmt 0 view .LVU67
 214 0018 C1F34513 		ubfx	r3, r1, #5, #6
 215              		.loc 1 1007 30 view .LVU68
 216 001c C0F34514 		ubfx	r4, r0, #5, #6
 217              	.LVL25:
 218              		.loc 1 1007 9 view .LVU69
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 31


 219 0020 1B1B     		subs	r3, r3, r4
 220              	.LVL26:
1008:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 221              		.loc 1 1008 5 is_stmt 1 view .LVU70
 222              		.loc 1 1008 19 is_stmt 0 view .LVU71
 223 0022 23EAE373 		bic	r3, r3, r3, asr #31
 224              	.LVL27:
 225              		.loc 1 1008 17 view .LVU72
 226 0026 63F34A10 		bfi	r0, r3, #5, #6
1009:lvgl/lvgl/src/draw/lv_draw_blend.c **** #else
1010:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1011:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = LV_MAX(tmp, 0);
1012:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_h = tmp >> 3;
1013:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1014:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
1015:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1016:lvgl/lvgl/src/draw/lv_draw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 227              		.loc 1 1016 5 is_stmt 1 view .LVU73
 228              		.loc 1 1016 16 is_stmt 0 view .LVU74
 229 002a 01F01F03 		and	r3, r1, #31
 230              		.loc 1 1016 29 view .LVU75
 231 002e 00F01F04 		and	r4, r0, #31
 232              	.LVL28:
 233              		.loc 1 1016 9 view .LVU76
 234 0032 1B1B     		subs	r3, r3, r4
 235              	.LVL29:
1017:lvgl/lvgl/src/draw/lv_draw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 236              		.loc 1 1017 5 is_stmt 1 view .LVU77
 237              		.loc 1 1017 18 is_stmt 0 view .LVU78
 238 0034 23EAE373 		bic	r3, r3, r3, asr #31
 239              	.LVL30:
 240              		.loc 1 1017 16 view .LVU79
 241 0038 63F30400 		bfi	r0, r3, #0, #5
1018:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1019:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 242              		.loc 1 1019 5 is_stmt 1 view .LVU80
 243              		.loc 1 1019 7 is_stmt 0 view .LVU81
 244 003c FF2A     		cmp	r2, #255
 245 003e 12D0     		beq	.L13
1020:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
1021:lvgl/lvgl/src/draw/lv_draw_blend.c ****     return lv_color_mix(fg, bg, opa);
 246              		.loc 1 1021 5 is_stmt 1 view .LVU82
 247              	.LVL31:
 248              	.LBB113:
 249              	.LBI113:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 250              		.loc 2 459 48 view .LVU83
 251              	.LBB114:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 252              		.loc 2 461 5 view .LVU84
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 253              		.loc 2 465 5 view .LVU85
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 254              		.loc 2 465 17 is_stmt 0 view .LVU86
 255 0040 0432     		adds	r2, r2, #4
 256              	.LVL32:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 32


 257              		.loc 2 466 5 is_stmt 1 view .LVU87
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 258              		.loc 2 466 42 is_stmt 0 view .LVU88
 259 0042 8BB2     		uxth	r3, r1
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 260              		.loc 2 466 19 view .LVU89
 261 0044 43EA0141 		orr	r1, r3, r1, lsl #16
 262              	.LVL33:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 263              		.loc 2 466 14 view .LVU90
 264 0048 094B     		ldr	r3, .L19
 265 004a 1940     		ands	r1, r1, r3
 266              	.LVL34:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 267              		.loc 2 467 5 is_stmt 1 view .LVU91
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 268              		.loc 2 467 42 is_stmt 0 view .LVU92
 269 004c 84B2     		uxth	r4, r0
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 270              		.loc 2 467 19 view .LVU93
 271 004e 44EA0040 		orr	r0, r4, r0, lsl #16
 272              	.LVL35:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 273              		.loc 2 467 14 view .LVU94
 274 0052 1840     		ands	r0, r0, r3
 275              	.LVL36:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 276              		.loc 2 468 5 is_stmt 1 view .LVU95
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 277              		.loc 2 468 30 is_stmt 0 view .LVU96
 278 0054 401A     		subs	r0, r0, r1
 279              	.LVL37:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 280              		.loc 2 468 36 view .LVU97
 281 0056 D208     		lsrs	r2, r2, #3
 282              	.LVL38:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 283              		.loc 2 468 36 view .LVU98
 284 0058 00FB02F2 		mul	r2, r0, r2
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 285              		.loc 2 468 49 view .LVU99
 286 005c 01EB5210 		add	r0, r1, r2, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 287              		.loc 2 468 14 view .LVU100
 288 0060 1840     		ands	r0, r0, r3
 289              	.LVL39:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 290              		.loc 2 469 5 is_stmt 1 view .LVU101
 291              		.loc 2 484 5 view .LVU102
 292 0062 40EA1040 		orr	r0, r0, r0, lsr #16
 293              	.LVL40:
 294              	.L13:
 295              	.LVL41:
 296              		.loc 2 484 5 is_stmt 0 view .LVU103
 297              	.LBE114:
 298              	.LBE113:
1022:lvgl/lvgl/src/draw/lv_draw_blend.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 33


 299              		.loc 1 1022 1 view .LVU104
 300 0066 5DF8044B 		ldr	r4, [sp], #4
 301              	.LCFI3:
 302              		.cfi_restore 4
 303              		.cfi_def_cfa_offset 0
 304 006a 7047     		bx	lr
 305              	.LVL42:
 306              	.L18:
1000:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 307              		.loc 1 1000 27 is_stmt 1 discriminator 1 view .LVU105
1000:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 308              		.loc 1 1000 34 is_stmt 0 discriminator 1 view .LVU106
 309 006c 0846     		mov	r0, r1	@ movhi
 310              	.LVL43:
 311              		.loc 1 1022 1 discriminator 1 view .LVU107
 312 006e 7047     		bx	lr
 313              	.L20:
 314              		.align	2
 315              	.L19:
 316 0070 1FF8E007 		.word	132184095
 317              		.cfi_endproc
 318              	.LFE161:
 320              		.section	.text.fill_set_px,"ax",%progbits
 321              		.align	1
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	fill_set_px:
 328              	.LVL44:
 329              	.LFB154:
 239:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 330              		.loc 1 239 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 12, pretend = 0, frame = 16
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 239:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 334              		.loc 1 239 1 is_stmt 0 view .LVU109
 335 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 36
 338              		.cfi_offset 4, -36
 339              		.cfi_offset 5, -32
 340              		.cfi_offset 6, -28
 341              		.cfi_offset 7, -24
 342              		.cfi_offset 8, -20
 343              		.cfi_offset 9, -16
 344              		.cfi_offset 10, -12
 345              		.cfi_offset 11, -8
 346              		.cfi_offset 14, -4
 347 0004 89B0     		sub	sp, sp, #36
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 72
 350 0006 0446     		mov	r4, r0
 351 0008 0691     		str	r1, [sp, #24]
 352 000a 1546     		mov	r5, r2
 353 000c 9946     		mov	r9, r3	@ movhi
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 34


 354              	.LVL45:
 239:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 355              		.loc 1 239 1 view .LVU110
 356 000e 9DF848A0 		ldrb	r10, [sp, #72]	@ zero_extendqisi2
 241:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 357              		.loc 1 241 5 is_stmt 1 view .LVU111
 241:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 358              		.loc 1 241 24 is_stmt 0 view .LVU112
 359 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 360              	.LVL46:
 241:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 361              		.loc 1 241 24 view .LVU113
 362 0016 8046     		mov	r8, r0
 363              	.LVL47:
 244:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 364              		.loc 1 244 5 is_stmt 1 view .LVU114
 365              	.LBB115:
 366              	.LBI115:
 367              		.file 3 "lvgl/lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/lvgl/src/draw/../misc/lv_area.h **** #include <string.h>
  18:lvgl/lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
  19:lvgl/lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  20:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  21:lvgl/lvgl/src/draw/../misc/lv_area.h **** /*********************
  22:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  23:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *********************/
  24:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  25:lvgl/lvgl/src/draw/../misc/lv_area.h **** #define _LV_COORD_MAX_REDUCE    8192
  26:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  27:lvgl/lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  28:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  29:lvgl/lvgl/src/draw/../misc/lv_area.h **** #else
  30:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  31:lvgl/lvgl/src/draw/../misc/lv_area.h **** #endif
  32:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  33:lvgl/lvgl/src/draw/../misc/lv_area.h **** /*To allow some special values in the end reduce the max value*/
  34:lvgl/lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MAX ((lv_coord_t)((uint32_t)((uint32_t)1 << (8 * sizeof(lv_coord_t) - 1)) - _LV_CO
  35:lvgl/lvgl/src/draw/../misc/lv_area.h **** #define LV_COORD_MIN (-LV_COORD_MAX)
  36:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  37:lvgl/lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
  38:lvgl/lvgl/src/draw/../misc/lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 35


  39:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  40:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**********************
  41:lvgl/lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  42:lvgl/lvgl/src/draw/../misc/lv_area.h ****  **********************/
  43:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  44:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
  45:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  46:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
  47:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  48:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  49:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  50:lvgl/lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  51:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  52:lvgl/lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  53:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  54:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  55:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  56:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  57:lvgl/lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  58:lvgl/lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  59:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  60:lvgl/lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  61:lvgl/lvgl/src/draw/../misc/lv_area.h **** enum {
  62:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  63:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  64:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  65:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  66:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  67:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  68:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  69:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  70:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  71:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  72:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  73:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  74:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  75:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  76:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  77:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  78:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  79:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  80:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  81:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  82:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  83:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  84:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  85:lvgl/lvgl/src/draw/../misc/lv_area.h **** };
  86:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  87:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  88:lvgl/lvgl/src/draw/../misc/lv_area.h **** enum {
  89:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  90:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  91:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  92:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  93:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  94:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  95:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 36


  96:lvgl/lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  97:lvgl/lvgl/src/draw/../misc/lv_area.h **** };
  98:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
  99:lvgl/lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
 100:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
 101:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**********************
 102:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
 103:lvgl/lvgl/src/draw/../misc/lv_area.h ****  **********************/
 104:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
 107:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 108:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
 109:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 110:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 111:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 112:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
 113:lvgl/lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 114:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
 115:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
 116:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 117:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 118:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 119:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
 120:lvgl/lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 121:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 122:lvgl/lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
 123:lvgl/lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 124:lvgl/lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 125:lvgl/lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 126:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 130:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 132:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 368              		.loc 3 133 26 view .LVU115
 369              	.LBB116:
 134:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 370              		.loc 3 135 5 view .LVU116
 371              		.loc 3 135 31 is_stmt 0 view .LVU117
 372 0018 A788     		ldrh	r7, [r4, #4]
 373              		.loc 3 135 44 view .LVU118
 374 001a 2388     		ldrh	r3, [r4]
 375              		.loc 3 135 36 view .LVU119
 376 001c FF1A     		subs	r7, r7, r3
 377 001e BFB2     		uxth	r7, r7
 378              		.loc 3 135 49 view .LVU120
 379 0020 0137     		adds	r7, r7, #1
 380              		.loc 3 135 12 view .LVU121
 381 0022 3FB2     		sxth	r7, r7
 382              	.LVL48:
 383              		.loc 3 135 12 view .LVU122
 384              	.LBE116:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 37


 385              	.LBE115:
 246:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 386              		.loc 1 246 5 is_stmt 1 view .LVU123
 247:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 387              		.loc 1 247 5 view .LVU124
 249:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 388              		.loc 1 249 5 view .LVU125
 249:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 389              		.loc 1 249 7 is_stmt 0 view .LVU126
 390 0024 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 391 0028 012B     		cmp	r3, #1
 392 002a 0FD0     		beq	.L34
 393              	.LBB117:
 260:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 394              		.loc 1 260 9 is_stmt 1 view .LVU127
 260:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 395              		.loc 1 260 53 is_stmt 0 view .LVU128
 396 002c B5F90020 		ldrsh	r2, [r5]
 260:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 397              		.loc 1 260 26 view .LVU129
 398 0030 139E     		ldr	r6, [sp, #76]
 399 0032 B61A     		subs	r6, r6, r2
 400              	.LVL49:
 263:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 401              		.loc 1 263 9 is_stmt 1 view .LVU130
 402              	.LBB118:
 403              	.LBI118:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 404              		.loc 3 133 26 view .LVU131
 405              	.LBB119:
 406              		.loc 3 135 5 view .LVU132
 407              		.loc 3 135 31 is_stmt 0 view .LVU133
 408 0034 AB88     		ldrh	r3, [r5, #4]
 409              		.loc 3 135 44 view .LVU134
 410 0036 92B2     		uxth	r2, r2
 411              		.loc 3 135 36 view .LVU135
 412 0038 9B1A     		subs	r3, r3, r2
 413 003a 9BB2     		uxth	r3, r3
 414              		.loc 3 135 49 view .LVU136
 415 003c 0133     		adds	r3, r3, #1
 416              		.loc 3 135 12 view .LVU137
 417 003e 1BB2     		sxth	r3, r3
 418 0040 0793     		str	r3, [sp, #28]
 419              	.LVL50:
 420              		.loc 3 135 12 view .LVU138
 421              	.LBE119:
 422              	.LBE118:
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 423              		.loc 1 265 9 is_stmt 1 view .LVU139
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 424              		.loc 1 265 26 is_stmt 0 view .LVU140
 425 0042 B5F90230 		ldrsh	r3, [r5, #2]
 426              	.LVL51:
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 427              		.loc 1 265 26 view .LVU141
 428 0046 9B46     		mov	fp, r3
 429 0048 0597     		str	r7, [sp, #20]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 38


 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 430              		.loc 1 265 9 view .LVU142
 431 004a 41E0     		b	.L28
 432              	.LVL52:
 433              	.L34:
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 434              		.loc 1 265 9 view .LVU143
 435              	.LBE117:
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 436              		.loc 1 250 9 is_stmt 1 view .LVU144
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 437              		.loc 1 250 26 is_stmt 0 view .LVU145
 438 004c B5F902B0 		ldrsh	fp, [r5, #2]
 439              	.LVL53:
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 440              		.loc 1 250 26 view .LVU146
 441 0050 CDF814B0 		str	fp, [sp, #20]
 442 0054 DDF818B0 		ldr	fp, [sp, #24]
 443              	.LVL54:
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 444              		.loc 1 250 9 view .LVU147
 445 0058 02E0     		b	.L23
 446              	.LVL55:
 447              	.L35:
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 448              		.loc 1 250 52 is_stmt 1 discriminator 2 view .LVU148
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 449              		.loc 1 250 53 is_stmt 0 discriminator 2 view .LVU149
 450 005a 059B     		ldr	r3, [sp, #20]
 451 005c 0133     		adds	r3, r3, #1
 452 005e 0593     		str	r3, [sp, #20]
 453              	.LVL56:
 454              	.L23:
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 455              		.loc 1 250 32 is_stmt 1 discriminator 1 view .LVU150
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 456              		.loc 1 250 46 is_stmt 0 discriminator 1 view .LVU151
 457 0060 B5F90630 		ldrsh	r3, [r5, #6]
 250:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 458              		.loc 1 250 9 discriminator 1 view .LVU152
 459 0064 059A     		ldr	r2, [sp, #20]
 460 0066 9342     		cmp	r3, r2
 461 0068 39DB     		blt	.L21
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 462              		.loc 1 251 13 is_stmt 1 view .LVU153
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 463              		.loc 1 251 30 is_stmt 0 view .LVU154
 464 006a B5F90040 		ldrsh	r4, [r5]
 465              	.LVL57:
 466              	.L24:
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 467              		.loc 1 251 36 is_stmt 1 discriminator 1 view .LVU155
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 468              		.loc 1 251 50 is_stmt 0 discriminator 1 view .LVU156
 469 006e B5F90430 		ldrsh	r3, [r5, #4]
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 470              		.loc 1 251 13 discriminator 1 view .LVU157
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 39


 471 0072 A342     		cmp	r3, r4
 472 0074 F1DB     		blt	.L35
 252:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 473              		.loc 1 252 17 is_stmt 1 discriminator 3 view .LVU158
 252:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 474              		.loc 1 252 21 is_stmt 0 discriminator 3 view .LVU159
 475 0076 D8F80000 		ldr	r0, [r8]
 252:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 476              		.loc 1 252 29 discriminator 3 view .LVU160
 477 007a 4669     		ldr	r6, [r0, #20]
 252:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 478              		.loc 1 252 17 discriminator 3 view .LVU161
 479 007c CDF808A0 		str	r10, [sp, #8]
 480 0080 ADF80490 		strh	r9, [sp, #4]	@ movhi
 481 0084 BDF91430 		ldrsh	r3, [sp, #20]
 482 0088 0093     		str	r3, [sp]
 483 008a 23B2     		sxth	r3, r4
 484 008c 3A46     		mov	r2, r7
 485 008e 5946     		mov	r1, fp
 486 0090 B047     		blx	r6
 487              	.LVL58:
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 488              		.loc 1 251 56 is_stmt 1 discriminator 3 view .LVU162
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 489              		.loc 1 251 57 is_stmt 0 discriminator 3 view .LVU163
 490 0092 0134     		adds	r4, r4, #1
 491              	.LVL59:
 251:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color, opa);
 492              		.loc 1 251 57 discriminator 3 view .LVU164
 493 0094 EBE7     		b	.L24
 494              	.LVL60:
 495              	.L30:
 496              	.LBB120:
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 497              		.loc 1 266 56 is_stmt 1 discriminator 2 view .LVU165
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 498              		.loc 1 266 57 is_stmt 0 discriminator 2 view .LVU166
 499 0096 0134     		adds	r4, r4, #1
 500              	.LVL61:
 501              	.L29:
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 502              		.loc 1 266 36 is_stmt 1 discriminator 1 view .LVU167
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 503              		.loc 1 266 50 is_stmt 0 discriminator 1 view .LVU168
 504 0098 B5F90430 		ldrsh	r3, [r5, #4]
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 505              		.loc 1 266 13 discriminator 1 view .LVU169
 506 009c A342     		cmp	r3, r4
 507 009e 13DB     		blt	.L36
 267:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 508              		.loc 1 267 17 is_stmt 1 view .LVU170
 267:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 509              		.loc 1 267 28 is_stmt 0 view .LVU171
 510 00a0 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 267:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, color,
 511              		.loc 1 267 19 view .LVU172
 512 00a2 002B     		cmp	r3, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 40


 513 00a4 F7D0     		beq	.L30
 268:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 514              		.loc 1 268 21 is_stmt 1 view .LVU173
 268:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 515              		.loc 1 268 25 is_stmt 0 view .LVU174
 516 00a6 D8F80000 		ldr	r0, [r8]
 268:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 517              		.loc 1 268 33 view .LVU175
 518 00aa 4769     		ldr	r7, [r0, #20]
 269:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 519              		.loc 1 269 44 view .LVU176
 520 00ac 03FB0AF3 		mul	r3, r3, r10
 268:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 521              		.loc 1 268 21 view .LVU177
 522 00b0 1B0A     		lsrs	r3, r3, #8
 523 00b2 0293     		str	r3, [sp, #8]
 524 00b4 ADF80490 		strh	r9, [sp, #4]	@ movhi
 525 00b8 0FFA8BF3 		sxth	r3, fp
 526 00bc 0093     		str	r3, [sp]
 527 00be 23B2     		sxth	r3, r4
 528 00c0 059A     		ldr	r2, [sp, #20]
 529 00c2 0699     		ldr	r1, [sp, #24]
 530 00c4 B847     		blx	r7
 531              	.LVL62:
 532 00c6 E6E7     		b	.L30
 533              	.L36:
 272:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 534              		.loc 1 272 13 is_stmt 1 discriminator 2 view .LVU178
 272:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 535              		.loc 1 272 22 is_stmt 0 discriminator 2 view .LVU179
 536 00c8 079B     		ldr	r3, [sp, #28]
 537 00ca 1E44     		add	r6, r6, r3
 538              	.LVL63:
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 539              		.loc 1 265 52 is_stmt 1 discriminator 2 view .LVU180
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 540              		.loc 1 265 53 is_stmt 0 discriminator 2 view .LVU181
 541 00cc 0BF1010B 		add	fp, fp, #1
 542              	.LVL64:
 543              	.L28:
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 544              		.loc 1 265 32 is_stmt 1 discriminator 1 view .LVU182
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 545              		.loc 1 265 46 is_stmt 0 discriminator 1 view .LVU183
 546 00d0 B5F90630 		ldrsh	r3, [r5, #6]
 265:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 547              		.loc 1 265 9 discriminator 1 view .LVU184
 548 00d4 5B45     		cmp	r3, fp
 549 00d6 02DB     		blt	.L21
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 550              		.loc 1 266 13 is_stmt 1 view .LVU185
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 551              		.loc 1 266 30 is_stmt 0 view .LVU186
 552 00d8 B5F90040 		ldrsh	r4, [r5]
 553              	.LVL65:
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 554              		.loc 1 266 13 view .LVU187
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 41


 555 00dc DCE7     		b	.L29
 556              	.LVL66:
 557              	.L21:
 266:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 558              		.loc 1 266 13 view .LVU188
 559              	.LBE120:
 275:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 560              		.loc 1 275 1 view .LVU189
 561 00de 09B0     		add	sp, sp, #36
 562              	.LCFI6:
 563              		.cfi_def_cfa_offset 36
 564              		@ sp needed
 565 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 275:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 566              		.loc 1 275 1 view .LVU190
 567              		.cfi_endproc
 568              	.LFE154:
 570              		.section	.text.map_set_px,"ax",%progbits
 571              		.align	1
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv4-sp-d16
 577              	map_set_px:
 578              	.LVL67:
 579              	.LFB157:
 579:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 580              		.loc 1 579 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 16, pretend = 0, frame = 24
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 579:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 584              		.loc 1 579 1 is_stmt 0 view .LVU192
 585 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 586              	.LCFI7:
 587              		.cfi_def_cfa_offset 36
 588              		.cfi_offset 4, -36
 589              		.cfi_offset 5, -32
 590              		.cfi_offset 6, -28
 591              		.cfi_offset 7, -24
 592              		.cfi_offset 8, -20
 593              		.cfi_offset 9, -16
 594              		.cfi_offset 10, -12
 595              		.cfi_offset 11, -8
 596              		.cfi_offset 14, -4
 597 0004 8BB0     		sub	sp, sp, #44
 598              	.LCFI8:
 599              		.cfi_def_cfa_offset 80
 600 0006 0446     		mov	r4, r0
 601 0008 0691     		str	r1, [sp, #24]
 602 000a 1546     		mov	r5, r2
 603 000c 1E46     		mov	r6, r3
 604 000e 9DF854A0 		ldrb	r10, [sp, #84]	@ zero_extendqisi2
 580:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 605              		.loc 1 580 5 is_stmt 1 view .LVU193
 580:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 606              		.loc 1 580 24 is_stmt 0 view .LVU194
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 42


 607 0012 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 608              	.LVL68:
 580:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 609              		.loc 1 580 24 view .LVU195
 610 0016 8146     		mov	r9, r0
 611              	.LVL69:
 583:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 612              		.loc 1 583 5 is_stmt 1 view .LVU196
 613              	.LBB121:
 614              	.LBI121:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 615              		.loc 3 133 26 view .LVU197
 616              	.LBB122:
 617              		.loc 3 135 5 view .LVU198
 618              		.loc 3 135 31 is_stmt 0 view .LVU199
 619 0018 B4F80480 		ldrh	r8, [r4, #4]
 620              		.loc 3 135 44 view .LVU200
 621 001c B4F90010 		ldrsh	r1, [r4]
 622 0020 8BB2     		uxth	r3, r1
 623              		.loc 3 135 36 view .LVU201
 624 0022 A8EB0308 		sub	r8, r8, r3
 625 0026 1FFA88F8 		uxth	r8, r8
 626              		.loc 3 135 49 view .LVU202
 627 002a 08F10108 		add	r8, r8, #1
 628              		.loc 3 135 12 view .LVU203
 629 002e 0FFA88F8 		sxth	r8, r8
 630              	.LVL70:
 631              		.loc 3 135 12 view .LVU204
 632              	.LBE122:
 633              	.LBE121:
 586:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 634              		.loc 1 586 5 is_stmt 1 view .LVU205
 635              	.LBB123:
 636              	.LBI123:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 637              		.loc 3 133 26 view .LVU206
 638              	.LBB124:
 639              		.loc 3 135 5 view .LVU207
 640              		.loc 3 135 31 is_stmt 0 view .LVU208
 641 0032 AB88     		ldrh	r3, [r5, #4]
 642              		.loc 3 135 44 view .LVU209
 643 0034 B5F90020 		ldrsh	r2, [r5]
 644 0038 90B2     		uxth	r0, r2
 645              	.LVL71:
 646              		.loc 3 135 36 view .LVU210
 647 003a 1B1A     		subs	r3, r3, r0
 648 003c 9BB2     		uxth	r3, r3
 649              		.loc 3 135 49 view .LVU211
 650 003e 0133     		adds	r3, r3, #1
 651              		.loc 3 135 12 view .LVU212
 652 0040 1BB2     		sxth	r3, r3
 653 0042 0993     		str	r3, [sp, #36]
 654              	.LVL72:
 655              		.loc 3 135 12 view .LVU213
 656              	.LBE124:
 657              	.LBE123:
 589:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 43


 658              		.loc 1 589 5 is_stmt 1 view .LVU214
 659              	.LBB125:
 660              	.LBI125:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 661              		.loc 3 133 26 view .LVU215
 662              	.LBB126:
 663              		.loc 3 135 5 view .LVU216
 664              		.loc 3 135 31 is_stmt 0 view .LVU217
 665 0044 B088     		ldrh	r0, [r6, #4]
 666              		.loc 3 135 44 view .LVU218
 667 0046 B6F90030 		ldrsh	r3, [r6]
 668 004a 9FB2     		uxth	r7, r3
 669              		.loc 3 135 36 view .LVU219
 670 004c C01B     		subs	r0, r0, r7
 671 004e 80B2     		uxth	r0, r0
 672              		.loc 3 135 49 view .LVU220
 673 0050 0130     		adds	r0, r0, #1
 674              		.loc 3 135 12 view .LVU221
 675 0052 07B2     		sxth	r7, r0
 676 0054 0897     		str	r7, [sp, #32]
 677              	.LVL73:
 678              		.loc 3 135 12 view .LVU222
 679              	.LBE126:
 680              	.LBE125:
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 681              		.loc 1 592 5 is_stmt 1 view .LVU223
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 682              		.loc 1 592 66 is_stmt 0 view .LVU224
 683 0056 B5F90200 		ldrsh	r0, [r5, #2]
 684 005a 0590     		str	r0, [sp, #20]
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 685              		.loc 1 592 82 view .LVU225
 686 005c B6F90260 		ldrsh	r6, [r6, #2]
 687              	.LVL74:
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 688              		.loc 1 592 98 view .LVU226
 689 0060 B4F90200 		ldrsh	r0, [r4, #2]
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 690              		.loc 1 592 87 view .LVU227
 691 0064 361A     		subs	r6, r6, r0
 592:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 692              		.loc 1 592 71 view .LVU228
 693 0066 0598     		ldr	r0, [sp, #20]
 694 0068 861B     		subs	r6, r0, r6
 695              	.LVL75:
 594:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 696              		.loc 1 594 5 is_stmt 1 view .LVU229
 594:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 697              		.loc 1 594 51 is_stmt 0 view .LVU230
 698 006a 5B1A     		subs	r3, r3, r1
 594:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_tmp -= draw_area->x1;
 699              		.loc 1 594 35 view .LVU231
 700 006c D31A     		subs	r3, r2, r3
 701              	.LVL76:
 595:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 702              		.loc 1 595 5 is_stmt 1 view .LVU232
 595:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 44


 703              		.loc 1 595 17 is_stmt 0 view .LVU233
 704 006e 07FB0636 		mla	r6, r7, r6, r3
 705              	.LVL77:
 595:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 706              		.loc 1 595 17 view .LVU234
 707 0072 B31A     		subs	r3, r6, r2
 708              	.LVL78:
 595:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t x;
 709              		.loc 1 595 17 view .LVU235
 710 0074 149E     		ldr	r6, [sp, #80]
 711 0076 06EB4306 		add	r6, r6, r3, lsl #1
 712              	.LVL79:
 596:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 713              		.loc 1 596 5 is_stmt 1 view .LVU236
 597:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 714              		.loc 1 597 5 view .LVU237
 599:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 715              		.loc 1 599 5 view .LVU238
 599:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 716              		.loc 1 599 7 is_stmt 0 view .LVU239
 717 007a 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
 718 007e 012B     		cmp	r3, #1
 719 0080 07D0     		beq	.L51
 720              	.LBB127:
 611:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 721              		.loc 1 611 9 is_stmt 1 view .LVU240
 611:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 722              		.loc 1 611 26 is_stmt 0 view .LVU241
 723 0082 169F     		ldr	r7, [sp, #88]
 724              	.LVL80:
 611:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 725              		.loc 1 611 26 view .LVU242
 726 0084 BF1A     		subs	r7, r7, r2
 727              	.LVL81:
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 728              		.loc 1 613 9 is_stmt 1 view .LVU243
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 729              		.loc 1 613 9 is_stmt 0 view .LVU244
 730 0086 B346     		mov	fp, r6
 731 0088 CDF81C80 		str	r8, [sp, #28]
 732 008c DDF81480 		ldr	r8, [sp, #20]
 733              	.LVL82:
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 734              		.loc 1 613 9 view .LVU245
 735 0090 47E0     		b	.L44
 736              	.LVL83:
 737              	.L51:
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 738              		.loc 1 613 9 view .LVU246
 739 0092 DDF818B0 		ldr	fp, [sp, #24]
 740              	.LBE127:
 741 0096 05E0     		b	.L38
 742              	.LVL84:
 743              	.L52:
 604:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 744              		.loc 1 604 13 is_stmt 1 discriminator 2 view .LVU247
 604:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 45


 745              		.loc 1 604 25 is_stmt 0 discriminator 2 view .LVU248
 746 0098 089B     		ldr	r3, [sp, #32]
 747 009a 06EB4306 		add	r6, r6, r3, lsl #1
 748              	.LVL85:
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 749              		.loc 1 600 52 is_stmt 1 discriminator 2 view .LVU249
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 750              		.loc 1 600 53 is_stmt 0 discriminator 2 view .LVU250
 751 009e 059B     		ldr	r3, [sp, #20]
 752 00a0 0133     		adds	r3, r3, #1
 753 00a2 0593     		str	r3, [sp, #20]
 754              	.LVL86:
 755              	.L38:
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 756              		.loc 1 600 32 is_stmt 1 discriminator 1 view .LVU251
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 757              		.loc 1 600 46 is_stmt 0 discriminator 1 view .LVU252
 758 00a4 B5F90630 		ldrsh	r3, [r5, #6]
 600:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 759              		.loc 1 600 9 discriminator 1 view .LVU253
 760 00a8 059A     		ldr	r2, [sp, #20]
 761 00aa 9342     		cmp	r3, r2
 762 00ac 40DB     		blt	.L37
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 763              		.loc 1 601 13 is_stmt 1 view .LVU254
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 764              		.loc 1 601 30 is_stmt 0 view .LVU255
 765 00ae B5F90040 		ldrsh	r4, [r5]
 766              	.LVL87:
 767              	.L40:
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 768              		.loc 1 601 36 is_stmt 1 discriminator 1 view .LVU256
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 769              		.loc 1 601 50 is_stmt 0 discriminator 1 view .LVU257
 770 00b2 B5F90430 		ldrsh	r3, [r5, #4]
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 771              		.loc 1 601 13 discriminator 1 view .LVU258
 772 00b6 A342     		cmp	r3, r4
 773 00b8 EEDB     		blt	.L52
 602:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 774              		.loc 1 602 17 is_stmt 1 discriminator 3 view .LVU259
 602:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 775              		.loc 1 602 21 is_stmt 0 discriminator 3 view .LVU260
 776 00ba D9F80000 		ldr	r0, [r9]
 602:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 777              		.loc 1 602 29 discriminator 3 view .LVU261
 778 00be 4769     		ldr	r7, [r0, #20]
 602:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 779              		.loc 1 602 17 discriminator 3 view .LVU262
 780 00c0 CDF808A0 		str	r10, [sp, #8]
 781 00c4 36F81430 		ldrh	r3, [r6, r4, lsl #1]
 782 00c8 ADF80430 		strh	r3, [sp, #4]	@ movhi
 783 00cc BDF91430 		ldrsh	r3, [sp, #20]
 784 00d0 0093     		str	r3, [sp]
 785 00d2 23B2     		sxth	r3, r4
 786 00d4 4246     		mov	r2, r8
 787 00d6 5946     		mov	r1, fp
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 46


 788 00d8 B847     		blx	r7
 789              	.LVL88:
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 790              		.loc 1 601 56 is_stmt 1 discriminator 3 view .LVU263
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 791              		.loc 1 601 57 is_stmt 0 discriminator 3 view .LVU264
 792 00da 0134     		adds	r4, r4, #1
 793              	.LVL89:
 601:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_tmp[x
 794              		.loc 1 601 57 discriminator 3 view .LVU265
 795 00dc E9E7     		b	.L40
 796              	.LVL90:
 797              	.L46:
 798              	.LBB128:
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 799              		.loc 1 614 56 is_stmt 1 discriminator 2 view .LVU266
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 800              		.loc 1 614 57 is_stmt 0 discriminator 2 view .LVU267
 801 00de 0134     		adds	r4, r4, #1
 802              	.LVL91:
 803              	.L45:
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 804              		.loc 1 614 36 is_stmt 1 discriminator 1 view .LVU268
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 805              		.loc 1 614 50 is_stmt 0 discriminator 1 view .LVU269
 806 00e0 B5F90430 		ldrsh	r3, [r5, #4]
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 807              		.loc 1 614 13 discriminator 1 view .LVU270
 808 00e4 A342     		cmp	r3, r4
 809 00e6 15DB     		blt	.L53
 615:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 810              		.loc 1 615 17 is_stmt 1 view .LVU271
 615:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 811              		.loc 1 615 28 is_stmt 0 view .LVU272
 812 00e8 3B5D     		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 615:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)disp_buf, disp_w, x, y, map_buf_t
 813              		.loc 1 615 19 view .LVU273
 814 00ea 002B     		cmp	r3, #0
 815 00ec F7D0     		beq	.L46
 616:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 816              		.loc 1 616 21 is_stmt 1 view .LVU274
 616:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 817              		.loc 1 616 25 is_stmt 0 view .LVU275
 818 00ee D9F80000 		ldr	r0, [r9]
 616:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 819              		.loc 1 616 33 view .LVU276
 820 00f2 4669     		ldr	r6, [r0, #20]
 617:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 821              		.loc 1 617 44 view .LVU277
 822 00f4 03FB0AF3 		mul	r3, r3, r10
 616:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                            (uint32_t)((uint32_t)opa * mask_tmp[x]) >> 8);
 823              		.loc 1 616 21 view .LVU278
 824 00f8 1B0A     		lsrs	r3, r3, #8
 825 00fa 0293     		str	r3, [sp, #8]
 826 00fc 3BF81430 		ldrh	r3, [fp, r4, lsl #1]
 827 0100 ADF80430 		strh	r3, [sp, #4]	@ movhi
 828 0104 0FFA88F3 		sxth	r3, r8
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 47


 829 0108 0093     		str	r3, [sp]
 830 010a 23B2     		sxth	r3, r4
 831 010c 079A     		ldr	r2, [sp, #28]
 832 010e 0699     		ldr	r1, [sp, #24]
 833 0110 B047     		blx	r6
 834              	.LVL92:
 835 0112 E4E7     		b	.L46
 836              	.L53:
 620:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 837              		.loc 1 620 13 is_stmt 1 discriminator 2 view .LVU279
 620:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 838              		.loc 1 620 22 is_stmt 0 discriminator 2 view .LVU280
 839 0114 099B     		ldr	r3, [sp, #36]
 840 0116 1F44     		add	r7, r7, r3
 841              	.LVL93:
 621:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 842              		.loc 1 621 13 is_stmt 1 discriminator 2 view .LVU281
 621:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 843              		.loc 1 621 25 is_stmt 0 discriminator 2 view .LVU282
 844 0118 089B     		ldr	r3, [sp, #32]
 845 011a 0BEB430B 		add	fp, fp, r3, lsl #1
 846              	.LVL94:
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 847              		.loc 1 613 52 is_stmt 1 discriminator 2 view .LVU283
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 848              		.loc 1 613 53 is_stmt 0 discriminator 2 view .LVU284
 849 011e 08F10108 		add	r8, r8, #1
 850              	.LVL95:
 851              	.L44:
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 852              		.loc 1 613 32 is_stmt 1 discriminator 1 view .LVU285
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 853              		.loc 1 613 46 is_stmt 0 discriminator 1 view .LVU286
 854 0122 B5F90630 		ldrsh	r3, [r5, #6]
 613:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 855              		.loc 1 613 9 discriminator 1 view .LVU287
 856 0126 4345     		cmp	r3, r8
 857 0128 02DB     		blt	.L37
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 858              		.loc 1 614 13 is_stmt 1 view .LVU288
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 859              		.loc 1 614 30 is_stmt 0 view .LVU289
 860 012a B5F90040 		ldrsh	r4, [r5]
 861              	.LVL96:
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 862              		.loc 1 614 13 view .LVU290
 863 012e D7E7     		b	.L45
 864              	.LVL97:
 865              	.L37:
 614:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x]) {
 866              		.loc 1 614 13 view .LVU291
 867              	.LBE128:
 624:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 868              		.loc 1 624 1 view .LVU292
 869 0130 0BB0     		add	sp, sp, #44
 870              	.LCFI9:
 871              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 48


 872              		@ sp needed
 873 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 624:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 874              		.loc 1 624 1 view .LVU293
 875              		.cfi_endproc
 876              	.LFE157:
 878              		.section	.text.fill_normal,"ax",%progbits
 879              		.align	1
 880              		.syntax unified
 881              		.thumb
 882              		.thumb_func
 883              		.fpu fpv4-sp-d16
 885              	fill_normal:
 886              	.LVL98:
 887              	.LFB155:
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 888              		.loc 1 294 1 is_stmt 1 view -0
 889              		.cfi_startproc
 890              		@ args = 12, pretend = 0, frame = 16
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 892              		.loc 1 294 1 is_stmt 0 view .LVU295
 893 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 894              	.LCFI10:
 895              		.cfi_def_cfa_offset 36
 896              		.cfi_offset 4, -36
 897              		.cfi_offset 5, -32
 898              		.cfi_offset 6, -28
 899              		.cfi_offset 7, -24
 900              		.cfi_offset 8, -20
 901              		.cfi_offset 9, -16
 902              		.cfi_offset 10, -12
 903              		.cfi_offset 11, -8
 904              		.cfi_offset 14, -4
 905 0004 87B0     		sub	sp, sp, #28
 906              	.LCFI11:
 907              		.cfi_def_cfa_offset 64
 908 0006 0446     		mov	r4, r0
 909 0008 8846     		mov	r8, r1
 910 000a 9146     		mov	r9, r2
 911 000c 0592     		str	r2, [sp, #20]
 912 000e 1D46     		mov	r5, r3	@ movhi
 913              	.LVL99:
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 914              		.loc 1 294 1 view .LVU296
 915 0010 9DF840B0 		ldrb	fp, [sp, #64]	@ zero_extendqisi2
 916 0014 119E     		ldr	r6, [sp, #68]
 296:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 917              		.loc 1 296 5 is_stmt 1 view .LVU297
 296:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 918              		.loc 1 296 24 is_stmt 0 view .LVU298
 919 0016 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 920              	.LVL100:
 296:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 921              		.loc 1 296 24 view .LVU299
 922 001a 8246     		mov	r10, r0
 923              	.LVL101:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 49


 299:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 924              		.loc 1 299 5 is_stmt 1 view .LVU300
 925              	.LBB129:
 926              	.LBI129:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 927              		.loc 3 133 26 view .LVU301
 928              	.LBB130:
 929              		.loc 3 135 5 view .LVU302
 930              		.loc 3 135 31 is_stmt 0 view .LVU303
 931 001c A388     		ldrh	r3, [r4, #4]
 932              		.loc 3 135 44 view .LVU304
 933 001e 2288     		ldrh	r2, [r4]
 934              		.loc 3 135 36 view .LVU305
 935 0020 9B1A     		subs	r3, r3, r2
 936 0022 9BB2     		uxth	r3, r3
 937              		.loc 3 135 49 view .LVU306
 938 0024 0133     		adds	r3, r3, #1
 939              		.loc 3 135 12 view .LVU307
 940 0026 1BB2     		sxth	r3, r3
 941 0028 0393     		str	r3, [sp, #12]
 942              	.LVL102:
 943              		.loc 3 135 12 view .LVU308
 944              	.LBE130:
 945              	.LBE129:
 299:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 946              		.loc 1 299 13 view .LVU309
 947 002a 9E46     		mov	lr, r3
 948 002c 9C46     		mov	ip, r3
 949              	.LVL103:
 301:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 950              		.loc 1 301 5 is_stmt 1 view .LVU310
 951              	.LBB131:
 952              	.LBI131:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 953              		.loc 3 133 26 view .LVU311
 954              	.LBB132:
 955              		.loc 3 135 5 view .LVU312
 956              		.loc 3 135 31 is_stmt 0 view .LVU313
 957 002e B9F80430 		ldrh	r3, [r9, #4]
 958              	.LVL104:
 959              		.loc 3 135 44 view .LVU314
 960 0032 B9F90000 		ldrsh	r0, [r9]
 961              	.LVL105:
 962              		.loc 3 135 44 view .LVU315
 963 0036 82B2     		uxth	r2, r0
 964              		.loc 3 135 36 view .LVU316
 965 0038 9B1A     		subs	r3, r3, r2
 966 003a 9BB2     		uxth	r3, r3
 967              		.loc 3 135 49 view .LVU317
 968 003c 0133     		adds	r3, r3, #1
 969              		.loc 3 135 12 view .LVU318
 970 003e 1AB2     		sxth	r2, r3
 971 0040 0492     		str	r2, [sp, #16]
 972              	.LVL106:
 973              		.loc 3 135 12 view .LVU319
 974              	.LBE132:
 975              	.LBE131:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 50


 302:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 976              		.loc 1 302 5 is_stmt 1 view .LVU320
 977              	.LBB133:
 978              	.LBI133:
 136:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 137:lvgl/lvgl/src/draw/../misc/lv_area.h **** 
 138:lvgl/lvgl/src/draw/../misc/lv_area.h **** /**
 139:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 140:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 141:lvgl/lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 142:lvgl/lvgl/src/draw/../misc/lv_area.h ****  */
 143:lvgl/lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 979              		.loc 3 143 26 view .LVU321
 980              	.LBB134:
 144:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 145:lvgl/lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 981              		.loc 3 145 5 view .LVU322
 982              		.loc 3 145 31 is_stmt 0 view .LVU323
 983 0042 B9F80630 		ldrh	r3, [r9, #6]
 984              		.loc 3 145 44 view .LVU324
 985 0046 B9F90210 		ldrsh	r1, [r9, #2]
 986 004a 8CB2     		uxth	r4, r1
 987              	.LVL107:
 988              		.loc 3 145 36 view .LVU325
 989 004c 1B1B     		subs	r3, r3, r4
 990 004e 9BB2     		uxth	r3, r3
 991              		.loc 3 145 49 view .LVU326
 992 0050 0133     		adds	r3, r3, #1
 993              		.loc 3 145 12 view .LVU327
 994 0052 1CB2     		sxth	r4, r3
 995 0054 0294     		str	r4, [sp, #8]
 996              	.LVL108:
 997              		.loc 3 145 12 view .LVU328
 998              	.LBE134:
 999              	.LBE133:
 305:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1000              		.loc 1 305 5 is_stmt 1 view .LVU329
 305:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1001              		.loc 1 305 64 is_stmt 0 view .LVU330
 1002 0056 8946     		mov	r9, r1
 1003              	.LVL109:
 305:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1004              		.loc 1 305 69 view .LVU331
 1005 0058 0EFB0103 		mla	r3, lr, r1, r0
 305:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1006              		.loc 1 305 18 view .LVU332
 1007 005c 08EB4304 		add	r4, r8, r3, lsl #1
 1008              	.LVL110:
 307:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 1009              		.loc 1 307 5 is_stmt 1 view .LVU333
 308:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1010              		.loc 1 308 5 view .LVU334
 311:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1011              		.loc 1 311 5 view .LVU335
 311:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 1012              		.loc 1 311 7 is_stmt 0 view .LVU336
 1013 0060 9DF84810 		ldrb	r1, [sp, #72]	@ zero_extendqisi2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 51


 1014 0064 0129     		cmp	r1, #1
 1015 0066 11D0     		beq	.L107
 1016              	.LBB135:
 388:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1017              		.loc 1 388 9 is_stmt 1 view .LVU337
 388:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1018              		.loc 1 388 17 is_stmt 0 view .LVU338
 1019 0068 0499     		ldr	r1, [sp, #16]
 1020 006a 0439     		subs	r1, r1, #4
 1021              	.LVL111:
 391:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 1022              		.loc 1 391 9 is_stmt 1 view .LVU339
 391:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 1023              		.loc 1 391 59 is_stmt 0 view .LVU340
 1024 006c 2804     		lsls	r0, r5, #16
 391:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 1025              		.loc 1 391 18 view .LVU341
 1026 006e 10FA85F0 		uxtah	r0, r0, r5
 1027              	.LVL112:
 395:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 1028              		.loc 1 395 9 is_stmt 1 view .LVU342
 395:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(y = 0; y < draw_area_h; y++) {
 1029              		.loc 1 395 11 is_stmt 0 view .LVU343
 1030 0072 BBF1FD0F 		cmp	fp, #253
 1031 0076 00F27B81 		bhi	.L101
 1032              	.LBB136:
 444:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color;
 1033              		.loc 1 444 13 is_stmt 1 view .LVU344
 445:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 1034              		.loc 1 445 13 view .LVU345
 446:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_dest_color.full = disp_buf_first[0].full;
 1035              		.loc 1 446 13 view .LVU346
 1036              	.LVL113:
 447:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_res_color.full = disp_buf_first[0].full;
 1037              		.loc 1 447 13 view .LVU347
 447:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_res_color.full = disp_buf_first[0].full;
 1038              		.loc 1 447 53 is_stmt 0 view .LVU348
 1039 007a 38F81330 		ldrh	r3, [r8, r3, lsl #1]
 447:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_res_color.full = disp_buf_first[0].full;
 1040              		.loc 1 447 34 view .LVU349
 1041 007e 9A46     		mov	r10, r3	@ movhi
 1042              	.LVL114:
 448:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 1043              		.loc 1 448 13 is_stmt 1 view .LVU350
 449:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1044              		.loc 1 449 13 view .LVU351
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1045              		.loc 1 451 13 view .LVU352
 449:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1046              		.loc 1 449 22 is_stmt 0 view .LVU353
 1047 0080 4FF0000C 		mov	ip, #0
 1048              	.LVL115:
 446:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_dest_color.full = disp_buf_first[0].full;
 1049              		.loc 1 446 22 view .LVU354
 1050 0084 E646     		mov	lr, ip
 1051              	.LVL116:
 446:lvgl/lvgl/src/draw/lv_draw_blend.c ****             last_dest_color.full = disp_buf_first[0].full;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 52


 1052              		.loc 1 446 22 view .LVU355
 1053 0086 CDF808B0 		str	fp, [sp, #8]
 1054              	.LVL117:
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1055              		.loc 1 451 13 view .LVU356
 1056 008a C1E1     		b	.L91
 1057              	.LVL118:
 1058              	.L107:
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 1059              		.loc 1 451 13 view .LVU357
 1060              	.LBE136:
 1061              	.LBE135:
 312:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1062              		.loc 1 312 9 is_stmt 1 view .LVU358
 312:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 1063              		.loc 1 312 11 is_stmt 0 view .LVU359
 1064 008c BBF1FD0F 		cmp	fp, #253
 1065 0090 26D9     		bls	.L56
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1066              		.loc 1 331 13 is_stmt 1 view .LVU360
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1067              		.loc 1 331 20 is_stmt 0 view .LVU361
 1068 0092 DAF80030 		ldr	r3, [r10]
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1069              		.loc 1 331 28 view .LVU362
 1070 0096 DB6A     		ldr	r3, [r3, #44]
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1071              		.loc 1 331 15 view .LVU363
 1072 0098 23B1     		cbz	r3, .L57
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1073              		.loc 1 331 45 discriminator 1 view .LVU364
 1074 009a 0598     		ldr	r0, [sp, #20]
 1075 009c FFF7FEFF 		bl	lv_area_get_size
 1076              	.LVL119:
 331:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp->driver->gpu_fill_cb(disp->driver, disp_buf, disp_w, draw_area, color);
 1077              		.loc 1 331 42 discriminator 1 view .LVU365
 1078 00a0 F028     		cmp	r0, #240
 1079 00a2 06D8     		bhi	.L108
 1080              	.L57:
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1081              		.loc 1 294 1 discriminator 1 view .LVU366
 1082 00a4 0026     		movs	r6, #0
 1083 00a6 029F     		ldr	r7, [sp, #8]
 1084 00a8 DDF81080 		ldr	r8, [sp, #16]
 1085              	.LVL120:
 294:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1086              		.loc 1 294 1 discriminator 1 view .LVU367
 1087 00ac DDF80C90 		ldr	r9, [sp, #12]
 1088 00b0 11E0     		b	.L59
 1089              	.LVL121:
 1090              	.L108:
 332:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 1091              		.loc 1 332 17 is_stmt 1 view .LVU368
 332:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 1092              		.loc 1 332 21 is_stmt 0 view .LVU369
 1093 00b2 DAF80000 		ldr	r0, [r10]
 332:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 53


 1094              		.loc 1 332 29 view .LVU370
 1095 00b6 C46A     		ldr	r4, [r0, #44]
 1096              	.LVL122:
 332:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 return;
 1097              		.loc 1 332 17 view .LVU371
 1098 00b8 ADF80050 		strh	r5, [sp]	@ movhi
 1099 00bc 059B     		ldr	r3, [sp, #20]
 1100 00be 039A     		ldr	r2, [sp, #12]
 1101 00c0 4146     		mov	r1, r8
 1102 00c2 A047     		blx	r4
 1103              	.LVL123:
 333:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1104              		.loc 1 333 17 is_stmt 1 view .LVU372
 1105 00c4 09E0     		b	.L54
 1106              	.LVL124:
 1107              	.L60:
 338:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 1108              		.loc 1 338 17 discriminator 3 view .LVU373
 1109 00c6 4246     		mov	r2, r8
 1110 00c8 2946     		mov	r1, r5	@ movhi
 1111 00ca 2046     		mov	r0, r4
 1112 00cc FFF7FEFF 		bl	lv_color_fill
 1113              	.LVL125:
 339:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1114              		.loc 1 339 17 discriminator 3 view .LVU374
 339:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1115              		.loc 1 339 32 is_stmt 0 discriminator 3 view .LVU375
 1116 00d0 04EB4904 		add	r4, r4, r9, lsl #1
 1117              	.LVL126:
 337:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1118              		.loc 1 337 41 is_stmt 1 discriminator 3 view .LVU376
 337:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1119              		.loc 1 337 42 is_stmt 0 discriminator 3 view .LVU377
 1120 00d4 0136     		adds	r6, r6, #1
 1121              	.LVL127:
 1122              	.L59:
 337:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1123              		.loc 1 337 24 is_stmt 1 discriminator 1 view .LVU378
 337:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_color_fill(disp_buf_first, color, draw_area_w);
 1124              		.loc 1 337 13 is_stmt 0 discriminator 1 view .LVU379
 1125 00d6 BE42     		cmp	r6, r7
 1126 00d8 F5DB     		blt	.L60
 1127              	.LVL128:
 1128              	.L54:
 481:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1129              		.loc 1 481 1 view .LVU380
 1130 00da 07B0     		add	sp, sp, #28
 1131              	.LCFI12:
 1132              		.cfi_remember_state
 1133              		.cfi_def_cfa_offset 36
 1134              		@ sp needed
 1135 00dc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1136              	.LVL129:
 1137              	.L56:
 1138              	.LCFI13:
 1139              		.cfi_restore_state
 1140              	.LBB158:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 54


 357:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1141              		.loc 1 357 13 is_stmt 1 view .LVU381
 1142              	.LBB159:
 1143              	.LBI159:
 485:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 486:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 487:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 489:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 494:lvgl/lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 495:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 500:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 501:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 502:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 503:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 504:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 510:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 512:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 514:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 515:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 527:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 529:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 530:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 535:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 536:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret;
 537:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 55


 538:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 539:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 540:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 542:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 543:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 544:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 546:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 547:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 548:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 552:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 555:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 556:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 557:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 558:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 560:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 561:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 562:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 563:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 567:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 569:lvgl/lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 577:lvgl/lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:lvgl/lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:lvgl/lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 580:lvgl/lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 581:lvgl/lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 582:lvgl/lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 583:lvgl/lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 584:lvgl/lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:lvgl/lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:lvgl/lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 587:lvgl/lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 588:lvgl/lvgl/src/draw/../misc/lv_color.h ****                     ;
 589:lvgl/lvgl/src/draw/../misc/lv_color.h ****             }
 590:lvgl/lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:lvgl/lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 593:lvgl/lvgl/src/draw/../misc/lv_color.h ****         }
 594:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 56


 595:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 596:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 597:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 598:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 599:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 600:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 601:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 603:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 604:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 605:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 606:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 607:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 610:lvgl/lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 611:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 613:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 614:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 617:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 619:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 620:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 622:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 624:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 625:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 626:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 627:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 628:lvgl/lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 629:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 630:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 631:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 632:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 633:lvgl/lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 634:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 635:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 636:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 637:lvgl/lvgl/src/draw/../misc/lv_color.h **** //!
 638:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 639:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 640:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 641:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 642:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 644:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 645:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 646:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 647:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 648:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 649:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 650:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 651:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 57


 652:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 653:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 654:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 655:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 656:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 657:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 658:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 659:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 660:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 661:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 662:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 664:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 665:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 666:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 667:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 668:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 669:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 670:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 671:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 672:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 673:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 674:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 675:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 676:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 677:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 678:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 679:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 680:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 681:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 682:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 683:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 684:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 685:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 686:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 687:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 688:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
 1144              		.loc 2 688 26 view .LVU382
 1145              	.LBE159:
 1146              	.LBE158:
 1147              		.loc 2 688 49 view .LVU383
 1148              	.LBB169:
 1149              	.LBB162:
 1150              	.LBB160:
 1151              	.LBI160:
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1152              		.loc 2 615 26 view .LVU384
 1153              	.LBB161:
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1154              		.loc 2 617 5 view .LVU385
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1155              		.loc 2 617 5 is_stmt 0 view .LVU386
 1156 00e0 4FF00006 		mov	r6, #0	@ movhi
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1157              		.loc 2 617 5 view .LVU387
 1158              	.LBE161:
 1159              	.LBE160:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 58


 1160              	.LBE162:
 358:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1161              		.loc 1 358 13 is_stmt 1 view .LVU388
 1162              	.LVL130:
 1163              	.LBB163:
 1164              	.LBI163:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1165              		.loc 2 459 48 view .LVU389
 1166              	.LBB164:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1167              		.loc 2 461 5 view .LVU390
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1168              		.loc 2 465 5 view .LVU391
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1169              		.loc 2 465 17 is_stmt 0 view .LVU392
 1170 00e4 0BF10400 		add	r0, fp, #4
 1171              	.LVL131:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1172              		.loc 2 466 5 is_stmt 1 view .LVU393
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1173              		.loc 2 466 14 is_stmt 0 view .LVU394
 1174 00e8 CE49     		ldr	r1, .L121
 1175              	.LVL132:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1176              		.loc 2 467 5 is_stmt 1 view .LVU395
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1177              		.loc 2 467 42 is_stmt 0 view .LVU396
 1178 00ea ABB2     		uxth	r3, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1179              		.loc 2 467 19 view .LVU397
 1180 00ec 43EA0543 		orr	r3, r3, r5, lsl #16
 1181              	.LVL133:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1182              		.loc 2 468 5 is_stmt 1 view .LVU398
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1183              		.loc 2 468 30 is_stmt 0 view .LVU399
 1184 00f0 0B40     		ands	r3, r3, r1
 1185              	.LVL134:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1186              		.loc 2 468 36 view .LVU400
 1187 00f2 C008     		lsrs	r0, r0, #3
 1188              	.LVL135:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1189              		.loc 2 468 36 view .LVU401
 1190 00f4 03FB00F3 		mul	r3, r3, r0
 1191              	.LVL136:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1192              		.loc 2 468 14 view .LVU402
 1193 00f8 01EA5318 		and	r8, r1, r3, lsr #5
 1194              	.LVL137:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1195              		.loc 2 469 5 is_stmt 1 view .LVU403
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1196              		.loc 2 484 5 view .LVU404
 1197 00fc 48EA1848 		orr	r8, r8, r8, lsr #16
 1198              	.LVL138:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 59


 1199              		.loc 2 484 5 is_stmt 0 view .LVU405
 1200              	.LBE164:
 1201              	.LBE163:
 360:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_color_premult(color, opa, color_premult);
 1202              		.loc 1 360 13 is_stmt 1 view .LVU406
 361:lvgl/lvgl/src/draw/lv_draw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 1203              		.loc 1 361 13 view .LVU407
 1204              	.LBB165:
 1205              	.LBI165:
 487:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1206              		.loc 2 487 42 view .LVU408
 1207              	.LBB166:
 490:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 1208              		.loc 2 490 5 view .LVU409
 490:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 1209              		.loc 2 490 25 is_stmt 0 view .LVU410
 1210 0100 C5F3C42A 		ubfx	r10, r5, #11, #5
 1211              	.LVL139:
 490:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 1212              		.loc 2 490 43 view .LVU411
 1213 0104 0AFB0BFA 		mul	r10, r10, fp
 491:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 1214              		.loc 2 491 5 is_stmt 1 view .LVU412
 491:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 1215              		.loc 2 491 25 is_stmt 0 view .LVU413
 1216 0108 C5F34519 		ubfx	r9, r5, #5, #6
 491:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 1217              		.loc 2 491 43 view .LVU414
 1218 010c 0BFB09F9 		mul	r9, fp, r9
 492:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 1219              		.loc 2 492 5 is_stmt 1 view .LVU415
 492:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 1220              		.loc 2 492 25 is_stmt 0 view .LVU416
 1221 0110 05F01F03 		and	r3, r5, #31
 492:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 1222              		.loc 2 492 43 view .LVU417
 1223 0114 0BFB03F3 		mul	r3, fp, r3
 1224              	.LVL140:
 492:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 1225              		.loc 2 492 43 view .LVU418
 1226              	.LBE166:
 1227              	.LBE165:
 362:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1228              		.loc 1 362 13 is_stmt 1 view .LVU419
 362:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1229              		.loc 1 362 22 is_stmt 0 view .LVU420
 1230 0118 6FEA0B05 		mvn	r5, fp
 1231              	.LVL141:
 362:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1232              		.loc 1 362 22 view .LVU421
 1233 011c EDB2     		uxtb	r5, r5
 1234              	.LVL142:
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1235              		.loc 1 364 13 is_stmt 1 view .LVU422
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1236              		.loc 1 364 19 is_stmt 0 view .LVU423
 1237 011e 4FF0000B 		mov	fp, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 60


 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1238              		.loc 1 364 13 view .LVU424
 1239 0122 2CE0     		b	.L61
 1240              	.LVL143:
 1241              	.L110:
 367:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1242              		.loc 1 367 25 is_stmt 1 view .LVU425
 367:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 1243              		.loc 1 367 41 is_stmt 0 view .LVU426
 1244 0124 34F81160 		ldrh	r6, [r4, r1, lsl #1]
 1245              	.LVL144:
 377:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1246              		.loc 1 377 29 is_stmt 1 view .LVU427
 1247              	.LBB167:
 1248              	.LBI167:
 512:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1249              		.loc 2 512 48 view .LVU428
 1250              	.LBB168:
 514:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 1251              		.loc 2 514 5 view .LVU429
 517:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 1252              		.loc 2 517 5 view .LVU430
 517:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 1253              		.loc 2 517 5 is_stmt 0 view .LVU431
 1254 0128 C6F3C420 		ubfx	r0, r6, #11, #5
 1255 012c 05FB00A0 		mla	r0, r5, r0, r10
 1256 0130 C0F30420 		ubfx	r0, r0, #8, #5
 1257 0134 60F3CF27 		bfi	r7, r0, #11, #5
 518:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 1258              		.loc 2 518 5 is_stmt 1 view .LVU432
 1259 0138 C6F34510 		ubfx	r0, r6, #5, #6
 1260 013c 00FB0590 		mla	r0, r0, r5, r9
 1261 0140 C0F30520 		ubfx	r0, r0, #8, #6
 1262 0144 60F34A17 		bfi	r7, r0, #5, #6
 519:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1263              		.loc 2 519 5 view .LVU433
 1264 0148 06F01F00 		and	r0, r6, #31
 1265 014c 00FB0530 		mla	r0, r0, r5, r3
 1266 0150 C0F30420 		ubfx	r0, r0, #8, #5
 1267 0154 60F30407 		bfi	r7, r0, #0, #5
 536:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1268              		.loc 2 536 5 view .LVU434
 1269 0158 B846     		mov	r8, r7	@ movhi
 1270              	.LVL145:
 1271              	.L62:
 536:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1272              		.loc 2 536 5 is_stmt 0 view .LVU435
 1273              	.LBE168:
 1274              	.LBE167:
 380:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1275              		.loc 1 380 21 is_stmt 1 discriminator 2 view .LVU436
 380:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1276              		.loc 1 380 39 is_stmt 0 discriminator 2 view .LVU437
 1277 015a ACF80080 		strh	r8, [ip]	@ movhi
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1278              		.loc 1 365 45 is_stmt 1 discriminator 2 view .LVU438
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 61


 1279              		.loc 1 365 46 is_stmt 0 discriminator 2 view .LVU439
 1280 015e 0131     		adds	r1, r1, #1
 1281              	.LVL146:
 1282              	.L64:
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1283              		.loc 1 365 28 is_stmt 1 discriminator 1 view .LVU440
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1284              		.loc 1 365 17 is_stmt 0 discriminator 1 view .LVU441
 1285 0160 9142     		cmp	r1, r2
 1286 0162 07DA     		bge	.L109
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1287              		.loc 1 366 21 is_stmt 1 view .LVU442
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1288              		.loc 1 366 39 is_stmt 0 view .LVU443
 1289 0164 B0B2     		uxth	r0, r6
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1290              		.loc 1 366 62 view .LVU444
 1291 0166 04EB410C 		add	ip, r4, r1, lsl #1
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1292              		.loc 1 366 65 view .LVU445
 1293 016a 34F811E0 		ldrh	lr, [r4, r1, lsl #1]
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1294              		.loc 1 366 23 view .LVU446
 1295 016e 7045     		cmp	r0, lr
 1296 0170 D8D1     		bne	.L110
 366:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         last_dest_color = disp_buf_first[x];
 1297              		.loc 1 366 23 view .LVU447
 1298 0172 F2E7     		b	.L62
 1299              	.L109:
 382:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1300              		.loc 1 382 17 is_stmt 1 discriminator 2 view .LVU448
 382:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1301              		.loc 1 382 32 is_stmt 0 discriminator 2 view .LVU449
 1302 0174 0399     		ldr	r1, [sp, #12]
 1303              	.LVL147:
 382:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1304              		.loc 1 382 32 discriminator 2 view .LVU450
 1305 0176 04EB4104 		add	r4, r4, r1, lsl #1
 1306              	.LVL148:
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1307              		.loc 1 364 41 is_stmt 1 discriminator 2 view .LVU451
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1308              		.loc 1 364 42 is_stmt 0 discriminator 2 view .LVU452
 1309 017a 0BF1010B 		add	fp, fp, #1
 1310              	.LVL149:
 1311              	.L61:
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1312              		.loc 1 364 24 is_stmt 1 discriminator 1 view .LVU453
 364:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 1313              		.loc 1 364 13 is_stmt 0 discriminator 1 view .LVU454
 1314 017e 0299     		ldr	r1, [sp, #8]
 1315 0180 8B45     		cmp	fp, r1
 1316 0182 AADA     		bge	.L54
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1317              		.loc 1 365 23 view .LVU455
 1318 0184 0021     		movs	r1, #0
 1319 0186 EBE7     		b	.L64
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 62


 1320              	.LVL150:
 1321              	.L67:
 365:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(last_dest_color.full != disp_buf_first[x].full) {
 1322              		.loc 1 365 23 view .LVU456
 1323              	.LBE169:
 1324              	.LBB170:
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1325              		.loc 1 398 21 is_stmt 1 discriminator 2 view .LVU457
 1326              	.LBB141:
 1327              	.LBI141:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1328              		.loc 2 459 48 discriminator 2 view .LVU458
 1329              	.LBB142:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1330              		.loc 2 461 5 discriminator 2 view .LVU459
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1331              		.loc 2 465 5 discriminator 2 view .LVU460
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1332              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU461
 1333 0188 0433     		adds	r3, r3, #4
 1334              	.LVL151:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1335              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU462
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1336              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU463
 1337 018a 2788     		ldrh	r7, [r4]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1338              		.loc 2 466 19 discriminator 2 view .LVU464
 1339 018c 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1340              		.loc 2 466 14 discriminator 2 view .LVU465
 1341 0190 DFF890B2 		ldr	fp, .L121
 1342 0194 07EA0B07 		and	r7, r7, fp
 1343              	.LVL152:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1344              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU466
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1345              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU467
 1346 0198 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1347              		.loc 2 467 19 discriminator 2 view .LVU468
 1348 019c 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1349              		.loc 2 467 14 discriminator 2 view .LVU469
 1350 01a0 0AEA0B0A 		and	r10, r10, fp
 1351              	.LVL153:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1352              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU470
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1353              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU471
 1354 01a4 AAEB070A 		sub	r10, r10, r7
 1355              	.LVL154:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1356              		.loc 2 468 36 discriminator 2 view .LVU472
 1357 01a8 DB08     		lsrs	r3, r3, #3
 1358              	.LVL155:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 63


 1359              		.loc 2 468 36 discriminator 2 view .LVU473
 1360 01aa 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1361              		.loc 2 468 49 discriminator 2 view .LVU474
 1362 01ae 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1363              		.loc 2 468 14 discriminator 2 view .LVU475
 1364 01b2 03EA0B03 		and	r3, r3, fp
 1365              	.LVL156:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1366              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU476
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1367              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU477
 1368 01b6 43EA1343 		orr	r3, r3, r3, lsr #16
 1369              	.LVL157:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1370              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU478
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1371              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU479
 1372              	.LBE142:
 1373              	.LBE141:
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1374              		.loc 1 398 21 discriminator 2 view .LVU480
 1375 01ba 2380     		strh	r3, [r4]	@ movhi
 1376              	.L68:
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1377              		.loc 1 398 21 is_stmt 1 discriminator 4 view .LVU481
 1378 01bc 0136     		adds	r6, r6, #1
 1379              	.LVL158:
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1380              		.loc 1 398 21 discriminator 4 view .LVU482
 1381 01be 0234     		adds	r4, r4, #2
 1382              	.LVL159:
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1383              		.loc 1 397 77 discriminator 4 view .LVU483
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1384              		.loc 1 397 78 is_stmt 0 discriminator 4 view .LVU484
 1385 01c0 0EF1010E 		add	lr, lr, #1
 1386              	.LVL160:
 1387              	.L90:
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1388              		.loc 1 397 28 is_stmt 1 discriminator 2 view .LVU485
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1389              		.loc 1 397 17 is_stmt 0 discriminator 2 view .LVU486
 1390 01c4 9645     		cmp	lr, r2
 1391 01c6 13DA     		bge	.L84
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1392              		.loc 1 397 44 discriminator 3 view .LVU487
 1393 01c8 16F0030F 		tst	r6, #3
 1394 01cc 10D0     		beq	.L84
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1395              		.loc 1 398 21 is_stmt 1 view .LVU488
 1396 01ce 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1397 01d0 FF2B     		cmp	r3, #255
 1398 01d2 D9D1     		bne	.L67
 398:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1399              		.loc 1 398 21 discriminator 1 view .LVU489
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 64


 1400 01d4 2580     		strh	r5, [r4]	@ movhi
 1401 01d6 F1E7     		b	.L68
 1402              	.LVL161:
 1403              	.L111:
 1404              	.LBB143:
 405:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 0) = color;
 1405              		.loc 1 405 25 view .LVU490
 405:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 0) = color;
 1406              		.loc 1 405 27 is_stmt 0 view .LVU491
 1407 01d8 14F0030F 		tst	r4, #3
 1408 01dc 00F08980 		beq	.L72
 1409              	.LBB144:
 406:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             uint32_t * d = (uint32_t * )(disp_buf_first + 1);
 1410              		.loc 1 406 29 is_stmt 1 view .LVU492
 406:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             uint32_t * d = (uint32_t * )(disp_buf_first + 1);
 1411              		.loc 1 406 51 is_stmt 0 view .LVU493
 1412 01e0 2580     		strh	r5, [r4]	@ movhi
 407:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *d = c32;
 1413              		.loc 1 407 29 is_stmt 1 view .LVU494
 1414              	.LVL162:
 408:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 3) = color;
 1415              		.loc 1 408 29 view .LVU495
 408:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(disp_buf_first + 3) = color;
 1416              		.loc 1 408 32 is_stmt 0 view .LVU496
 1417 01e2 C4F80200 		str	r0, [r4, #2]
 409:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         } else {
 1418              		.loc 1 409 29 is_stmt 1 view .LVU497
 409:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         } else {
 1419              		.loc 1 409 51 is_stmt 0 view .LVU498
 1420 01e6 E580     		strh	r5, [r4, #6]	@ movhi
 1421              	.LVL163:
 1422              	.L73:
 409:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         } else {
 1423              		.loc 1 409 51 view .LVU499
 1424              	.LBE144:
 421:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         mask += 4;
 1425              		.loc 1 421 25 is_stmt 1 view .LVU500
 421:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         mask += 4;
 1426              		.loc 1 421 39 is_stmt 0 view .LVU501
 1427 01e8 0834     		adds	r4, r4, #8
 1428              	.LVL164:
 422:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1429              		.loc 1 422 25 is_stmt 1 view .LVU502
 422:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1430              		.loc 1 422 30 is_stmt 0 view .LVU503
 1431 01ea 0436     		adds	r6, r6, #4
 1432              	.LVL165:
 1433              	.L74:
 422:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1434              		.loc 1 422 30 view .LVU504
 1435              	.LBE143:
 401:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1436              		.loc 1 401 36 is_stmt 1 view .LVU505
 401:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1437              		.loc 1 401 38 is_stmt 0 view .LVU506
 1438 01ec 0EF1040E 		add	lr, lr, #4
 1439              	.LVL166:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 65


 1440              	.L84:
 401:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1441              		.loc 1 401 23 is_stmt 1 discriminator 1 view .LVU507
 401:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1442              		.loc 1 401 17 is_stmt 0 discriminator 1 view .LVU508
 1443 01f0 8E45     		cmp	lr, r1
 1444 01f2 00F3AA80 		bgt	.L86
 1445              	.LBB154:
 402:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1446              		.loc 1 402 21 is_stmt 1 view .LVU509
 402:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1447              		.loc 1 402 30 is_stmt 0 view .LVU510
 1448 01f6 3368     		ldr	r3, [r6]
 1449              	.LVL167:
 403:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 16
 1450              		.loc 1 403 21 is_stmt 1 view .LVU511
 403:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_DEPTH == 16
 1451              		.loc 1 403 23 is_stmt 0 view .LVU512
 1452 01f8 B3F1FF3F 		cmp	r3, #-1
 1453 01fc ECD0     		beq	.L111
 424:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1454              		.loc 1 424 26 is_stmt 1 view .LVU513
 424:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1455              		.loc 1 424 28 is_stmt 0 view .LVU514
 1456 01fe 002B     		cmp	r3, #0
 1457 0200 00F08280 		beq	.L75
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1458              		.loc 1 425 25 is_stmt 1 view .LVU515
 1459 0204 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1460              	.LVL168:
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1461              		.loc 1 425 25 is_stmt 0 view .LVU516
 1462 0206 FF2B     		cmp	r3, #255
 1463 0208 76D0     		beq	.L112
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1464              		.loc 1 425 25 is_stmt 1 discriminator 2 view .LVU517
 1465              	.LVL169:
 1466              	.LBB145:
 1467              	.LBI145:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1468              		.loc 2 459 48 discriminator 2 view .LVU518
 1469              	.LBB146:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1470              		.loc 2 461 5 discriminator 2 view .LVU519
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1471              		.loc 2 465 5 discriminator 2 view .LVU520
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1472              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU521
 1473 020a 0433     		adds	r3, r3, #4
 1474              	.LVL170:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1475              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU522
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1476              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU523
 1477 020c 2788     		ldrh	r7, [r4]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1478              		.loc 2 466 19 discriminator 2 view .LVU524
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 66


 1479 020e 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1480              		.loc 2 466 14 discriminator 2 view .LVU525
 1481 0212 DFF810B2 		ldr	fp, .L121
 1482 0216 07EA0B07 		and	r7, r7, fp
 1483              	.LVL171:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1484              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU526
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1485              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU527
 1486 021a 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1487              		.loc 2 467 19 discriminator 2 view .LVU528
 1488 021e 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1489              		.loc 2 467 14 discriminator 2 view .LVU529
 1490 0222 0AEA0B0A 		and	r10, r10, fp
 1491              	.LVL172:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1492              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU530
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1493              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU531
 1494 0226 AAEB070A 		sub	r10, r10, r7
 1495              	.LVL173:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1496              		.loc 2 468 36 discriminator 2 view .LVU532
 1497 022a DB08     		lsrs	r3, r3, #3
 1498              	.LVL174:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1499              		.loc 2 468 36 discriminator 2 view .LVU533
 1500 022c 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1501              		.loc 2 468 49 discriminator 2 view .LVU534
 1502 0230 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1503              		.loc 2 468 14 discriminator 2 view .LVU535
 1504 0234 03EA0B03 		and	r3, r3, fp
 1505              	.LVL175:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1506              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU536
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1507              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU537
 1508 0238 43EA1343 		orr	r3, r3, r3, lsr #16
 1509              	.LVL176:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1510              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU538
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1511              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU539
 1512              	.LBE146:
 1513              	.LBE145:
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1514              		.loc 1 425 25 discriminator 2 view .LVU540
 1515 023c 2380     		strh	r3, [r4]	@ movhi
 1516              	.LVL177:
 1517              	.L77:
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1518              		.loc 1 425 25 is_stmt 1 discriminator 4 view .LVU541
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 67


 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1519              		.loc 1 425 25 discriminator 4 view .LVU542
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1520              		.loc 1 426 25 discriminator 4 view .LVU543
 1521 023e 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1522 0240 FF2B     		cmp	r3, #255
 1523 0242 5BD0     		beq	.L113
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1524              		.loc 1 426 25 discriminator 2 view .LVU544
 1525              	.LVL178:
 1526              	.LBB147:
 1527              	.LBI147:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1528              		.loc 2 459 48 discriminator 2 view .LVU545
 1529              	.LBB148:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1530              		.loc 2 461 5 discriminator 2 view .LVU546
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1531              		.loc 2 465 5 discriminator 2 view .LVU547
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1532              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU548
 1533 0244 0433     		adds	r3, r3, #4
 1534              	.LVL179:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1535              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU549
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1536              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU550
 1537 0246 6788     		ldrh	r7, [r4, #2]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1538              		.loc 2 466 19 discriminator 2 view .LVU551
 1539 0248 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1540              		.loc 2 466 14 discriminator 2 view .LVU552
 1541 024c DFF8D4B1 		ldr	fp, .L121
 1542 0250 07EA0B07 		and	r7, r7, fp
 1543              	.LVL180:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1544              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU553
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1545              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU554
 1546 0254 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1547              		.loc 2 467 19 discriminator 2 view .LVU555
 1548 0258 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1549              		.loc 2 467 14 discriminator 2 view .LVU556
 1550 025c 0AEA0B0A 		and	r10, r10, fp
 1551              	.LVL181:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1552              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU557
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1553              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU558
 1554 0260 AAEB070A 		sub	r10, r10, r7
 1555              	.LVL182:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1556              		.loc 2 468 36 discriminator 2 view .LVU559
 1557 0264 DB08     		lsrs	r3, r3, #3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 68


 1558              	.LVL183:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1559              		.loc 2 468 36 discriminator 2 view .LVU560
 1560 0266 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1561              		.loc 2 468 49 discriminator 2 view .LVU561
 1562 026a 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1563              		.loc 2 468 14 discriminator 2 view .LVU562
 1564 026e 03EA0B03 		and	r3, r3, fp
 1565              	.LVL184:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1566              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU563
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1567              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU564
 1568 0272 43EA1343 		orr	r3, r3, r3, lsr #16
 1569              	.LVL185:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1570              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU565
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1571              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU566
 1572              	.LBE148:
 1573              	.LBE147:
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1574              		.loc 1 426 25 discriminator 2 view .LVU567
 1575 0276 6380     		strh	r3, [r4, #2]	@ movhi
 1576              	.L79:
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1577              		.loc 1 426 25 is_stmt 1 discriminator 4 view .LVU568
 1578              	.LVL186:
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1579              		.loc 1 426 25 discriminator 4 view .LVU569
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1580              		.loc 1 427 25 discriminator 4 view .LVU570
 1581 0278 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 1582 027a FF2B     		cmp	r3, #255
 1583 027c 40D0     		beq	.L114
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1584              		.loc 1 427 25 discriminator 2 view .LVU571
 1585              	.LVL187:
 1586              	.LBB149:
 1587              	.LBI149:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1588              		.loc 2 459 48 discriminator 2 view .LVU572
 1589              	.LBB150:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1590              		.loc 2 461 5 discriminator 2 view .LVU573
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1591              		.loc 2 465 5 discriminator 2 view .LVU574
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1592              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU575
 1593 027e 0433     		adds	r3, r3, #4
 1594              	.LVL188:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1595              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU576
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1596              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU577
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 69


 1597 0280 A788     		ldrh	r7, [r4, #4]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1598              		.loc 2 466 19 discriminator 2 view .LVU578
 1599 0282 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1600              		.loc 2 466 14 discriminator 2 view .LVU579
 1601 0286 DFF89CB1 		ldr	fp, .L121
 1602 028a 07EA0B07 		and	r7, r7, fp
 1603              	.LVL189:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1604              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU580
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1605              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU581
 1606 028e 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1607              		.loc 2 467 19 discriminator 2 view .LVU582
 1608 0292 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1609              		.loc 2 467 14 discriminator 2 view .LVU583
 1610 0296 0AEA0B0A 		and	r10, r10, fp
 1611              	.LVL190:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1612              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU584
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1613              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU585
 1614 029a AAEB070A 		sub	r10, r10, r7
 1615              	.LVL191:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1616              		.loc 2 468 36 discriminator 2 view .LVU586
 1617 029e DB08     		lsrs	r3, r3, #3
 1618              	.LVL192:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1619              		.loc 2 468 36 discriminator 2 view .LVU587
 1620 02a0 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1621              		.loc 2 468 49 discriminator 2 view .LVU588
 1622 02a4 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1623              		.loc 2 468 14 discriminator 2 view .LVU589
 1624 02a8 03EA0B03 		and	r3, r3, fp
 1625              	.LVL193:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1626              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU590
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1627              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU591
 1628 02ac 43EA1343 		orr	r3, r3, r3, lsr #16
 1629              	.LVL194:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1630              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU592
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1631              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU593
 1632              	.LBE150:
 1633              	.LBE149:
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1634              		.loc 1 427 25 discriminator 2 view .LVU594
 1635 02b0 A380     		strh	r3, [r4, #4]	@ movhi
 1636              	.L81:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 70


 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1637              		.loc 1 427 25 is_stmt 1 discriminator 4 view .LVU595
 1638              	.LVL195:
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1639              		.loc 1 427 25 discriminator 4 view .LVU596
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1640              		.loc 1 428 25 discriminator 4 view .LVU597
 1641 02b2 F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 1642 02b4 FF2B     		cmp	r3, #255
 1643 02b6 25D0     		beq	.L115
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1644              		.loc 1 428 25 discriminator 2 view .LVU598
 1645              	.LVL196:
 1646              	.LBB151:
 1647              	.LBI151:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1648              		.loc 2 459 48 discriminator 2 view .LVU599
 1649              	.LBB152:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1650              		.loc 2 461 5 discriminator 2 view .LVU600
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1651              		.loc 2 465 5 discriminator 2 view .LVU601
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1652              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU602
 1653 02b8 0433     		adds	r3, r3, #4
 1654              	.LVL197:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1655              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU603
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1656              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU604
 1657 02ba E788     		ldrh	r7, [r4, #6]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1658              		.loc 2 466 19 discriminator 2 view .LVU605
 1659 02bc 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1660              		.loc 2 466 14 discriminator 2 view .LVU606
 1661 02c0 DFF860B1 		ldr	fp, .L121
 1662 02c4 07EA0B07 		and	r7, r7, fp
 1663              	.LVL198:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1664              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU607
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1665              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU608
 1666 02c8 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1667              		.loc 2 467 19 discriminator 2 view .LVU609
 1668 02cc 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1669              		.loc 2 467 14 discriminator 2 view .LVU610
 1670 02d0 0AEA0B0A 		and	r10, r10, fp
 1671              	.LVL199:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1672              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU611
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1673              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU612
 1674 02d4 AAEB070A 		sub	r10, r10, r7
 1675              	.LVL200:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 71


 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1676              		.loc 2 468 36 discriminator 2 view .LVU613
 1677 02d8 DB08     		lsrs	r3, r3, #3
 1678              	.LVL201:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1679              		.loc 2 468 36 discriminator 2 view .LVU614
 1680 02da 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1681              		.loc 2 468 49 discriminator 2 view .LVU615
 1682 02de 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1683              		.loc 2 468 14 discriminator 2 view .LVU616
 1684 02e2 03EA0B03 		and	r3, r3, fp
 1685              	.LVL202:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1686              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU617
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1687              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU618
 1688 02e6 43EA1343 		orr	r3, r3, r3, lsr #16
 1689              	.LVL203:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1690              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU619
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1691              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU620
 1692              	.LBE152:
 1693              	.LBE151:
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1694              		.loc 1 428 25 discriminator 2 view .LVU621
 1695 02ea E380     		strh	r3, [r4, #6]	@ movhi
 1696              	.L83:
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1697              		.loc 1 428 25 is_stmt 1 discriminator 4 view .LVU622
 1698 02ec 0436     		adds	r6, r6, #4
 1699              	.LVL204:
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1700              		.loc 1 428 25 discriminator 4 view .LVU623
 1701 02ee 0834     		adds	r4, r4, #8
 1702              	.LVL205:
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1703              		.loc 1 428 25 is_stmt 0 discriminator 4 view .LVU624
 1704 02f0 7CE7     		b	.L74
 1705              	.LVL206:
 1706              	.L72:
 1707              	.LBB153:
 411:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *d = c32;
 1708              		.loc 1 411 29 is_stmt 1 view .LVU625
 412:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(d + 1) = c32;
 1709              		.loc 1 412 29 view .LVU626
 412:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             *(d + 1) = c32;
 1710              		.loc 1 412 32 is_stmt 0 view .LVU627
 1711 02f2 2060     		str	r0, [r4]
 413:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1712              		.loc 1 413 29 is_stmt 1 view .LVU628
 413:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1713              		.loc 1 413 38 is_stmt 0 view .LVU629
 1714 02f4 6060     		str	r0, [r4, #4]
 1715 02f6 77E7     		b	.L73
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 72


 1716              	.LVL207:
 1717              	.L112:
 413:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1718              		.loc 1 413 38 view .LVU630
 1719              	.LBE153:
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1720              		.loc 1 425 25 is_stmt 1 discriminator 1 view .LVU631
 1721 02f8 2580     		strh	r5, [r4]	@ movhi
 1722              	.LVL208:
 425:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1723              		.loc 1 425 25 is_stmt 0 discriminator 1 view .LVU632
 1724 02fa A0E7     		b	.L77
 1725              	.LVL209:
 1726              	.L113:
 426:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1727              		.loc 1 426 25 is_stmt 1 discriminator 1 view .LVU633
 1728 02fc 6580     		strh	r5, [r4, #2]	@ movhi
 1729 02fe BBE7     		b	.L79
 1730              	.LVL210:
 1731              	.L114:
 427:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1732              		.loc 1 427 25 discriminator 1 view .LVU634
 1733 0300 A580     		strh	r5, [r4, #4]	@ movhi
 1734 0302 D6E7     		b	.L81
 1735              	.LVL211:
 1736              	.L115:
 428:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     } else {
 1737              		.loc 1 428 25 discriminator 1 view .LVU635
 1738 0304 E580     		strh	r5, [r4, #6]	@ movhi
 1739 0306 F1E7     		b	.L83
 1740              	.LVL212:
 1741              	.L75:
 430:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first += 4;
 1742              		.loc 1 430 25 view .LVU636
 430:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         disp_buf_first += 4;
 1743              		.loc 1 430 30 is_stmt 0 view .LVU637
 1744 0308 0436     		adds	r6, r6, #4
 1745              	.LVL213:
 431:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1746              		.loc 1 431 25 is_stmt 1 view .LVU638
 431:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1747              		.loc 1 431 40 is_stmt 0 view .LVU639
 1748 030a 0834     		adds	r4, r4, #8
 1749              	.LVL214:
 431:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1750              		.loc 1 431 40 view .LVU640
 1751 030c 6EE7     		b	.L74
 1752              	.LVL215:
 1753              	.L87:
 431:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1754              		.loc 1 431 40 view .LVU641
 1755              	.LBE154:
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1756              		.loc 1 436 21 is_stmt 1 discriminator 2 view .LVU642
 1757              	.LBB155:
 1758              	.LBI155:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 73


 1759              		.loc 2 459 48 discriminator 2 view .LVU643
 1760              	.LBB156:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1761              		.loc 2 461 5 discriminator 2 view .LVU644
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1762              		.loc 2 465 5 discriminator 2 view .LVU645
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1763              		.loc 2 465 17 is_stmt 0 discriminator 2 view .LVU646
 1764 030e 0433     		adds	r3, r3, #4
 1765              	.LVL216:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1766              		.loc 2 466 5 is_stmt 1 discriminator 2 view .LVU647
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1767              		.loc 2 466 42 is_stmt 0 discriminator 2 view .LVU648
 1768 0310 2788     		ldrh	r7, [r4]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1769              		.loc 2 466 19 discriminator 2 view .LVU649
 1770 0312 47EA0747 		orr	r7, r7, r7, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1771              		.loc 2 466 14 discriminator 2 view .LVU650
 1772 0316 DFF80CB1 		ldr	fp, .L121
 1773 031a 07EA0B07 		and	r7, r7, fp
 1774              	.LVL217:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1775              		.loc 2 467 5 is_stmt 1 discriminator 2 view .LVU651
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1776              		.loc 2 467 42 is_stmt 0 discriminator 2 view .LVU652
 1777 031e 1FFA85FA 		uxth	r10, r5
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1778              		.loc 2 467 19 discriminator 2 view .LVU653
 1779 0322 4AEA054A 		orr	r10, r10, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1780              		.loc 2 467 14 discriminator 2 view .LVU654
 1781 0326 0AEA0B0A 		and	r10, r10, fp
 1782              	.LVL218:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1783              		.loc 2 468 5 is_stmt 1 discriminator 2 view .LVU655
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1784              		.loc 2 468 30 is_stmt 0 discriminator 2 view .LVU656
 1785 032a AAEB070A 		sub	r10, r10, r7
 1786              	.LVL219:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1787              		.loc 2 468 36 discriminator 2 view .LVU657
 1788 032e DB08     		lsrs	r3, r3, #3
 1789              	.LVL220:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1790              		.loc 2 468 36 discriminator 2 view .LVU658
 1791 0330 0AFB03F3 		mul	r3, r10, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1792              		.loc 2 468 49 discriminator 2 view .LVU659
 1793 0334 07EB5313 		add	r3, r7, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1794              		.loc 2 468 14 discriminator 2 view .LVU660
 1795 0338 03EA0B03 		and	r3, r3, fp
 1796              	.LVL221:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1797              		.loc 2 469 5 is_stmt 1 discriminator 2 view .LVU661
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 74


 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1798              		.loc 2 469 16 is_stmt 0 discriminator 2 view .LVU662
 1799 033c 43EA1343 		orr	r3, r3, r3, lsr #16
 1800              	.LVL222:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1801              		.loc 2 484 5 is_stmt 1 discriminator 2 view .LVU663
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1802              		.loc 2 484 5 is_stmt 0 discriminator 2 view .LVU664
 1803              	.LBE156:
 1804              	.LBE155:
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1805              		.loc 1 436 21 discriminator 2 view .LVU665
 1806 0340 2380     		strh	r3, [r4]	@ movhi
 1807              	.L88:
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1808              		.loc 1 436 21 is_stmt 1 discriminator 4 view .LVU666
 1809 0342 0136     		adds	r6, r6, #1
 1810              	.LVL223:
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1811              		.loc 1 436 21 discriminator 4 view .LVU667
 1812 0344 0234     		adds	r4, r4, #2
 1813              	.LVL224:
 435:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1814              		.loc 1 435 41 discriminator 4 view .LVU668
 435:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1815              		.loc 1 435 42 is_stmt 0 discriminator 4 view .LVU669
 1816 0346 0EF1010E 		add	lr, lr, #1
 1817              	.LVL225:
 1818              	.L86:
 435:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1819              		.loc 1 435 23 is_stmt 1 discriminator 1 view .LVU670
 435:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1820              		.loc 1 435 17 is_stmt 0 discriminator 1 view .LVU671
 1821 034a 9645     		cmp	lr, r2
 1822 034c 04DA     		bge	.L116
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1823              		.loc 1 436 21 is_stmt 1 view .LVU672
 1824 034e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1825 0350 FF2B     		cmp	r3, #255
 1826 0352 DCD1     		bne	.L87
 436:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1827              		.loc 1 436 21 discriminator 1 view .LVU673
 1828 0354 2580     		strh	r5, [r4]	@ movhi
 1829 0356 F4E7     		b	.L88
 1830              	.L116:
 438:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1831              		.loc 1 438 17 discriminator 2 view .LVU674
 438:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1832              		.loc 1 438 42 is_stmt 0 discriminator 2 view .LVU675
 1833 0358 ACEB0203 		sub	r3, ip, r2
 438:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 1834              		.loc 1 438 32 discriminator 2 view .LVU676
 1835 035c 04EB4304 		add	r4, r4, r3, lsl #1
 1836              	.LVL226:
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1837              		.loc 1 396 41 is_stmt 1 discriminator 2 view .LVU677
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 75


 1838              		.loc 1 396 42 is_stmt 0 discriminator 2 view .LVU678
 1839 0360 08F10108 		add	r8, r8, #1
 1840              	.LVL227:
 1841              	.L65:
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1842              		.loc 1 396 24 is_stmt 1 discriminator 1 view .LVU679
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1843              		.loc 1 396 13 is_stmt 0 discriminator 1 view .LVU680
 1844 0364 C845     		cmp	r8, r9
 1845 0366 BFF6B8AE 		bge	.L54
 397:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1846              		.loc 1 397 23 view .LVU681
 1847 036a 4FF0000E 		mov	lr, #0
 1848 036e 29E7     		b	.L90
 1849              	.LVL228:
 1850              	.L101:
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1851              		.loc 1 396 19 view .LVU682
 1852 0370 4FF00008 		mov	r8, #0
 1853              	.LVL229:
 396:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1854              		.loc 1 396 19 view .LVU683
 1855 0374 DDF80890 		ldr	r9, [sp, #8]
 1856 0378 F4E7     		b	.L65
 1857              	.LVL230:
 1858              	.L120:
 1859              	.LBB157:
 1860              	.LBB137:
 456:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask || last_dest_color.full != disp_buf_first[x].fu
 1861              		.loc 1 456 68 discriminator 2 view .LVU684
 1862 037a 0298     		ldr	r0, [sp, #8]
 1863 037c 07FB00FC 		mul	ip, r7, r0
 1864              	.LVL231:
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1865              		.loc 1 455 62 discriminator 2 view .LVU685
 1866 0380 4FEA1C2C 		lsr	ip, ip, #8
 1867              	.L93:
 1868              	.LVL232:
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1869              		.loc 1 457 25 is_stmt 1 view .LVU686
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1870              		.loc 1 457 27 is_stmt 0 view .LVU687
 1871 0384 7745     		cmp	r7, lr
 1872 0386 33D0     		beq	.L117
 1873              	.L94:
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 1874              		.loc 1 466 33 is_stmt 1 view .LVU688
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 1875              		.loc 1 466 35 is_stmt 0 view .LVU689
 1876 0388 BCF1FF0F 		cmp	ip, #255
 1877 038c 37D0     		beq	.L118
 467:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             }
 1878              		.loc 1 467 38 is_stmt 1 view .LVU690
 1879              	.LVL233:
 1880              	.LBB138:
 1881              	.LBI138:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 76


 1882              		.loc 2 459 48 view .LVU691
 1883              	.LBB139:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 1884              		.loc 2 461 5 view .LVU692
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1885              		.loc 2 465 5 view .LVU693
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 1886              		.loc 2 465 17 is_stmt 0 view .LVU694
 1887 038e 0CF1040A 		add	r10, ip, #4
 1888              	.LVL234:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1889              		.loc 2 466 5 is_stmt 1 view .LVU695
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1890              		.loc 2 466 42 is_stmt 0 view .LVU696
 1891 0392 34F81100 		ldrh	r0, [r4, r1, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1892              		.loc 2 466 19 view .LVU697
 1893 0396 40EA0040 		orr	r0, r0, r0, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 1894              		.loc 2 466 14 view .LVU698
 1895 039a DFF888B0 		ldr	fp, .L121
 1896 039e 00EA0B00 		and	r0, r0, fp
 1897              	.LVL235:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1898              		.loc 2 467 5 is_stmt 1 view .LVU699
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1899              		.loc 2 467 42 is_stmt 0 view .LVU700
 1900 03a2 1FFA85FE 		uxth	lr, r5
 1901              	.LVL236:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1902              		.loc 2 467 19 view .LVU701
 1903 03a6 4EEA054E 		orr	lr, lr, r5, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1904              		.loc 2 467 14 view .LVU702
 1905 03aa 0EEA0B0E 		and	lr, lr, fp
 1906              	.LVL237:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1907              		.loc 2 468 5 is_stmt 1 view .LVU703
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1908              		.loc 2 468 30 is_stmt 0 view .LVU704
 1909 03ae AEEB000E 		sub	lr, lr, r0
 1910              	.LVL238:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1911              		.loc 2 468 36 view .LVU705
 1912 03b2 CAF3C70A 		ubfx	r10, r10, #3, #8
 1913 03b6 0EFB0AF3 		mul	r3, lr, r10
 1914              	.LVL239:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1915              		.loc 2 468 49 view .LVU706
 1916 03ba 00EB5313 		add	r3, r0, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1917              		.loc 2 468 14 view .LVU707
 1918 03be 03EA0B03 		and	r3, r3, fp
 1919              	.LVL240:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 1920              		.loc 2 469 5 is_stmt 1 view .LVU708
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 77


 1921              		.loc 2 484 5 view .LVU709
 1922 03c2 43EA1343 		orr	r3, r3, r3, lsr #16
 1923              	.LVL241:
 1924              	.L97:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 1925              		.loc 2 484 5 is_stmt 0 view .LVU710
 1926              	.LBE139:
 1927              	.LBE138:
 469:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 1928              		.loc 1 469 29 is_stmt 1 view .LVU711
 470:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1929              		.loc 1 470 29 view .LVU712
 470:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 1930              		.loc 1 470 50 is_stmt 0 view .LVU713
 1931 03c6 34F811A0 		ldrh	r10, [r4, r1, lsl #1]
 1932              	.LVL242:
 469:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             last_dest_color.full = disp_buf_first[x].full;
 1933              		.loc 1 469 39 view .LVU714
 1934 03ca BE46     		mov	lr, r7
 1935              	.LVL243:
 1936              	.L95:
 472:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1937              		.loc 1 472 25 is_stmt 1 view .LVU715
 472:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 1938              		.loc 1 472 43 is_stmt 0 view .LVU716
 1939 03cc 24F81130 		strh	r3, [r4, r1, lsl #1]	@ movhi
 1940              	.L92:
 474:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1941              		.loc 1 474 21 is_stmt 1 discriminator 2 view .LVU717
 474:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 1942              		.loc 1 474 31 is_stmt 0 discriminator 2 view .LVU718
 1943 03d0 08F10108 		add	r8, r8, #1
 1944              	.LVL244:
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 1945              		.loc 1 453 45 is_stmt 1 discriminator 2 view .LVU719
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 1946              		.loc 1 453 46 is_stmt 0 discriminator 2 view .LVU720
 1947 03d4 0131     		adds	r1, r1, #1
 1948              	.LVL245:
 1949              	.L99:
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 1950              		.loc 1 453 28 is_stmt 1 discriminator 1 view .LVU721
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 1951              		.loc 1 453 17 is_stmt 0 discriminator 1 view .LVU722
 1952 03d6 9142     		cmp	r1, r2
 1953 03d8 13DA     		bge	.L119
 454:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 1954              		.loc 1 454 21 is_stmt 1 view .LVU723
 454:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 1955              		.loc 1 454 24 is_stmt 0 view .LVU724
 1956 03da 98F80070 		ldrb	r7, [r8]	@ zero_extendqisi2
 454:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if(*mask_tmp_x != last_mask) opa_tmp = *mask_tmp_x == LV_OPA_COVER ? opa :
 1957              		.loc 1 454 23 view .LVU725
 1958 03de 002F     		cmp	r7, #0
 1959 03e0 F6D0     		beq	.L92
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1960              		.loc 1 455 25 is_stmt 1 view .LVU726
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 78


 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1961              		.loc 1 455 27 is_stmt 0 view .LVU727
 1962 03e2 7745     		cmp	r7, lr
 1963 03e4 CED0     		beq	.L93
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1964              		.loc 1 455 54 is_stmt 1 discriminator 1 view .LVU728
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1965              		.loc 1 455 62 is_stmt 0 discriminator 1 view .LVU729
 1966 03e6 FF2F     		cmp	r7, #255
 1967 03e8 C7D1     		bne	.L120
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1968              		.loc 1 455 62 view .LVU730
 1969 03ea DDF808C0 		ldr	ip, [sp, #8]
 1970              	.LVL246:
 455:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                                                    (uint32_t)((uint32_t)(*mask_tmp_
 1971              		.loc 1 455 62 view .LVU731
 1972 03ee C9E7     		b	.L93
 1973              	.LVL247:
 1974              	.L117:
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1975              		.loc 1 457 71 discriminator 1 view .LVU732
 1976 03f0 1FFA8AF0 		uxth	r0, r10
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1977              		.loc 1 457 97 discriminator 1 view .LVU733
 1978 03f4 34F811B0 		ldrh	fp, [r4, r1, lsl #1]
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1979              		.loc 1 457 53 discriminator 1 view .LVU734
 1980 03f8 5845     		cmp	r0, fp
 1981 03fa C5D1     		bne	.L94
 457:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 1982              		.loc 1 457 53 discriminator 1 view .LVU735
 1983 03fc E6E7     		b	.L95
 1984              	.L118:
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 1985              		.loc 1 466 61 is_stmt 1 discriminator 1 view .LVU736
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 1986              		.loc 1 466 76 is_stmt 0 discriminator 1 view .LVU737
 1987 03fe 2B46     		mov	r3, r5	@ movhi
 1988              	.LVL248:
 466:lvgl/lvgl/src/draw/lv_draw_blend.c ****                                 else last_res_color = lv_color_mix(color, disp_buf_first[x], opa_tm
 1989              		.loc 1 466 76 discriminator 1 view .LVU738
 1990 0400 E1E7     		b	.L97
 1991              	.LVL249:
 1992              	.L119:
 476:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 1993              		.loc 1 476 17 is_stmt 1 discriminator 2 view .LVU739
 476:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 1994              		.loc 1 476 32 is_stmt 0 discriminator 2 view .LVU740
 1995 0402 0399     		ldr	r1, [sp, #12]
 1996              	.LVL250:
 476:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 1997              		.loc 1 476 32 discriminator 2 view .LVU741
 1998 0404 04EB4104 		add	r4, r4, r1, lsl #1
 1999              	.LVL251:
 477:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2000              		.loc 1 477 17 is_stmt 1 discriminator 2 view .LVU742
 477:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 79


 2001              		.loc 1 477 22 is_stmt 0 discriminator 2 view .LVU743
 2002 0408 0499     		ldr	r1, [sp, #16]
 2003 040a 0E44     		add	r6, r6, r1
 2004              	.LVL252:
 477:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2005              		.loc 1 477 22 discriminator 2 view .LVU744
 2006              	.LBE137:
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2007              		.loc 1 451 56 is_stmt 1 discriminator 2 view .LVU745
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2008              		.loc 1 451 57 is_stmt 0 discriminator 2 view .LVU746
 2009 040c 09F10109 		add	r9, r9, #1
 2010              	.LVL253:
 2011              	.L91:
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2012              		.loc 1 451 36 is_stmt 1 discriminator 1 view .LVU747
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2013              		.loc 1 451 50 is_stmt 0 discriminator 1 view .LVU748
 2014 0410 0599     		ldr	r1, [sp, #20]
 2015 0412 B1F90610 		ldrsh	r1, [r1, #6]
 451:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2016              		.loc 1 451 13 discriminator 1 view .LVU749
 2017 0416 4945     		cmp	r1, r9
 2018 0418 FFF65FAE 		blt	.L54
 2019              	.LBB140:
 453:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask_tmp_x) {
 2020              		.loc 1 453 23 view .LVU750
 2021 041c 0021     		movs	r1, #0
 2022 041e B046     		mov	r8, r6
 2023 0420 D9E7     		b	.L99
 2024              	.L122:
 2025 0422 00BF     		.align	2
 2026              	.L121:
 2027 0424 1FF8E007 		.word	132184095
 2028              	.LBE140:
 2029              	.LBE157:
 2030              	.LBE170:
 2031              		.cfi_endproc
 2032              	.LFE155:
 2034              		.section	.rodata.fill_blended.str1.4,"aMS",%progbits,1
 2035              		.align	2
 2036              	.LC0:
 2037 0000 6C76676C 		.ascii	"lvgl/lvgl/src/draw/lv_draw_blend.c\000"
 2037      2F6C7667 
 2037      6C2F7372 
 2037      632F6472 
 2037      61772F6C 
 2038 0023 00       		.align	2
 2039              	.LC1:
 2040 0024 66696C6C 		.ascii	"fill_blended: unsupported blend mode\000"
 2040      5F626C65 
 2040      6E646564 
 2040      3A20756E 
 2040      73757070 
 2041              		.section	.text.fill_blended,"ax",%progbits
 2042              		.align	1
 2043              		.syntax unified
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 80


 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu fpv4-sp-d16
 2048              	fill_blended:
 2049              	.LVL254:
 2050              	.LFB156:
 501:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 2051              		.loc 1 501 1 is_stmt 1 view -0
 2052              		.cfi_startproc
 2053              		@ args = 16, pretend = 0, frame = 16
 2054              		@ frame_needed = 0, uses_anonymous_args = 0
 501:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 2055              		.loc 1 501 1 is_stmt 0 view .LVU752
 2056 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2057              	.LCFI14:
 2058              		.cfi_def_cfa_offset 36
 2059              		.cfi_offset 4, -36
 2060              		.cfi_offset 5, -32
 2061              		.cfi_offset 6, -28
 2062              		.cfi_offset 7, -24
 2063              		.cfi_offset 8, -20
 2064              		.cfi_offset 9, -16
 2065              		.cfi_offset 10, -12
 2066              		.cfi_offset 11, -8
 2067              		.cfi_offset 14, -4
 2068 0004 87B0     		sub	sp, sp, #28
 2069              	.LCFI15:
 2070              		.cfi_def_cfa_offset 64
 2071 0006 9046     		mov	r8, r2
 2072 0008 9A46     		mov	r10, r3	@ movhi
 2073              	.LVL255:
 501:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Get the width of the `disp_area` it will be used to go to the next line*/
 2074              		.loc 1 501 1 view .LVU753
 2075 000a 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 2076 000e 0293     		str	r3, [sp, #8]
 2077 0010 9DF84C40 		ldrb	r4, [sp, #76]	@ zero_extendqisi2
 503:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2078              		.loc 1 503 5 is_stmt 1 view .LVU754
 2079              	.LVL256:
 2080              	.LBB171:
 2081              	.LBI171:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2082              		.loc 3 133 26 view .LVU755
 2083              	.LBB172:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2084              		.loc 3 135 5 view .LVU756
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2085              		.loc 3 135 31 is_stmt 0 view .LVU757
 2086 0014 8388     		ldrh	r3, [r0, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2087              		.loc 3 135 44 view .LVU758
 2088 0016 0288     		ldrh	r2, [r0]
 2089              	.LVL257:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2090              		.loc 3 135 36 view .LVU759
 2091 0018 9B1A     		subs	r3, r3, r2
 2092 001a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 81


 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2093              		.loc 3 135 49 view .LVU760
 2094 001c 0133     		adds	r3, r3, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2095              		.loc 3 135 12 view .LVU761
 2096 001e 1BB2     		sxth	r3, r3
 2097 0020 0493     		str	r3, [sp, #16]
 2098              	.LVL258:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2099              		.loc 3 135 12 view .LVU762
 2100              	.LBE172:
 2101              	.LBE171:
 506:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2102              		.loc 1 506 5 is_stmt 1 view .LVU763
 506:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2103              		.loc 1 506 62 is_stmt 0 view .LVU764
 2104 0022 B8F90220 		ldrsh	r2, [r8, #2]
 2105 0026 0392     		str	r2, [sp, #12]
 506:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2106              		.loc 1 506 51 view .LVU765
 2107 0028 03FB02F2 		mul	r2, r3, r2
 506:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2108              		.loc 1 506 18 view .LVU766
 2109 002c 01EB4205 		add	r5, r1, r2, lsl #1
 2110              	.LVL259:
 508:lvgl/lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 2111              		.loc 1 508 5 is_stmt 1 view .LVU767
 509:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 2112              		.loc 1 509 5 view .LVU768
 2113 0030 012C     		cmp	r4, #1
 2114 0032 0DD0     		beq	.L140
 2115 0034 022C     		cmp	r4, #2
 2116 0036 0ED0     		beq	.L141
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2117              		.loc 1 517 13 view .LVU769
 2118 0038 484B     		ldr	r3, .L149
 2119              	.LVL260:
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2120              		.loc 1 517 13 is_stmt 0 view .LVU770
 2121 003a 0093     		str	r3, [sp]
 2122 003c 484B     		ldr	r3, .L149+4
 2123 003e 40F20522 		movw	r2, #517
 2124 0042 4849     		ldr	r1, .L149+8
 2125              	.LVL261:
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2126              		.loc 1 517 13 view .LVU771
 2127 0044 0220     		movs	r0, #2
 2128              	.LVL262:
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2129              		.loc 1 517 13 view .LVU772
 2130 0046 FFF7FEFF 		bl	_lv_log_add
 2131              	.LVL263:
 517:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2132              		.loc 1 517 64 is_stmt 1 view .LVU773
 518:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 2133              		.loc 1 518 13 view .LVU774
 2134              	.L123:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 82


 572:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 2135              		.loc 1 572 1 is_stmt 0 view .LVU775
 2136 004a 07B0     		add	sp, sp, #28
 2137              	.LCFI16:
 2138              		.cfi_remember_state
 2139              		.cfi_def_cfa_offset 36
 2140              		@ sp needed
 2141 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2142              	.LVL264:
 2143              	.L140:
 2144              	.LCFI17:
 2145              		.cfi_restore_state
 509:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 2146              		.loc 1 509 5 view .LVU776
 2147 0050 DFF818B1 		ldr	fp, .L149+16
 2148 0054 01E0     		b	.L124
 2149              	.L141:
 514:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 2150              		.loc 1 514 22 view .LVU777
 2151 0056 DFF818B1 		ldr	fp, .L149+20
 2152              	.L124:
 2153              	.LVL265:
 521:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 2154              		.loc 1 521 5 is_stmt 1 view .LVU778
 522:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2155              		.loc 1 522 5 view .LVU779
 525:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 2156              		.loc 1 525 5 view .LVU780
 525:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 2157              		.loc 1 525 7 is_stmt 0 view .LVU781
 2158 005a 9DF84830 		ldrb	r3, [sp, #72]	@ zero_extendqisi2
 2159              	.LVL266:
 525:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_dest_color = lv_color_black();
 2160              		.loc 1 525 7 view .LVU782
 2161 005e 012B     		cmp	r3, #1
 2162 0060 10D0     		beq	.L144
 2163              	.LBB173:
 542:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2164              		.loc 1 542 9 is_stmt 1 view .LVU783
 2165              	.LVL267:
 2166              	.LBB174:
 2167              	.LBI174:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2168              		.loc 3 133 26 view .LVU784
 2169              	.LBB175:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2170              		.loc 3 135 5 view .LVU785
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2171              		.loc 3 135 31 is_stmt 0 view .LVU786
 2172 0062 B8F80430 		ldrh	r3, [r8, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2173              		.loc 3 135 44 view .LVU787
 2174 0066 B8F90000 		ldrsh	r0, [r8]
 2175              	.LVL268:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2176              		.loc 3 135 44 view .LVU788
 2177 006a 84B2     		uxth	r4, r0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 83


 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2178              		.loc 3 135 36 view .LVU789
 2179 006c 1B1B     		subs	r3, r3, r4
 2180 006e 9BB2     		uxth	r3, r3
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2181              		.loc 3 135 49 view .LVU790
 2182 0070 0133     		adds	r3, r3, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2183              		.loc 3 135 12 view .LVU791
 2184 0072 1BB2     		sxth	r3, r3
 2185 0074 0593     		str	r3, [sp, #20]
 2186              	.LVL269:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2187              		.loc 3 135 12 view .LVU792
 2188              	.LBE175:
 2189              	.LBE174:
 547:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2190              		.loc 1 547 9 is_stmt 1 view .LVU793
 547:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2191              		.loc 1 547 26 is_stmt 0 view .LVU794
 2192 0076 119F     		ldr	r7, [sp, #68]
 2193 0078 3F1A     		subs	r7, r7, r0
 2194              	.LVL270:
 550:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color;
 2195              		.loc 1 550 9 is_stmt 1 view .LVU795
 551:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 2196              		.loc 1 551 9 view .LVU796
 552:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 2197              		.loc 1 552 9 view .LVU797
 553:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 2198              		.loc 1 553 9 view .LVU798
 553:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 2199              		.loc 1 553 47 is_stmt 0 view .LVU799
 2200 007a 31F81200 		ldrh	r0, [r1, r2, lsl #1]
 553:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_res_color.full = disp_buf_tmp[0].full;
 2201              		.loc 1 553 30 view .LVU800
 2202 007e 8446     		mov	ip, r0	@ movhi
 554:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2203              		.loc 1 554 9 is_stmt 1 view .LVU801
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2204              		.loc 1 556 9 view .LVU802
 2205              	.LVL271:
 552:lvgl/lvgl/src/draw/lv_draw_blend.c ****         last_dest_color.full = disp_buf_tmp[0].full;
 2206              		.loc 1 552 18 is_stmt 0 view .LVU803
 2207 0080 0021     		movs	r1, #0
 2208              	.LVL272:
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2209              		.loc 1 556 9 view .LVU804
 2210 0082 62E0     		b	.L132
 2211              	.LVL273:
 2212              	.L144:
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2213              		.loc 1 556 9 view .LVU805
 2214              	.LBE173:
 2215              	.LBB178:
 526:lvgl/lvgl/src/draw/lv_draw_blend.c ****         lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 2216              		.loc 1 526 9 is_stmt 1 view .LVU806
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 84


 2217              	.LBB179:
 2218              	.LBI179:
 2219              		.loc 2 688 26 view .LVU807
 2220              	.LBE179:
 2221              	.LBE178:
 2222              		.loc 2 688 49 view .LVU808
 2223              	.LBB185:
 2224              	.LBB182:
 2225              	.LBB180:
 2226              	.LBI180:
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 2227              		.loc 2 615 26 view .LVU809
 2228              	.LBB181:
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 2229              		.loc 2 617 5 view .LVU810
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 2230              		.loc 2 617 5 is_stmt 0 view .LVU811
 2231 0084 4FF00006 		mov	r6, #0	@ movhi
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 2232              		.loc 2 617 5 view .LVU812
 2233              	.LBE181:
 2234              	.LBE180:
 2235              	.LBE182:
 527:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2236              		.loc 1 527 9 is_stmt 1 view .LVU813
 2237              	.LVL274:
 2238              	.LBB183:
 2239              	.LBI183:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 2240              		.loc 2 459 48 view .LVU814
 2241              	.LBB184:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 2242              		.loc 2 461 5 view .LVU815
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 2243              		.loc 2 465 5 view .LVU816
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 2244              		.loc 2 465 17 is_stmt 0 view .LVU817
 2245 0088 0299     		ldr	r1, [sp, #8]
 2246              	.LVL275:
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 2247              		.loc 2 465 17 view .LVU818
 2248 008a 0A1D     		adds	r2, r1, #4
 2249              	.LVL276:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 2250              		.loc 2 466 5 is_stmt 1 view .LVU819
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 2251              		.loc 2 466 14 is_stmt 0 view .LVU820
 2252 008c 3648     		ldr	r0, .L149+12
 2253              	.LVL277:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2254              		.loc 2 467 5 is_stmt 1 view .LVU821
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2255              		.loc 2 467 42 is_stmt 0 view .LVU822
 2256 008e 1FFA8AF3 		uxth	r3, r10
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2257              		.loc 2 467 19 view .LVU823
 2258 0092 43EA0A43 		orr	r3, r3, r10, lsl #16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 85


 2259              	.LVL278:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2260              		.loc 2 468 5 is_stmt 1 view .LVU824
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2261              		.loc 2 468 30 is_stmt 0 view .LVU825
 2262 0096 0340     		ands	r3, r3, r0
 2263              	.LVL279:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2264              		.loc 2 468 36 view .LVU826
 2265 0098 D208     		lsrs	r2, r2, #3
 2266 009a 03FB02F3 		mul	r3, r3, r2
 2267              	.LVL280:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2268              		.loc 2 468 14 view .LVU827
 2269 009e 00EA5310 		and	r0, r0, r3, lsr #5
 2270              	.LVL281:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 2271              		.loc 2 469 5 is_stmt 1 view .LVU828
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 2272              		.loc 2 484 5 view .LVU829
 2273 00a2 40EA1040 		orr	r0, r0, r0, lsr #16
 2274              	.LVL282:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 2275              		.loc 2 484 5 is_stmt 0 view .LVU830
 2276              	.LBE184:
 2277              	.LBE183:
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2278              		.loc 1 528 9 is_stmt 1 view .LVU831
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2279              		.loc 1 528 9 is_stmt 0 view .LVU832
 2280 00a6 8946     		mov	r9, r1
 2281 00a8 19E0     		b	.L127
 2282              	.LVL283:
 2283              	.L146:
 531:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 2284              		.loc 1 531 21 is_stmt 1 view .LVU833
 531:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_res_color = blend_fp(color, disp_buf_tmp[x], opa);
 2285              		.loc 1 531 37 is_stmt 0 view .LVU834
 2286 00aa 35F81460 		ldrh	r6, [r5, r4, lsl #1]
 2287              	.LVL284:
 532:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2288              		.loc 1 532 21 is_stmt 1 view .LVU835
 532:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2289              		.loc 1 532 38 is_stmt 0 view .LVU836
 2290 00ae 4A46     		mov	r2, r9
 2291              	.LVL285:
 532:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2292              		.loc 1 532 38 view .LVU837
 2293 00b0 3146     		mov	r1, r6	@ movhi
 2294 00b2 5046     		mov	r0, r10	@ movhi
 2295              	.LVL286:
 532:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2296              		.loc 1 532 38 view .LVU838
 2297 00b4 D847     		blx	fp
 2298              	.LVL287:
 2299              	.L129:
 534:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 86


 2300              		.loc 1 534 17 is_stmt 1 discriminator 2 view .LVU839
 534:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2301              		.loc 1 534 33 is_stmt 0 discriminator 2 view .LVU840
 2302 00b6 3880     		strh	r0, [r7]	@ movhi
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2303              		.loc 1 529 56 is_stmt 1 discriminator 2 view .LVU841
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2304              		.loc 1 529 57 is_stmt 0 discriminator 2 view .LVU842
 2305 00b8 0134     		adds	r4, r4, #1
 2306              	.LVL288:
 2307              	.L128:
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2308              		.loc 1 529 36 is_stmt 1 discriminator 1 view .LVU843
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2309              		.loc 1 529 50 is_stmt 0 discriminator 1 view .LVU844
 2310 00ba B8F90430 		ldrsh	r3, [r8, #4]
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2311              		.loc 1 529 13 discriminator 1 view .LVU845
 2312 00be A342     		cmp	r3, r4
 2313 00c0 07DB     		blt	.L145
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2314              		.loc 1 530 17 is_stmt 1 view .LVU846
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2315              		.loc 1 530 35 is_stmt 0 view .LVU847
 2316 00c2 B3B2     		uxth	r3, r6
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2317              		.loc 1 530 56 view .LVU848
 2318 00c4 05EB4407 		add	r7, r5, r4, lsl #1
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2319              		.loc 1 530 59 view .LVU849
 2320 00c8 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2321              		.loc 1 530 19 view .LVU850
 2322 00cc 9342     		cmp	r3, r2
 2323 00ce ECD1     		bne	.L146
 530:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color = disp_buf_tmp[x];
 2324              		.loc 1 530 19 view .LVU851
 2325 00d0 F1E7     		b	.L129
 2326              	.L145:
 536:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2327              		.loc 1 536 13 is_stmt 1 discriminator 2 view .LVU852
 536:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2328              		.loc 1 536 26 is_stmt 0 discriminator 2 view .LVU853
 2329 00d2 049B     		ldr	r3, [sp, #16]
 2330 00d4 05EB4305 		add	r5, r5, r3, lsl #1
 2331              	.LVL289:
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2332              		.loc 1 528 52 is_stmt 1 discriminator 2 view .LVU854
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2333              		.loc 1 528 53 is_stmt 0 discriminator 2 view .LVU855
 2334 00d8 039B     		ldr	r3, [sp, #12]
 2335 00da 0133     		adds	r3, r3, #1
 2336 00dc 0393     		str	r3, [sp, #12]
 2337              	.LVL290:
 2338              	.L127:
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2339              		.loc 1 528 32 is_stmt 1 discriminator 1 view .LVU856
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 87


 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2340              		.loc 1 528 46 is_stmt 0 discriminator 1 view .LVU857
 2341 00de B8F90630 		ldrsh	r3, [r8, #6]
 528:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2342              		.loc 1 528 9 discriminator 1 view .LVU858
 2343 00e2 039A     		ldr	r2, [sp, #12]
 2344 00e4 9342     		cmp	r3, r2
 2345 00e6 B0DB     		blt	.L123
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2346              		.loc 1 529 13 is_stmt 1 view .LVU859
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2347              		.loc 1 529 30 is_stmt 0 view .LVU860
 2348 00e8 B8F90040 		ldrsh	r4, [r8]
 2349              	.LVL291:
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2350              		.loc 1 529 13 view .LVU861
 2351 00ec E5E7     		b	.L128
 2352              	.LVL292:
 2353              	.L148:
 529:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(last_dest_color.full != disp_buf_tmp[x].full) {
 2354              		.loc 1 529 13 view .LVU862
 2355              	.LBE185:
 2356              	.LBB186:
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2357              		.loc 1 559 63 discriminator 1 view .LVU863
 2358 00ee 1FFA8CF3 		uxth	r3, ip
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2359              		.loc 1 559 87 discriminator 1 view .LVU864
 2360 00f2 35F814E0 		ldrh	lr, [r5, r4, lsl #1]
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2361              		.loc 1 559 45 discriminator 1 view .LVU865
 2362 00f6 7345     		cmp	r3, lr
 2363 00f8 18D1     		bne	.L135
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2364              		.loc 1 559 45 discriminator 1 view .LVU866
 2365 00fa 08E0     		b	.L136
 2366              	.L142:
 2367              	.LBB176:
 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2368              		.loc 1 560 30 view .LVU867
 2369 00fc 029A     		ldr	r2, [sp, #8]
 2370              	.L137:
 2371              	.LVL293:
 562:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 2372              		.loc 1 562 21 is_stmt 1 discriminator 4 view .LVU868
 562:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 2373              		.loc 1 562 38 is_stmt 0 discriminator 4 view .LVU869
 2374 00fe 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 2375              	.LVL294:
 562:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 2376              		.loc 1 562 38 discriminator 4 view .LVU870
 2377 0102 5046     		mov	r0, r10	@ movhi
 2378              	.LVL295:
 562:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_mask = mask_tmp[x];
 2379              		.loc 1 562 38 discriminator 4 view .LVU871
 2380 0104 D847     		blx	fp
 2381              	.LVL296:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 88


 563:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 2382              		.loc 1 563 21 is_stmt 1 discriminator 4 view .LVU872
 563:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     last_dest_color.full = disp_buf_tmp[x].full;
 2383              		.loc 1 563 31 is_stmt 0 discriminator 4 view .LVU873
 2384 0106 99F80010 		ldrb	r1, [r9]	@ zero_extendqisi2
 2385              	.LVL297:
 564:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2386              		.loc 1 564 21 is_stmt 1 discriminator 4 view .LVU874
 564:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2387              		.loc 1 564 42 is_stmt 0 discriminator 4 view .LVU875
 2388 010a 35F816C0 		ldrh	ip, [r5, r6, lsl #1]
 2389              	.LVL298:
 2390              	.L136:
 564:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 2391              		.loc 1 564 42 discriminator 4 view .LVU876
 2392              	.LBE176:
 566:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2393              		.loc 1 566 17 is_stmt 1 view .LVU877
 566:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2394              		.loc 1 566 33 is_stmt 0 view .LVU878
 2395 010e 25F81600 		strh	r0, [r5, r6, lsl #1]	@ movhi
 2396              	.L134:
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2397              		.loc 1 557 56 is_stmt 1 discriminator 2 view .LVU879
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2398              		.loc 1 557 57 is_stmt 0 discriminator 2 view .LVU880
 2399 0112 0134     		adds	r4, r4, #1
 2400              	.LVL299:
 2401              	.L133:
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2402              		.loc 1 557 36 is_stmt 1 discriminator 1 view .LVU881
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2403              		.loc 1 557 50 is_stmt 0 discriminator 1 view .LVU882
 2404 0114 B8F90430 		ldrsh	r3, [r8, #4]
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2405              		.loc 1 557 13 discriminator 1 view .LVU883
 2406 0118 A342     		cmp	r3, r4
 2407 011a 0EDB     		blt	.L147
 558:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 2408              		.loc 1 558 17 is_stmt 1 view .LVU884
 558:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 2409              		.loc 1 558 28 is_stmt 0 view .LVU885
 2410 011c 2646     		mov	r6, r4
 2411 011e 07EB0409 		add	r9, r7, r4
 2412 0122 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 558:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] != last_mask || last_dest_color.full != disp_buf_tmp[x].full) {
 2413              		.loc 1 558 19 view .LVU886
 2414 0124 002A     		cmp	r2, #0
 2415 0126 F4D0     		beq	.L134
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2416              		.loc 1 559 17 is_stmt 1 view .LVU887
 559:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask_
 2417              		.loc 1 559 19 is_stmt 0 view .LVU888
 2418 0128 8A42     		cmp	r2, r1
 2419 012a E0D0     		beq	.L148
 2420              	.L135:
 2421              	.LBB177:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 89


 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2422              		.loc 1 560 21 is_stmt 1 view .LVU889
 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2423              		.loc 1 560 30 is_stmt 0 view .LVU890
 2424 012c FC2A     		cmp	r2, #252
 2425 012e E5D8     		bhi	.L142
 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2426              		.loc 1 560 74 discriminator 1 view .LVU891
 2427 0130 029B     		ldr	r3, [sp, #8]
 2428 0132 02FB03F2 		mul	r2, r2, r3
 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2429              		.loc 1 560 30 discriminator 1 view .LVU892
 2430 0136 120A     		lsrs	r2, r2, #8
 2431 0138 E1E7     		b	.L137
 2432              	.L147:
 560:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2433              		.loc 1 560 30 discriminator 1 view .LVU893
 2434              	.LBE177:
 568:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 2435              		.loc 1 568 13 is_stmt 1 discriminator 2 view .LVU894
 568:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 2436              		.loc 1 568 26 is_stmt 0 discriminator 2 view .LVU895
 2437 013a 049B     		ldr	r3, [sp, #16]
 2438 013c 05EB4305 		add	r5, r5, r3, lsl #1
 2439              	.LVL300:
 569:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2440              		.loc 1 569 13 is_stmt 1 discriminator 2 view .LVU896
 569:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2441              		.loc 1 569 22 is_stmt 0 discriminator 2 view .LVU897
 2442 0140 059B     		ldr	r3, [sp, #20]
 2443 0142 1F44     		add	r7, r7, r3
 2444              	.LVL301:
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2445              		.loc 1 556 52 is_stmt 1 discriminator 2 view .LVU898
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2446              		.loc 1 556 53 is_stmt 0 discriminator 2 view .LVU899
 2447 0144 039B     		ldr	r3, [sp, #12]
 2448 0146 0133     		adds	r3, r3, #1
 2449 0148 0393     		str	r3, [sp, #12]
 2450              	.LVL302:
 2451              	.L132:
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2452              		.loc 1 556 32 is_stmt 1 discriminator 1 view .LVU900
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2453              		.loc 1 556 46 is_stmt 0 discriminator 1 view .LVU901
 2454 014a B8F90630 		ldrsh	r3, [r8, #6]
 556:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2455              		.loc 1 556 9 discriminator 1 view .LVU902
 2456 014e 039A     		ldr	r2, [sp, #12]
 2457 0150 9342     		cmp	r3, r2
 2458 0152 FFF67AAF 		blt	.L123
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2459              		.loc 1 557 13 is_stmt 1 view .LVU903
 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2460              		.loc 1 557 30 is_stmt 0 view .LVU904
 2461 0156 B8F90040 		ldrsh	r4, [r8]
 2462              	.LVL303:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 90


 557:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2463              		.loc 1 557 13 view .LVU905
 2464 015a DBE7     		b	.L133
 2465              	.L150:
 2466              		.align	2
 2467              	.L149:
 2468 015c 24000000 		.word	.LC1
 2469 0160 00000000 		.word	.LANCHOR0
 2470 0164 00000000 		.word	.LC0
 2471 0168 1FF8E007 		.word	132184095
 2472 016c 00000000 		.word	color_blend_true_color_additive
 2473 0170 00000000 		.word	color_blend_true_color_subtractive
 2474              	.LBE186:
 2475              		.cfi_endproc
 2476              	.LFE156:
 2478              		.section	.text.map_blended,"ax",%progbits
 2479              		.align	1
 2480              		.syntax unified
 2481              		.thumb
 2482              		.thumb_func
 2483              		.fpu fpv4-sp-d16
 2485              	map_blended:
 2486              	.LVL304:
 2487              	.LFB159:
 876:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2488              		.loc 1 876 1 is_stmt 1 view -0
 2489              		.cfi_startproc
 2490              		@ args = 20, pretend = 0, frame = 16
 2491              		@ frame_needed = 0, uses_anonymous_args = 0
 876:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2492              		.loc 1 876 1 is_stmt 0 view .LVU907
 2493 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2494              	.LCFI18:
 2495              		.cfi_def_cfa_offset 36
 2496              		.cfi_offset 4, -36
 2497              		.cfi_offset 5, -32
 2498              		.cfi_offset 6, -28
 2499              		.cfi_offset 7, -24
 2500              		.cfi_offset 8, -20
 2501              		.cfi_offset 9, -16
 2502              		.cfi_offset 10, -12
 2503              		.cfi_offset 11, -8
 2504              		.cfi_offset 14, -4
 2505 0004 87B0     		sub	sp, sp, #28
 2506              	.LCFI19:
 2507              		.cfi_def_cfa_offset 64
 2508 0006 1746     		mov	r7, r2
 2509 0008 9DF844A0 		ldrb	r10, [sp, #68]	@ zero_extendqisi2
 2510 000c 9DF850E0 		ldrb	lr, [sp, #80]	@ zero_extendqisi2
 879:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2511              		.loc 1 879 5 is_stmt 1 view .LVU908
 2512              	.LVL305:
 2513              	.LBB187:
 2514              	.LBI187:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2515              		.loc 3 133 26 view .LVU909
 2516              	.LBB188:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 91


 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2517              		.loc 3 135 5 view .LVU910
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2518              		.loc 3 135 31 is_stmt 0 view .LVU911
 2519 0010 8288     		ldrh	r2, [r0, #4]
 2520              	.LVL306:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2521              		.loc 3 135 44 view .LVU912
 2522 0012 B0F90040 		ldrsh	r4, [r0]
 2523 0016 A5B2     		uxth	r5, r4
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2524              		.loc 3 135 36 view .LVU913
 2525 0018 521B     		subs	r2, r2, r5
 2526 001a 92B2     		uxth	r2, r2
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2527              		.loc 3 135 49 view .LVU914
 2528 001c 0132     		adds	r2, r2, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2529              		.loc 3 135 12 view .LVU915
 2530 001e 12B2     		sxth	r2, r2
 2531 0020 0492     		str	r2, [sp, #16]
 2532              	.LVL307:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2533              		.loc 3 135 12 view .LVU916
 2534              	.LBE188:
 2535              	.LBE187:
 882:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2536              		.loc 1 882 5 is_stmt 1 view .LVU917
 2537              	.LBB189:
 2538              	.LBI189:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2539              		.loc 3 133 26 view .LVU918
 2540              	.LBB190:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2541              		.loc 3 135 5 view .LVU919
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2542              		.loc 3 135 31 is_stmt 0 view .LVU920
 2543 0022 BD88     		ldrh	r5, [r7, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2544              		.loc 3 135 44 view .LVU921
 2545 0024 B7F90020 		ldrsh	r2, [r7]
 2546              	.LVL308:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2547              		.loc 3 135 44 view .LVU922
 2548 0028 96B2     		uxth	r6, r2
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2549              		.loc 3 135 36 view .LVU923
 2550 002a AD1B     		subs	r5, r5, r6
 2551 002c ADB2     		uxth	r5, r5
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2552              		.loc 3 135 49 view .LVU924
 2553 002e 0135     		adds	r5, r5, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2554              		.loc 3 135 12 view .LVU925
 2555 0030 2DB2     		sxth	r5, r5
 2556 0032 0595     		str	r5, [sp, #20]
 2557              	.LVL309:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 92


 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2558              		.loc 3 135 12 view .LVU926
 2559              	.LBE190:
 2560              	.LBE189:
 885:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2561              		.loc 1 885 5 is_stmt 1 view .LVU927
 2562              	.LBB191:
 2563              	.LBI191:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2564              		.loc 3 133 26 view .LVU928
 2565              	.LBB192:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2566              		.loc 3 135 5 view .LVU929
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2567              		.loc 3 135 31 is_stmt 0 view .LVU930
 2568 0034 9D88     		ldrh	r5, [r3, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2569              		.loc 3 135 44 view .LVU931
 2570 0036 B3F900C0 		ldrsh	ip, [r3]
 2571 003a 1FFA8CF6 		uxth	r6, ip
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2572              		.loc 3 135 36 view .LVU932
 2573 003e AD1B     		subs	r5, r5, r6
 2574 0040 ADB2     		uxth	r5, r5
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2575              		.loc 3 135 49 view .LVU933
 2576 0042 0135     		adds	r5, r5, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2577              		.loc 3 135 12 view .LVU934
 2578 0044 2DB2     		sxth	r5, r5
 2579 0046 0395     		str	r5, [sp, #12]
 2580              	.LVL310:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2581              		.loc 3 135 12 view .LVU935
 2582              	.LBE192:
 2583              	.LBE191:
 888:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2584              		.loc 1 888 5 is_stmt 1 view .LVU936
 888:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2585              		.loc 1 888 62 is_stmt 0 view .LVU937
 2586 0048 B7F90250 		ldrsh	r5, [r7, #2]
 2587              	.LVL311:
 888:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2588              		.loc 1 888 51 view .LVU938
 2589 004c 049E     		ldr	r6, [sp, #16]
 2590 004e 0295     		str	r5, [sp, #8]
 2591 0050 06FB05F6 		mul	r6, r6, r5
 888:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2592              		.loc 1 888 18 view .LVU939
 2593 0054 01EB4606 		add	r6, r1, r6, lsl #1
 2594              	.LVL312:
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2595              		.loc 1 891 5 is_stmt 1 view .LVU940
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2596              		.loc 1 891 82 is_stmt 0 view .LVU941
 2597 0058 B3F90250 		ldrsh	r5, [r3, #2]
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 93


 2598              		.loc 1 891 98 view .LVU942
 2599 005c B0F90230 		ldrsh	r3, [r0, #2]
 2600              	.LVL313:
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2601              		.loc 1 891 87 view .LVU943
 2602 0060 ED1A     		subs	r5, r5, r3
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2603              		.loc 1 891 71 view .LVU944
 2604 0062 029B     		ldr	r3, [sp, #8]
 2605 0064 5D1B     		subs	r5, r3, r5
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2606              		.loc 1 891 54 view .LVU945
 2607 0066 039B     		ldr	r3, [sp, #12]
 2608 0068 03FB05F5 		mul	r5, r3, r5
 891:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2609              		.loc 1 891 24 view .LVU946
 2610 006c 109B     		ldr	r3, [sp, #64]
 2611 006e 03EB4505 		add	r5, r3, r5, lsl #1
 2612              	.LVL314:
 893:lvgl/lvgl/src/draw/lv_draw_blend.c ****     switch(mode) {
 2613              		.loc 1 893 5 is_stmt 1 view .LVU947
 894:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 2614              		.loc 1 894 5 view .LVU948
 2615 0072 BEF1010F 		cmp	lr, #1
 2616 0076 0ED0     		beq	.L165
 2617 0078 BEF1020F 		cmp	lr, #2
 2618 007c 0ED0     		beq	.L166
 902:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2619              		.loc 1 902 13 view .LVU949
 2620 007e 354B     		ldr	r3, .L172
 2621 0080 0093     		str	r3, [sp]
 2622 0082 354B     		ldr	r3, .L172+4
 2623 0084 40F28632 		movw	r2, #902
 2624 0088 3449     		ldr	r1, .L172+8
 2625              	.LVL315:
 902:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2626              		.loc 1 902 13 is_stmt 0 view .LVU950
 2627 008a 0220     		movs	r0, #2
 2628              	.LVL316:
 902:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2629              		.loc 1 902 13 view .LVU951
 2630 008c FFF7FEFF 		bl	_lv_log_add
 2631              	.LVL317:
 902:lvgl/lvgl/src/draw/lv_draw_blend.c ****             return;
 2632              		.loc 1 902 64 is_stmt 1 view .LVU952
 903:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 2633              		.loc 1 903 13 view .LVU953
 2634              	.L151:
 944:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2635              		.loc 1 944 1 is_stmt 0 view .LVU954
 2636 0090 07B0     		add	sp, sp, #28
 2637              	.LCFI20:
 2638              		.cfi_remember_state
 2639              		.cfi_def_cfa_offset 36
 2640              		@ sp needed
 2641 0092 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2642              	.LVL318:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 94


 2643              	.L165:
 2644              	.LCFI21:
 2645              		.cfi_restore_state
 894:lvgl/lvgl/src/draw/lv_draw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 2646              		.loc 1 894 5 view .LVU955
 2647 0096 DFF8C8B0 		ldr	fp, .L172+12
 2648 009a 01E0     		b	.L152
 2649              	.L166:
 899:lvgl/lvgl/src/draw/lv_draw_blend.c ****             break;
 2650              		.loc 1 899 22 view .LVU956
 2651 009c DFF8C4B0 		ldr	fp, .L172+16
 2652              	.L152:
 2653              	.LVL319:
 906:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 2654              		.loc 1 906 5 is_stmt 1 view .LVU957
 907:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2655              		.loc 1 907 5 view .LVU958
 910:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 2656              		.loc 1 910 5 view .LVU959
 910:lvgl/lvgl/src/draw/lv_draw_blend.c ****         /*Go to the first px of the row*/
 2657              		.loc 1 910 7 is_stmt 0 view .LVU960
 2658 00a0 9DF84C30 		ldrb	r3, [sp, #76]	@ zero_extendqisi2
 2659 00a4 012B     		cmp	r3, #1
 2660 00a6 05D0     		beq	.L169
 2661              	.LBB193:
 930:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2662              		.loc 1 930 9 is_stmt 1 view .LVU961
 930:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2663              		.loc 1 930 26 is_stmt 0 view .LVU962
 2664 00a8 129B     		ldr	r3, [sp, #72]
 2665 00aa A3EB0209 		sub	r9, r3, r2
 2666              	.LVL320:
 932:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2667              		.loc 1 932 9 is_stmt 1 view .LVU963
 932:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(y = draw_area->y1; y <= draw_area->y2; y++) {
 2668              		.loc 1 932 21 is_stmt 0 view .LVU964
 2669 00ae A5EB4208 		sub	r8, r5, r2, lsl #1
 2670              	.LVL321:
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2671              		.loc 1 933 9 is_stmt 1 view .LVU965
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2672              		.loc 1 933 9 is_stmt 0 view .LVU966
 2673 00b2 46E0     		b	.L159
 2674              	.LVL322:
 2675              	.L169:
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2676              		.loc 1 933 9 view .LVU967
 2677              	.LBE193:
 912:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2678              		.loc 1 912 9 is_stmt 1 view .LVU968
 915:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2679              		.loc 1 915 9 view .LVU969
 915:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2680              		.loc 1 915 21 is_stmt 0 view .LVU970
 2681 00b4 A4EB0C04 		sub	r4, r4, ip
 2682 00b8 05EB4405 		add	r5, r5, r4, lsl #1
 2683              	.LVL323:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 95


 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2684              		.loc 1 917 9 is_stmt 1 view .LVU971
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2685              		.loc 1 917 9 is_stmt 0 view .LVU972
 2686 00bc DDF80880 		ldr	r8, [sp, #8]
 2687 00c0 DDF81090 		ldr	r9, [sp, #16]
 2688 00c4 06E0     		b	.L155
 2689              	.LVL324:
 2690              	.L170:
 921:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 2691              		.loc 1 921 13 is_stmt 1 discriminator 2 view .LVU973
 921:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 2692              		.loc 1 921 26 is_stmt 0 discriminator 2 view .LVU974
 2693 00c6 06EB4906 		add	r6, r6, r9, lsl #1
 2694              	.LVL325:
 922:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2695              		.loc 1 922 13 is_stmt 1 discriminator 2 view .LVU975
 922:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2696              		.loc 1 922 25 is_stmt 0 discriminator 2 view .LVU976
 2697 00ca 039B     		ldr	r3, [sp, #12]
 2698 00cc 05EB4305 		add	r5, r5, r3, lsl #1
 2699              	.LVL326:
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2700              		.loc 1 917 52 is_stmt 1 discriminator 2 view .LVU977
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2701              		.loc 1 917 53 is_stmt 0 discriminator 2 view .LVU978
 2702 00d0 08F10108 		add	r8, r8, #1
 2703              	.LVL327:
 2704              	.L155:
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2705              		.loc 1 917 32 is_stmt 1 discriminator 1 view .LVU979
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2706              		.loc 1 917 46 is_stmt 0 discriminator 1 view .LVU980
 2707 00d4 B7F90630 		ldrsh	r3, [r7, #6]
 917:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2708              		.loc 1 917 9 discriminator 1 view .LVU981
 2709 00d8 4345     		cmp	r3, r8
 2710 00da D9DB     		blt	.L151
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2711              		.loc 1 918 13 is_stmt 1 view .LVU982
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2712              		.loc 1 918 30 is_stmt 0 view .LVU983
 2713 00dc B7F90040 		ldrsh	r4, [r7]
 2714              	.LVL328:
 2715              	.L156:
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2716              		.loc 1 918 36 is_stmt 1 discriminator 1 view .LVU984
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2717              		.loc 1 918 50 is_stmt 0 discriminator 1 view .LVU985
 2718 00e0 B7F90430 		ldrsh	r3, [r7, #4]
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2719              		.loc 1 918 13 discriminator 1 view .LVU986
 2720 00e4 A342     		cmp	r3, r4
 2721 00e6 EEDB     		blt	.L170
 919:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2722              		.loc 1 919 17 is_stmt 1 discriminator 3 view .LVU987
 919:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 96


 2723              		.loc 1 919 35 is_stmt 0 discriminator 3 view .LVU988
 2724 00e8 5246     		mov	r2, r10
 2725 00ea 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2726 00ee 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 2727 00f2 D847     		blx	fp
 2728              	.LVL329:
 2729 00f4 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2730              		.loc 1 918 56 is_stmt 1 discriminator 3 view .LVU989
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2731              		.loc 1 918 57 is_stmt 0 discriminator 3 view .LVU990
 2732 00f8 0134     		adds	r4, r4, #1
 2733              	.LVL330:
 918:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa);
 2734              		.loc 1 918 57 discriminator 3 view .LVU991
 2735 00fa F1E7     		b	.L156
 2736              	.LVL331:
 2737              	.L167:
 2738              	.LBB196:
 2739              	.LBB194:
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2740              		.loc 1 936 26 view .LVU992
 2741 00fc 5246     		mov	r2, r10
 2742              	.L162:
 2743              	.LVL332:
 937:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2744              		.loc 1 937 17 is_stmt 1 discriminator 4 view .LVU993
 937:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2745              		.loc 1 937 35 is_stmt 0 discriminator 4 view .LVU994
 2746 00fe 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 2747 0102 38F81500 		ldrh	r0, [r8, r5, lsl #1]
 2748 0106 D847     		blx	fp
 2749              	.LVL333:
 937:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2750              		.loc 1 937 35 discriminator 4 view .LVU995
 2751 0108 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 2752              	.L161:
 937:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 2753              		.loc 1 937 35 discriminator 4 view .LVU996
 2754              	.LBE194:
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2755              		.loc 1 934 56 is_stmt 1 discriminator 2 view .LVU997
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2756              		.loc 1 934 57 is_stmt 0 discriminator 2 view .LVU998
 2757 010c 0134     		adds	r4, r4, #1
 2758              	.LVL334:
 2759              	.L160:
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2760              		.loc 1 934 36 is_stmt 1 discriminator 1 view .LVU999
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2761              		.loc 1 934 50 is_stmt 0 discriminator 1 view .LVU1000
 2762 010e B7F90430 		ldrsh	r3, [r7, #4]
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2763              		.loc 1 934 13 discriminator 1 view .LVU1001
 2764 0112 A342     		cmp	r3, r4
 2765 0114 0ADB     		blt	.L171
 2766              	.LBB195:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 97


 935:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 2767              		.loc 1 935 17 is_stmt 1 view .LVU1002
 935:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 2768              		.loc 1 935 28 is_stmt 0 view .LVU1003
 2769 0116 2546     		mov	r5, r4
 2770 0118 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 935:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_opa_t opa_tmp = mask_tmp[x] >= LV_OPA_MAX ? opa : ((opa * mask_tmp[x]) >> 8);
 2771              		.loc 1 935 19 view .LVU1004
 2772 011c 002A     		cmp	r2, #0
 2773 011e F5D0     		beq	.L161
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2774              		.loc 1 936 17 is_stmt 1 view .LVU1005
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2775              		.loc 1 936 26 is_stmt 0 view .LVU1006
 2776 0120 FC2A     		cmp	r2, #252
 2777 0122 EBD8     		bhi	.L167
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2778              		.loc 1 936 76 discriminator 1 view .LVU1007
 2779 0124 02FB0AF2 		mul	r2, r2, r10
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2780              		.loc 1 936 26 discriminator 1 view .LVU1008
 2781 0128 120A     		lsrs	r2, r2, #8
 2782 012a E8E7     		b	.L162
 2783              	.L171:
 936:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_tmp[x] = blend_fp(map_buf_tmp[x], disp_buf_tmp[x], opa_tmp);
 2784              		.loc 1 936 26 discriminator 1 view .LVU1009
 2785              	.LBE195:
 939:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 2786              		.loc 1 939 13 is_stmt 1 discriminator 2 view .LVU1010
 939:lvgl/lvgl/src/draw/lv_draw_blend.c ****             mask_tmp += draw_area_w;
 2787              		.loc 1 939 26 is_stmt 0 discriminator 2 view .LVU1011
 2788 012c 049B     		ldr	r3, [sp, #16]
 2789 012e 06EB4306 		add	r6, r6, r3, lsl #1
 2790              	.LVL335:
 940:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 2791              		.loc 1 940 13 is_stmt 1 discriminator 2 view .LVU1012
 940:lvgl/lvgl/src/draw/lv_draw_blend.c ****             map_buf_tmp += map_w;
 2792              		.loc 1 940 22 is_stmt 0 discriminator 2 view .LVU1013
 2793 0132 059B     		ldr	r3, [sp, #20]
 2794 0134 9944     		add	r9, r9, r3
 2795              	.LVL336:
 941:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2796              		.loc 1 941 13 is_stmt 1 discriminator 2 view .LVU1014
 941:lvgl/lvgl/src/draw/lv_draw_blend.c ****         }
 2797              		.loc 1 941 25 is_stmt 0 discriminator 2 view .LVU1015
 2798 0136 039B     		ldr	r3, [sp, #12]
 2799 0138 08EB4308 		add	r8, r8, r3, lsl #1
 2800              	.LVL337:
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2801              		.loc 1 933 52 is_stmt 1 discriminator 2 view .LVU1016
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2802              		.loc 1 933 53 is_stmt 0 discriminator 2 view .LVU1017
 2803 013c 029B     		ldr	r3, [sp, #8]
 2804 013e 0133     		adds	r3, r3, #1
 2805 0140 0293     		str	r3, [sp, #8]
 2806              	.LVL338:
 2807              	.L159:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 98


 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2808              		.loc 1 933 32 is_stmt 1 discriminator 1 view .LVU1018
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2809              		.loc 1 933 46 is_stmt 0 discriminator 1 view .LVU1019
 2810 0142 B7F90630 		ldrsh	r3, [r7, #6]
 933:lvgl/lvgl/src/draw/lv_draw_blend.c ****             for(x = draw_area->x1; x <= draw_area->x2; x++) {
 2811              		.loc 1 933 9 discriminator 1 view .LVU1020
 2812 0146 029A     		ldr	r2, [sp, #8]
 2813 0148 9342     		cmp	r3, r2
 2814 014a A1DB     		blt	.L151
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2815              		.loc 1 934 13 is_stmt 1 view .LVU1021
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2816              		.loc 1 934 30 is_stmt 0 view .LVU1022
 2817 014c B7F90040 		ldrsh	r4, [r7]
 2818              	.LVL339:
 934:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 if(mask_tmp[x] == 0) continue;
 2819              		.loc 1 934 13 view .LVU1023
 2820 0150 DDE7     		b	.L160
 2821              	.L173:
 2822 0152 00BF     		.align	2
 2823              	.L172:
 2824 0154 24000000 		.word	.LC1
 2825 0158 00000000 		.word	.LANCHOR1
 2826 015c 00000000 		.word	.LC0
 2827 0160 00000000 		.word	color_blend_true_color_additive
 2828 0164 00000000 		.word	color_blend_true_color_subtractive
 2829              	.LBE196:
 2830              		.cfi_endproc
 2831              	.LFE159:
 2833              		.section	.text.map_normal,"ax",%progbits
 2834              		.align	1
 2835              		.syntax unified
 2836              		.thumb
 2837              		.thumb_func
 2838              		.fpu fpv4-sp-d16
 2840              	map_normal:
 2841              	.LVL340:
 2842              	.LFB158:
 643:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2843              		.loc 1 643 1 is_stmt 1 view -0
 2844              		.cfi_startproc
 2845              		@ args = 16, pretend = 0, frame = 16
 2846              		@ frame_needed = 0, uses_anonymous_args = 0
 643:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2847              		.loc 1 643 1 is_stmt 0 view .LVU1025
 2848 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2849              	.LCFI22:
 2850              		.cfi_def_cfa_offset 36
 2851              		.cfi_offset 4, -36
 2852              		.cfi_offset 5, -32
 2853              		.cfi_offset 6, -28
 2854              		.cfi_offset 7, -24
 2855              		.cfi_offset 8, -20
 2856              		.cfi_offset 9, -16
 2857              		.cfi_offset 10, -12
 2858              		.cfi_offset 11, -8
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 99


 2859              		.cfi_offset 14, -4
 2860 0004 85B0     		sub	sp, sp, #20
 2861              	.LCFI23:
 2862              		.cfi_def_cfa_offset 56
 2863 0006 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
 2864 000a DDF84090 		ldr	r9, [sp, #64]
 646:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2865              		.loc 1 646 5 is_stmt 1 view .LVU1026
 2866              	.LVL341:
 2867              	.LBB197:
 2868              	.LBI197:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2869              		.loc 3 133 26 view .LVU1027
 2870              	.LBB198:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2871              		.loc 3 135 5 view .LVU1028
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2872              		.loc 3 135 31 is_stmt 0 view .LVU1029
 2873 000e 8788     		ldrh	r7, [r0, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2874              		.loc 3 135 44 view .LVU1030
 2875 0010 B0F900B0 		ldrsh	fp, [r0]
 2876 0014 1FFA8BF4 		uxth	r4, fp
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2877              		.loc 3 135 36 view .LVU1031
 2878 0018 3F1B     		subs	r7, r7, r4
 2879 001a BFB2     		uxth	r7, r7
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2880              		.loc 3 135 49 view .LVU1032
 2881 001c 0137     		adds	r7, r7, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2882              		.loc 3 135 12 view .LVU1033
 2883 001e 3FB2     		sxth	r7, r7
 2884              	.LVL342:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2885              		.loc 3 135 12 view .LVU1034
 2886              	.LBE198:
 2887              	.LBE197:
 648:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2888              		.loc 1 648 5 is_stmt 1 view .LVU1035
 2889              	.LBB199:
 2890              	.LBI199:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2891              		.loc 3 133 26 view .LVU1036
 2892              	.LBB200:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2893              		.loc 3 135 5 view .LVU1037
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2894              		.loc 3 135 31 is_stmt 0 view .LVU1038
 2895 0020 9488     		ldrh	r4, [r2, #4]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2896              		.loc 3 135 44 view .LVU1039
 2897 0022 B2F900E0 		ldrsh	lr, [r2]
 2898 0026 1FFA8EF5 		uxth	r5, lr
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2899              		.loc 3 135 36 view .LVU1040
 2900 002a 641B     		subs	r4, r4, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 100


 2901 002c A4B2     		uxth	r4, r4
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2902              		.loc 3 135 49 view .LVU1041
 2903 002e 0134     		adds	r4, r4, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2904              		.loc 3 135 12 view .LVU1042
 2905 0030 24B2     		sxth	r4, r4
 2906 0032 0294     		str	r4, [sp, #8]
 2907              	.LVL343:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2908              		.loc 3 135 12 view .LVU1043
 2909              	.LBE200:
 2910              	.LBE199:
 648:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t draw_area_h = lv_area_get_height(draw_area);
 2911              		.loc 1 648 13 view .LVU1044
 2912 0034 A446     		mov	ip, r4
 2913              	.LVL344:
 649:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2914              		.loc 1 649 5 is_stmt 1 view .LVU1045
 2915              	.LBB201:
 2916              	.LBI201:
 143:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2917              		.loc 3 143 26 view .LVU1046
 2918              	.LBB202:
 2919              		.loc 3 145 5 view .LVU1047
 2920              		.loc 3 145 31 is_stmt 0 view .LVU1048
 2921 0036 D488     		ldrh	r4, [r2, #6]
 2922              	.LVL345:
 2923              		.loc 3 145 44 view .LVU1049
 2924 0038 B2F90220 		ldrsh	r2, [r2, #2]
 2925              	.LVL346:
 2926              		.loc 3 145 44 view .LVU1050
 2927 003c 95B2     		uxth	r5, r2
 2928              		.loc 3 145 36 view .LVU1051
 2929 003e 641B     		subs	r4, r4, r5
 2930 0040 A4B2     		uxth	r4, r4
 2931              		.loc 3 145 49 view .LVU1052
 2932 0042 0134     		adds	r4, r4, #1
 2933              		.loc 3 145 12 view .LVU1053
 2934 0044 24B2     		sxth	r4, r4
 2935 0046 0194     		str	r4, [sp, #4]
 2936              	.LVL347:
 2937              		.loc 3 145 12 view .LVU1054
 2938              	.LBE202:
 2939              	.LBE201:
 652:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2940              		.loc 1 652 5 is_stmt 1 view .LVU1055
 2941              	.LBB203:
 2942              	.LBI203:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 2943              		.loc 3 133 26 view .LVU1056
 2944              	.LBB204:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2945              		.loc 3 135 5 view .LVU1057
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2946              		.loc 3 135 31 is_stmt 0 view .LVU1058
 2947 0048 9C88     		ldrh	r4, [r3, #4]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 101


 2948              	.LVL348:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2949              		.loc 3 135 44 view .LVU1059
 2950 004a B3F90080 		ldrsh	r8, [r3]
 2951 004e 1FFA88F5 		uxth	r5, r8
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2952              		.loc 3 135 36 view .LVU1060
 2953 0052 661B     		subs	r6, r4, r5
 2954 0054 B6B2     		uxth	r6, r6
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2955              		.loc 3 135 49 view .LVU1061
 2956 0056 0136     		adds	r6, r6, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2957              		.loc 3 135 12 view .LVU1062
 2958 0058 36B2     		sxth	r6, r6
 2959              	.LVL349:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 2960              		.loc 3 135 12 view .LVU1063
 2961              	.LBE204:
 2962              	.LBE203:
 655:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2963              		.loc 1 655 5 is_stmt 1 view .LVU1064
 655:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2964              		.loc 1 655 69 is_stmt 0 view .LVU1065
 2965 005a 07FB02E4 		mla	r4, r7, r2, lr
 655:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2966              		.loc 1 655 18 view .LVU1066
 2967 005e 01EB4404 		add	r4, r1, r4, lsl #1
 2968              	.LVL350:
 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2969              		.loc 1 658 5 is_stmt 1 view .LVU1067
 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2970              		.loc 1 658 84 is_stmt 0 view .LVU1068
 2971 0062 B3F90250 		ldrsh	r5, [r3, #2]
 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2972              		.loc 1 658 100 view .LVU1069
 2973 0066 B0F90230 		ldrsh	r3, [r0, #2]
 2974              	.LVL351:
 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2975              		.loc 1 658 89 view .LVU1070
 2976 006a ED1A     		subs	r5, r5, r3
 658:lvgl/lvgl/src/draw/lv_draw_blend.c ****     map_buf_first += (draw_area->x1 - (map_area->x1 - disp_area->x1));
 2977              		.loc 1 658 73 view .LVU1071
 2978 006c 521B     		subs	r2, r2, r5
 2979              	.LVL352:
 659:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2980              		.loc 1 659 5 is_stmt 1 view .LVU1072
 659:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2981              		.loc 1 659 53 is_stmt 0 view .LVU1073
 2982 006e A8EB0B08 		sub	r8, r8, fp
 659:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2983              		.loc 1 659 37 view .LVU1074
 2984 0072 AEEB0805 		sub	r5, lr, r8
 659:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2985              		.loc 1 659 19 view .LVU1075
 2986 0076 06FB0252 		mla	r2, r6, r2, r5
 2987              	.LVL353:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 102


 659:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2988              		.loc 1 659 19 view .LVU1076
 2989 007a 0E9D     		ldr	r5, [sp, #56]
 2990 007c 05EB4205 		add	r5, r5, r2, lsl #1
 2991              	.LVL354:
 665:lvgl/lvgl/src/draw/lv_draw_blend.c ****     int32_t y;
 2992              		.loc 1 665 5 is_stmt 1 view .LVU1077
 666:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 2993              		.loc 1 666 5 view .LVU1078
 669:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2994              		.loc 1 669 5 view .LVU1079
 669:lvgl/lvgl/src/draw/lv_draw_blend.c ****         if(opa > LV_OPA_MAX) {
 2995              		.loc 1 669 7 is_stmt 0 view .LVU1080
 2996 0080 9DF84430 		ldrb	r3, [sp, #68]	@ zero_extendqisi2
 2997 0084 012B     		cmp	r3, #1
 2998 0086 0AD0     		beq	.L216
 786:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 2999              		.loc 1 786 9 is_stmt 1 view .LVU1081
 786:lvgl/lvgl/src/draw/lv_draw_blend.c ****             /*Go to the first pixel of the row*/
 3000              		.loc 1 786 11 is_stmt 0 view .LVU1082
 3001 0088 BAF1FD0F 		cmp	r10, #253
 3002 008c 40F2AB81 		bls	.L210
 3003              	.LBB205:
 789:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3004              		.loc 1 789 13 is_stmt 1 view .LVU1083
 789:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3005              		.loc 1 789 21 is_stmt 0 view .LVU1084
 3006 0090 029B     		ldr	r3, [sp, #8]
 3007 0092 A3F1040E 		sub	lr, r3, #4
 3008              	.LVL355:
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3009              		.loc 1 791 13 is_stmt 1 view .LVU1085
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3010              		.loc 1 791 19 is_stmt 0 view .LVU1086
 3011 0096 0023     		movs	r3, #0
 3012 0098 0396     		str	r6, [sp, #12]
 3013 009a 1E46     		mov	r6, r3
 3014              	.LVL356:
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3015              		.loc 1 791 13 view .LVU1087
 3016 009c 64E1     		b	.L183
 3017              	.LVL357:
 3018              	.L216:
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3019              		.loc 1 791 13 view .LVU1088
 3020              	.LBE205:
 670:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 3021              		.loc 1 670 9 is_stmt 1 view .LVU1089
 670:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_USE_GPU_NXP_PXP
 3022              		.loc 1 670 11 is_stmt 0 view .LVU1090
 3023 009e BAF1FD0F 		cmp	r10, #253
 3024 00a2 05D8     		bhi	.L208
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3025              		.loc 1 765 19 view .LVU1091
 3026 00a4 4FF0000E 		mov	lr, #0
 3027 00a8 DDF80480 		ldr	r8, [sp, #4]
 3028 00ac B146     		mov	r9, r6
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 103


 3029 00ae 37E0     		b	.L177
 3030              	.L208:
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3031              		.loc 1 714 19 view .LVU1092
 3032 00b0 4FF00008 		mov	r8, #0
 3033 00b4 DDF80490 		ldr	r9, [sp, #4]
 3034 00b8 DDF808A0 		ldr	r10, [sp, #8]
 3035              	.LVL358:
 3036              	.L176:
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3037              		.loc 1 714 24 is_stmt 1 discriminator 1 view .LVU1093
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3038              		.loc 1 714 13 is_stmt 0 discriminator 1 view .LVU1094
 3039 00bc C845     		cmp	r8, r9
 3040 00be 80F29681 		bge	.L174
 715:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 disp_buf_first += disp_w;
 3041              		.loc 1 715 17 is_stmt 1 discriminator 3 view .LVU1095
 3042 00c2 4FEA4A02 		lsl	r2, r10, #1
 3043 00c6 2946     		mov	r1, r5
 3044 00c8 2046     		mov	r0, r4
 3045 00ca FFF7FEFF 		bl	lv_memcpy
 3046              	.LVL359:
 716:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3047              		.loc 1 716 17 discriminator 3 view .LVU1096
 716:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3048              		.loc 1 716 32 is_stmt 0 discriminator 3 view .LVU1097
 3049 00ce 04EB4704 		add	r4, r4, r7, lsl #1
 3050              	.LVL360:
 717:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3051              		.loc 1 717 17 is_stmt 1 discriminator 3 view .LVU1098
 717:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3052              		.loc 1 717 31 is_stmt 0 discriminator 3 view .LVU1099
 3053 00d2 05EB4605 		add	r5, r5, r6, lsl #1
 3054              	.LVL361:
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3055              		.loc 1 714 41 is_stmt 1 discriminator 3 view .LVU1100
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3056              		.loc 1 714 42 is_stmt 0 discriminator 3 view .LVU1101
 3057 00d6 08F10108 		add	r8, r8, #1
 3058              	.LVL362:
 714:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 lv_memcpy(disp_buf_first, map_buf_first, draw_area_w * sizeof(lv_color_t));
 3059              		.loc 1 714 42 discriminator 3 view .LVU1102
 3060 00da EFE7     		b	.L176
 3061              	.LVL363:
 3062              	.L180:
 775:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 3063              		.loc 1 775 25 is_stmt 1 discriminator 3 view .LVU1103
 3064              	.LBB220:
 3065              	.LBI220:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3066              		.loc 2 459 48 discriminator 3 view .LVU1104
 3067              	.LBB221:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3068              		.loc 2 461 5 discriminator 3 view .LVU1105
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3069              		.loc 2 465 5 discriminator 3 view .LVU1106
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 104


 3070              		.loc 2 465 17 is_stmt 0 discriminator 3 view .LVU1107
 3071 00dc 0AF1040B 		add	fp, r10, #4
 3072              	.LVL364:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3073              		.loc 2 466 5 is_stmt 1 discriminator 3 view .LVU1108
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3074              		.loc 2 466 42 is_stmt 0 discriminator 3 view .LVU1109
 3075 00e0 34F81020 		ldrh	r2, [r4, r0, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3076              		.loc 2 466 19 discriminator 3 view .LVU1110
 3077 00e4 42EA0242 		orr	r2, r2, r2, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3078              		.loc 2 466 14 discriminator 3 view .LVU1111
 3079 00e8 C24E     		ldr	r6, .L226
 3080 00ea 3240     		ands	r2, r2, r6
 3081              	.LVL365:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3082              		.loc 2 467 5 is_stmt 1 discriminator 3 view .LVU1112
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3083              		.loc 2 467 42 is_stmt 0 discriminator 3 view .LVU1113
 3084 00ec 35F81010 		ldrh	r1, [r5, r0, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3085              		.loc 2 467 19 discriminator 3 view .LVU1114
 3086 00f0 41EA0141 		orr	r1, r1, r1, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3087              		.loc 2 467 14 discriminator 3 view .LVU1115
 3088 00f4 3140     		ands	r1, r1, r6
 3089              	.LVL366:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3090              		.loc 2 468 5 is_stmt 1 discriminator 3 view .LVU1116
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3091              		.loc 2 468 30 is_stmt 0 discriminator 3 view .LVU1117
 3092 00f6 891A     		subs	r1, r1, r2
 3093              	.LVL367:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3094              		.loc 2 468 36 discriminator 3 view .LVU1118
 3095 00f8 4FEADB0B 		lsr	fp, fp, #3
 3096 00fc 01FB0BF3 		mul	r3, r1, fp
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3097              		.loc 2 468 49 discriminator 3 view .LVU1119
 3098 0100 02EB5313 		add	r3, r2, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3099              		.loc 2 468 14 discriminator 3 view .LVU1120
 3100 0104 3340     		ands	r3, r3, r6
 3101              	.LVL368:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3102              		.loc 2 469 5 is_stmt 1 discriminator 3 view .LVU1121
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3103              		.loc 2 469 16 is_stmt 0 discriminator 3 view .LVU1122
 3104 0106 43EA1343 		orr	r3, r3, r3, lsr #16
 3105              	.LVL369:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3106              		.loc 2 484 5 is_stmt 1 discriminator 3 view .LVU1123
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3107              		.loc 2 484 5 is_stmt 0 discriminator 3 view .LVU1124
 3108              	.LBE221:
 3109              	.LBE220:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 105


 775:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     }
 3110              		.loc 1 775 45 discriminator 3 view .LVU1125
 3111 010a 24F81030 		strh	r3, [r4, r0, lsl #1]	@ movhi
 766:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3112              		.loc 1 766 45 is_stmt 1 discriminator 3 view .LVU1126
 766:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3113              		.loc 1 766 46 is_stmt 0 discriminator 3 view .LVU1127
 3114 010e 0130     		adds	r0, r0, #1
 3115              	.LVL370:
 3116              	.L181:
 766:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3117              		.loc 1 766 28 is_stmt 1 discriminator 1 view .LVU1128
 766:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3118              		.loc 1 766 17 is_stmt 0 discriminator 1 view .LVU1129
 3119 0110 6045     		cmp	r0, ip
 3120 0112 E3DB     		blt	.L180
 778:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3121              		.loc 1 778 17 is_stmt 1 discriminator 2 view .LVU1130
 778:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3122              		.loc 1 778 32 is_stmt 0 discriminator 2 view .LVU1131
 3123 0114 04EB4704 		add	r4, r4, r7, lsl #1
 3124              	.LVL371:
 779:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3125              		.loc 1 779 17 is_stmt 1 discriminator 2 view .LVU1132
 779:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3126              		.loc 1 779 31 is_stmt 0 discriminator 2 view .LVU1133
 3127 0118 05EB4905 		add	r5, r5, r9, lsl #1
 3128              	.LVL372:
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3129              		.loc 1 765 41 is_stmt 1 discriminator 2 view .LVU1134
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3130              		.loc 1 765 42 is_stmt 0 discriminator 2 view .LVU1135
 3131 011c 0EF1010E 		add	lr, lr, #1
 3132              	.LVL373:
 3133              	.L177:
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3134              		.loc 1 765 24 is_stmt 1 discriminator 1 view .LVU1136
 765:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3135              		.loc 1 765 13 is_stmt 0 discriminator 1 view .LVU1137
 3136 0120 C645     		cmp	lr, r8
 3137 0122 80F26481 		bge	.L174
 766:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3138              		.loc 1 766 23 view .LVU1138
 3139 0126 0020     		movs	r0, #0
 3140 0128 F2E7     		b	.L181
 3141              	.LVL374:
 3142              	.L185:
 3143              	.LBB222:
 3144              	.LBB206:
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3145              		.loc 1 802 21 is_stmt 1 discriminator 4 view .LVU1139
 3146              	.LBB207:
 3147              	.LBI207:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3148              		.loc 2 459 48 discriminator 4 view .LVU1140
 3149              	.LBB208:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 106


 3150              		.loc 2 461 5 discriminator 4 view .LVU1141
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3151              		.loc 2 465 5 discriminator 4 view .LVU1142
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3152              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1143
 3153 012a 0430     		adds	r0, r0, #4
 3154              	.LVL375:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3155              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1144
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3156              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1145
 3157 012c 3AF81310 		ldrh	r1, [r10, r3, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3158              		.loc 2 466 19 discriminator 4 view .LVU1146
 3159 0130 41EA0141 		orr	r1, r1, r1, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3160              		.loc 2 466 14 discriminator 4 view .LVU1147
 3161 0134 AF4C     		ldr	r4, .L226
 3162 0136 2140     		ands	r1, r1, r4
 3163              	.LVL376:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3164              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1148
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3165              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1149
 3166 0138 35F81380 		ldrh	r8, [r5, r3, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3167              		.loc 2 467 19 discriminator 4 view .LVU1150
 3168 013c 48EA0848 		orr	r8, r8, r8, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3169              		.loc 2 467 14 discriminator 4 view .LVU1151
 3170 0140 08EA0408 		and	r8, r8, r4
 3171              	.LVL377:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3172              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1152
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3173              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1153
 3174 0144 A8EB0108 		sub	r8, r8, r1
 3175              	.LVL378:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3176              		.loc 2 468 36 discriminator 4 view .LVU1154
 3177 0148 C008     		lsrs	r0, r0, #3
 3178              	.LVL379:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3179              		.loc 2 468 36 discriminator 4 view .LVU1155
 3180 014a 08FB00F0 		mul	r0, r8, r0
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3181              		.loc 2 468 49 discriminator 4 view .LVU1156
 3182 014e 01EB5010 		add	r0, r1, r0, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3183              		.loc 2 468 14 discriminator 4 view .LVU1157
 3184 0152 0440     		ands	r4, r4, r0
 3185              	.LVL380:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3186              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1158
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3187              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1159
 3188 0154 44EA1444 		orr	r4, r4, r4, lsr #16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 107


 3189              	.LVL381:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3190              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1160
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3191              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1161
 3192              	.LBE208:
 3193              	.LBE207:
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3194              		.loc 1 802 21 discriminator 4 view .LVU1162
 3195 0158 2AF81340 		strh	r4, [r10, r3, lsl #1]	@ movhi
 3196              	.L184:
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3197              		.loc 1 802 21 is_stmt 1 discriminator 6 view .LVU1163
 3198 015c 0132     		adds	r2, r2, #1
 3199              	.LVL382:
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3200              		.loc 1 798 81 discriminator 6 view .LVU1164
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3201              		.loc 1 798 82 is_stmt 0 discriminator 6 view .LVU1165
 3202 015e 0133     		adds	r3, r3, #1
 3203              	.LVL383:
 3204              	.L203:
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3205              		.loc 1 798 28 is_stmt 1 discriminator 2 view .LVU1166
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3206              		.loc 1 798 17 is_stmt 0 discriminator 2 view .LVU1167
 3207 0160 6345     		cmp	r3, ip
 3208 0162 80F2CD80 		bge	.L214
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3209              		.loc 1 798 44 discriminator 3 view .LVU1168
 3210 0166 12F0030F 		tst	r2, #3
 3211 016a 09D0     		beq	.L217
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3212              		.loc 1 802 21 is_stmt 1 view .LVU1169
 3213 016c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3214 016e 0028     		cmp	r0, #0
 3215 0170 F4D0     		beq	.L184
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3216              		.loc 1 802 21 discriminator 1 view .LVU1170
 3217 0172 FF28     		cmp	r0, #255
 3218 0174 D9D1     		bne	.L185
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3219              		.loc 1 802 21 discriminator 3 view .LVU1171
 3220 0176 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3221 017a 2AF81310 		strh	r1, [r10, r3, lsl #1]	@ movhi
 3222 017e EDE7     		b	.L184
 3223              	.L217:
 802:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3224              		.loc 1 802 21 is_stmt 0 discriminator 3 view .LVU1172
 3225 0180 5446     		mov	r4, r10
 3226 0182 14E0     		b	.L197
 3227              	.LVL384:
 3228              	.L218:
 810:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 3229              		.loc 1 810 29 is_stmt 1 view .LVU1173
 810:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 1] = map_buf_first[x + 1];
 3230              		.loc 1 810 47 is_stmt 0 view .LVU1174
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 108


 3231 0184 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3232 0188 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 811:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 3233              		.loc 1 811 29 is_stmt 1 view .LVU1175
 811:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 3234              		.loc 1 811 66 is_stmt 0 view .LVU1176
 3235 018c 591C     		adds	r1, r3, #1
 811:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 2] = map_buf_first[x + 2];
 3236              		.loc 1 811 51 view .LVU1177
 3237 018e 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3238 0192 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 812:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 3239              		.loc 1 812 29 is_stmt 1 view .LVU1178
 812:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 3240              		.loc 1 812 66 is_stmt 0 view .LVU1179
 3241 0196 991C     		adds	r1, r3, #2
 812:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x + 3] = map_buf_first[x + 3];
 3242              		.loc 1 812 51 view .LVU1180
 3243 0198 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3244 019c 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 813:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3245              		.loc 1 813 29 is_stmt 1 view .LVU1181
 813:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3246              		.loc 1 813 66 is_stmt 0 view .LVU1182
 3247 01a0 D91C     		adds	r1, r3, #3
 813:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3248              		.loc 1 813 51 view .LVU1183
 3249 01a2 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3250 01a6 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3251              	.L188:
 830:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 3252              		.loc 1 830 21 is_stmt 1 view .LVU1184
 830:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 }
 3253              		.loc 1 830 27 is_stmt 0 view .LVU1185
 3254 01aa 0432     		adds	r2, r2, #4
 3255              	.LVL385:
 807:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 3256              		.loc 1 807 35 is_stmt 1 view .LVU1186
 807:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 3257              		.loc 1 807 37 is_stmt 0 view .LVU1187
 3258 01ac 0433     		adds	r3, r3, #4
 3259              	.LVL386:
 3260              	.L197:
 807:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 3261              		.loc 1 807 23 is_stmt 1 discriminator 1 view .LVU1188
 807:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(*mask32) {
 3262              		.loc 1 807 17 is_stmt 0 discriminator 1 view .LVU1189
 3263 01ae 7345     		cmp	r3, lr
 3264 01b0 80F2AE80 		bge	.L199
 808:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3265              		.loc 1 808 21 is_stmt 1 view .LVU1190
 808:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3266              		.loc 1 808 24 is_stmt 0 view .LVU1191
 3267 01b4 1168     		ldr	r1, [r2]
 808:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3268              		.loc 1 808 23 view .LVU1192
 3269 01b6 0029     		cmp	r1, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 109


 3270 01b8 F7D0     		beq	.L188
 809:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 3271              		.loc 1 809 25 is_stmt 1 view .LVU1193
 809:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             disp_buf_first[x] = map_buf_first[x];
 3272              		.loc 1 809 27 is_stmt 0 view .LVU1194
 3273 01ba B1F1FF3F 		cmp	r1, #-1
 3274 01be E1D0     		beq	.L218
 816:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3275              		.loc 1 816 29 is_stmt 1 view .LVU1195
 3276              	.LVL387:
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3277              		.loc 1 823 29 view .LVU1196
 3278 01c0 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3279 01c2 F0B1     		cbz	r0, .L190
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3280              		.loc 1 823 29 discriminator 1 view .LVU1197
 3281 01c4 FF28     		cmp	r0, #255
 3282 01c6 00F08480 		beq	.L219
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3283              		.loc 1 823 29 discriminator 4 view .LVU1198
 3284              	.LVL388:
 3285              	.LBB209:
 3286              	.LBI209:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3287              		.loc 2 459 48 discriminator 4 view .LVU1199
 3288              	.LBB210:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3289              		.loc 2 461 5 discriminator 4 view .LVU1200
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3290              		.loc 2 465 5 discriminator 4 view .LVU1201
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3291              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1202
 3292 01ca 0430     		adds	r0, r0, #4
 3293              	.LVL389:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3294              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1203
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3295              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1204
 3296 01cc 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3297              		.loc 2 466 19 discriminator 4 view .LVU1205
 3298 01d0 41EA0141 		orr	r1, r1, r1, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3299              		.loc 2 466 14 discriminator 4 view .LVU1206
 3300 01d4 DFF81CA2 		ldr	r10, .L226
 3301 01d8 01EA0A01 		and	r1, r1, r10
 3302              	.LVL390:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3303              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1207
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3304              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1208
 3305 01dc 35F81380 		ldrh	r8, [r5, r3, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3306              		.loc 2 467 19 discriminator 4 view .LVU1209
 3307 01e0 48EA0848 		orr	r8, r8, r8, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3308              		.loc 2 467 14 discriminator 4 view .LVU1210
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 110


 3309 01e4 08EA0A08 		and	r8, r8, r10
 3310              	.LVL391:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3311              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1211
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3312              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1212
 3313 01e8 A8EB0108 		sub	r8, r8, r1
 3314              	.LVL392:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3315              		.loc 2 468 36 discriminator 4 view .LVU1213
 3316 01ec C008     		lsrs	r0, r0, #3
 3317              	.LVL393:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3318              		.loc 2 468 36 discriminator 4 view .LVU1214
 3319 01ee 08FB00F0 		mul	r0, r8, r0
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3320              		.loc 2 468 49 discriminator 4 view .LVU1215
 3321 01f2 01EB5010 		add	r0, r1, r0, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3322              		.loc 2 468 14 discriminator 4 view .LVU1216
 3323 01f6 00EA0A0A 		and	r10, r0, r10
 3324              	.LVL394:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3325              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1217
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3326              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1218
 3327 01fa 4AEA1A4A 		orr	r10, r10, r10, lsr #16
 3328              	.LVL395:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3329              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1219
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3330              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1220
 3331              	.LBE210:
 3332              	.LBE209:
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3333              		.loc 1 823 29 discriminator 4 view .LVU1221
 3334 01fe 24F813A0 		strh	r10, [r4, r3, lsl #1]	@ movhi
 3335              	.L190:
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3336              		.loc 1 823 29 is_stmt 1 discriminator 6 view .LVU1222
 3337              	.LVL396:
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3338              		.loc 1 824 29 discriminator 6 view .LVU1223
 3339 0202 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 3340 0204 F9B1     		cbz	r1, .L192
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3341              		.loc 1 824 29 discriminator 1 view .LVU1224
 3342 0206 FF29     		cmp	r1, #255
 3343 0208 68D0     		beq	.L220
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3344              		.loc 1 824 29 discriminator 4 view .LVU1225
 3345 020a 03F10108 		add	r8, r3, #1
 3346              	.LVL397:
 3347              	.LBB211:
 3348              	.LBI211:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3349              		.loc 2 459 48 discriminator 4 view .LVU1226
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 111


 3350              	.LBB212:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3351              		.loc 2 461 5 discriminator 4 view .LVU1227
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3352              		.loc 2 465 5 discriminator 4 view .LVU1228
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3353              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1229
 3354 020e 0431     		adds	r1, r1, #4
 3355              	.LVL398:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3356              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1230
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3357              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1231
 3358 0210 34F81800 		ldrh	r0, [r4, r8, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3359              		.loc 2 466 19 discriminator 4 view .LVU1232
 3360 0214 40EA0040 		orr	r0, r0, r0, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3361              		.loc 2 466 14 discriminator 4 view .LVU1233
 3362 0218 DFF8D8A1 		ldr	r10, .L226
 3363 021c 00EA0A00 		and	r0, r0, r10
 3364              	.LVL399:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3365              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1234
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3366              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1235
 3367 0220 35F818B0 		ldrh	fp, [r5, r8, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3368              		.loc 2 467 19 discriminator 4 view .LVU1236
 3369 0224 4BEA0B4B 		orr	fp, fp, fp, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3370              		.loc 2 467 14 discriminator 4 view .LVU1237
 3371 0228 0BEA0A0B 		and	fp, fp, r10
 3372              	.LVL400:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3373              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1238
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3374              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1239
 3375 022c ABEB000B 		sub	fp, fp, r0
 3376              	.LVL401:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3377              		.loc 2 468 36 discriminator 4 view .LVU1240
 3378 0230 C908     		lsrs	r1, r1, #3
 3379              	.LVL402:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3380              		.loc 2 468 36 discriminator 4 view .LVU1241
 3381 0232 0BFB01F1 		mul	r1, fp, r1
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3382              		.loc 2 468 49 discriminator 4 view .LVU1242
 3383 0236 00EB5111 		add	r1, r0, r1, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3384              		.loc 2 468 14 discriminator 4 view .LVU1243
 3385 023a 01EA0A01 		and	r1, r1, r10
 3386              	.LVL403:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3387              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1244
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 112


 3388              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1245
 3389 023e 41EA1141 		orr	r1, r1, r1, lsr #16
 3390              	.LVL404:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3391              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1246
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3392              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1247
 3393              	.LBE212:
 3394              	.LBE211:
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3395              		.loc 1 824 29 discriminator 4 view .LVU1248
 3396 0242 24F81810 		strh	r1, [r4, r8, lsl #1]	@ movhi
 3397              	.L192:
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3398              		.loc 1 824 29 is_stmt 1 discriminator 6 view .LVU1249
 3399              	.LVL405:
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3400              		.loc 1 825 29 discriminator 6 view .LVU1250
 3401 0246 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3402 0248 F9B1     		cbz	r1, .L194
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3403              		.loc 1 825 29 discriminator 1 view .LVU1251
 3404 024a FF29     		cmp	r1, #255
 3405 024c 4CD0     		beq	.L221
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3406              		.loc 1 825 29 discriminator 4 view .LVU1252
 3407 024e 03F10208 		add	r8, r3, #2
 3408              	.LVL406:
 3409              	.LBB213:
 3410              	.LBI213:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3411              		.loc 2 459 48 discriminator 4 view .LVU1253
 3412              	.LBB214:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3413              		.loc 2 461 5 discriminator 4 view .LVU1254
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3414              		.loc 2 465 5 discriminator 4 view .LVU1255
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3415              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1256
 3416 0252 0431     		adds	r1, r1, #4
 3417              	.LVL407:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3418              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1257
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3419              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1258
 3420 0254 34F81800 		ldrh	r0, [r4, r8, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3421              		.loc 2 466 19 discriminator 4 view .LVU1259
 3422 0258 40EA0040 		orr	r0, r0, r0, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3423              		.loc 2 466 14 discriminator 4 view .LVU1260
 3424 025c DFF894A1 		ldr	r10, .L226
 3425 0260 00EA0A00 		and	r0, r0, r10
 3426              	.LVL408:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3427              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1261
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 113


 3428              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1262
 3429 0264 35F818B0 		ldrh	fp, [r5, r8, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3430              		.loc 2 467 19 discriminator 4 view .LVU1263
 3431 0268 4BEA0B4B 		orr	fp, fp, fp, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3432              		.loc 2 467 14 discriminator 4 view .LVU1264
 3433 026c 0BEA0A0B 		and	fp, fp, r10
 3434              	.LVL409:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3435              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1265
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3436              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1266
 3437 0270 ABEB000B 		sub	fp, fp, r0
 3438              	.LVL410:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3439              		.loc 2 468 36 discriminator 4 view .LVU1267
 3440 0274 C908     		lsrs	r1, r1, #3
 3441              	.LVL411:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3442              		.loc 2 468 36 discriminator 4 view .LVU1268
 3443 0276 0BFB01F1 		mul	r1, fp, r1
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3444              		.loc 2 468 49 discriminator 4 view .LVU1269
 3445 027a 00EB5111 		add	r1, r0, r1, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3446              		.loc 2 468 14 discriminator 4 view .LVU1270
 3447 027e 01EA0A01 		and	r1, r1, r10
 3448              	.LVL412:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3449              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1271
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3450              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1272
 3451 0282 41EA1141 		orr	r1, r1, r1, lsr #16
 3452              	.LVL413:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3453              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1273
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3454              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1274
 3455              	.LBE214:
 3456              	.LBE213:
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3457              		.loc 1 825 29 discriminator 4 view .LVU1275
 3458 0286 24F81810 		strh	r1, [r4, r8, lsl #1]	@ movhi
 3459              	.L194:
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3460              		.loc 1 825 29 is_stmt 1 discriminator 6 view .LVU1276
 3461              	.LVL414:
 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3462              		.loc 1 826 29 discriminator 6 view .LVU1277
 3463 028a D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 3464 028c 0029     		cmp	r1, #0
 3465 028e 8CD0     		beq	.L188
 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3466              		.loc 1 826 29 discriminator 1 view .LVU1278
 3467 0290 FF29     		cmp	r1, #255
 3468 0292 2FD0     		beq	.L222
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 114


 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3469              		.loc 1 826 29 discriminator 4 view .LVU1279
 3470 0294 03F10308 		add	r8, r3, #3
 3471              	.LVL415:
 3472              	.LBB215:
 3473              	.LBI215:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3474              		.loc 2 459 48 discriminator 4 view .LVU1280
 3475              	.LBB216:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3476              		.loc 2 461 5 discriminator 4 view .LVU1281
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3477              		.loc 2 465 5 discriminator 4 view .LVU1282
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3478              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1283
 3479 0298 0431     		adds	r1, r1, #4
 3480              	.LVL416:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3481              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1284
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3482              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1285
 3483 029a 34F81800 		ldrh	r0, [r4, r8, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3484              		.loc 2 466 19 discriminator 4 view .LVU1286
 3485 029e 40EA0040 		orr	r0, r0, r0, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3486              		.loc 2 466 14 discriminator 4 view .LVU1287
 3487 02a2 DFF850A1 		ldr	r10, .L226
 3488 02a6 00EA0A00 		and	r0, r0, r10
 3489              	.LVL417:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3490              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1288
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3491              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1289
 3492 02aa 35F818B0 		ldrh	fp, [r5, r8, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3493              		.loc 2 467 19 discriminator 4 view .LVU1290
 3494 02ae 4BEA0B4B 		orr	fp, fp, fp, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3495              		.loc 2 467 14 discriminator 4 view .LVU1291
 3496 02b2 0BEA0A0B 		and	fp, fp, r10
 3497              	.LVL418:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3498              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1292
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3499              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1293
 3500 02b6 ABEB000B 		sub	fp, fp, r0
 3501              	.LVL419:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3502              		.loc 2 468 36 discriminator 4 view .LVU1294
 3503 02ba C908     		lsrs	r1, r1, #3
 3504              	.LVL420:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3505              		.loc 2 468 36 discriminator 4 view .LVU1295
 3506 02bc 0BFB01F1 		mul	r1, fp, r1
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3507              		.loc 2 468 49 discriminator 4 view .LVU1296
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 115


 3508 02c0 00EB5111 		add	r1, r0, r1, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3509              		.loc 2 468 14 discriminator 4 view .LVU1297
 3510 02c4 01EA0A01 		and	r1, r1, r10
 3511              	.LVL421:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3512              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1298
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3513              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1299
 3514 02c8 41EA1141 		orr	r1, r1, r1, lsr #16
 3515              	.LVL422:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3516              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1300
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3517              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1301
 3518              	.LBE216:
 3519              	.LBE215:
 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3520              		.loc 1 826 29 discriminator 4 view .LVU1302
 3521 02cc 24F81810 		strh	r1, [r4, r8, lsl #1]	@ movhi
 3522 02d0 6BE7     		b	.L188
 3523              	.LVL423:
 3524              	.L219:
 823:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3525              		.loc 1 823 29 is_stmt 1 discriminator 3 view .LVU1303
 3526 02d2 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3527 02d6 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 3528 02da 92E7     		b	.L190
 3529              	.LVL424:
 3530              	.L220:
 824:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3531              		.loc 1 824 29 discriminator 3 view .LVU1304
 3532 02dc 591C     		adds	r1, r3, #1
 3533 02de 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3534 02e2 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3535 02e6 AEE7     		b	.L192
 3536              	.LVL425:
 3537              	.L221:
 825:lvgl/lvgl/src/draw/lv_draw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3538              		.loc 1 825 29 discriminator 3 view .LVU1305
 3539 02e8 991C     		adds	r1, r3, #2
 3540 02ea 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3541 02ee 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3542 02f2 CAE7     		b	.L194
 3543              	.LVL426:
 3544              	.L222:
 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3545              		.loc 1 826 29 discriminator 3 view .LVU1306
 3546 02f4 D91C     		adds	r1, r3, #3
 3547 02f6 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 3548 02fa 24F81100 		strh	r0, [r4, r1, lsl #1]	@ movhi
 3549 02fe 54E7     		b	.L188
 3550              	.LVL427:
 3551              	.L214:
 826:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3552              		.loc 1 826 29 is_stmt 0 discriminator 3 view .LVU1307
 3553 0300 5446     		mov	r4, r10
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 116


 3554 0302 54E7     		b	.L197
 3555              	.LVL428:
 3556              	.L224:
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3557              		.loc 1 838 21 is_stmt 1 discriminator 3 view .LVU1308
 3558 0304 35F81310 		ldrh	r1, [r5, r3, lsl #1]
 3559 0308 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 3560              	.L200:
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3561              		.loc 1 838 21 discriminator 6 view .LVU1309
 3562 030c 0132     		adds	r2, r2, #1
 3563              	.LVL429:
 834:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3564              		.loc 1 834 41 discriminator 6 view .LVU1310
 834:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3565              		.loc 1 834 42 is_stmt 0 discriminator 6 view .LVU1311
 3566 030e 0133     		adds	r3, r3, #1
 3567              	.LVL430:
 3568              	.L199:
 834:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3569              		.loc 1 834 23 is_stmt 1 discriminator 1 view .LVU1312
 834:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3570              		.loc 1 834 17 is_stmt 0 discriminator 1 view .LVU1313
 3571 0310 6345     		cmp	r3, ip
 3572 0312 21DA     		bge	.L223
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3573              		.loc 1 838 21 is_stmt 1 view .LVU1314
 3574 0314 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3575 0316 0028     		cmp	r0, #0
 3576 0318 F8D0     		beq	.L200
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3577              		.loc 1 838 21 discriminator 1 view .LVU1315
 3578 031a FF28     		cmp	r0, #255
 3579 031c F2D0     		beq	.L224
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3580              		.loc 1 838 21 discriminator 4 view .LVU1316
 3581              	.LVL431:
 3582              	.LBB217:
 3583              	.LBI217:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3584              		.loc 2 459 48 discriminator 4 view .LVU1317
 3585              	.LBB218:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3586              		.loc 2 461 5 discriminator 4 view .LVU1318
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3587              		.loc 2 465 5 discriminator 4 view .LVU1319
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3588              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1320
 3589 031e 0430     		adds	r0, r0, #4
 3590              	.LVL432:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3591              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1321
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3592              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1322
 3593 0320 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3594              		.loc 2 466 19 discriminator 4 view .LVU1323
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 117


 3595 0324 41EA0141 		orr	r1, r1, r1, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3596              		.loc 2 466 14 discriminator 4 view .LVU1324
 3597 0328 DFF8C8A0 		ldr	r10, .L226
 3598 032c 01EA0A01 		and	r1, r1, r10
 3599              	.LVL433:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3600              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1325
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3601              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1326
 3602 0330 35F81380 		ldrh	r8, [r5, r3, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3603              		.loc 2 467 19 discriminator 4 view .LVU1327
 3604 0334 48EA0848 		orr	r8, r8, r8, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3605              		.loc 2 467 14 discriminator 4 view .LVU1328
 3606 0338 08EA0A08 		and	r8, r8, r10
 3607              	.LVL434:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3608              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1329
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3609              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1330
 3610 033c A8EB0108 		sub	r8, r8, r1
 3611              	.LVL435:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3612              		.loc 2 468 36 discriminator 4 view .LVU1331
 3613 0340 C008     		lsrs	r0, r0, #3
 3614              	.LVL436:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3615              		.loc 2 468 36 discriminator 4 view .LVU1332
 3616 0342 08FB00F0 		mul	r0, r8, r0
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3617              		.loc 2 468 49 discriminator 4 view .LVU1333
 3618 0346 01EB5010 		add	r0, r1, r0, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3619              		.loc 2 468 14 discriminator 4 view .LVU1334
 3620 034a 00EA0A0A 		and	r10, r0, r10
 3621              	.LVL437:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3622              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1335
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3623              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1336
 3624 034e 4AEA1A4A 		orr	r10, r10, r10, lsr #16
 3625              	.LVL438:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3626              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1337
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3627              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1338
 3628              	.LBE218:
 3629              	.LBE217:
 838:lvgl/lvgl/src/draw/lv_draw_blend.c **** #endif
 3630              		.loc 1 838 21 discriminator 4 view .LVU1339
 3631 0352 24F813A0 		strh	r10, [r4, r3, lsl #1]	@ movhi
 3632 0356 D9E7     		b	.L200
 3633              	.L223:
 842:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3634              		.loc 1 842 17 is_stmt 1 discriminator 2 view .LVU1340
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 118


 842:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3635              		.loc 1 842 32 is_stmt 0 discriminator 2 view .LVU1341
 3636 0358 04EB4704 		add	r4, r4, r7, lsl #1
 3637              	.LVL439:
 843:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3638              		.loc 1 843 17 is_stmt 1 discriminator 2 view .LVU1342
 843:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3639              		.loc 1 843 22 is_stmt 0 discriminator 2 view .LVU1343
 3640 035c 029B     		ldr	r3, [sp, #8]
 3641              	.LVL440:
 843:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3642              		.loc 1 843 22 discriminator 2 view .LVU1344
 3643 035e 9944     		add	r9, r9, r3
 3644              	.LVL441:
 844:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3645              		.loc 1 844 17 is_stmt 1 discriminator 2 view .LVU1345
 844:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3646              		.loc 1 844 31 is_stmt 0 discriminator 2 view .LVU1346
 3647 0360 039B     		ldr	r3, [sp, #12]
 3648 0362 05EB4305 		add	r5, r5, r3, lsl #1
 3649              	.LVL442:
 844:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3650              		.loc 1 844 31 discriminator 2 view .LVU1347
 3651              	.LBE206:
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3652              		.loc 1 791 41 is_stmt 1 discriminator 2 view .LVU1348
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3653              		.loc 1 791 42 is_stmt 0 discriminator 2 view .LVU1349
 3654 0366 0136     		adds	r6, r6, #1
 3655              	.LVL443:
 3656              	.L183:
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3657              		.loc 1 791 24 is_stmt 1 discriminator 1 view .LVU1350
 791:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3658              		.loc 1 791 13 is_stmt 0 discriminator 1 view .LVU1351
 3659 0368 019B     		ldr	r3, [sp, #4]
 3660 036a 9E42     		cmp	r6, r3
 3661 036c 3FDA     		bge	.L174
 3662              	.LBB219:
 792:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if 0
 3663              		.loc 1 792 34 view .LVU1352
 3664 036e 4A46     		mov	r2, r9
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3665              		.loc 1 798 23 view .LVU1353
 3666 0370 0023     		movs	r3, #0
 3667 0372 A246     		mov	r10, r4
 3668 0374 F4E6     		b	.L203
 3669              	.LVL444:
 3670              	.L212:
 798:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3671              		.loc 1 798 23 view .LVU1354
 3672              	.LBE219:
 3673              	.LBE222:
 3674              	.LBB223:
 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3675              		.loc 1 852 34 view .LVU1355
 3676 0376 5446     		mov	r4, r10
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 119


 3677              	.L205:
 3678              	.LVL445:
 861:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3679              		.loc 1 861 29 is_stmt 1 discriminator 4 view .LVU1356
 3680              	.LBB224:
 3681              	.LBI224:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3682              		.loc 2 459 48 discriminator 4 view .LVU1357
 3683              	.LBB225:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3684              		.loc 2 461 5 discriminator 4 view .LVU1358
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3685              		.loc 2 465 5 discriminator 4 view .LVU1359
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3686              		.loc 2 465 17 is_stmt 0 discriminator 4 view .LVU1360
 3687 0378 0434     		adds	r4, r4, #4
 3688              	.LVL446:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3689              		.loc 2 466 5 is_stmt 1 discriminator 4 view .LVU1361
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3690              		.loc 2 466 42 is_stmt 0 discriminator 4 view .LVU1362
 3691 037a 38F81120 		ldrh	r2, [r8, r1, lsl #1]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3692              		.loc 2 466 19 discriminator 4 view .LVU1363
 3693 037e 42EA0242 		orr	r2, r2, r2, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3694              		.loc 2 466 14 discriminator 4 view .LVU1364
 3695 0382 DFF870E0 		ldr	lr, .L226
 3696 0386 02EA0E02 		and	r2, r2, lr
 3697              	.LVL447:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3698              		.loc 2 467 5 is_stmt 1 discriminator 4 view .LVU1365
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3699              		.loc 2 467 42 is_stmt 0 discriminator 4 view .LVU1366
 3700 038a 35F81130 		ldrh	r3, [r5, r1, lsl #1]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3701              		.loc 2 467 19 discriminator 4 view .LVU1367
 3702 038e 43EA0343 		orr	r3, r3, r3, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3703              		.loc 2 467 14 discriminator 4 view .LVU1368
 3704 0392 03EA0E03 		and	r3, r3, lr
 3705              	.LVL448:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3706              		.loc 2 468 5 is_stmt 1 discriminator 4 view .LVU1369
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3707              		.loc 2 468 30 is_stmt 0 discriminator 4 view .LVU1370
 3708 0396 9B1A     		subs	r3, r3, r2
 3709              	.LVL449:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3710              		.loc 2 468 36 discriminator 4 view .LVU1371
 3711 0398 C4F3C704 		ubfx	r4, r4, #3, #8
 3712              	.LVL450:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3713              		.loc 2 468 36 discriminator 4 view .LVU1372
 3714 039c 03FB04F3 		mul	r3, r3, r4
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3715              		.loc 2 468 49 discriminator 4 view .LVU1373
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 120


 3716 03a0 02EB5313 		add	r3, r2, r3, lsr #5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3717              		.loc 2 468 14 discriminator 4 view .LVU1374
 3718 03a4 03EA0E03 		and	r3, r3, lr
 3719              	.LVL451:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3720              		.loc 2 469 5 is_stmt 1 discriminator 4 view .LVU1375
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3721              		.loc 2 469 16 is_stmt 0 discriminator 4 view .LVU1376
 3722 03a8 43EA1343 		orr	r3, r3, r3, lsr #16
 3723              	.LVL452:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3724              		.loc 2 484 5 is_stmt 1 discriminator 4 view .LVU1377
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3725              		.loc 2 484 5 is_stmt 0 discriminator 4 view .LVU1378
 3726              	.LBE225:
 3727              	.LBE224:
 861:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3728              		.loc 1 861 49 discriminator 4 view .LVU1379
 3729 03ac 28F81130 		strh	r3, [r8, r1, lsl #1]	@ movhi
 3730              	.L204:
 861:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         }
 3731              		.loc 1 861 49 discriminator 4 view .LVU1380
 3732              	.LBE223:
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 3733              		.loc 1 850 45 is_stmt 1 discriminator 2 view .LVU1381
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 3734              		.loc 1 850 46 is_stmt 0 discriminator 2 view .LVU1382
 3735 03b0 0130     		adds	r0, r0, #1
 3736              	.LVL453:
 3737              	.L207:
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 3738              		.loc 1 850 28 is_stmt 1 discriminator 1 view .LVU1383
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 3739              		.loc 1 850 17 is_stmt 0 discriminator 1 view .LVU1384
 3740 03b2 6045     		cmp	r0, ip
 3741 03b4 0ADA     		bge	.L225
 851:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3742              		.loc 1 851 21 is_stmt 1 view .LVU1385
 851:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3743              		.loc 1 851 28 is_stmt 0 view .LVU1386
 3744 03b6 0146     		mov	r1, r0
 3745 03b8 19F80040 		ldrb	r4, [r9, r0]	@ zero_extendqisi2
 851:lvgl/lvgl/src/draw/lv_draw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3746              		.loc 1 851 23 view .LVU1387
 3747 03bc 002C     		cmp	r4, #0
 3748 03be F7D0     		beq	.L204
 3749              	.LBB226:
 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3750              		.loc 1 852 25 is_stmt 1 view .LVU1388
 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3751              		.loc 1 852 34 is_stmt 0 view .LVU1389
 3752 03c0 FC2C     		cmp	r4, #252
 3753 03c2 D8D8     		bhi	.L212
 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3754              		.loc 1 852 80 discriminator 1 view .LVU1390
 3755 03c4 04FB0AF4 		mul	r4, r4, r10
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 121


 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3756              		.loc 1 852 34 discriminator 1 view .LVU1391
 3757 03c8 240A     		lsrs	r4, r4, #8
 3758 03ca D5E7     		b	.L205
 3759              	.L225:
 852:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 3760              		.loc 1 852 34 discriminator 1 view .LVU1392
 3761              	.LBE226:
 865:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3762              		.loc 1 865 17 is_stmt 1 discriminator 2 view .LVU1393
 865:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 mask += draw_area_w;
 3763              		.loc 1 865 32 is_stmt 0 discriminator 2 view .LVU1394
 3764 03cc 08EB4708 		add	r8, r8, r7, lsl #1
 3765              	.LVL454:
 866:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3766              		.loc 1 866 17 is_stmt 1 discriminator 2 view .LVU1395
 866:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 map_buf_first += map_w;
 3767              		.loc 1 866 22 is_stmt 0 discriminator 2 view .LVU1396
 3768 03d0 029B     		ldr	r3, [sp, #8]
 3769 03d2 9944     		add	r9, r9, r3
 3770              	.LVL455:
 867:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3771              		.loc 1 867 17 is_stmt 1 discriminator 2 view .LVU1397
 867:lvgl/lvgl/src/draw/lv_draw_blend.c ****             }
 3772              		.loc 1 867 31 is_stmt 0 discriminator 2 view .LVU1398
 3773 03d4 05EB4605 		add	r5, r5, r6, lsl #1
 3774              	.LVL456:
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3775              		.loc 1 849 41 is_stmt 1 discriminator 2 view .LVU1399
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3776              		.loc 1 849 42 is_stmt 0 discriminator 2 view .LVU1400
 3777 03d8 0BF1010B 		add	fp, fp, #1
 3778              	.LVL457:
 3779              	.L182:
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3780              		.loc 1 849 24 is_stmt 1 discriminator 1 view .LVU1401
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3781              		.loc 1 849 13 is_stmt 0 discriminator 1 view .LVU1402
 3782 03dc 019B     		ldr	r3, [sp, #4]
 3783 03de 9B45     		cmp	fp, r3
 3784 03e0 05DA     		bge	.L174
 850:lvgl/lvgl/src/draw/lv_draw_blend.c ****                     if(mask[x]) {
 3785              		.loc 1 850 23 view .LVU1403
 3786 03e2 0020     		movs	r0, #0
 3787 03e4 E5E7     		b	.L207
 3788              	.LVL458:
 3789              	.L210:
 849:lvgl/lvgl/src/draw/lv_draw_blend.c ****                 for(x = 0; x < draw_area_w; x++) {
 3790              		.loc 1 849 19 view .LVU1404
 3791 03e6 4FF0000B 		mov	fp, #0
 3792 03ea A046     		mov	r8, r4
 3793 03ec F6E7     		b	.L182
 3794              	.LVL459:
 3795              	.L174:
 871:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 3796              		.loc 1 871 1 view .LVU1405
 3797 03ee 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 122


 3798              	.LCFI24:
 3799              		.cfi_def_cfa_offset 36
 3800              		@ sp needed
 3801 03f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3802              	.LVL460:
 3803              	.L227:
 871:lvgl/lvgl/src/draw/lv_draw_blend.c **** #if LV_DRAW_COMPLEX
 3804              		.loc 1 871 1 view .LVU1406
 3805              		.align	2
 3806              	.L226:
 3807 03f4 1FF8E007 		.word	132184095
 3808              		.cfi_endproc
 3809              	.LFE158:
 3811              		.section	.text._lv_blend_fill,"ax",%progbits
 3812              		.align	1
 3813              		.global	_lv_blend_fill
 3814              		.syntax unified
 3815              		.thumb
 3816              		.thumb_func
 3817              		.fpu fpv4-sp-d16
 3819              	_lv_blend_fill:
 3820              	.LVL461:
 3821              	.LFB152:
 128:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 3822              		.loc 1 128 1 is_stmt 1 view -0
 3823              		.cfi_startproc
 3824              		@ args = 12, pretend = 0, frame = 24
 3825              		@ frame_needed = 0, uses_anonymous_args = 0
 128:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 3826              		.loc 1 128 1 is_stmt 0 view .LVU1408
 3827 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3828              	.LCFI25:
 3829              		.cfi_def_cfa_offset 36
 3830              		.cfi_offset 4, -36
 3831              		.cfi_offset 5, -32
 3832              		.cfi_offset 6, -28
 3833              		.cfi_offset 7, -24
 3834              		.cfi_offset 8, -20
 3835              		.cfi_offset 9, -16
 3836              		.cfi_offset 10, -12
 3837              		.cfi_offset 11, -8
 3838              		.cfi_offset 14, -4
 3839 0004 8BB0     		sub	sp, sp, #44
 3840              	.LCFI26:
 3841              		.cfi_def_cfa_offset 80
 3842 0006 0590     		str	r0, [sp, #20]
 3843 0008 0691     		str	r1, [sp, #24]
 3844 000a ADF81E20 		strh	r2, [sp, #30]	@ movhi
 3845 000e 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 3846 0012 9DF85450 		ldrb	r5, [sp, #84]	@ zero_extendqisi2
 3847 0016 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 130:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3848              		.loc 1 130 5 is_stmt 1 view .LVU1409
 130:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3849              		.loc 1 130 7 is_stmt 0 view .LVU1410
 3850 001a 012D     		cmp	r5, #1
 3851 001c 01D9     		bls	.L228
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 123


 3852 001e 1C46     		mov	r4, r3
 131:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3853              		.loc 1 131 5 is_stmt 1 view .LVU1411
 131:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3854              		.loc 1 131 7 is_stmt 0 view .LVU1412
 3855 0020 17B9     		cbnz	r7, .L241
 3856              	.LVL462:
 3857              	.L228:
 167:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3858              		.loc 1 167 1 view .LVU1413
 3859 0022 0BB0     		add	sp, sp, #44
 3860              	.LCFI27:
 3861              		.cfi_remember_state
 3862              		.cfi_def_cfa_offset 36
 3863              		@ sp needed
 3864 0024 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3865              	.LVL463:
 3866              	.L241:
 3867              	.LCFI28:
 3868              		.cfi_restore_state
 133:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 3869              		.loc 1 133 5 is_stmt 1 view .LVU1414
 133:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 3870              		.loc 1 133 24 is_stmt 0 view .LVU1415
 3871 0028 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 3872              	.LVL464:
 133:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 3873              		.loc 1 133 24 view .LVU1416
 3874 002c 8046     		mov	r8, r0
 3875              	.LVL465:
 134:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 3876              		.loc 1 134 5 is_stmt 1 view .LVU1417
 134:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 3877              		.loc 1 134 37 is_stmt 0 view .LVU1418
 3878 002e FFF7FEFF 		bl	lv_disp_get_draw_buf
 3879              	.LVL466:
 134:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 3880              		.loc 1 134 37 view .LVU1419
 3881 0032 0646     		mov	r6, r0
 3882              	.LVL467:
 135:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 3883              		.loc 1 135 5 is_stmt 1 view .LVU1420
 135:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 3884              		.loc 1 135 23 is_stmt 0 view .LVU1421
 3885 0034 00F1100A 		add	r10, r0, #16
 3886              	.LVL468:
 136:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3887              		.loc 1 136 5 is_stmt 1 view .LVU1422
 136:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3888              		.loc 1 136 18 is_stmt 0 view .LVU1423
 3889 0038 D0F808B0 		ldr	fp, [r0, #8]
 3890              	.LVL469:
 138:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3891              		.loc 1 138 5 is_stmt 1 view .LVU1424
 138:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3892              		.loc 1 138 12 is_stmt 0 view .LVU1425
 3893 003c D8F80000 		ldr	r0, [r8]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 124


 3894              	.LVL470:
 138:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3895              		.loc 1 138 20 view .LVU1426
 3896 0040 436A     		ldr	r3, [r0, #36]
 138:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3897              		.loc 1 138 7 view .LVU1427
 3898 0042 03B1     		cbz	r3, .L230
 138:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3899              		.loc 1 138 35 is_stmt 1 discriminator 1 view .LVU1428
 3900 0044 9847     		blx	r3
 3901              	.LVL471:
 3902              	.L230:
 142:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!_lv_area_intersect(&draw_area, clip_area, fill_area)) return;
 3903              		.loc 1 142 5 view .LVU1429
 143:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3904              		.loc 1 143 5 view .LVU1430
 143:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3905              		.loc 1 143 9 is_stmt 0 view .LVU1431
 3906 0046 069A     		ldr	r2, [sp, #24]
 3907 0048 0599     		ldr	r1, [sp, #20]
 3908 004a 08A8     		add	r0, sp, #32
 3909 004c FFF7FEFF 		bl	_lv_area_intersect
 3910              	.LVL472:
 143:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3911              		.loc 1 143 7 view .LVU1432
 3912 0050 0028     		cmp	r0, #0
 3913 0052 E6D0     		beq	.L228
 147:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3914              		.loc 1 147 5 is_stmt 1 view .LVU1433
 147:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3915              		.loc 1 147 40 is_stmt 0 view .LVU1434
 3916 0054 318A     		ldrh	r1, [r6, #16]
 147:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3917              		.loc 1 147 56 view .LVU1435
 3918 0056 728A     		ldrh	r2, [r6, #18]
 147:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 3919              		.loc 1 147 5 view .LVU1436
 3920 0058 5242     		rsbs	r2, r2, #0
 3921 005a 4942     		rsbs	r1, r1, #0
 3922 005c 12B2     		sxth	r2, r2
 3923 005e 09B2     		sxth	r1, r1
 3924 0060 08A8     		add	r0, sp, #32
 3925 0062 FFF7FEFF 		bl	lv_area_move
 3926              	.LVL473:
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 3927              		.loc 1 150 5 is_stmt 1 view .LVU1437
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 3928              		.loc 1 150 7 is_stmt 0 view .LVU1438
 3929 0066 D4B1     		cbz	r4, .L231
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 3930              		.loc 1 150 20 discriminator 1 view .LVU1439
 3931 0068 D8F80030 		ldr	r3, [r8]
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 3932              		.loc 1 150 43 discriminator 1 view .LVU1440
 3933 006c 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 150:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t mask_w = lv_area_get_width(&draw_area);
 3934              		.loc 1 150 13 discriminator 1 view .LVU1441
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 125


 3935 006e 11F00401 		ands	r1, r1, #4
 3936 0072 14D1     		bne	.L231
 3937              	.LBB227:
 151:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 3938              		.loc 1 151 9 is_stmt 1 view .LVU1442
 3939              	.LVL474:
 3940              	.LBB228:
 3941              	.LBI228:
 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 3942              		.loc 3 133 26 view .LVU1443
 3943              	.LBB229:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3944              		.loc 3 135 5 view .LVU1444
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3945              		.loc 3 135 31 is_stmt 0 view .LVU1445
 3946 0074 BDF82420 		ldrh	r2, [sp, #36]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3947              		.loc 3 135 44 view .LVU1446
 3948 0078 BDF82030 		ldrh	r3, [sp, #32]
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3949              		.loc 3 135 36 view .LVU1447
 3950 007c D21A     		subs	r2, r2, r3
 3951 007e 92B2     		uxth	r2, r2
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3952              		.loc 3 135 49 view .LVU1448
 3953 0080 0132     		adds	r2, r2, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3954              		.loc 3 135 12 view .LVU1449
 3955 0082 12B2     		sxth	r2, r2
 3956              	.LVL475:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 3957              		.loc 3 135 12 view .LVU1450
 3958              	.LBE229:
 3959              	.LBE228:
 152:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3960              		.loc 1 152 9 is_stmt 1 view .LVU1451
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3961              		.loc 1 153 9 view .LVU1452
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3962              		.loc 1 153 15 is_stmt 0 view .LVU1453
 3963 0084 0023     		movs	r3, #0
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3964              		.loc 1 153 9 view .LVU1454
 3965 0086 02E0     		b	.L232
 3966              	.LVL476:
 3967              	.L239:
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3968              		.loc 1 153 46 view .LVU1455
 3969 0088 0E46     		mov	r6, r1
 3970              	.L233:
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3971              		.loc 1 153 46 discriminator 5 view .LVU1456
 3972 008a 0670     		strb	r6, [r0]
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3973              		.loc 1 153 32 is_stmt 1 discriminator 5 view .LVU1457
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3974              		.loc 1 153 33 is_stmt 0 discriminator 5 view .LVU1458
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 126


 3975 008c 0133     		adds	r3, r3, #1
 3976              	.LVL477:
 3977              	.L232:
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3978              		.loc 1 153 20 is_stmt 1 discriminator 6 view .LVU1459
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3979              		.loc 1 153 9 is_stmt 0 discriminator 6 view .LVU1460
 3980 008e 9342     		cmp	r3, r2
 3981 0090 05DA     		bge	.L231
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3982              		.loc 1 153 38 is_stmt 1 discriminator 7 view .LVU1461
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3983              		.loc 1 153 52 is_stmt 0 discriminator 7 view .LVU1462
 3984 0092 E018     		adds	r0, r4, r3
 3985 0094 E65C     		ldrb	r6, [r4, r3]	@ zero_extendqisi2
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3986              		.loc 1 153 46 discriminator 7 view .LVU1463
 3987 0096 802E     		cmp	r6, #128
 3988 0098 F6D9     		bls	.L239
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3989              		.loc 1 153 46 view .LVU1464
 3990 009a FF26     		movs	r6, #255
 3991 009c F5E7     		b	.L233
 3992              	.LVL478:
 3993              	.L231:
 153:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 3994              		.loc 1 153 46 view .LVU1465
 3995              	.LBE227:
 156:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 3996              		.loc 1 156 5 is_stmt 1 view .LVU1466
 156:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 3997              		.loc 1 156 12 is_stmt 0 view .LVU1467
 3998 009e D8F80030 		ldr	r3, [r8]
 156:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 3999              		.loc 1 156 20 view .LVU1468
 4000 00a2 5B69     		ldr	r3, [r3, #20]
 156:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_set_px(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4001              		.loc 1 156 7 view .LVU1469
 4002 00a4 53B1     		cbz	r3, .L235
 157:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4003              		.loc 1 157 9 is_stmt 1 view .LVU1470
 4004 00a6 0297     		str	r7, [sp, #8]
 4005 00a8 0194     		str	r4, [sp, #4]
 4006 00aa 0095     		str	r5, [sp]
 4007 00ac BDF81E30 		ldrh	r3, [sp, #30]
 4008 00b0 08AA     		add	r2, sp, #32
 4009 00b2 5946     		mov	r1, fp
 4010 00b4 5046     		mov	r0, r10
 4011 00b6 FFF7FEFF 		bl	fill_set_px
 4012              	.LVL479:
 4013 00ba B2E7     		b	.L228
 4014              	.L235:
 159:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4015              		.loc 1 159 10 view .LVU1471
 159:lvgl/lvgl/src/draw/lv_draw_blend.c ****         fill_normal(disp_area, disp_buf, &draw_area, color, opa, mask, mask_res);
 4016              		.loc 1 159 12 is_stmt 0 view .LVU1472
 4017 00bc B9F1000F 		cmp	r9, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 127


 4018 00c0 0AD1     		bne	.L237
 160:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4019              		.loc 1 160 9 is_stmt 1 view .LVU1473
 4020 00c2 0297     		str	r7, [sp, #8]
 4021 00c4 0194     		str	r4, [sp, #4]
 4022 00c6 0095     		str	r5, [sp]
 4023 00c8 BDF81E30 		ldrh	r3, [sp, #30]
 4024 00cc 08AA     		add	r2, sp, #32
 4025 00ce 5946     		mov	r1, fp
 4026 00d0 5046     		mov	r0, r10
 4027 00d2 FFF7FEFF 		bl	fill_normal
 4028              	.LVL480:
 4029 00d6 A4E7     		b	.L228
 4030              	.L237:
 164:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4031              		.loc 1 164 9 view .LVU1474
 4032 00d8 CDF80C90 		str	r9, [sp, #12]
 4033 00dc 0297     		str	r7, [sp, #8]
 4034 00de 0194     		str	r4, [sp, #4]
 4035 00e0 0095     		str	r5, [sp]
 4036 00e2 BDF81E30 		ldrh	r3, [sp, #30]
 4037 00e6 08AA     		add	r2, sp, #32
 4038 00e8 5946     		mov	r1, fp
 4039 00ea 5046     		mov	r0, r10
 4040 00ec FFF7FEFF 		bl	fill_blended
 4041              	.LVL481:
 4042 00f0 97E7     		b	.L228
 4043              		.cfi_endproc
 4044              	.LFE152:
 4046              		.section	.text._lv_blend_map,"ax",%progbits
 4047              		.align	1
 4048              		.global	_lv_blend_map
 4049              		.syntax unified
 4050              		.thumb
 4051              		.thumb_func
 4052              		.fpu fpv4-sp-d16
 4054              	_lv_blend_map:
 4055              	.LVL482:
 4056              	.LFB153:
 186:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4057              		.loc 1 186 1 view -0
 4058              		.cfi_startproc
 4059              		@ args = 12, pretend = 0, frame = 16
 4060              		@ frame_needed = 0, uses_anonymous_args = 0
 186:lvgl/lvgl/src/draw/lv_draw_blend.c ****     /*Do not draw transparent things*/
 4061              		.loc 1 186 1 is_stmt 0 view .LVU1476
 4062 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4063              	.LCFI29:
 4064              		.cfi_def_cfa_offset 36
 4065              		.cfi_offset 4, -36
 4066              		.cfi_offset 5, -32
 4067              		.cfi_offset 6, -28
 4068              		.cfi_offset 7, -24
 4069              		.cfi_offset 8, -20
 4070              		.cfi_offset 9, -16
 4071              		.cfi_offset 10, -12
 4072              		.cfi_offset 11, -8
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 128


 4073              		.cfi_offset 14, -4
 4074 0004 8BB0     		sub	sp, sp, #44
 4075              	.LCFI30:
 4076              		.cfi_def_cfa_offset 80
 4077 0006 0692     		str	r2, [sp, #24]
 4078 0008 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 4079 000c 9DF85460 		ldrb	r6, [sp, #84]	@ zero_extendqisi2
 4080 0010 9DF85890 		ldrb	r9, [sp, #88]	@ zero_extendqisi2
 188:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4081              		.loc 1 188 5 is_stmt 1 view .LVU1477
 188:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 4082              		.loc 1 188 7 is_stmt 0 view .LVU1478
 4083 0014 012E     		cmp	r6, #1
 4084 0016 02D9     		bls	.L242
 4085 0018 0D46     		mov	r5, r1
 4086 001a 1C46     		mov	r4, r3
 189:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4087              		.loc 1 189 5 is_stmt 1 view .LVU1479
 189:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4088              		.loc 1 189 7 is_stmt 0 view .LVU1480
 4089 001c 17B9     		cbnz	r7, .L255
 4090              	.LVL483:
 4091              	.L242:
 230:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4092              		.loc 1 230 1 view .LVU1481
 4093 001e 0BB0     		add	sp, sp, #44
 4094              	.LCFI31:
 4095              		.cfi_remember_state
 4096              		.cfi_def_cfa_offset 36
 4097              		@ sp needed
 4098 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4099              	.LVL484:
 4100              	.L255:
 4101              	.LCFI32:
 4102              		.cfi_restore_state
 193:lvgl/lvgl/src/draw/lv_draw_blend.c ****     bool is_common;
 4103              		.loc 1 193 5 is_stmt 1 view .LVU1482
 194:lvgl/lvgl/src/draw/lv_draw_blend.c ****     is_common = _lv_area_intersect(&draw_area, clip_area, map_area);
 4104              		.loc 1 194 5 view .LVU1483
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4105              		.loc 1 195 5 view .LVU1484
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4106              		.loc 1 195 17 is_stmt 0 view .LVU1485
 4107 0024 0A46     		mov	r2, r1
 4108              	.LVL485:
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4109              		.loc 1 195 17 view .LVU1486
 4110 0026 0146     		mov	r1, r0
 4111              	.LVL486:
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4112              		.loc 1 195 17 view .LVU1487
 4113 0028 08A8     		add	r0, sp, #32
 4114              	.LVL487:
 195:lvgl/lvgl/src/draw/lv_draw_blend.c ****     if(!is_common) return;
 4115              		.loc 1 195 17 view .LVU1488
 4116 002a FFF7FEFF 		bl	_lv_area_intersect
 4117              	.LVL488:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 129


 196:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4118              		.loc 1 196 5 is_stmt 1 view .LVU1489
 196:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4119              		.loc 1 196 7 is_stmt 0 view .LVU1490
 4120 002e 0028     		cmp	r0, #0
 4121 0030 F5D0     		beq	.L242
 198:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4122              		.loc 1 198 5 is_stmt 1 view .LVU1491
 198:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4123              		.loc 1 198 24 is_stmt 0 view .LVU1492
 4124 0032 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4125              	.LVL489:
 198:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp);
 4126              		.loc 1 198 24 view .LVU1493
 4127 0036 8246     		mov	r10, r0
 4128              	.LVL490:
 199:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4129              		.loc 1 199 5 is_stmt 1 view .LVU1494
 199:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4130              		.loc 1 199 37 is_stmt 0 view .LVU1495
 4131 0038 FFF7FEFF 		bl	lv_disp_get_draw_buf
 4132              	.LVL491:
 199:lvgl/lvgl/src/draw/lv_draw_blend.c ****     const lv_area_t * disp_area = &draw_buf->area;
 4133              		.loc 1 199 37 view .LVU1496
 4134 003c 8046     		mov	r8, r0
 4135              	.LVL492:
 200:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4136              		.loc 1 200 5 is_stmt 1 view .LVU1497
 200:lvgl/lvgl/src/draw/lv_draw_blend.c ****     lv_color_t * disp_buf = draw_buf->buf_act;
 4137              		.loc 1 200 23 is_stmt 0 view .LVU1498
 4138 003e 00F1100B 		add	fp, r0, #16
 4139              	.LVL493:
 201:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4140              		.loc 1 201 5 is_stmt 1 view .LVU1499
 201:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4141              		.loc 1 201 18 is_stmt 0 view .LVU1500
 4142 0042 8368     		ldr	r3, [r0, #8]
 4143 0044 0793     		str	r3, [sp, #28]
 4144              	.LVL494:
 203:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4145              		.loc 1 203 5 is_stmt 1 view .LVU1501
 203:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4146              		.loc 1 203 12 is_stmt 0 view .LVU1502
 4147 0046 DAF80000 		ldr	r0, [r10]
 4148              	.LVL495:
 203:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4149              		.loc 1 203 20 view .LVU1503
 4150 004a 436A     		ldr	r3, [r0, #36]
 4151              	.LVL496:
 203:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4152              		.loc 1 203 7 view .LVU1504
 4153 004c 03B1     		cbz	r3, .L244
 203:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4154              		.loc 1 203 35 is_stmt 1 discriminator 1 view .LVU1505
 4155 004e 9847     		blx	r3
 4156              	.LVL497:
 4157              	.L244:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 130


 207:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4158              		.loc 1 207 5 view .LVU1506
 207:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4159              		.loc 1 207 30 is_stmt 0 view .LVU1507
 4160 0050 B8F810C0 		ldrh	ip, [r8, #16]
 207:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y1 -= disp_area->y1;
 4161              		.loc 1 207 18 view .LVU1508
 4162 0054 BDF82020 		ldrh	r2, [sp, #32]
 4163 0058 A2EB0C02 		sub	r2, r2, ip
 4164 005c 92B2     		uxth	r2, r2
 4165 005e ADF82020 		strh	r2, [sp, #32]	@ movhi
 208:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4166              		.loc 1 208 5 is_stmt 1 view .LVU1509
 208:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4167              		.loc 1 208 30 is_stmt 0 view .LVU1510
 4168 0062 B8F81200 		ldrh	r0, [r8, #18]
 208:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.x2 -= disp_area->x1;
 4169              		.loc 1 208 18 view .LVU1511
 4170 0066 BDF82210 		ldrh	r1, [sp, #34]
 4171 006a 091A     		subs	r1, r1, r0
 4172 006c ADF82210 		strh	r1, [sp, #34]	@ movhi
 209:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4173              		.loc 1 209 5 is_stmt 1 view .LVU1512
 209:lvgl/lvgl/src/draw/lv_draw_blend.c ****     draw_area.y2 -= disp_area->y1;
 4174              		.loc 1 209 18 is_stmt 0 view .LVU1513
 4175 0070 BDF82430 		ldrh	r3, [sp, #36]
 4176 0074 A3EB0C03 		sub	r3, r3, ip
 4177 0078 9BB2     		uxth	r3, r3
 4178 007a ADF82430 		strh	r3, [sp, #36]	@ movhi
 210:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4179              		.loc 1 210 5 is_stmt 1 view .LVU1514
 210:lvgl/lvgl/src/draw/lv_draw_blend.c **** 
 4180              		.loc 1 210 18 is_stmt 0 view .LVU1515
 4181 007e BDF82610 		ldrh	r1, [sp, #38]
 4182 0082 091A     		subs	r1, r1, r0
 4183 0084 ADF82610 		strh	r1, [sp, #38]	@ movhi
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 4184              		.loc 1 213 5 is_stmt 1 view .LVU1516
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 4185              		.loc 1 213 7 is_stmt 0 view .LVU1517
 4186 0088 D4B1     		cbz	r4, .L245
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 4187              		.loc 1 213 20 discriminator 1 view .LVU1518
 4188 008a DAF80010 		ldr	r1, [r10]
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 4189              		.loc 1 213 43 discriminator 1 view .LVU1519
 4190 008e 097A     		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 213:lvgl/lvgl/src/draw/lv_draw_blend.c ****     {
 4191              		.loc 1 213 13 discriminator 1 view .LVU1520
 4192 0090 11F00401 		ands	r1, r1, #4
 4193 0094 14D1     		bne	.L245
 4194              	.LBB230:
 215:lvgl/lvgl/src/draw/lv_draw_blend.c ****         int32_t i;
 4195              		.loc 1 215 9 is_stmt 1 view .LVU1521
 4196              	.LVL498:
 4197              	.LBB231:
 4198              	.LBI231:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 131


 133:lvgl/lvgl/src/draw/../misc/lv_area.h **** {
 4199              		.loc 3 133 26 view .LVU1522
 4200              	.LBB232:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 4201              		.loc 3 135 5 view .LVU1523
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 4202              		.loc 3 135 36 is_stmt 0 view .LVU1524
 4203 0096 9A1A     		subs	r2, r3, r2
 4204 0098 92B2     		uxth	r2, r2
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 4205              		.loc 3 135 49 view .LVU1525
 4206 009a 0132     		adds	r2, r2, #1
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 4207              		.loc 3 135 12 view .LVU1526
 4208 009c 12B2     		sxth	r2, r2
 4209              	.LVL499:
 135:lvgl/lvgl/src/draw/../misc/lv_area.h **** }
 4210              		.loc 3 135 12 view .LVU1527
 4211              	.LBE232:
 4212              	.LBE231:
 216:lvgl/lvgl/src/draw/lv_draw_blend.c ****         for(i = 0; i < mask_w; i++)  mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4213              		.loc 1 216 9 is_stmt 1 view .LVU1528
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4214              		.loc 1 217 9 view .LVU1529
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4215              		.loc 1 217 15 is_stmt 0 view .LVU1530
 4216 009e 0023     		movs	r3, #0
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4217              		.loc 1 217 9 view .LVU1531
 4218 00a0 03E0     		b	.L246
 4219              	.LVL500:
 4220              	.L253:
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4221              		.loc 1 217 46 view .LVU1532
 4222 00a2 8C46     		mov	ip, r1
 4223              	.L247:
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4224              		.loc 1 217 46 discriminator 5 view .LVU1533
 4225 00a4 80F800C0 		strb	ip, [r0]
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4226              		.loc 1 217 32 is_stmt 1 discriminator 5 view .LVU1534
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4227              		.loc 1 217 33 is_stmt 0 discriminator 5 view .LVU1535
 4228 00a8 0133     		adds	r3, r3, #1
 4229              	.LVL501:
 4230              	.L246:
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4231              		.loc 1 217 20 is_stmt 1 discriminator 6 view .LVU1536
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4232              		.loc 1 217 9 is_stmt 0 discriminator 6 view .LVU1537
 4233 00aa 9342     		cmp	r3, r2
 4234 00ac 08DA     		bge	.L245
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4235              		.loc 1 217 38 is_stmt 1 discriminator 7 view .LVU1538
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4236              		.loc 1 217 52 is_stmt 0 discriminator 7 view .LVU1539
 4237 00ae E018     		adds	r0, r4, r3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 132


 4238 00b0 14F803C0 		ldrb	ip, [r4, r3]	@ zero_extendqisi2
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4239              		.loc 1 217 46 discriminator 7 view .LVU1540
 4240 00b4 BCF1800F 		cmp	ip, #128
 4241 00b8 F3D9     		bls	.L253
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4242              		.loc 1 217 46 view .LVU1541
 4243 00ba 4FF0FF0C 		mov	ip, #255
 4244 00be F1E7     		b	.L247
 4245              	.LVL502:
 4246              	.L245:
 217:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4247              		.loc 1 217 46 view .LVU1542
 4248              	.LBE230:
 219:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4249              		.loc 1 219 5 is_stmt 1 view .LVU1543
 219:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4250              		.loc 1 219 12 is_stmt 0 view .LVU1544
 4251 00c0 DAF80030 		ldr	r3, [r10]
 219:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4252              		.loc 1 219 20 view .LVU1545
 4253 00c4 5B69     		ldr	r3, [r3, #20]
 219:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_set_px(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4254              		.loc 1 219 7 view .LVU1546
 4255 00c6 5BB1     		cbz	r3, .L249
 220:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4256              		.loc 1 220 9 is_stmt 1 view .LVU1547
 4257 00c8 0397     		str	r7, [sp, #12]
 4258 00ca 0294     		str	r4, [sp, #8]
 4259 00cc 0196     		str	r6, [sp, #4]
 4260 00ce 069B     		ldr	r3, [sp, #24]
 4261 00d0 0093     		str	r3, [sp]
 4262 00d2 2B46     		mov	r3, r5
 4263 00d4 08AA     		add	r2, sp, #32
 4264 00d6 0799     		ldr	r1, [sp, #28]
 4265 00d8 5846     		mov	r0, fp
 4266 00da FFF7FEFF 		bl	map_set_px
 4267              	.LVL503:
 4268 00de 9EE7     		b	.L242
 4269              	.L249:
 222:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4270              		.loc 1 222 10 view .LVU1548
 222:lvgl/lvgl/src/draw/lv_draw_blend.c ****         map_normal(disp_area, disp_buf, &draw_area, map_area, map_buf, opa, mask, mask_res);
 4271              		.loc 1 222 12 is_stmt 0 view .LVU1549
 4272 00e0 B9F1000F 		cmp	r9, #0
 4273 00e4 0BD1     		bne	.L251
 223:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4274              		.loc 1 223 9 is_stmt 1 view .LVU1550
 4275 00e6 0397     		str	r7, [sp, #12]
 4276 00e8 0294     		str	r4, [sp, #8]
 4277 00ea 0196     		str	r6, [sp, #4]
 4278 00ec 069B     		ldr	r3, [sp, #24]
 4279 00ee 0093     		str	r3, [sp]
 4280 00f0 2B46     		mov	r3, r5
 4281 00f2 08AA     		add	r2, sp, #32
 4282 00f4 0799     		ldr	r1, [sp, #28]
 4283 00f6 5846     		mov	r0, fp
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 133


 4284 00f8 FFF7FEFF 		bl	map_normal
 4285              	.LVL504:
 4286 00fc 8FE7     		b	.L242
 4287              	.L251:
 227:lvgl/lvgl/src/draw/lv_draw_blend.c ****     }
 4288              		.loc 1 227 9 view .LVU1551
 4289 00fe CDF81090 		str	r9, [sp, #16]
 4290 0102 0397     		str	r7, [sp, #12]
 4291 0104 0294     		str	r4, [sp, #8]
 4292 0106 0196     		str	r6, [sp, #4]
 4293 0108 069B     		ldr	r3, [sp, #24]
 4294 010a 0093     		str	r3, [sp]
 4295 010c 2B46     		mov	r3, r5
 4296 010e 08AA     		add	r2, sp, #32
 4297 0110 0799     		ldr	r1, [sp, #28]
 4298 0112 5846     		mov	r0, fp
 4299 0114 FFF7FEFF 		bl	map_blended
 4300              	.LVL505:
 4301 0118 81E7     		b	.L242
 4302              		.cfi_endproc
 4303              	.LFE153:
 4305              		.section	.rodata.__func__.10099,"a"
 4306              		.align	2
 4307              		.set	.LANCHOR0,. + 0
 4310              	__func__.10099:
 4311 0000 66696C6C 		.ascii	"fill_blended\000"
 4311      5F626C65 
 4311      6E646564 
 4311      00
 4312              		.section	.rodata.__func__.10226,"a"
 4313              		.align	2
 4314              		.set	.LANCHOR1,. + 0
 4317              	__func__.10226:
 4318 0000 6D61705F 		.ascii	"map_blended\000"
 4318      626C656E 
 4318      64656400 
 4319              		.text
 4320              	.Letext0:
 4321              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4322              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4323              		.file 6 "lvgl/lvgl/src/draw/../misc/lv_types.h"
 4324              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 4325              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4326              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 4327              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 4328              		.file 11 "lvgl/lvgl/src/draw/../misc/../font/lv_font.h"
 4329              		.file 12 "lvgl/lvgl/src/draw/../misc/lv_txt.h"
 4330              		.file 13 "lvgl/lvgl/src/draw/../misc/lv_style.h"
 4331              		.file 14 "lvgl/lvgl/src/draw/lv_draw_mask.h"
 4332              		.file 15 "lvgl/lvgl/src/draw/../hal/../misc/lv_ll.h"
 4333              		.file 16 "lvgl/lvgl/src/draw/../hal/../misc/lv_timer.h"
 4334              		.file 17 "lvgl/lvgl/src/draw/../hal/lv_hal_disp.h"
 4335              		.file 18 "lvgl/lvgl/src/draw/../core/lv_obj.h"
 4336              		.file 19 "lvgl/lvgl/src/draw/../core/lv_group.h"
 4337              		.file 20 "lvgl/lvgl/src/draw/../core/lv_obj_scroll.h"
 4338              		.file 21 "lvgl/lvgl/src/draw/../core/lv_obj_style.h"
 4339              		.file 22 "lvgl/lvgl/src/draw/../core/../draw/lv_draw_label.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 134


 4340              		.file 23 "lvgl/lvgl/src/draw/../core/lv_obj_class.h"
 4341              		.file 24 "lvgl/lvgl/src/draw/../core/lv_event.h"
 4342              		.file 25 "lvgl/lvgl/src/draw/../hal/../misc/lv_log.h"
 4343              		.file 26 "lvgl/lvgl/src/draw/../hal/../misc/lv_mem.h"
 4344              		.file 27 "lvgl/lvgl/src/draw/../core/lv_refr.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccN0Asav.s 			page 135


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_blend.c
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:18     .text.color_blend_true_color_additive:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:25     .text.color_blend_true_color_additive:00000000 color_blend_true_color_additive
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:169    .text.color_blend_true_color_additive:00000078 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:174    .text.color_blend_true_color_subtractive:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:180    .text.color_blend_true_color_subtractive:00000000 color_blend_true_color_subtractive
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:316    .text.color_blend_true_color_subtractive:00000070 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:321    .text.fill_set_px:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:327    .text.fill_set_px:00000000 fill_set_px
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:571    .text.map_set_px:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:577    .text.map_set_px:00000000 map_set_px
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:879    .text.fill_normal:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:885    .text.fill_normal:00000000 fill_normal
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2027   .text.fill_normal:00000424 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2035   .rodata.fill_blended.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2042   .text.fill_blended:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2048   .text.fill_blended:00000000 fill_blended
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2468   .text.fill_blended:0000015c $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2479   .text.map_blended:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2485   .text.map_blended:00000000 map_blended
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2824   .text.map_blended:00000154 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2834   .text.map_normal:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:2840   .text.map_normal:00000000 map_normal
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:3807   .text.map_normal:000003f4 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:3812   .text._lv_blend_fill:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:3819   .text._lv_blend_fill:00000000 _lv_blend_fill
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4047   .text._lv_blend_map:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4054   .text._lv_blend_map:00000000 _lv_blend_map
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4306   .rodata.__func__.10099:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4310   .rodata.__func__.10099:00000000 __func__.10099
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4313   .rodata.__func__.10226:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccN0Asav.s:4317   .rodata.__func__.10226:00000000 __func__.10226

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_area_get_size
lv_color_fill
_lv_log_add
lv_memcpy
lv_disp_get_draw_buf
_lv_area_intersect
lv_area_move
