ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_img_buf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_img_buf_get_px_color,"ax",%progbits
  18              		.align	1
  19              		.global	lv_img_buf_get_px_color
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_img_buf_get_px_color:
  27              	.LVL0:
  28              	.LFB51:
  29              		.file 1 "lvgl/lvgl/src/draw/lv_img_buf.c"
   1:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
   2:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @file lv_img_buf.c
   3:lvgl/lvgl/src/draw/lv_img_buf.c ****  *
   4:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
   5:lvgl/lvgl/src/draw/lv_img_buf.c **** 
   6:lvgl/lvgl/src/draw/lv_img_buf.c **** /*********************
   7:lvgl/lvgl/src/draw/lv_img_buf.c ****  *      INCLUDES
   8:lvgl/lvgl/src/draw/lv_img_buf.c ****  *********************/
   9:lvgl/lvgl/src/draw/lv_img_buf.c **** #include <stddef.h>
  10:lvgl/lvgl/src/draw/lv_img_buf.c **** #include <string.h>
  11:lvgl/lvgl/src/draw/lv_img_buf.c **** #include "lv_img_buf.h"
  12:lvgl/lvgl/src/draw/lv_img_buf.c **** #include "lv_draw_img.h"
  13:lvgl/lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_math.h"
  14:lvgl/lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_log.h"
  15:lvgl/lvgl/src/draw/lv_img_buf.c **** #include "../misc/lv_mem.h"
  16:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  17:lvgl/lvgl/src/draw/lv_img_buf.c **** /*********************
  18:lvgl/lvgl/src/draw/lv_img_buf.c ****  *      DEFINES
  19:lvgl/lvgl/src/draw/lv_img_buf.c ****  *********************/
  20:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  21:lvgl/lvgl/src/draw/lv_img_buf.c **** /**********************
  22:lvgl/lvgl/src/draw/lv_img_buf.c ****  *      TYPEDEFS
  23:lvgl/lvgl/src/draw/lv_img_buf.c ****  **********************/
  24:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  25:lvgl/lvgl/src/draw/lv_img_buf.c **** /**********************
  26:lvgl/lvgl/src/draw/lv_img_buf.c ****  *  STATIC PROTOTYPES
  27:lvgl/lvgl/src/draw/lv_img_buf.c ****  **********************/
  28:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  29:lvgl/lvgl/src/draw/lv_img_buf.c **** /**********************
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 2


  30:lvgl/lvgl/src/draw/lv_img_buf.c ****  *  STATIC VARIABLES
  31:lvgl/lvgl/src/draw/lv_img_buf.c ****  **********************/
  32:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  33:lvgl/lvgl/src/draw/lv_img_buf.c **** /**********************
  34:lvgl/lvgl/src/draw/lv_img_buf.c ****  *      MACROS
  35:lvgl/lvgl/src/draw/lv_img_buf.c ****  **********************/
  36:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  37:lvgl/lvgl/src/draw/lv_img_buf.c **** /**********************
  38:lvgl/lvgl/src/draw/lv_img_buf.c ****  *   GLOBAL FUNCTIONS
  39:lvgl/lvgl/src/draw/lv_img_buf.c ****  **********************/
  40:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  41:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
  42:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Get the color of an image's pixel
  43:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc an image descriptor
  44:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to get
  45:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to get
  46:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param color the color of the image. In case of `LV_IMG_CF_ALPHA_1/2/4/8` this color is used.
  47:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Not used in other cases.
  48:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
  49:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @return color of the point
  50:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
  51:lvgl/lvgl/src/draw/lv_img_buf.c **** lv_color_t lv_img_buf_get_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t color
  52:lvgl/lvgl/src/draw/lv_img_buf.c **** {
  30              		.loc 1 52 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 52 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  46 0004 0446     		mov	r4, r0
  47 0006 0E46     		mov	r6, r1
  48 0008 1746     		mov	r7, r2
  53:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t p_color = lv_color_black();
  49              		.loc 1 53 5 is_stmt 1 view .LVU2
  50              	.LBB53:
  51              	.LBI53:
  52              		.file 2 "lvgl/lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/draw/../misc/lv_color.h **** extern "C" {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 3


  11:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  18:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  19:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  20:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  21:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  24:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  25:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  28:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  29:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  32:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  33:lvgl/lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  34:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  35:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*********************
  36:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  37:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *********************/
  38:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  39:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  40:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  41:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
  42:lvgl/lvgl/src/draw/../misc/lv_color.h **** enum {
  43:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  44:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  45:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  46:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  47:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  48:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  49:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  50:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  51:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  52:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  53:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  54:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  55:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  56:lvgl/lvgl/src/draw/../misc/lv_color.h **** };
  57:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  58:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  63:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  65:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  67:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 4


  68:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  69:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
  70:lvgl/lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  72:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  73:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Adjust color mix functions rounding.
  75:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Should be in range of 0..254
  77:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 64: round up from x.75
  79:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 128: round up from half
  80:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 192: round up from x.25
  81:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * 254: round up*/
  82:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
  86:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  88:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
  89:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
  90:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
  92:lvgl/lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:lvgl/lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:lvgl/lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:lvgl/lvgl/src/draw/../misc/lv_color.h **** */
  96:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  97:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 100:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
 102:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 104:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 105:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
 106:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 107:lvgl/lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 110:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 111:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 115:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 117:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 119:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 120:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 121:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 122:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 5


 125:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 132:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 135:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 140:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 145:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 154:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 157:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 161:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 163:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 170:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 173:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 174:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 179:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 6


 182:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 184:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:lvgl/lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 188:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 189:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 190:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 191:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 196:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 201:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 204:lvgl/lvgl/src/draw/../misc/lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 206:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 207:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 208:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 209:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 210:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 211:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:lvgl/lvgl/src/draw/../misc/lv_color.h ****     union {
 213:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 214:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 215:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 216:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 217:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 218:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 219:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 220:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 221:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 222:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 223:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 224:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 226:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 227:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 232:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 233:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 234:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 235:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 236:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 237:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 238:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 7


 239:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 240:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 241:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 242:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 243:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 244:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef union {
 245:lvgl/lvgl/src/draw/../misc/lv_color.h ****     struct {
 246:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 247:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 248:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 249:lvgl/lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 250:lvgl/lvgl/src/draw/../misc/lv_color.h ****     } ch;
 251:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 252:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 253:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 258:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 259:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 260:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 261:lvgl/lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 262:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 263:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 264:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 266:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 267:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 268:lvgl/lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 269:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 270:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 272:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:lvgl/lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 275:lvgl/lvgl/src/draw/../misc/lv_color.h **** }lv_color_filter_dsc_t;
 276:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 277:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 278:lvgl/lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 279:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 280:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 281:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 282:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 284:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 285:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 287:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 288:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 289:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 291:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 292:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 293:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 294:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 8


 296:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 298:lvgl/lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 299:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:lvgl/lvgl/src/draw/../misc/lv_color.h **** }lv_palette_t;
 301:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 302:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 303:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 304:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 305:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 306:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 307:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 310:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 311:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *
 313:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 316:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 317:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 319:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 321:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 323:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 326:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 327:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 328:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 329:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 330:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 333:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 334:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 335:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 337:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 1;
 340:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 341:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 342:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 343:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 344:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 345:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 346:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 347:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 349:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 351:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 352:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 9


 353:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 354:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 356:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 358:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 362:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 364:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 369:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 370:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 371:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 373:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 375:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0;
 376:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
 377:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 378:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 380:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 384:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 386:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 388:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 392:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 393:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 394:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 395:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 397:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 399:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 400:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else
 401:lvgl/lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 402:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 404:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 409:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 10


 410:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /**
 411:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 412:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 414:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 417:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 419:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 422:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 423:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 424:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 425:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 426:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 427:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *
 428:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:lvgl/lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 431:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 432:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 433:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 434:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 435:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 436:lvgl/lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 437:lvgl/lvgl/src/draw/../misc/lv_color.h ****      */
 438:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 439:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 440:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 445:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 447:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 448:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 449:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 450:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 451:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 452:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 453:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 454:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 458:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 461:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 462:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 463:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 11


 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 469:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 480:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 483:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 484:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret;
 485:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 486:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 487:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 489:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 494:lvgl/lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 495:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:lvgl/lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 500:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 501:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 502:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 503:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 504:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 510:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 512:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 514:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 515:lvgl/lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 12


 524:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:lvgl/lvgl/src/draw/../misc/lv_color.h **** #else
 527:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 529:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 530:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:lvgl/lvgl/src/draw/../misc/lv_color.h **** #endif
 535:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 536:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret;
 537:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 538:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 539:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 540:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 542:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 543:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 544:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 546:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 547:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 548:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:lvgl/lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 552:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:lvgl/lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 555:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 556:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 557:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 558:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 560:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 561:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 562:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 563:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 567:lvgl/lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:lvgl/lvgl/src/draw/../misc/lv_color.h ****     else {
 569:lvgl/lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:lvgl/lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 577:lvgl/lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:lvgl/lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:lvgl/lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 580:lvgl/lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 13


 581:lvgl/lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 582:lvgl/lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 583:lvgl/lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 584:lvgl/lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:lvgl/lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:lvgl/lvgl/src/draw/../misc/lv_color.h ****             if(res_opa_saved == 0) {
 587:lvgl/lvgl/src/draw/../misc/lv_color.h ****                 while(1)
 588:lvgl/lvgl/src/draw/../misc/lv_color.h ****                     ;
 589:lvgl/lvgl/src/draw/../misc/lv_color.h ****             }
 590:lvgl/lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:lvgl/lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 593:lvgl/lvgl/src/draw/../misc/lv_color.h ****         }
 594:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 595:lvgl/lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 596:lvgl/lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 597:lvgl/lvgl/src/draw/../misc/lv_color.h ****     }
 598:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 599:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 600:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 601:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 602:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 603:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 604:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 605:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 606:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 607:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 609:lvgl/lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 610:lvgl/lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 611:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 613:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 614:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 617:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 619:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 620:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 622:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 624:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 625:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 626:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 627:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 628:lvgl/lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 629:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 630:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 631:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 632:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 633:lvgl/lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 634:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 635:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 636:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 637:lvgl/lvgl/src/draw/../misc/lv_color.h **** //!
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 14


 638:lvgl/lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 639:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 640:lvgl/lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 641:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 642:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 643:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 644:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 645:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 646:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 647:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 648:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 649:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 650:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 651:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 652:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 653:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 654:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 655:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 656:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 657:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 658:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 659:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 660:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 661:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 662:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 663:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 664:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 665:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 666:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 667:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 668:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 669:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 670:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 671:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 672:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**
 673:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 674:lvgl/lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 675:lvgl/lvgl/src/draw/../misc/lv_color.h ****  */
 676:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 677:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 678:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 679:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 680:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 681:lvgl/lvgl/src/draw/../misc/lv_color.h **** /**********************
 682:lvgl/lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 683:lvgl/lvgl/src/draw/../misc/lv_color.h ****  **********************/
 684:lvgl/lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 685:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 686:lvgl/lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 687:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void) { return lv_color_make(0xff, 0xff, 0xff);}
 688:lvgl/lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void) { return lv_color_make(0x00, 0x0, 0x00);}
  53              		.loc 2 688 26 view .LVU3
  54              	.LBE53:
  55              		.loc 2 688 49 view .LVU4
  56              	.LVL1:
  57              	.LBB56:
  58              	.LBB54:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 15


  59              	.LBI54:
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
  60              		.loc 2 615 26 view .LVU5
  61              	.LBB55:
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
  62              		.loc 2 617 5 view .LVU6
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
  63              		.loc 2 617 12 is_stmt 0 view .LVU7
  64 000a 4FF00002 		mov	r2, #0	@ movhi
  65              	.LVL2:
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
  66              		.loc 2 617 12 view .LVU8
  67              	.LBE55:
  68              	.LBE54:
  69              	.LBE56:
  70              		.loc 1 53 26 view .LVU9
  71 000e ADF80420 		strh	r2, [sp, #4]	@ movhi
  54:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
  72              		.loc 1 54 5 is_stmt 1 view .LVU10
  73              		.loc 1 54 15 is_stmt 0 view .LVU11
  74 0012 8568     		ldr	r5, [r0, #8]
  75              	.LVL3:
  55:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  56:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
  76              		.loc 1 56 5 is_stmt 1 view .LVU12
  77              		.loc 1 56 23 is_stmt 0 view .LVU13
  78 0014 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  79              	.LVL4:
  80              		.loc 1 56 23 view .LVU14
  81 0016 00F01F00 		and	r0, r0, #31
  82              		.loc 1 56 7 view .LVU15
  83 001a 0428     		cmp	r0, #4
  84 001c 13D0     		beq	.L2
  85              		.loc 1 56 47 discriminator 1 view .LVU16
  86 001e 0628     		cmp	r0, #6
  87 0020 11D0     		beq	.L2
  88              		.loc 1 56 102 discriminator 2 view .LVU17
  89 0022 0528     		cmp	r0, #5
  90 0024 0FD0     		beq	.L2
  57:lvgl/lvgl/src/draw/lv_img_buf.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
  58:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
  60:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
  61:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
  62:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.ch.alpha = 0xFF; /*Only the color should be get so use a default alpha value*/
  63:lvgl/lvgl/src/draw/lv_img_buf.c **** #endif
  64:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
  65:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
  91              		.loc 1 65 10 is_stmt 1 view .LVU18
  92              		.loc 1 65 12 is_stmt 0 view .LVU19
  93 0026 0728     		cmp	r0, #7
  94 0028 2CD0     		beq	.L12
  66:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 2;
  67:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
  68:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
  69:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  70:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 16


  71:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
  72:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8, 16, 24 ...*/
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 7) >> 3) * y + x;
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
  75:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
  76:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
  95              		.loc 1 76 10 is_stmt 1 view .LVU20
  96              		.loc 1 76 12 is_stmt 0 view .LVU21
  97 002a 0828     		cmp	r0, #8
  98 002c 40D0     		beq	.L13
  77:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 4;
  78:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
  79:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
  80:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  81:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
  82:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
  83:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4, 8, 12 ...*/
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 3) >> 2) * y + x;
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
  86:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
  87:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
  99              		.loc 1 87 10 is_stmt 1 view .LVU22
 100              		.loc 1 87 12 is_stmt 0 view .LVU23
 101 002e 0928     		cmp	r0, #9
 102 0030 56D0     		beq	.L14
  88:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 16;
  89:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
  90:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
  91:lvgl/lvgl/src/draw/lv_img_buf.c **** 
  92:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
  93:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
  94:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2, 4, 6 ...*/
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = ((dsc->header.w + 1) >> 1) * y + x;
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
  97:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
  98:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 103              		.loc 1 98 10 is_stmt 1 view .LVU24
 104              		.loc 1 98 12 is_stmt 0 view .LVU25
 105 0032 0A28     		cmp	r0, #10
 106 0034 6DD0     		beq	.L15
  99:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += 4 * 256;
 100:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 102:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 103:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
 107              		.loc 1 103 10 is_stmt 1 view .LVU26
 104:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 108              		.loc 1 104 52 is_stmt 0 view .LVU27
 109 0036 A0F10B02 		sub	r2, r0, #11
 110 003a D2B2     		uxtb	r2, r2
 103:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 111              		.loc 1 103 12 view .LVU28
 112 003c 032A     		cmp	r2, #3
 113 003e 1DD8     		bhi	.L6
 105:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color = color;
 114              		.loc 1 105 9 is_stmt 1 view .LVU29
 115              		.loc 1 105 17 is_stmt 0 view .LVU30
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 17


 116 0040 ADF80430 		strh	r3, [sp, #4]	@ movhi
 117 0044 1AE0     		b	.L6
 118              	.L2:
 119              	.LBB57:
  58:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 120              		.loc 1 58 9 is_stmt 1 view .LVU31
  58:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 121              		.loc 1 58 60 is_stmt 0 view .LVU32
 122 0046 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
  58:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 123              		.loc 1 58 27 view .LVU33
 124 0048 00F01F00 		and	r0, r0, #31
 125 004c FFF7FEFF 		bl	lv_img_cf_get_px_size
 126              	.LVL5:
  58:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 127              		.loc 1 58 17 view .LVU34
 128 0050 C0F3C700 		ubfx	r0, r0, #3, #8
 129              	.LVL6:
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 130              		.loc 1 59 9 is_stmt 1 view .LVU35
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 131              		.loc 1 59 38 is_stmt 0 view .LVU36
 132 0054 2368     		ldr	r3, [r4]
 133 0056 C3F38A23 		ubfx	r3, r3, #10, #11
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 134              		.loc 1 59 41 view .LVU37
 135 005a 03FB07F2 		mul	r2, r3, r7
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 136              		.loc 1 59 59 view .LVU38
 137 005e 00FB06F6 		mul	r6, r0, r6
  59:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&p_color, &buf_u8[px], sizeof(lv_color_t));
 138              		.loc 1 59 55 view .LVU39
 139 0062 00FB0262 		mla	r2, r0, r2, r6
 140              	.LVL7:
  60:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 141              		.loc 1 60 9 is_stmt 1 view .LVU40
  60:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_COLOR_SIZE == 32
 142              		.loc 1 60 35 is_stmt 0 view .LVU41
 143 0066 2A44     		add	r2, r2, r5
 144              	.LVL8:
 145              	.LBB58:
 146              	.LBI58:
 147              		.file 3 "lvgl/lvgl/src/draw/../misc/lv_mem.h"
   1:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
   2:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *
   4:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
   5:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
   6:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
   9:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/lvgl/src/draw/../misc/lv_mem.h **** extern "C" {
  11:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #endif
  12:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  13:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /*********************
  14:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *      INCLUDES
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 18


  15:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  16:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  18:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include "lv_log.h"
  21:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include "lv_types.h"
  22:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  23:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
  24:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #include <string.h>
  25:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #endif
  26:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  27:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /*********************
  28:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *      DEFINES
  29:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  30:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  31:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #ifndef LV_MEM_BUF_MAX_NUM
  32:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #define LV_MEM_BUF_MAX_NUM    16
  33:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #endif
  34:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  35:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**********************
  36:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *      TYPEDEFS
  37:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  38:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  39:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  40:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Heap information structure.
  41:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  42:lvgl/lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  43:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size*/
  44:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_cnt;
  45:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory*/
  46:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_biggest_size;
  47:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t used_cnt;
  48:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used*/
  49:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used*/
  50:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation*/
  51:lvgl/lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_monitor_t;
  52:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  53:lvgl/lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  54:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     void * p;
  55:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint16_t size;
  56:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used : 1;
  57:lvgl/lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_buf_t;
  58:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  59:lvgl/lvgl/src/draw/../misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  60:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  61:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**********************
  62:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  63:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  64:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  65:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  66:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  67:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  68:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_init(void);
  69:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  70:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  71:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 19


  72:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  73:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  74:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_deinit(void);
  75:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  76:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  77:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Allocate a memory dynamically
  78:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  79:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the allocated memory
  80:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  81:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  82:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  83:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  84:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Free an allocated data
  85:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory
  86:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  87:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_free(void * data);
  88:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  89:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  90:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  91:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  92:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  93:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param new_size the desired new size in byte
  94:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the new memory
  95:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
  96:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  97:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
  98:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
  99:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *
 100:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @return
 101:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 102:lvgl/lvgl/src/draw/../misc/lv_mem.h **** lv_res_t lv_mem_test(void);
 103:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 104:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 105:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
 106:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param mon_p pointer to a dm_mon_p variable,
 107:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  *              the result of the analysis will be stored here
 108:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 109:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 110:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 111:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 112:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 113:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 114:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param size the required size
 115:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 116:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_buf_get(uint32_t size);
 117:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 118:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 119:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Release a memory buffer
 120:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param p buffer to release
 121:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 122:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_release(void * p);
 123:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 124:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 125:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Free all memory buffers
 126:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 127:lvgl/lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_free_all(void);
 128:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 20


 129:lvgl/lvgl/src/draw/../misc/lv_mem.h **** //! @cond Doxygen_Suppress
 130:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 131:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 132:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 133:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 134:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 135:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 136:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 137:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 138:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 139:lvgl/lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy(void * dst, const void * src, size_t len)
 140:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 141:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 142:lvgl/lvgl/src/draw/../misc/lv_mem.h **** }
 143:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 144:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 145:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 146:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 147:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 148:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 149:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 150:lvgl/lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)
 151:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 152:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 153:lvgl/lvgl/src/draw/../misc/lv_mem.h **** }
 154:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 155:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 156:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset
 157:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 158:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param v value to set [0..255]
 159:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 160:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 161:lvgl/lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset(void * dst, uint8_t v, size_t len)
 162:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 163:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, v, len);
 164:lvgl/lvgl/src/draw/../misc/lv_mem.h **** }
 165:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 166:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 167:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 168:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 169:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 170:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 171:lvgl/lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_00(void * dst, size_t len)
 172:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 173:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0x00, len);
 174:lvgl/lvgl/src/draw/../misc/lv_mem.h **** }
 175:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 176:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 177:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 178:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 179:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 180:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 181:lvgl/lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_ff(void * dst, size_t len)
 182:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 183:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0xFF, len);
 184:lvgl/lvgl/src/draw/../misc/lv_mem.h **** }
 185:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 21


 186:lvgl/lvgl/src/draw/../misc/lv_mem.h **** #else
 187:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 188:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 189:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 190:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 191:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 192:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 193:lvgl/lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len);
 194:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 195:lvgl/lvgl/src/draw/../misc/lv_mem.h **** /**
 196:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 197:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 198:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 199:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 200:lvgl/lvgl/src/draw/../misc/lv_mem.h ****  */
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len
 148              		.loc 3 201 44 is_stmt 1 view .LVU42
 149              	.LBB59:
 202:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 150              		.loc 3 203 5 view .LVU43
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 151              		.loc 3 204 5 view .LVU44
 205:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     while(len) {
 152              		.loc 3 206 5 view .LVU45
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 153              		.loc 3 203 15 is_stmt 0 view .LVU46
 154 0068 01A9     		add	r1, sp, #4
 155              	.LVL9:
 156              		.loc 3 206 10 view .LVU47
 157 006a 0223     		movs	r3, #2
 158              	.LVL10:
 159              		.loc 3 206 10 view .LVU48
 160 006c 04E0     		b	.L4
 161              	.LVL11:
 162              	.L5:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 163              		.loc 3 207 9 is_stmt 1 view .LVU49
 164              		.loc 3 207 15 is_stmt 0 view .LVU50
 165 006e 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 166              	.LVL12:
 167              		.loc 3 207 13 view .LVU51
 168 0072 01F8010B 		strb	r0, [r1], #1
 169              	.LVL13:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 170              		.loc 3 208 9 is_stmt 1 view .LVU52
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 171              		.loc 3 209 9 view .LVU53
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 172              		.loc 3 210 9 view .LVU54
 173              		.loc 3 210 12 is_stmt 0 view .LVU55
 174 0076 013B     		subs	r3, r3, #1
 175              	.LVL14:
 176              	.L4:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 177              		.loc 3 206 10 is_stmt 1 view .LVU56
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 22


 178 0078 002B     		cmp	r3, #0
 179 007a F8D1     		bne	.L5
 180              	.LVL15:
 181              	.L6:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 182              		.loc 3 206 10 is_stmt 0 view .LVU57
 183              	.LBE59:
 184              	.LBE58:
 185              	.LBE57:
 106:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 107:lvgl/lvgl/src/draw/lv_img_buf.c ****     return p_color;
 186              		.loc 1 107 5 is_stmt 1 view .LVU58
 108:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 187              		.loc 1 108 1 is_stmt 0 view .LVU59
 188 007c BDF80400 		ldrh	r0, [sp, #4]
 189 0080 03B0     		add	sp, sp, #12
 190              	.LCFI2:
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 20
 193              		@ sp needed
 194 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.LVL16:
 196              	.L12:
 197              	.LCFI3:
 198              		.cfi_restore_state
 199              	.LBB60:
  66:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 200              		.loc 1 66 9 is_stmt 1 view .LVU60
  67:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 201              		.loc 1 67 9 view .LVU61
  67:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 202              		.loc 1 67 17 is_stmt 0 view .LVU62
 203 0084 01F00701 		and	r1, r1, #7
 204              	.LVL17:
  68:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 205              		.loc 1 68 9 is_stmt 1 view .LVU63
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 206              		.loc 1 73 9 view .LVU64
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 207              		.loc 1 73 37 is_stmt 0 view .LVU65
 208 0088 2268     		ldr	r2, [r4]
 209 008a C2F38A22 		ubfx	r2, r2, #10, #11
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 210              		.loc 1 73 40 view .LVU66
 211 008e 0732     		adds	r2, r2, #7
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 212              		.loc 1 73 45 view .LVU67
 213 0090 D210     		asrs	r2, r2, #3
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 214              		.loc 1 73 51 view .LVU68
 215 0092 02FB07F2 		mul	r2, r2, r7
  73:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 216              		.loc 1 73 55 view .LVU69
 217 0096 02EBE602 		add	r2, r2, r6, asr #3
 218              	.LVL18:
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 219              		.loc 1 74 9 is_stmt 1 view .LVU70
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 23


  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 220              		.loc 1 74 31 is_stmt 0 view .LVU71
 221 009a 2A44     		add	r2, r2, r5
 222              	.LVL19:
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 223              		.loc 1 74 31 view .LVU72
 224 009c 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
 225              	.LVL20:
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 226              		.loc 1 74 47 view .LVU73
 227 009e C1F10702 		rsb	r2, r1, #7
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 228              		.loc 1 74 41 view .LVU74
 229 00a2 0121     		movs	r1, #1
 230              	.LVL21:
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 231              		.loc 1 74 41 view .LVU75
 232 00a4 9140     		lsls	r1, r1, r2
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 233              		.loc 1 74 36 view .LVU76
 234 00a6 0B40     		ands	r3, r3, r1
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 235              		.loc 1 74 56 view .LVU77
 236 00a8 1341     		asrs	r3, r3, r2
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 237              		.loc 1 74 22 view .LVU78
 238 00aa ADF80430 		strh	r3, [sp, #4]	@ movhi
 239              	.LVL22:
  74:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 240              		.loc 1 74 22 view .LVU79
 241              	.LBE60:
 242 00ae E5E7     		b	.L6
 243              	.LVL23:
 244              	.L13:
 245              	.LBB61:
  77:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 246              		.loc 1 77 9 is_stmt 1 view .LVU80
  78:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 247              		.loc 1 78 9 view .LVU81
  78:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 248              		.loc 1 78 17 is_stmt 0 view .LVU82
 249 00b0 01F00303 		and	r3, r1, #3
 250              	.LVL24:
  78:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 251              		.loc 1 78 17 view .LVU83
 252 00b4 5B00     		lsls	r3, r3, #1
 253              	.LVL25:
  79:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 254              		.loc 1 79 9 is_stmt 1 view .LVU84
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 255              		.loc 1 84 9 view .LVU85
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 256              		.loc 1 84 37 is_stmt 0 view .LVU86
 257 00b6 2268     		ldr	r2, [r4]
 258 00b8 C2F38A22 		ubfx	r2, r2, #10, #11
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 259              		.loc 1 84 40 view .LVU87
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 24


 260 00bc 0332     		adds	r2, r2, #3
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 261              		.loc 1 84 45 view .LVU88
 262 00be 9210     		asrs	r2, r2, #2
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 263              		.loc 1 84 51 view .LVU89
 264 00c0 02FB07F2 		mul	r2, r2, r7
  84:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 265              		.loc 1 84 55 view .LVU90
 266 00c4 02EBA102 		add	r2, r2, r1, asr #2
 267              	.LVL26:
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 268              		.loc 1 85 9 is_stmt 1 view .LVU91
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 269              		.loc 1 85 31 is_stmt 0 view .LVU92
 270 00c8 2A44     		add	r2, r2, r5
 271              	.LVL27:
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 272              		.loc 1 85 31 view .LVU93
 273 00ca 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 274              		.loc 1 85 47 view .LVU94
 275 00cc C3F10603 		rsb	r3, r3, #6
 276              	.LVL28:
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 277              		.loc 1 85 41 view .LVU95
 278 00d0 0321     		movs	r1, #3
 279              	.LVL29:
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 280              		.loc 1 85 41 view .LVU96
 281 00d2 9940     		lsls	r1, r1, r3
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 282              		.loc 1 85 36 view .LVU97
 283 00d4 0A40     		ands	r2, r2, r1
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 284              		.loc 1 85 56 view .LVU98
 285 00d6 42FA03F3 		asr	r3, r2, r3
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 286              		.loc 1 85 22 view .LVU99
 287 00da ADF80430 		strh	r3, [sp, #4]	@ movhi
 288              	.LVL30:
  85:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 289              		.loc 1 85 22 view .LVU100
 290              	.LBE61:
 291 00de CDE7     		b	.L6
 292              	.LVL31:
 293              	.L14:
 294              	.LBB62:
  88:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 295              		.loc 1 88 9 is_stmt 1 view .LVU101
  89:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 296              		.loc 1 89 9 view .LVU102
  89:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 297              		.loc 1 89 17 is_stmt 0 view .LVU103
 298 00e0 01F00103 		and	r3, r1, #1
 299              	.LVL32:
  89:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 25


 300              		.loc 1 89 17 view .LVU104
 301 00e4 9B00     		lsls	r3, r3, #2
 302              	.LVL33:
  90:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 303              		.loc 1 90 9 is_stmt 1 view .LVU105
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 304              		.loc 1 95 9 view .LVU106
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 305              		.loc 1 95 37 is_stmt 0 view .LVU107
 306 00e6 2268     		ldr	r2, [r4]
 307 00e8 C2F38A22 		ubfx	r2, r2, #10, #11
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 308              		.loc 1 95 40 view .LVU108
 309 00ec 0132     		adds	r2, r2, #1
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 310              		.loc 1 95 45 view .LVU109
 311 00ee 5210     		asrs	r2, r2, #1
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 312              		.loc 1 95 51 view .LVU110
 313 00f0 02FB07F2 		mul	r2, r2, r7
  95:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 314              		.loc 1 95 55 view .LVU111
 315 00f4 02EB6102 		add	r2, r2, r1, asr #1
 316              	.LVL34:
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 317              		.loc 1 96 9 is_stmt 1 view .LVU112
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 318              		.loc 1 96 31 is_stmt 0 view .LVU113
 319 00f8 2A44     		add	r2, r2, r5
 320              	.LVL35:
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 321              		.loc 1 96 31 view .LVU114
 322 00fa 92F84020 		ldrb	r2, [r2, #64]	@ zero_extendqisi2
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 323              		.loc 1 96 49 view .LVU115
 324 00fe C3F10403 		rsb	r3, r3, #4
 325              	.LVL36:
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 326              		.loc 1 96 43 view .LVU116
 327 0102 0F21     		movs	r1, #15
 328              	.LVL37:
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 329              		.loc 1 96 43 view .LVU117
 330 0104 9940     		lsls	r1, r1, r3
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 331              		.loc 1 96 36 view .LVU118
 332 0106 0A40     		ands	r2, r2, r1
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 333              		.loc 1 96 58 view .LVU119
 334 0108 42FA03F3 		asr	r3, r2, r3
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 335              		.loc 1 96 22 view .LVU120
 336 010c ADF80430 		strh	r3, [sp, #4]	@ movhi
 337              	.LVL38:
  96:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 338              		.loc 1 96 22 view .LVU121
 339              	.LBE62:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 26


 340 0110 B4E7     		b	.L6
 341              	.LVL39:
 342              	.L15:
 343              	.LBB63:
  99:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px  = dsc->header.w * y + x;
 344              		.loc 1 99 9 is_stmt 1 view .LVU122
 100:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 345              		.loc 1 100 9 view .LVU123
 100:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 346              		.loc 1 100 35 is_stmt 0 view .LVU124
 347 0112 2268     		ldr	r2, [r4]
 348 0114 C2F38A22 		ubfx	r2, r2, #10, #11
 100:lvgl/lvgl/src/draw/lv_img_buf.c ****         p_color.full = buf_u8[px];
 349              		.loc 1 100 42 view .LVU125
 350 0118 02FB0712 		mla	r2, r2, r7, r1
 351              	.LVL40:
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 352              		.loc 1 101 9 is_stmt 1 view .LVU126
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 353              		.loc 1 101 30 is_stmt 0 view .LVU127
 354 011c 2A44     		add	r2, r2, r5
 355              	.LVL41:
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 356              		.loc 1 101 30 view .LVU128
 357 011e 92F80034 		ldrb	r3, [r2, #1024]	@ zero_extendqisi2
 358              	.LVL42:
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 359              		.loc 1 101 22 view .LVU129
 360 0122 ADF80430 		strh	r3, [sp, #4]	@ movhi
 361              	.LVL43:
 101:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 362              		.loc 1 101 22 view .LVU130
 363              	.LBE63:
 364 0126 A9E7     		b	.L6
 365              		.cfi_endproc
 366              	.LFE51:
 368              		.section	.text.lv_img_buf_get_px_alpha,"ax",%progbits
 369              		.align	1
 370              		.global	lv_img_buf_get_px_alpha
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	lv_img_buf_get_px_alpha:
 377              	.LVL44:
 378              	.LFB52:
 109:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 110:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 111:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Get the alpha value of an image's pixel
 112:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 113:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 114:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 115:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 116:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @return alpha value of the point
 117:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 118:lvgl/lvgl/src/draw/lv_img_buf.c **** lv_opa_t lv_img_buf_get_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y)
 119:lvgl/lvgl/src/draw/lv_img_buf.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 27


 379              		.loc 1 119 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 16
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384              		.loc 1 119 1 is_stmt 0 view .LVU132
 385 0000 F0B4     		push	{r4, r5, r6, r7}
 386              	.LCFI4:
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 4, -16
 389              		.cfi_offset 5, -12
 390              		.cfi_offset 6, -8
 391              		.cfi_offset 7, -4
 392 0002 84B0     		sub	sp, sp, #16
 393              	.LCFI5:
 394              		.cfi_def_cfa_offset 32
 395 0004 0446     		mov	r4, r0
 396 0006 0D46     		mov	r5, r1
 397 0008 1646     		mov	r6, r2
 120:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 398              		.loc 1 120 5 is_stmt 1 view .LVU133
 399              		.loc 1 120 15 is_stmt 0 view .LVU134
 400 000a 8768     		ldr	r7, [r0, #8]
 401              	.LVL45:
 121:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 122:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 402              		.loc 1 122 5 is_stmt 1 view .LVU135
 403              		.loc 1 122 23 is_stmt 0 view .LVU136
 404 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 405 000e 03F01F03 		and	r3, r3, #31
 406              		.loc 1 122 7 view .LVU137
 407 0012 052B     		cmp	r3, #5
 408 0014 0BD0     		beq	.L26
 123:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y * LV_IMG_PX_SIZE_ALPHA_BYTE + x * LV_IMG_PX_SIZE_ALPHA_BYTE
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 125:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 126:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 409              		.loc 1 126 10 is_stmt 1 view .LVU138
 410              		.loc 1 126 12 is_stmt 0 view .LVU139
 411 0016 0B2B     		cmp	r3, #11
 412 0018 13D0     		beq	.L27
 127:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 128:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 129:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 130:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 131:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 132:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 7) >> 3) * y + x;
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 136:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 137:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 413              		.loc 1 137 10 is_stmt 1 view .LVU140
 414              		.loc 1 137 12 is_stmt 0 view .LVU141
 415 001a 0C2B     		cmp	r3, #12
 416 001c 2AD0     		beq	.L28
 138:lvgl/lvgl/src/draw/lv_img_buf.c ****         const uint8_t opa_table[4] = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 28


 139:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 140:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 141:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 142:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 143:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 144:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 145:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4 ,8, 12 ...*/
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 3) >> 2) * y + x;
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 149:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 150:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 417              		.loc 1 150 10 is_stmt 1 view .LVU142
 418              		.loc 1 150 12 is_stmt 0 view .LVU143
 419 001e 0D2B     		cmp	r3, #13
 420 0020 43D0     		beq	.L29
 151:lvgl/lvgl/src/draw/lv_img_buf.c ****         const uint8_t opa_table[16] = {0,  17, 34,  51, /*Opacity mapping with bpp = 4*/
 152:lvgl/lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 153:lvgl/lvgl/src/draw/lv_img_buf.c ****                                       };
 154:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 155:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 156:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 157:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 158:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 159:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 160:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px    = ((dsc->header.w + 1) >> 1) * y + x;
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 164:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 165:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 421              		.loc 1 165 10 is_stmt 1 view .LVU144
 422              		.loc 1 165 12 is_stmt 0 view .LVU145
 423 0022 0E2B     		cmp	r3, #14
 424 0024 5FD0     		beq	.L30
 166:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 167:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 168:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 169:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 170:lvgl/lvgl/src/draw/lv_img_buf.c ****     return LV_OPA_COVER;
 425              		.loc 1 170 12 view .LVU146
 426 0026 FF20     		movs	r0, #255
 427              	.LVL46:
 428              	.L18:
 171:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 429              		.loc 1 171 1 discriminator 1 view .LVU147
 430 0028 04B0     		add	sp, sp, #16
 431              	.LCFI6:
 432              		.cfi_remember_state
 433              		.cfi_def_cfa_offset 16
 434              		@ sp needed
 435 002a F0BC     		pop	{r4, r5, r6, r7}
 436              	.LCFI7:
 437              		.cfi_restore 7
 438              		.cfi_restore 6
 439              		.cfi_restore 5
 440              		.cfi_restore 4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 29


 441              		.cfi_def_cfa_offset 0
 442              	.LVL47:
 443              		.loc 1 171 1 discriminator 1 view .LVU148
 444 002c 7047     		bx	lr
 445              	.LVL48:
 446              	.L26:
 447              	.LCFI8:
 448              		.cfi_restore_state
 449              	.LBB64:
 123:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 450              		.loc 1 123 9 is_stmt 1 view .LVU149
 123:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 451              		.loc 1 123 34 is_stmt 0 view .LVU150
 452 002e 0368     		ldr	r3, [r0]
 453 0030 C3F38A23 		ubfx	r3, r3, #10, #11
 123:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 454              		.loc 1 123 69 view .LVU151
 455 0034 03FB0212 		mla	r2, r3, r2, r1
 456              	.LVL49:
 123:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px + LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 457              		.loc 1 123 69 view .LVU152
 458 0038 02EB4202 		add	r2, r2, r2, lsl #1
 459              	.LVL50:
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 460              		.loc 1 124 9 is_stmt 1 view .LVU153
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 461              		.loc 1 124 22 is_stmt 0 view .LVU154
 462 003c 3A44     		add	r2, r2, r7
 463              	.LVL51:
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 464              		.loc 1 124 22 view .LVU155
 465 003e 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 466              	.LVL52:
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 467              		.loc 1 124 22 view .LVU156
 468 0040 F2E7     		b	.L18
 469              	.LVL53:
 470              	.L27:
 124:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 471              		.loc 1 124 22 view .LVU157
 472              	.LBE64:
 473              	.LBB65:
 127:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 474              		.loc 1 127 9 is_stmt 1 view .LVU158
 127:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 475              		.loc 1 127 17 is_stmt 0 view .LVU159
 476 0042 01F00700 		and	r0, r1, #7
 477              	.LVL54:
 128:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 478              		.loc 1 128 9 is_stmt 1 view .LVU160
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 479              		.loc 1 133 9 view .LVU161
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 480              		.loc 1 133 39 is_stmt 0 view .LVU162
 481 0046 2268     		ldr	r2, [r4]
 482              	.LVL55:
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 30


 483              		.loc 1 133 39 view .LVU163
 484 0048 C2F38A22 		ubfx	r2, r2, #10, #11
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 485              		.loc 1 133 42 view .LVU164
 486 004c 0732     		adds	r2, r2, #7
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 487              		.loc 1 133 47 view .LVU165
 488 004e D210     		asrs	r2, r2, #3
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 489              		.loc 1 133 53 view .LVU166
 490 0050 02FB06F2 		mul	r2, r2, r6
 133:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (1 << (7 - bit))) >> (7 - bit);
 491              		.loc 1 133 57 view .LVU167
 492 0054 02EBE101 		add	r1, r2, r1, asr #3
 493              	.LVL56:
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 494              		.loc 1 134 9 is_stmt 1 view .LVU168
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 495              		.loc 1 134 33 is_stmt 0 view .LVU169
 496 0058 7B5C     		ldrb	r3, [r7, r1]	@ zero_extendqisi2
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 497              		.loc 1 134 49 view .LVU170
 498 005a C0F10702 		rsb	r2, r0, #7
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 499              		.loc 1 134 43 view .LVU171
 500 005e 0121     		movs	r1, #1
 501              	.LVL57:
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 502              		.loc 1 134 43 view .LVU172
 503 0060 9140     		lsls	r1, r1, r2
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 504              		.loc 1 134 38 view .LVU173
 505 0062 0B40     		ands	r3, r3, r1
 134:lvgl/lvgl/src/draw/lv_img_buf.c ****         return px_opa ? LV_OPA_TRANSP : LV_OPA_COVER;
 506              		.loc 1 134 58 view .LVU174
 507 0064 1341     		asrs	r3, r3, r2
 508              	.LVL58:
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 509              		.loc 1 135 9 is_stmt 1 view .LVU175
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 510              		.loc 1 135 39 is_stmt 0 view .LVU176
 511 0066 13F0FF0F 		tst	r3, #255
 512 006a 01D0     		beq	.L23
 513 006c 0020     		movs	r0, #0
 514              	.LVL59:
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 515              		.loc 1 135 39 view .LVU177
 516 006e DBE7     		b	.L18
 517              	.LVL60:
 518              	.L23:
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 519              		.loc 1 135 39 view .LVU178
 520 0070 FF20     		movs	r0, #255
 521              	.LVL61:
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 522              		.loc 1 135 39 view .LVU179
 523 0072 D9E7     		b	.L18
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 31


 524              	.LVL62:
 525              	.L28:
 135:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 526              		.loc 1 135 39 view .LVU180
 527              	.LBE65:
 528              	.LBB66:
 138:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 529              		.loc 1 138 9 is_stmt 1 view .LVU181
 138:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 530              		.loc 1 138 23 is_stmt 0 view .LVU182
 531 0074 1F4B     		ldr	r3, .L31
 532 0076 0093     		str	r3, [sp]
 140:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 533              		.loc 1 140 9 is_stmt 1 view .LVU183
 140:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 534              		.loc 1 140 17 is_stmt 0 view .LVU184
 535 0078 01F00302 		and	r2, r1, #3
 536              	.LVL63:
 140:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 537              		.loc 1 140 17 view .LVU185
 538 007c 5000     		lsls	r0, r2, #1
 539              	.LVL64:
 141:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 540              		.loc 1 141 9 is_stmt 1 view .LVU186
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 541              		.loc 1 146 9 view .LVU187
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 542              		.loc 1 146 39 is_stmt 0 view .LVU188
 543 007e 2268     		ldr	r2, [r4]
 544 0080 C2F38A22 		ubfx	r2, r2, #10, #11
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 545              		.loc 1 146 42 view .LVU189
 546 0084 0332     		adds	r2, r2, #3
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 547              		.loc 1 146 47 view .LVU190
 548 0086 9210     		asrs	r2, r2, #2
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 549              		.loc 1 146 53 view .LVU191
 550 0088 02FB06F2 		mul	r2, r2, r6
 146:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (3 << (6 - bit))) >> (6 - bit);
 551              		.loc 1 146 57 view .LVU192
 552 008c 02EBA101 		add	r1, r2, r1, asr #2
 553              	.LVL65:
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 554              		.loc 1 147 9 is_stmt 1 view .LVU193
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 555              		.loc 1 147 33 is_stmt 0 view .LVU194
 556 0090 7B5C     		ldrb	r3, [r7, r1]	@ zero_extendqisi2
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 557              		.loc 1 147 49 view .LVU195
 558 0092 C0F10602 		rsb	r2, r0, #6
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 559              		.loc 1 147 43 view .LVU196
 560 0096 0321     		movs	r1, #3
 561              	.LVL66:
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 562              		.loc 1 147 43 view .LVU197
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 32


 563 0098 9140     		lsls	r1, r1, r2
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 564              		.loc 1 147 38 view .LVU198
 565 009a 0B40     		ands	r3, r3, r1
 147:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 566              		.loc 1 147 58 view .LVU199
 567 009c 1341     		asrs	r3, r3, r2
 568              	.LVL67:
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 569              		.loc 1 148 9 is_stmt 1 view .LVU200
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 570              		.loc 1 148 25 is_stmt 0 view .LVU201
 571 009e 04AA     		add	r2, sp, #16
 572 00a0 52FA83F3 		uxtab	r3, r2, r3
 573              	.LVL68:
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 574              		.loc 1 148 25 view .LVU202
 575 00a4 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 576              	.LVL69:
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 577              		.loc 1 148 25 view .LVU203
 578 00a8 BEE7     		b	.L18
 579              	.LVL70:
 580              	.L29:
 148:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 581              		.loc 1 148 25 view .LVU204
 582              	.LBE66:
 583              	.LBB67:
 151:lvgl/lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 584              		.loc 1 151 9 is_stmt 1 view .LVU205
 151:lvgl/lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 585              		.loc 1 151 23 is_stmt 0 view .LVU206
 586 00aa 134B     		ldr	r3, .L31+4
 587 00ac 0FCB     		ldm	r3, {r0, r1, r2, r3}
 588              	.LVL71:
 151:lvgl/lvgl/src/draw/lv_img_buf.c ****                                        68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 589              		.loc 1 151 23 view .LVU207
 590 00ae 0DF1100C 		add	ip, sp, #16
 591 00b2 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 155:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 592              		.loc 1 155 9 is_stmt 1 view .LVU208
 155:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 593              		.loc 1 155 17 is_stmt 0 view .LVU209
 594 00b6 05F00102 		and	r2, r5, #1
 595 00ba 9000     		lsls	r0, r2, #2
 596              	.LVL72:
 156:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 597              		.loc 1 156 9 is_stmt 1 view .LVU210
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 598              		.loc 1 161 9 view .LVU211
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 599              		.loc 1 161 39 is_stmt 0 view .LVU212
 600 00bc 2268     		ldr	r2, [r4]
 601 00be C2F38A22 		ubfx	r2, r2, #10, #11
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 602              		.loc 1 161 42 view .LVU213
 603 00c2 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 33


 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 604              		.loc 1 161 47 view .LVU214
 605 00c4 5210     		asrs	r2, r2, #1
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 606              		.loc 1 161 53 view .LVU215
 607 00c6 02FB06F2 		mul	r2, r2, r6
 161:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_opa = (buf_u8[px] & (0xF << (4 - bit))) >> (4 - bit);
 608              		.loc 1 161 57 view .LVU216
 609 00ca 02EB6501 		add	r1, r2, r5, asr #1
 610              	.LVL73:
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 611              		.loc 1 162 9 is_stmt 1 view .LVU217
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 612              		.loc 1 162 33 is_stmt 0 view .LVU218
 613 00ce 7B5C     		ldrb	r3, [r7, r1]	@ zero_extendqisi2
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 614              		.loc 1 162 51 view .LVU219
 615 00d0 C0F10402 		rsb	r2, r0, #4
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 616              		.loc 1 162 45 view .LVU220
 617 00d4 0F21     		movs	r1, #15
 618              	.LVL74:
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 619              		.loc 1 162 45 view .LVU221
 620 00d6 9140     		lsls	r1, r1, r2
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 621              		.loc 1 162 38 view .LVU222
 622 00d8 0B40     		ands	r3, r3, r1
 162:lvgl/lvgl/src/draw/lv_img_buf.c ****         return opa_table[px_opa];
 623              		.loc 1 162 60 view .LVU223
 624 00da 1341     		asrs	r3, r3, r2
 625              	.LVL75:
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 626              		.loc 1 163 9 is_stmt 1 view .LVU224
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 627              		.loc 1 163 25 is_stmt 0 view .LVU225
 628 00dc 5CFA83F3 		uxtab	r3, ip, r3
 629              	.LVL76:
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 630              		.loc 1 163 25 view .LVU226
 631 00e0 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
 632              	.LVL77:
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 633              		.loc 1 163 25 view .LVU227
 634 00e4 A0E7     		b	.L18
 635              	.LVL78:
 636              	.L30:
 163:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 637              		.loc 1 163 25 view .LVU228
 638              	.LBE67:
 639              	.LBB68:
 166:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 640              		.loc 1 166 9 is_stmt 1 view .LVU229
 166:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 641              		.loc 1 166 34 is_stmt 0 view .LVU230
 642 00e6 0268     		ldr	r2, [r0]
 643              	.LVL79:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 34


 166:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 644              		.loc 1 166 34 view .LVU231
 645 00e8 C2F38A22 		ubfx	r2, r2, #10, #11
 166:lvgl/lvgl/src/draw/lv_img_buf.c ****         return buf_u8[px];
 646              		.loc 1 166 41 view .LVU232
 647 00ec 02FB0612 		mla	r2, r2, r6, r1
 648              	.LVL80:
 167:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 649              		.loc 1 167 9 is_stmt 1 view .LVU233
 167:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 650              		.loc 1 167 22 is_stmt 0 view .LVU234
 651 00f0 B85C     		ldrb	r0, [r7, r2]	@ zero_extendqisi2
 652              	.LVL81:
 167:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 653              		.loc 1 167 22 view .LVU235
 654 00f2 99E7     		b	.L18
 655              	.L32:
 656              		.align	2
 657              	.L31:
 658 00f4 0055AAFF 		.word	-5614336
 659 00f8 00000000 		.word	.LANCHOR0
 660              	.LBE68:
 661              		.cfi_endproc
 662              	.LFE52:
 664              		.section	.text.lv_img_buf_set_px_alpha,"ax",%progbits
 665              		.align	1
 666              		.global	lv_img_buf_set_px_alpha
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	lv_img_buf_set_px_alpha:
 673              	.LVL82:
 674              	.LFB53:
 172:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 173:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 174:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Set the alpha value of a pixel of an image. The color won't be affected
 175:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 176:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 177:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 178:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param opa the desired opacity
 179:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 180:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 181:lvgl/lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_px_alpha(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)
 182:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 675              		.loc 1 182 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		.loc 1 182 1 is_stmt 0 view .LVU237
 680 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 681              	.LCFI9:
 682              		.cfi_def_cfa_offset 24
 683              		.cfi_offset 4, -24
 684              		.cfi_offset 5, -20
 685              		.cfi_offset 6, -16
 686              		.cfi_offset 7, -12
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 35


 687              		.cfi_offset 8, -8
 688              		.cfi_offset 14, -4
 689 0004 0546     		mov	r5, r0
 690 0006 0E46     		mov	r6, r1
 691 0008 1746     		mov	r7, r2
 692 000a 1C46     		mov	r4, r3
 183:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 693              		.loc 1 183 5 is_stmt 1 view .LVU238
 694              		.loc 1 183 15 is_stmt 0 view .LVU239
 695 000c D0F80880 		ldr	r8, [r0, #8]
 696              	.LVL83:
 184:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 185:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 697              		.loc 1 185 5 is_stmt 1 view .LVU240
 698              		.loc 1 185 23 is_stmt 0 view .LVU241
 699 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 700              	.LVL84:
 701              		.loc 1 185 23 view .LVU242
 702 0012 03F01F03 		and	r3, r3, #31
 703              		.loc 1 185 7 view .LVU243
 704 0016 052B     		cmp	r3, #5
 705 0018 0FD0     		beq	.L40
 186:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size          = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 188:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 189:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 190:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT) {
 706              		.loc 1 190 10 is_stmt 1 view .LVU244
 707              		.loc 1 190 12 is_stmt 0 view .LVU245
 708 001a 0B2B     		cmp	r3, #11
 709 001c 20D0     		beq	.L41
 191:lvgl/lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 7; /*opa -> [0,1]*/
 192:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 193:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 194:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 195:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 196:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 197:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 201:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 202:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_2BIT) {
 710              		.loc 1 202 10 is_stmt 1 view .LVU246
 711              		.loc 1 202 12 is_stmt 0 view .LVU247
 712 001e 0C2B     		cmp	r3, #12
 713 0020 39D0     		beq	.L42
 203:lvgl/lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 6; /*opa -> [0,3]*/
 204:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 205:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 206:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 207:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 208:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 4 means rounding up to 8 because the lines are byte aligned
 209:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4 ,8, 12 ...*/
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 212:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 36


 213:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 214:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_4BIT) {
 714              		.loc 1 214 10 is_stmt 1 view .LVU248
 715              		.loc 1 214 12 is_stmt 0 view .LVU249
 716 0022 0D2B     		cmp	r3, #13
 717 0024 52D0     		beq	.L43
 215:lvgl/lvgl/src/draw/lv_img_buf.c ****         opa         = opa >> 4; /*opa -> [0,15]*/
 216:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 217:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 218:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 219:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 220:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 8 because the lines are byte aligned
 221:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 224:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 225:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 226:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 718              		.loc 1 226 10 is_stmt 1 view .LVU250
 719              		.loc 1 226 12 is_stmt 0 view .LVU251
 720 0026 0E2B     		cmp	r3, #14
 721 0028 33D1     		bne	.L33
 722              	.LBB69:
 227:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 723              		.loc 1 227 9 is_stmt 1 view .LVU252
 724              		.loc 1 227 34 is_stmt 0 view .LVU253
 725 002a 0168     		ldr	r1, [r0]
 726              	.LVL85:
 727              		.loc 1 227 34 view .LVU254
 728 002c C1F38A21 		ubfx	r1, r1, #10, #11
 729              		.loc 1 227 41 view .LVU255
 730 0030 01FB0266 		mla	r6, r1, r2, r6
 731              	.LVL86:
 228:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = opa;
 732              		.loc 1 228 9 is_stmt 1 view .LVU256
 733              		.loc 1 228 21 is_stmt 0 view .LVU257
 734 0034 08F80640 		strb	r4, [r8, r6]
 735              	.LBE69:
 229:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 230:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 736              		.loc 1 230 1 view .LVU258
 737 0038 2BE0     		b	.L33
 738              	.LVL87:
 739              	.L40:
 740              	.LBB70:
 186:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 741              		.loc 1 186 9 is_stmt 1 view .LVU259
 186:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 742              		.loc 1 186 36 is_stmt 0 view .LVU260
 743 003a 1846     		mov	r0, r3
 744              	.LVL88:
 186:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 745              		.loc 1 186 36 view .LVU261
 746 003c FFF7FEFF 		bl	lv_img_cf_get_px_size
 747              	.LVL89:
 186:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px              = dsc->header.w * y * px_size + x * px_size;
 748              		.loc 1 186 17 view .LVU262
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 37


 749 0040 C0F3C700 		ubfx	r0, r0, #3, #8
 750              	.LVL90:
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 751              		.loc 1 187 9 is_stmt 1 view .LVU263
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 752              		.loc 1 187 47 is_stmt 0 view .LVU264
 753 0044 2A68     		ldr	r2, [r5]
 754 0046 C2F38A22 		ubfx	r2, r2, #10, #11
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 755              		.loc 1 187 50 view .LVU265
 756 004a 02FB07F7 		mul	r7, r2, r7
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 757              		.loc 1 187 68 view .LVU266
 758 004e 00FB06F6 		mul	r6, r0, r6
 187:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px + px_size - 1] = opa;
 759              		.loc 1 187 64 view .LVU267
 760 0052 00FB0766 		mla	r6, r0, r7, r6
 761              	.LVL91:
 188:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 762              		.loc 1 188 9 is_stmt 1 view .LVU268
 188:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 763              		.loc 1 188 19 is_stmt 0 view .LVU269
 764 0056 3044     		add	r0, r0, r6
 765              	.LVL92:
 188:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 766              		.loc 1 188 15 view .LVU270
 767 0058 0138     		subs	r0, r0, #1
 188:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 768              		.loc 1 188 34 view .LVU271
 769 005a 08F80040 		strb	r4, [r8, r0]
 770              	.LBE70:
 771 005e 18E0     		b	.L33
 772              	.LVL93:
 773              	.L41:
 774              	.LBB71:
 191:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 775              		.loc 1 191 9 is_stmt 1 view .LVU272
 191:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 776              		.loc 1 191 21 is_stmt 0 view .LVU273
 777 0060 E409     		lsrs	r4, r4, #7
 778              	.LVL94:
 192:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 779              		.loc 1 192 9 is_stmt 1 view .LVU274
 192:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 780              		.loc 1 192 17 is_stmt 0 view .LVU275
 781 0062 01F00703 		and	r3, r1, #7
 782              	.LVL95:
 193:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 783              		.loc 1 193 9 is_stmt 1 view .LVU276
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 784              		.loc 1 198 9 view .LVU277
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 785              		.loc 1 198 36 is_stmt 0 view .LVU278
 786 0066 0268     		ldr	r2, [r0]
 787              	.LVL96:
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 788              		.loc 1 198 36 view .LVU279
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 38


 789 0068 C2F38A22 		ubfx	r2, r2, #10, #11
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 790              		.loc 1 198 39 view .LVU280
 791 006c 0732     		adds	r2, r2, #7
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 792              		.loc 1 198 44 view .LVU281
 793 006e D210     		asrs	r2, r2, #3
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 794              		.loc 1 198 50 view .LVU282
 795 0070 02FB07F7 		mul	r7, r2, r7
 198:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 796              		.loc 1 198 54 view .LVU283
 797 0074 07EBE106 		add	r6, r7, r1, asr #3
 798              	.LVL97:
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 799              		.loc 1 199 9 is_stmt 1 view .LVU284
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 800              		.loc 1 199 29 is_stmt 0 view .LVU285
 801 0078 18F90620 		ldrsb	r2, [r8, r6]
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 802              		.loc 1 199 46 view .LVU286
 803 007c C3F10703 		rsb	r3, r3, #7
 804              	.LVL98:
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 805              		.loc 1 199 40 view .LVU287
 806 0080 0121     		movs	r1, #1
 807              	.LVL99:
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 808              		.loc 1 199 40 view .LVU288
 809 0082 9940     		lsls	r1, r1, r3
 199:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x1) << (7 - bit));
 810              		.loc 1 199 34 view .LVU289
 811 0084 22EA0102 		bic	r2, r2, r1
 812 0088 52B2     		sxtb	r2, r2
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 813              		.loc 1 200 9 is_stmt 1 view .LVU290
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 814              		.loc 1 200 49 is_stmt 0 view .LVU291
 815 008a 9C40     		lsls	r4, r4, r3
 816              	.LVL100:
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 817              		.loc 1 200 34 view .LVU292
 818 008c 1443     		orrs	r4, r4, r2
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 819              		.loc 1 200 21 view .LVU293
 820 008e 08F80640 		strb	r4, [r8, r6]
 821              	.LVL101:
 822              	.L33:
 200:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 823              		.loc 1 200 21 view .LVU294
 824              	.LBE71:
 825              		.loc 1 230 1 view .LVU295
 826 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 827              	.LVL102:
 828              	.L42:
 829              	.LBB72:
 203:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 39


 830              		.loc 1 203 9 is_stmt 1 view .LVU296
 203:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 831              		.loc 1 203 21 is_stmt 0 view .LVU297
 832 0096 A409     		lsrs	r4, r4, #6
 833              	.LVL103:
 204:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 834              		.loc 1 204 9 is_stmt 1 view .LVU298
 204:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 835              		.loc 1 204 17 is_stmt 0 view .LVU299
 836 0098 01F00303 		and	r3, r1, #3
 837 009c 5B00     		lsls	r3, r3, #1
 838              	.LVL104:
 205:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 839              		.loc 1 205 9 is_stmt 1 view .LVU300
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 840              		.loc 1 210 9 view .LVU301
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 841              		.loc 1 210 36 is_stmt 0 view .LVU302
 842 009e 0268     		ldr	r2, [r0]
 843              	.LVL105:
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 844              		.loc 1 210 36 view .LVU303
 845 00a0 C2F38A22 		ubfx	r2, r2, #10, #11
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 846              		.loc 1 210 39 view .LVU304
 847 00a4 0332     		adds	r2, r2, #3
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 848              		.loc 1 210 44 view .LVU305
 849 00a6 9210     		asrs	r2, r2, #2
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 850              		.loc 1 210 50 view .LVU306
 851 00a8 02FB07F7 		mul	r7, r2, r7
 210:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(3 << (6 - bit));
 852              		.loc 1 210 54 view .LVU307
 853 00ac 07EBA106 		add	r6, r7, r1, asr #2
 854              	.LVL106:
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 855              		.loc 1 211 9 is_stmt 1 view .LVU308
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 856              		.loc 1 211 29 is_stmt 0 view .LVU309
 857 00b0 18F90620 		ldrsb	r2, [r8, r6]
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 858              		.loc 1 211 46 view .LVU310
 859 00b4 C3F10603 		rsb	r3, r3, #6
 860              	.LVL107:
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 861              		.loc 1 211 40 view .LVU311
 862 00b8 0321     		movs	r1, #3
 863              	.LVL108:
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 864              		.loc 1 211 40 view .LVU312
 865 00ba 9940     		lsls	r1, r1, r3
 211:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0x3) << (6 - bit));
 866              		.loc 1 211 34 view .LVU313
 867 00bc 22EA0102 		bic	r2, r2, r1
 868 00c0 52B2     		sxtb	r2, r2
 212:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 40


 869              		.loc 1 212 9 is_stmt 1 view .LVU314
 212:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 870              		.loc 1 212 49 is_stmt 0 view .LVU315
 871 00c2 9C40     		lsls	r4, r4, r3
 872              	.LVL109:
 212:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 873              		.loc 1 212 34 view .LVU316
 874 00c4 1443     		orrs	r4, r4, r2
 212:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 875              		.loc 1 212 21 view .LVU317
 876 00c6 08F80640 		strb	r4, [r8, r6]
 877              	.LBE72:
 878 00ca E2E7     		b	.L33
 879              	.LVL110:
 880              	.L43:
 881              	.LBB73:
 215:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 882              		.loc 1 215 9 is_stmt 1 view .LVU318
 215:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 883              		.loc 1 215 21 is_stmt 0 view .LVU319
 884 00cc 2409     		lsrs	r4, r4, #4
 885              	.LVL111:
 216:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 886              		.loc 1 216 9 is_stmt 1 view .LVU320
 216:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 887              		.loc 1 216 17 is_stmt 0 view .LVU321
 888 00ce 01F00103 		and	r3, r1, #1
 889 00d2 9B00     		lsls	r3, r3, #2
 890              	.LVL112:
 217:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 891              		.loc 1 217 9 is_stmt 1 view .LVU322
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 892              		.loc 1 222 9 view .LVU323
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 893              		.loc 1 222 36 is_stmt 0 view .LVU324
 894 00d4 0268     		ldr	r2, [r0]
 895              	.LVL113:
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 896              		.loc 1 222 36 view .LVU325
 897 00d6 C2F38A22 		ubfx	r2, r2, #10, #11
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 898              		.loc 1 222 39 view .LVU326
 899 00da 0132     		adds	r2, r2, #1
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 900              		.loc 1 222 44 view .LVU327
 901 00dc 5210     		asrs	r2, r2, #1
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 902              		.loc 1 222 50 view .LVU328
 903 00de 02FB07F7 		mul	r7, r2, r7
 222:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 904              		.loc 1 222 54 view .LVU329
 905 00e2 07EB6106 		add	r6, r7, r1, asr #1
 906              	.LVL114:
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 907              		.loc 1 223 9 is_stmt 1 view .LVU330
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 908              		.loc 1 223 29 is_stmt 0 view .LVU331
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 41


 909 00e6 18F90620 		ldrsb	r2, [r8, r6]
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 910              		.loc 1 223 48 view .LVU332
 911 00ea C3F10403 		rsb	r3, r3, #4
 912              	.LVL115:
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 913              		.loc 1 223 42 view .LVU333
 914 00ee 0F21     		movs	r1, #15
 915              	.LVL116:
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 916              		.loc 1 223 42 view .LVU334
 917 00f0 9940     		lsls	r1, r1, r3
 223:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((opa & 0xF) << (4 - bit));
 918              		.loc 1 223 34 view .LVU335
 919 00f2 22EA0102 		bic	r2, r2, r1
 920 00f6 52B2     		sxtb	r2, r2
 224:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 921              		.loc 1 224 9 is_stmt 1 view .LVU336
 224:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 922              		.loc 1 224 49 is_stmt 0 view .LVU337
 923 00f8 9C40     		lsls	r4, r4, r3
 924              	.LVL117:
 224:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 925              		.loc 1 224 34 view .LVU338
 926 00fa 1443     		orrs	r4, r4, r2
 224:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 927              		.loc 1 224 21 view .LVU339
 928 00fc 08F80640 		strb	r4, [r8, r6]
 929              	.LBE73:
 930 0100 C7E7     		b	.L33
 931              		.cfi_endproc
 932              	.LFE53:
 934              		.section	.text.lv_img_buf_set_px_color,"ax",%progbits
 935              		.align	1
 936              		.global	lv_img_buf_set_px_color
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv4-sp-d16
 942              	lv_img_buf_set_px_color:
 943              	.LVL118:
 944              	.LFB54:
 231:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 232:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 233:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Set the color of a pixel of an image. The alpha channel won't be affected.
 234:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 235:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param x x coordinate of the point to set
 236:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param y x coordinate of the point to set
 237:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param c color of the point
 238:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param safe true: check out of bounds
 239:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 240:lvgl/lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_px_color(lv_img_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)
 241:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 945              		.loc 1 241 1 is_stmt 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 8
 948              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 42


 949              		.loc 1 241 1 is_stmt 0 view .LVU341
 950 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 951              	.LCFI10:
 952              		.cfi_def_cfa_offset 20
 953              		.cfi_offset 4, -20
 954              		.cfi_offset 5, -16
 955              		.cfi_offset 6, -12
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 83B0     		sub	sp, sp, #12
 959              	.LCFI11:
 960              		.cfi_def_cfa_offset 32
 961 0004 0446     		mov	r4, r0
 962 0006 0E46     		mov	r6, r1
 963 0008 1746     		mov	r7, r2
 964 000a ADF80430 		strh	r3, [sp, #4]	@ movhi
 242:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf_u8 = (uint8_t *)dsc->data;
 965              		.loc 1 242 5 is_stmt 1 view .LVU342
 966              		.loc 1 242 15 is_stmt 0 view .LVU343
 967 000e 8568     		ldr	r5, [r0, #8]
 968              	.LVL119:
 243:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 244:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYE
 969              		.loc 1 244 5 is_stmt 1 view .LVU344
 970              		.loc 1 244 23 is_stmt 0 view .LVU345
 971 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 972 0012 03F01F03 		and	r3, r3, #31
 973              		.loc 1 244 7 view .LVU346
 974 0016 042B     		cmp	r3, #4
 975 0018 17D0     		beq	.L45
 976              		.loc 1 244 47 discriminator 1 view .LVU347
 977 001a 062B     		cmp	r3, #6
 978 001c 15D0     		beq	.L45
 245:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 247:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 248:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 249:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 979              		.loc 1 249 10 is_stmt 1 view .LVU348
 980              		.loc 1 249 12 is_stmt 0 view .LVU349
 981 001e 052B     		cmp	r3, #5
 982 0020 2FD0     		beq	.L57
 250:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf) >> 3;
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 252:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 253:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 254:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT) {
 983              		.loc 1 254 10 is_stmt 1 view .LVU350
 984              		.loc 1 254 12 is_stmt 0 view .LVU351
 985 0022 072B     		cmp	r3, #7
 986 0024 49D0     		beq	.L58
 255:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 2; /*Skip the palette*/
 256:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 257:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = x & 0x7;
 258:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 259:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 260:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 43


 261:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 7 means rounding up to 8 because the lines are byte aligned
 262:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 8 ,16, 24 ...*/
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 7) >> 3) * y + x;
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 266:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 267:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_2BIT) {
 987              		.loc 1 267 10 is_stmt 1 view .LVU352
 988              		.loc 1 267 12 is_stmt 0 view .LVU353
 989 0026 082B     		cmp	r3, #8
 990 0028 65D0     		beq	.L59
 268:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 4; /*Skip the palette*/
 269:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 270:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 271:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 272:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 273:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 3 means rounding up to 4 because the lines are byte aligned
 274:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 4, 8 ,12 ...*/
 275:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 3) >> 2) * y + x;
 276:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] & ~(3 << (6 - bit));
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 279:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 280:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_4BIT) {
 991              		.loc 1 280 10 is_stmt 1 view .LVU354
 992              		.loc 1 280 12 is_stmt 0 view .LVU355
 993 002a 092B     		cmp	r3, #9
 994 002c 00F08380 		beq	.L60
 281:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 16; /*Skip the palette*/
 282:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 283:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 284:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 285:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the current pixel.
 286:lvgl/lvgl/src/draw/lv_img_buf.c ****          *dsc->header.w + 1 means rounding up to 2 because the lines are byte aligned
 287:lvgl/lvgl/src/draw/lv_img_buf.c ****          *so the possible real width are 2 ,4, 6 ...*/
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = ((dsc->header.w + 1) >> 1) * y + x;
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 291:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 292:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 995              		.loc 1 292 10 is_stmt 1 view .LVU356
 996              		.loc 1 292 12 is_stmt 0 view .LVU357
 997 0030 0A2B     		cmp	r3, #10
 998 0032 24D1     		bne	.L44
 999              	.LBB74:
 293:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8 += sizeof(lv_color32_t) * 256; /*Skip the palette*/
 1000              		.loc 1 293 9 is_stmt 1 view .LVU358
 1001              	.LVL120:
 294:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px = dsc->header.w * y + x;
 1002              		.loc 1 294 9 view .LVU359
 1003              		.loc 1 294 34 is_stmt 0 view .LVU360
 1004 0034 0368     		ldr	r3, [r0]
 1005 0036 C3F38A23 		ubfx	r3, r3, #10, #11
 1006              		.loc 1 294 41 view .LVU361
 1007 003a 03FB0213 		mla	r3, r3, r2, r1
 1008              	.LVL121:
 295:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = c.full;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 44


 1009              		.loc 1 295 9 is_stmt 1 view .LVU362
 1010              		.loc 1 295 24 is_stmt 0 view .LVU363
 1011 003e BDF80420 		ldrh	r2, [sp, #4]
 1012              	.LVL122:
 1013              		.loc 1 295 15 view .LVU364
 1014 0042 03F58063 		add	r3, r3, #1024
 1015              	.LVL123:
 1016              		.loc 1 295 21 view .LVU365
 1017 0046 EA54     		strb	r2, [r5, r3]
 1018              	.LBE74:
 296:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 297:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 1019              		.loc 1 297 1 view .LVU366
 1020 0048 19E0     		b	.L44
 1021              	.LVL124:
 1022              	.L45:
 1023              	.LBB75:
 245:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1024              		.loc 1 245 9 is_stmt 1 view .LVU367
 245:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1025              		.loc 1 245 60 is_stmt 0 view .LVU368
 1026 004a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1027              	.LVL125:
 245:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1028              		.loc 1 245 27 view .LVU369
 1029 004c 00F01F00 		and	r0, r0, #31
 1030 0050 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1031              	.LVL126:
 245:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1032              		.loc 1 245 17 view .LVU370
 1033 0054 C0F3C700 		ubfx	r0, r0, #3, #8
 1034              	.LVL127:
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1035              		.loc 1 246 9 is_stmt 1 view .LVU371
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1036              		.loc 1 246 38 is_stmt 0 view .LVU372
 1037 0058 2368     		ldr	r3, [r4]
 1038 005a C3F38A23 		ubfx	r3, r3, #10, #11
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1039              		.loc 1 246 41 view .LVU373
 1040 005e 03FB07F3 		mul	r3, r3, r7
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1041              		.loc 1 246 59 view .LVU374
 1042 0062 00FB06F6 		mul	r6, r0, r6
 246:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size);
 1043              		.loc 1 246 55 view .LVU375
 1044 0066 00FB0363 		mla	r3, r0, r3, r6
 1045              	.LVL128:
 247:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1046              		.loc 1 247 9 is_stmt 1 view .LVU376
 247:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1047              		.loc 1 247 25 is_stmt 0 view .LVU377
 1048 006a 2B44     		add	r3, r3, r5
 1049              	.LVL129:
 1050              	.LBB76:
 1051              	.LBI76:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 45


 1052              		.loc 3 201 44 is_stmt 1 view .LVU378
 1053              	.LBB77:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1054              		.loc 3 203 5 view .LVU379
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1055              		.loc 3 204 5 view .LVU380
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1056              		.loc 3 206 5 view .LVU381
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1057              		.loc 3 204 21 is_stmt 0 view .LVU382
 1058 006c 01AA     		add	r2, sp, #4
 1059              	.LVL130:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1060              		.loc 3 206 10 view .LVU383
 1061 006e 04E0     		b	.L47
 1062              	.LVL131:
 1063              	.L48:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1064              		.loc 3 207 9 is_stmt 1 view .LVU384
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1065              		.loc 3 207 15 is_stmt 0 view .LVU385
 1066 0070 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 1067              	.LVL132:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1068              		.loc 3 207 13 view .LVU386
 1069 0074 03F8011B 		strb	r1, [r3], #1
 1070              	.LVL133:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1071              		.loc 3 208 9 is_stmt 1 view .LVU387
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1072              		.loc 3 209 9 view .LVU388
 1073              		.loc 3 210 9 view .LVU389
 1074              		.loc 3 210 12 is_stmt 0 view .LVU390
 1075 0078 0138     		subs	r0, r0, #1
 1076              	.LVL134:
 1077              	.L47:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1078              		.loc 3 206 10 is_stmt 1 view .LVU391
 1079 007a 0028     		cmp	r0, #0
 1080 007c F8D1     		bne	.L48
 1081              	.LVL135:
 1082              	.L44:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1083              		.loc 3 206 10 is_stmt 0 view .LVU392
 1084              	.LBE77:
 1085              	.LBE76:
 1086              	.LBE75:
 1087              		.loc 1 297 1 view .LVU393
 1088 007e 03B0     		add	sp, sp, #12
 1089              	.LCFI12:
 1090              		.cfi_remember_state
 1091              		.cfi_def_cfa_offset 20
 1092              		@ sp needed
 1093 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 1094              	.LVL136:
 1095              	.L57:
 1096              	.LCFI13:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 46


 1097              		.cfi_restore_state
 1098              	.LBB78:
 250:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1099              		.loc 1 250 9 is_stmt 1 view .LVU394
 250:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1100              		.loc 1 250 60 is_stmt 0 view .LVU395
 1101 0082 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1102              	.LVL137:
 250:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1103              		.loc 1 250 27 view .LVU396
 1104 0084 00F01F00 		and	r0, r0, #31
 1105 0088 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1106              	.LVL138:
 250:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint32_t px     = dsc->header.w * y * px_size + x * px_size;
 1107              		.loc 1 250 17 view .LVU397
 1108 008c C0F3C702 		ubfx	r2, r0, #3, #8
 1109              	.LVL139:
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1110              		.loc 1 251 9 is_stmt 1 view .LVU398
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1111              		.loc 1 251 38 is_stmt 0 view .LVU399
 1112 0090 2368     		ldr	r3, [r4]
 1113 0092 C3F38A23 		ubfx	r3, r3, #10, #11
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1114              		.loc 1 251 41 view .LVU400
 1115 0096 03FB07F3 		mul	r3, r3, r7
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1116              		.loc 1 251 59 view .LVU401
 1117 009a 02FB06F6 		mul	r6, r2, r6
 251:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&buf_u8[px], &c, px_size - 1); /*-1 to not overwrite the alpha value*/
 1118              		.loc 1 251 55 view .LVU402
 1119 009e 02FB0363 		mla	r3, r2, r3, r6
 1120              	.LVL140:
 252:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1121              		.loc 1 252 9 is_stmt 1 view .LVU403
 252:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1122              		.loc 1 252 25 is_stmt 0 view .LVU404
 1123 00a2 2B44     		add	r3, r3, r5
 1124              	.LVL141:
 252:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1125              		.loc 1 252 50 view .LVU405
 1126 00a4 013A     		subs	r2, r2, #1
 1127              	.LVL142:
 1128              	.LBB79:
 1129              	.LBI79:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 1130              		.loc 3 201 44 is_stmt 1 view .LVU406
 1131              	.LBB80:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1132              		.loc 3 203 5 view .LVU407
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1133              		.loc 3 204 5 view .LVU408
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1134              		.loc 3 206 5 view .LVU409
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1135              		.loc 3 204 21 is_stmt 0 view .LVU410
 1136 00a6 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 47


 1137              	.LVL143:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1138              		.loc 3 206 10 view .LVU411
 1139 00a8 04E0     		b	.L51
 1140              	.LVL144:
 1141              	.L52:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1142              		.loc 3 207 9 is_stmt 1 view .LVU412
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1143              		.loc 3 207 15 is_stmt 0 view .LVU413
 1144 00aa 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1145              	.LVL145:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1146              		.loc 3 207 13 view .LVU414
 1147 00ae 03F8010B 		strb	r0, [r3], #1
 1148              	.LVL146:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1149              		.loc 3 208 9 is_stmt 1 view .LVU415
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1150              		.loc 3 209 9 view .LVU416
 1151              		.loc 3 210 9 view .LVU417
 1152              		.loc 3 210 12 is_stmt 0 view .LVU418
 1153 00b2 013A     		subs	r2, r2, #1
 1154              	.LVL147:
 1155              	.L51:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1156              		.loc 3 206 10 is_stmt 1 view .LVU419
 1157 00b4 002A     		cmp	r2, #0
 1158 00b6 F8D1     		bne	.L52
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1159              		.loc 3 206 10 is_stmt 0 view .LVU420
 1160 00b8 E1E7     		b	.L44
 1161              	.LVL148:
 1162              	.L58:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1163              		.loc 3 206 10 view .LVU421
 1164              	.LBE80:
 1165              	.LBE79:
 1166              	.LBE78:
 1167              	.LBB81:
 255:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1168              		.loc 1 255 9 is_stmt 1 view .LVU422
 255:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1169              		.loc 1 255 16 is_stmt 0 view .LVU423
 1170 00ba 05F10803 		add	r3, r5, #8
 1171              	.LVL149:
 257:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 1172              		.loc 1 257 9 is_stmt 1 view .LVU424
 257:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 3;
 1173              		.loc 1 257 17 is_stmt 0 view .LVU425
 1174 00be 01F00701 		and	r1, r1, #7
 1175              	.LVL150:
 258:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1176              		.loc 1 258 9 is_stmt 1 view .LVU426
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1177              		.loc 1 263 9 view .LVU427
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 48


 1178              		.loc 1 263 36 is_stmt 0 view .LVU428
 1179 00c2 0268     		ldr	r2, [r0]
 1180              	.LVL151:
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1181              		.loc 1 263 36 view .LVU429
 1182 00c4 C2F38A22 		ubfx	r2, r2, #10, #11
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1183              		.loc 1 263 39 view .LVU430
 1184 00c8 0732     		adds	r2, r2, #7
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1185              		.loc 1 263 44 view .LVU431
 1186 00ca D210     		asrs	r2, r2, #3
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1187              		.loc 1 263 50 view .LVU432
 1188 00cc 02FB07F7 		mul	r7, r2, r7
 263:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(1 << (7 - bit));
 1189              		.loc 1 263 54 view .LVU433
 1190 00d0 07EBE606 		add	r6, r7, r6, asr #3
 1191              	.LVL152:
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1192              		.loc 1 264 9 is_stmt 1 view .LVU434
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1193              		.loc 1 264 29 is_stmt 0 view .LVU435
 1194 00d4 9857     		ldrsb	r0, [r3, r6]
 1195              	.LVL153:
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1196              		.loc 1 264 46 view .LVU436
 1197 00d6 C1F10701 		rsb	r1, r1, #7
 1198              	.LVL154:
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1199              		.loc 1 264 40 view .LVU437
 1200 00da 0122     		movs	r2, #1
 1201 00dc 8A40     		lsls	r2, r2, r1
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1202              		.loc 1 264 34 view .LVU438
 1203 00de 20EA0200 		bic	r0, r0, r2
 1204 00e2 44B2     		sxtb	r4, r0
 1205              	.LVL155:
 264:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0x1) << (7 - bit));
 1206              		.loc 1 264 21 view .LVU439
 1207 00e4 9855     		strb	r0, [r3, r6]
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1208              		.loc 1 265 9 is_stmt 1 view .LVU440
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1209              		.loc 1 265 39 is_stmt 0 view .LVU441
 1210 00e6 BDF80420 		ldrh	r2, [sp, #4]
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1211              		.loc 1 265 45 view .LVU442
 1212 00ea 02F00102 		and	r2, r2, #1
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1213              		.loc 1 265 52 view .LVU443
 1214 00ee 8A40     		lsls	r2, r2, r1
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1215              		.loc 1 265 34 view .LVU444
 1216 00f0 2243     		orrs	r2, r2, r4
 265:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1217              		.loc 1 265 21 view .LVU445
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 49


 1218 00f2 9A55     		strb	r2, [r3, r6]
 1219              	.LBE81:
 1220 00f4 C3E7     		b	.L44
 1221              	.LVL156:
 1222              	.L59:
 1223              	.LBB82:
 268:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1224              		.loc 1 268 9 is_stmt 1 view .LVU446
 268:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x3) * 2;
 1225              		.loc 1 268 16 is_stmt 0 view .LVU447
 1226 00f6 05F11003 		add	r3, r5, #16
 1227              	.LVL157:
 269:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 1228              		.loc 1 269 9 is_stmt 1 view .LVU448
 269:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 1229              		.loc 1 269 17 is_stmt 0 view .LVU449
 1230 00fa 01F00302 		and	r2, r1, #3
 1231              	.LVL158:
 269:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 2;
 1232              		.loc 1 269 17 view .LVU450
 1233 00fe 5100     		lsls	r1, r2, #1
 1234              	.LVL159:
 270:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1235              		.loc 1 270 9 is_stmt 1 view .LVU451
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1236              		.loc 1 275 9 view .LVU452
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1237              		.loc 1 275 36 is_stmt 0 view .LVU453
 1238 0100 0268     		ldr	r2, [r0]
 1239 0102 C2F38A22 		ubfx	r2, r2, #10, #11
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1240              		.loc 1 275 39 view .LVU454
 1241 0106 0332     		adds	r2, r2, #3
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1242              		.loc 1 275 44 view .LVU455
 1243 0108 9210     		asrs	r2, r2, #2
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1244              		.loc 1 275 50 view .LVU456
 1245 010a 02FB07F7 		mul	r7, r2, r7
 275:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1246              		.loc 1 275 54 view .LVU457
 1247 010e 07EBA606 		add	r6, r7, r6, asr #2
 1248              	.LVL160:
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1249              		.loc 1 277 9 is_stmt 1 view .LVU458
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1250              		.loc 1 277 28 is_stmt 0 view .LVU459
 1251 0112 9857     		ldrsb	r0, [r3, r6]
 1252              	.LVL161:
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1253              		.loc 1 277 45 view .LVU460
 1254 0114 C1F10602 		rsb	r2, r1, #6
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1255              		.loc 1 277 39 view .LVU461
 1256 0118 0321     		movs	r1, #3
 1257              	.LVL162:
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 50


 1258              		.loc 1 277 39 view .LVU462
 1259 011a 9140     		lsls	r1, r1, r2
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1260              		.loc 1 277 33 view .LVU463
 1261 011c 20EA0101 		bic	r1, r0, r1
 1262 0120 48B2     		sxtb	r0, r1
 277:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px] = buf_u8[px] | ((c.full & 0x3) << (6 - bit));
 1263              		.loc 1 277 20 view .LVU464
 1264 0122 9955     		strb	r1, [r3, r6]
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1265              		.loc 1 278 9 is_stmt 1 view .LVU465
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1266              		.loc 1 278 38 is_stmt 0 view .LVU466
 1267 0124 BDF80410 		ldrh	r1, [sp, #4]
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1268              		.loc 1 278 44 view .LVU467
 1269 0128 01F00301 		and	r1, r1, #3
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1270              		.loc 1 278 51 view .LVU468
 1271 012c 01FA02F2 		lsl	r2, r1, r2
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1272              		.loc 1 278 33 view .LVU469
 1273 0130 0243     		orrs	r2, r2, r0
 278:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1274              		.loc 1 278 20 view .LVU470
 1275 0132 9A55     		strb	r2, [r3, r6]
 1276              	.LBE82:
 1277 0134 A3E7     		b	.L44
 1278              	.LVL163:
 1279              	.L60:
 1280              	.LBB83:
 281:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1281              		.loc 1 281 9 is_stmt 1 view .LVU471
 281:lvgl/lvgl/src/draw/lv_img_buf.c ****         uint8_t bit = (x & 0x1) * 4;
 1282              		.loc 1 281 16 is_stmt 0 view .LVU472
 1283 0136 05F14003 		add	r3, r5, #64
 1284              	.LVL164:
 282:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 1285              		.loc 1 282 9 is_stmt 1 view .LVU473
 282:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 1286              		.loc 1 282 17 is_stmt 0 view .LVU474
 1287 013a 01F00102 		and	r2, r1, #1
 1288              	.LVL165:
 282:lvgl/lvgl/src/draw/lv_img_buf.c ****         x           = x >> 1;
 1289              		.loc 1 282 17 view .LVU475
 1290 013e 9100     		lsls	r1, r2, #2
 1291              	.LVL166:
 283:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1292              		.loc 1 283 9 is_stmt 1 view .LVU476
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1293              		.loc 1 288 9 view .LVU477
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1294              		.loc 1 288 36 is_stmt 0 view .LVU478
 1295 0140 0268     		ldr	r2, [r0]
 1296 0142 C2F38A22 		ubfx	r2, r2, #10, #11
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1297              		.loc 1 288 39 view .LVU479
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 51


 1298 0146 0132     		adds	r2, r2, #1
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1299              		.loc 1 288 44 view .LVU480
 1300 0148 5210     		asrs	r2, r2, #1
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1301              		.loc 1 288 50 view .LVU481
 1302 014a 02FB07F7 		mul	r7, r2, r7
 288:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] & ~(0xF << (4 - bit));
 1303              		.loc 1 288 54 view .LVU482
 1304 014e 07EB6606 		add	r6, r7, r6, asr #1
 1305              	.LVL167:
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1306              		.loc 1 289 9 is_stmt 1 view .LVU483
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1307              		.loc 1 289 29 is_stmt 0 view .LVU484
 1308 0152 9857     		ldrsb	r0, [r3, r6]
 1309              	.LVL168:
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1310              		.loc 1 289 48 view .LVU485
 1311 0154 C1F10402 		rsb	r2, r1, #4
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1312              		.loc 1 289 42 view .LVU486
 1313 0158 0F21     		movs	r1, #15
 1314              	.LVL169:
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1315              		.loc 1 289 42 view .LVU487
 1316 015a 9140     		lsls	r1, r1, r2
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1317              		.loc 1 289 34 view .LVU488
 1318 015c 20EA0101 		bic	r1, r0, r1
 1319 0160 48B2     		sxtb	r0, r1
 289:lvgl/lvgl/src/draw/lv_img_buf.c ****         buf_u8[px]  = buf_u8[px] | ((c.full & 0xF) << (4 - bit));
 1320              		.loc 1 289 21 view .LVU489
 1321 0162 9955     		strb	r1, [r3, r6]
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1322              		.loc 1 290 9 is_stmt 1 view .LVU490
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1323              		.loc 1 290 39 is_stmt 0 view .LVU491
 1324 0164 BDF80410 		ldrh	r1, [sp, #4]
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1325              		.loc 1 290 45 view .LVU492
 1326 0168 01F00F01 		and	r1, r1, #15
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1327              		.loc 1 290 52 view .LVU493
 1328 016c 01FA02F2 		lsl	r2, r1, r2
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1329              		.loc 1 290 34 view .LVU494
 1330 0170 0243     		orrs	r2, r2, r0
 290:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1331              		.loc 1 290 21 view .LVU495
 1332 0172 9A55     		strb	r2, [r3, r6]
 1333              	.LBE83:
 1334 0174 83E7     		b	.L44
 1335              		.cfi_endproc
 1336              	.LFE54:
 1338              		.section	.rodata.lv_img_buf_set_palette.str1.4,"aMS",%progbits,1
 1339              		.align	2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 52


 1340              	.LC1:
 1341 0000 6C76676C 		.ascii	"lvgl/lvgl/src/draw/lv_img_buf.c\000"
 1341      2F6C7667 
 1341      6C2F7372 
 1341      632F6472 
 1341      61772F6C 
 1342              		.align	2
 1343              	.LC2:
 1344 0020 6C765F69 		.ascii	"lv_img_buf_set_px_alpha: invalid 'id'\000"
 1344      6D675F62 
 1344      75665F73 
 1344      65745F70 
 1344      785F616C 
 1345              		.section	.text.lv_img_buf_set_palette,"ax",%progbits
 1346              		.align	1
 1347              		.global	lv_img_buf_set_palette
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1351              		.fpu fpv4-sp-d16
 1353              	lv_img_buf_set_palette:
 1354              	.LVL170:
 1355              	.LFB55:
 298:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 299:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 300:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Set the palette color of an indexed image. Valid only for `LV_IMG_CF_INDEXED1/2/4/8`
 301:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an image descriptor
 302:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param id the palette color to set:
 303:lvgl/lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED1`: 0..1
 304:lvgl/lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED2`: 0..3
 305:lvgl/lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED4`: 0..15
 306:lvgl/lvgl/src/draw/lv_img_buf.c ****  *   - for `LV_IMG_CF_INDEXED8`: 0..255
 307:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param c the color to set
 308:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 309:lvgl/lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_set_palette(lv_img_dsc_t * dsc, uint8_t id, lv_color_t c)
 310:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 1356              		.loc 1 310 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 8
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              		.loc 1 310 1 is_stmt 0 view .LVU497
 1361 0000 30B5     		push	{r4, r5, lr}
 1362              	.LCFI14:
 1363              		.cfi_def_cfa_offset 12
 1364              		.cfi_offset 4, -12
 1365              		.cfi_offset 5, -8
 1366              		.cfi_offset 14, -4
 1367 0002 85B0     		sub	sp, sp, #20
 1368              	.LCFI15:
 1369              		.cfi_def_cfa_offset 32
 311:lvgl/lvgl/src/draw/lv_img_buf.c ****     if((dsc->header.cf == LV_IMG_CF_ALPHA_1BIT && id > 1) || (dsc->header.cf == LV_IMG_CF_ALPHA_2BI
 1370              		.loc 1 311 5 is_stmt 1 view .LVU498
 1371              		.loc 1 311 24 is_stmt 0 view .LVU499
 1372 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1373 0006 03F01F03 		and	r3, r3, #31
 1374              		.loc 1 311 7 view .LVU500
 1375 000a 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 53


 1376 000c 30D0     		beq	.L71
 1377              	.L62:
 1378              		.loc 1 311 59 discriminator 3 view .LVU501
 1379 000e 0C2B     		cmp	r3, #12
 1380 0010 3AD0     		beq	.L72
 1381              	.L64:
 1382              		.loc 1 311 113 discriminator 6 view .LVU502
 1383 0012 0D2B     		cmp	r3, #13
 1384 0014 3BD0     		beq	.L73
 1385              	.L65:
 312:lvgl/lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1386              		.loc 1 312 60 discriminator 1 view .LVU503
 1387 0016 0E2B     		cmp	r3, #14
 1388 0018 2CD0     		beq	.L63
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 314:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 315:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 316:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 317:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color32_t c32;
 1389              		.loc 1 317 5 is_stmt 1 view .LVU504
 318:lvgl/lvgl/src/draw/lv_img_buf.c ****     c32.full      = lv_color_to32(c);
 1390              		.loc 1 318 5 view .LVU505
 1391              	.LBB84:
 1392              	.LBI84:
 395:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 1393              		.loc 2 395 24 view .LVU506
 1394              	.LBB85:
 439:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 1395              		.loc 2 439 5 view .LVU507
 440:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 1396              		.loc 2 440 5 view .LVU508
 1397 001a C2F3C423 		ubfx	r3, r2, #11, #5
 1398 001e 03EB4314 		add	r4, r3, r3, lsl #5
 1399 0022 C3EBC403 		rsb	r3, r3, r4, lsl #3
 1400 0026 0733     		adds	r3, r3, #7
 1401 0028 C3F34713 		ubfx	r3, r3, #5, #8
 1402 002c 0024     		movs	r4, #0
 1403              	.LVL171:
 440:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 1404              		.loc 2 440 5 is_stmt 0 view .LVU509
 1405 002e 63F31744 		bfi	r4, r3, #16, #8
 1406              	.LVL172:
 441:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 1407              		.loc 2 441 5 is_stmt 1 view .LVU510
 1408 0032 C2F34513 		ubfx	r3, r2, #5, #6
 1409 0036 03EBC315 		add	r5, r3, r3, lsl #7
 1410 003a 03EB4503 		add	r3, r3, r5, lsl #1
 1411 003e 0333     		adds	r3, r3, #3
 1412 0040 C3F38713 		ubfx	r3, r3, #6, #8
 1413 0044 63F30F24 		bfi	r4, r3, #8, #8
 442:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 1414              		.loc 2 442 5 view .LVU511
 1415 0048 02F01F02 		and	r2, r2, #31
 1416              	.LVL173:
 442:lvgl/lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 1417              		.loc 2 442 5 is_stmt 0 view .LVU512
 1418 004c 02EB4213 		add	r3, r2, r2, lsl #5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 54


 1419 0050 C2EBC302 		rsb	r2, r2, r3, lsl #3
 1420 0054 0732     		adds	r2, r2, #7
 1421 0056 C2F34712 		ubfx	r2, r2, #5, #8
 1422 005a 62F30704 		bfi	r4, r2, #0, #8
 443:lvgl/lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 1423              		.loc 2 443 5 is_stmt 1 view .LVU513
 1424 005e 44F07F44 		orr	r4, r4, #-16777216
 1425              	.LVL174:
 444:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 1426              		.loc 2 444 5 view .LVU514
 444:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 1427              		.loc 2 444 5 is_stmt 0 view .LVU515
 1428              	.LBE85:
 1429              	.LBE84:
 1430              		.loc 1 318 19 view .LVU516
 1431 0062 0394     		str	r4, [sp, #12]
 319:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t * buf = (uint8_t *)dsc->data;
 1432              		.loc 1 319 5 is_stmt 1 view .LVU517
 1433              		.loc 1 319 15 is_stmt 0 view .LVU518
 1434 0064 8368     		ldr	r3, [r0, #8]
 1435              	.LVL175:
 320:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_memcpy_small(&buf[id * sizeof(c32)], &c32, sizeof(c32));
 1436              		.loc 1 320 5 is_stmt 1 view .LVU519
 1437              		.loc 1 320 21 is_stmt 0 view .LVU520
 1438 0066 03EB8101 		add	r1, r3, r1, lsl #2
 1439              	.LVL176:
 1440              	.LBB86:
 1441              	.LBI86:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 1442              		.loc 3 201 44 is_stmt 1 view .LVU521
 1443              	.LBB87:
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1444              		.loc 3 204 21 is_stmt 0 view .LVU522
 1445 006a 03AA     		add	r2, sp, #12
 1446              	.LVL177:
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 1447              		.loc 3 204 21 view .LVU523
 1448              	.LBE87:
 1449              	.LBE86:
 1450              		.loc 1 320 21 view .LVU524
 1451 006c 0423     		movs	r3, #4
 1452              	.LVL178:
 1453              		.loc 1 320 21 view .LVU525
 1454 006e 16E0     		b	.L68
 1455              	.LVL179:
 1456              	.L71:
 311:lvgl/lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1457              		.loc 1 311 48 discriminator 1 view .LVU526
 1458 0070 0129     		cmp	r1, #1
 1459 0072 CCD9     		bls	.L62
 1460              	.L63:
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 1461              		.loc 1 313 9 is_stmt 1 view .LVU527
 1462 0074 0C4B     		ldr	r3, .L74
 1463 0076 0093     		str	r3, [sp]
 1464 0078 0C4B     		ldr	r3, .L74+4
 1465 007a 40F23912 		movw	r2, #313
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 55


 1466              	.LVL180:
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 1467              		.loc 1 313 9 is_stmt 0 view .LVU528
 1468 007e 0C49     		ldr	r1, .L74+8
 1469              	.LVL181:
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 1470              		.loc 1 313 9 view .LVU529
 1471 0080 0220     		movs	r0, #2
 1472              	.LVL182:
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 1473              		.loc 1 313 9 view .LVU530
 1474 0082 FFF7FEFF 		bl	_lv_log_add
 1475              	.LVL183:
 313:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 1476              		.loc 1 313 61 is_stmt 1 view .LVU531
 314:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1477              		.loc 1 314 9 view .LVU532
 1478 0086 0CE0     		b	.L61
 1479              	.LVL184:
 1480              	.L72:
 311:lvgl/lvgl/src/draw/lv_img_buf.c ****        (dsc->header.cf == LV_IMG_CF_ALPHA_4BIT && id > 15) || (dsc->header.cf == LV_IMG_CF_ALPHA_8B
 1481              		.loc 1 311 102 is_stmt 0 discriminator 4 view .LVU533
 1482 0088 0329     		cmp	r1, #3
 1483 008a C2D9     		bls	.L64
 1484 008c F2E7     		b	.L63
 1485              	.L73:
 312:lvgl/lvgl/src/draw/lv_img_buf.c ****         LV_LOG_WARN("lv_img_buf_set_px_alpha: invalid 'id'");
 1486              		.loc 1 312 48 view .LVU534
 1487 008e 0F29     		cmp	r1, #15
 1488 0090 C1D9     		bls	.L65
 1489 0092 EFE7     		b	.L63
 1490              	.LVL185:
 1491              	.L69:
 1492              	.LBB89:
 1493              	.LBB88:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1494              		.loc 3 207 9 is_stmt 1 view .LVU535
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1495              		.loc 3 207 15 is_stmt 0 view .LVU536
 1496 0094 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1497              	.LVL186:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 1498              		.loc 3 207 13 view .LVU537
 1499 0098 01F8010B 		strb	r0, [r1], #1
 1500              	.LVL187:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 1501              		.loc 3 208 9 is_stmt 1 view .LVU538
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 1502              		.loc 3 209 9 view .LVU539
 1503              		.loc 3 210 9 view .LVU540
 1504              		.loc 3 210 12 is_stmt 0 view .LVU541
 1505 009c 013B     		subs	r3, r3, #1
 1506              	.LVL188:
 1507              	.L68:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1508              		.loc 3 206 10 is_stmt 1 view .LVU542
 1509 009e 002B     		cmp	r3, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 56


 1510 00a0 F8D1     		bne	.L69
 1511              	.LVL189:
 1512              	.L61:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 1513              		.loc 3 206 10 is_stmt 0 view .LVU543
 1514              	.LBE88:
 1515              	.LBE89:
 321:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 1516              		.loc 1 321 1 view .LVU544
 1517 00a2 05B0     		add	sp, sp, #20
 1518              	.LCFI16:
 1519              		.cfi_def_cfa_offset 12
 1520              		@ sp needed
 1521 00a4 30BD     		pop	{r4, r5, pc}
 1522              	.LVL190:
 1523              	.L75:
 1524              		.loc 1 321 1 view .LVU545
 1525 00a6 00BF     		.align	2
 1526              	.L74:
 1527 00a8 20000000 		.word	.LC2
 1528 00ac 00000000 		.word	.LANCHOR1
 1529 00b0 00000000 		.word	.LC1
 1530              		.cfi_endproc
 1531              	.LFE55:
 1533              		.section	.text.lv_img_buf_free,"ax",%progbits
 1534              		.align	1
 1535              		.global	lv_img_buf_free
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1539              		.fpu fpv4-sp-d16
 1541              	lv_img_buf_free:
 1542              	.LVL191:
 1543              	.LFB57:
 322:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 323:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 324:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Allocate an image buffer in RAM
 325:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param w width of image
 326:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param h height of image
 327:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 328:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @return an allocated image, or NULL on failure
 329:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 330:lvgl/lvgl/src/draw/lv_img_buf.c **** lv_img_dsc_t * lv_img_buf_alloc(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 331:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 332:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 333:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_img_dsc_t * dsc = lv_mem_alloc(sizeof(lv_img_dsc_t));
 334:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 335:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 336:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 337:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_memset_00(dsc, sizeof(lv_img_dsc_t));
 338:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 339:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Get image data size*/
 340:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->data_size = lv_img_buf_get_img_size(w, h, cf);
 341:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 342:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 343:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 344:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 57


 345:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 346:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Allocate raw buffer*/
 347:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->data = lv_mem_alloc(dsc->data_size);
 348:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 349:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 350:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 351:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 352:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_memset_00((uint8_t *)dsc->data, dsc->data_size);
 353:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 354:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Fill in header*/
 355:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.always_zero = 0;
 356:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 357:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 358:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
 359:lvgl/lvgl/src/draw/lv_img_buf.c ****     return dsc;
 360:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 361:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 362:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 363:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Free an allocated image buffer
 364:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc image buffer to free
 365:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 366:lvgl/lvgl/src/draw/lv_img_buf.c **** void lv_img_buf_free(lv_img_dsc_t * dsc)
 367:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 1544              		.loc 1 367 1 is_stmt 1 view -0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 368:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc != NULL) {
 1548              		.loc 1 368 5 view .LVU547
 1549              		.loc 1 368 7 is_stmt 0 view .LVU548
 1550 0000 48B1     		cbz	r0, .L80
 367:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc != NULL) {
 1551              		.loc 1 367 1 view .LVU549
 1552 0002 10B5     		push	{r4, lr}
 1553              	.LCFI17:
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 4, -8
 1556              		.cfi_offset 14, -4
 1557 0004 0446     		mov	r4, r0
 369:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->data != NULL)
 1558              		.loc 1 369 9 is_stmt 1 view .LVU550
 1559              		.loc 1 369 15 is_stmt 0 view .LVU551
 1560 0006 8068     		ldr	r0, [r0, #8]
 1561              	.LVL192:
 1562              		.loc 1 369 11 view .LVU552
 1563 0008 08B1     		cbz	r0, .L78
 370:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_mem_free((void*)dsc->data);
 1564              		.loc 1 370 13 is_stmt 1 view .LVU553
 1565 000a FFF7FEFF 		bl	lv_mem_free
 1566              	.LVL193:
 1567              	.L78:
 371:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 372:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1568              		.loc 1 372 9 view .LVU554
 1569 000e 2046     		mov	r0, r4
 1570 0010 FFF7FEFF 		bl	lv_mem_free
 1571              	.LVL194:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 58


 373:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 374:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 1572              		.loc 1 374 1 is_stmt 0 view .LVU555
 1573 0014 10BD     		pop	{r4, pc}
 1574              	.LVL195:
 1575              	.L80:
 1576              	.LCFI18:
 1577              		.cfi_def_cfa_offset 0
 1578              		.cfi_restore 4
 1579              		.cfi_restore 14
 1580              		.loc 1 374 1 view .LVU556
 1581 0016 7047     		bx	lr
 1582              		.cfi_endproc
 1583              	.LFE57:
 1585              		.section	.text.lv_img_buf_get_img_size,"ax",%progbits
 1586              		.align	1
 1587              		.global	lv_img_buf_get_img_size
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu fpv4-sp-d16
 1593              	lv_img_buf_get_img_size:
 1594              	.LVL196:
 1595              	.LFB58:
 375:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 376:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 377:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Get the memory consumption of a raw bitmap, given color format and dimensions.
 378:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param w width
 379:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param h height
 380:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param cf color format
 381:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @return size in bytes
 382:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 383:lvgl/lvgl/src/draw/lv_img_buf.c **** uint32_t lv_img_buf_get_img_size(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)
 384:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 1596              		.loc 1 384 1 is_stmt 1 view -0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              		@ link register save eliminated.
 1601              		.loc 1 384 1 is_stmt 0 view .LVU558
 1602 0000 0346     		mov	r3, r0
 385:lvgl/lvgl/src/draw/lv_img_buf.c ****     switch(cf) {
 1603              		.loc 1 385 5 is_stmt 1 view .LVU559
 1604 0002 043A     		subs	r2, r2, #4
 1605              	.LVL197:
 1606              		.loc 1 385 5 is_stmt 0 view .LVU560
 1607 0004 0A2A     		cmp	r2, #10
 1608 0006 52D8     		bhi	.L101
 1609 0008 DFE802F0 		tbb	[pc, r2]
 1610              	.LVL198:
 1611              	.L86:
 1612 000c 06       		.byte	(.L96-.L86)/2
 1613 000d 0A       		.byte	(.L95-.L86)/2
 1614 000e 0F       		.byte	(.L94-.L86)/2
 1615 000f 2E       		.byte	(.L93-.L86)/2
 1616 0010 39       		.byte	(.L92-.L86)/2
 1617 0011 44       		.byte	(.L91-.L86)/2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 59


 1618 0012 4C       		.byte	(.L90-.L86)/2
 1619 0013 13       		.byte	(.L89-.L86)/2
 1620 0014 1C       		.byte	(.L88-.L86)/2
 1621 0015 25       		.byte	(.L87-.L86)/2
 1622 0016 2B       		.byte	(.L85-.L86)/2
 1623 0017 00       		.p2align 1
 1624              	.L96:
 386:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR:
 387:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR(w, h);
 1625              		.loc 1 387 13 is_stmt 1 view .LVU561
 1626              		.loc 1 387 20 is_stmt 0 view .LVU562
 1627 0018 01FB03F1 		mul	r1, r1, r3
 1628              	.LVL199:
 1629              		.loc 1 387 20 view .LVU563
 1630 001c 4800     		lsls	r0, r1, #1
 1631 001e 7047     		bx	lr
 1632              	.LVL200:
 1633              	.L95:
 388:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 389:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w, h);
 1634              		.loc 1 389 13 is_stmt 1 view .LVU564
 1635              		.loc 1 389 20 is_stmt 0 view .LVU565
 1636 0020 01FB03F1 		mul	r1, r1, r3
 1637              	.LVL201:
 1638              		.loc 1 389 20 view .LVU566
 1639 0024 01EB4100 		add	r0, r1, r1, lsl #1
 1640 0028 7047     		bx	lr
 1641              	.LVL202:
 1642              	.L94:
 390:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 391:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w, h);
 1643              		.loc 1 391 13 is_stmt 1 view .LVU567
 1644              		.loc 1 391 20 is_stmt 0 view .LVU568
 1645 002a 01FB03F1 		mul	r1, r1, r3
 1646              	.LVL203:
 1647              		.loc 1 391 20 view .LVU569
 1648 002e 4800     		lsls	r0, r1, #1
 1649 0030 7047     		bx	lr
 1650              	.LVL204:
 1651              	.L89:
 392:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_1BIT:
 393:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_1BIT(w, h);
 1652              		.loc 1 393 13 is_stmt 1 view .LVU570
 1653              		.loc 1 393 20 is_stmt 0 view .LVU571
 1654 0032 1846     		mov	r0, r3
 1655 0034 002B     		cmp	r3, #0
 1656 0036 03DB     		blt	.L102
 1657              	.L97:
 1658 0038 C310     		asrs	r3, r0, #3
 1659 003a 03FB0110 		mla	r0, r3, r1, r1
 1660 003e 7047     		bx	lr
 1661              	.L102:
 1662 0040 D81D     		adds	r0, r3, #7
 1663 0042 F9E7     		b	.L97
 1664              	.L88:
 394:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_2BIT:
 395:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_2BIT(w, h);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 60


 1665              		.loc 1 395 13 is_stmt 1 view .LVU572
 1666              		.loc 1 395 20 is_stmt 0 view .LVU573
 1667 0044 1846     		mov	r0, r3
 1668 0046 002B     		cmp	r3, #0
 1669 0048 03DB     		blt	.L103
 1670              	.L98:
 1671 004a 8310     		asrs	r3, r0, #2
 1672 004c 03FB0110 		mla	r0, r3, r1, r1
 1673 0050 7047     		bx	lr
 1674              	.L103:
 1675 0052 D81C     		adds	r0, r3, #3
 1676 0054 F9E7     		b	.L98
 1677              	.L87:
 396:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_4BIT:
 397:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_4BIT(w, h);
 1678              		.loc 1 397 13 is_stmt 1 view .LVU574
 1679              		.loc 1 397 20 is_stmt 0 view .LVU575
 1680 0056 03EBD373 		add	r3, r3, r3, lsr #31
 1681 005a 5B10     		asrs	r3, r3, #1
 1682 005c 03FB0110 		mla	r0, r3, r1, r1
 1683 0060 7047     		bx	lr
 1684              	.L85:
 398:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_ALPHA_8BIT:
 399:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_ALPHA_8BIT(w, h);
 1685              		.loc 1 399 13 is_stmt 1 view .LVU576
 1686              		.loc 1 399 20 is_stmt 0 view .LVU577
 1687 0062 01FB03F0 		mul	r0, r1, r3
 1688 0066 7047     		bx	lr
 1689              	.L93:
 400:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_1BIT:
 401:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_1BIT(w, h);
 1690              		.loc 1 401 13 is_stmt 1 view .LVU578
 1691              		.loc 1 401 20 is_stmt 0 view .LVU579
 1692 0068 1846     		mov	r0, r3
 1693 006a 002B     		cmp	r3, #0
 1694 006c 05DB     		blt	.L104
 1695              	.L99:
 1696 006e C010     		asrs	r0, r0, #3
 1697 0070 00FB0111 		mla	r1, r0, r1, r1
 1698              	.LVL205:
 1699              		.loc 1 401 20 view .LVU580
 1700 0074 01F10800 		add	r0, r1, #8
 1701 0078 7047     		bx	lr
 1702              	.LVL206:
 1703              	.L104:
 1704              		.loc 1 401 20 view .LVU581
 1705 007a D81D     		adds	r0, r3, #7
 1706 007c F7E7     		b	.L99
 1707              	.L92:
 402:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_2BIT:
 403:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_2BIT(w, h);
 1708              		.loc 1 403 13 is_stmt 1 view .LVU582
 1709              		.loc 1 403 20 is_stmt 0 view .LVU583
 1710 007e 1846     		mov	r0, r3
 1711 0080 002B     		cmp	r3, #0
 1712 0082 05DB     		blt	.L105
 1713              	.L100:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 61


 1714 0084 8010     		asrs	r0, r0, #2
 1715 0086 00FB0111 		mla	r1, r0, r1, r1
 1716              	.LVL207:
 1717              		.loc 1 403 20 view .LVU584
 1718 008a 01F11000 		add	r0, r1, #16
 1719 008e 7047     		bx	lr
 1720              	.LVL208:
 1721              	.L105:
 1722              		.loc 1 403 20 view .LVU585
 1723 0090 D81C     		adds	r0, r3, #3
 1724 0092 F7E7     		b	.L100
 1725              	.L91:
 404:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_4BIT:
 405:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_4BIT(w, h);
 1726              		.loc 1 405 13 is_stmt 1 view .LVU586
 1727              		.loc 1 405 20 is_stmt 0 view .LVU587
 1728 0094 03EBD373 		add	r3, r3, r3, lsr #31
 1729 0098 5B10     		asrs	r3, r3, #1
 1730 009a 03FB0111 		mla	r1, r3, r1, r1
 1731              	.LVL209:
 1732              		.loc 1 405 20 view .LVU588
 1733 009e 01F14000 		add	r0, r1, #64
 1734 00a2 7047     		bx	lr
 1735              	.LVL210:
 1736              	.L90:
 406:lvgl/lvgl/src/draw/lv_img_buf.c ****         case LV_IMG_CF_INDEXED_8BIT:
 407:lvgl/lvgl/src/draw/lv_img_buf.c ****             return LV_IMG_BUF_SIZE_INDEXED_8BIT(w, h);
 1737              		.loc 1 407 13 is_stmt 1 view .LVU589
 1738              		.loc 1 407 20 is_stmt 0 view .LVU590
 1739 00a4 01FB03F1 		mul	r1, r1, r3
 1740              	.LVL211:
 1741              		.loc 1 407 20 view .LVU591
 1742 00a8 01F58060 		add	r0, r1, #1024
 1743 00ac 7047     		bx	lr
 1744              	.LVL212:
 1745              	.L101:
 384:lvgl/lvgl/src/draw/lv_img_buf.c ****     switch(cf) {
 1746              		.loc 1 384 1 view .LVU592
 1747 00ae 0020     		movs	r0, #0
 408:lvgl/lvgl/src/draw/lv_img_buf.c ****         default:
 409:lvgl/lvgl/src/draw/lv_img_buf.c ****             return 0;
 410:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 411:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 1748              		.loc 1 411 1 view .LVU593
 1749 00b0 7047     		bx	lr
 1750              		.cfi_endproc
 1751              	.LFE58:
 1753              		.section	.text.lv_img_buf_alloc,"ax",%progbits
 1754              		.align	1
 1755              		.global	lv_img_buf_alloc
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1759              		.fpu fpv4-sp-d16
 1761              	lv_img_buf_alloc:
 1762              	.LVL213:
 1763              	.LFB56:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 62


 331:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 1764              		.loc 1 331 1 is_stmt 1 view -0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 331:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Allocate image descriptor*/
 1768              		.loc 1 331 1 is_stmt 0 view .LVU595
 1769 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1770              	.LCFI19:
 1771              		.cfi_def_cfa_offset 24
 1772              		.cfi_offset 4, -24
 1773              		.cfi_offset 5, -20
 1774              		.cfi_offset 6, -16
 1775              		.cfi_offset 7, -12
 1776              		.cfi_offset 8, -8
 1777              		.cfi_offset 14, -4
 1778 0004 0746     		mov	r7, r0
 1779 0006 0E46     		mov	r6, r1
 1780 0008 1546     		mov	r5, r2
 333:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1781              		.loc 1 333 5 is_stmt 1 view .LVU596
 333:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1782              		.loc 1 333 26 is_stmt 0 view .LVU597
 1783 000a 0C20     		movs	r0, #12
 1784              	.LVL214:
 333:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc == NULL)
 1785              		.loc 1 333 26 view .LVU598
 1786 000c FFF7FEFF 		bl	lv_mem_alloc
 1787              	.LVL215:
 334:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1788              		.loc 1 334 5 is_stmt 1 view .LVU599
 334:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1789              		.loc 1 334 7 is_stmt 0 view .LVU600
 1790 0010 0446     		mov	r4, r0
 1791 0012 08B3     		cbz	r0, .L106
 337:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1792              		.loc 1 337 5 is_stmt 1 view .LVU601
 1793 0014 0C21     		movs	r1, #12
 1794 0016 FFF7FEFF 		bl	lv_memset_00
 1795              	.LVL216:
 340:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1796              		.loc 1 340 5 view .LVU602
 340:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1797              		.loc 1 340 22 is_stmt 0 view .LVU603
 1798 001a 2A46     		mov	r2, r5
 1799 001c 3146     		mov	r1, r6
 1800 001e 3846     		mov	r0, r7
 1801 0020 FFF7FEFF 		bl	lv_img_buf_get_img_size
 1802              	.LVL217:
 340:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data_size == 0) {
 1803              		.loc 1 340 20 view .LVU604
 1804 0024 6060     		str	r0, [r4, #4]
 341:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1805              		.loc 1 341 5 is_stmt 1 view .LVU605
 341:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1806              		.loc 1 341 7 is_stmt 0 view .LVU606
 1807 0026 D0B1     		cbz	r0, .L111
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 63


 347:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1808              		.loc 1 347 5 is_stmt 1 view .LVU607
 347:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1809              		.loc 1 347 17 is_stmt 0 view .LVU608
 1810 0028 FFF7FEFF 		bl	lv_mem_alloc
 1811              	.LVL218:
 1812 002c 8046     		mov	r8, r0
 347:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->data == NULL) {
 1813              		.loc 1 347 15 view .LVU609
 1814 002e A060     		str	r0, [r4, #8]
 348:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1815              		.loc 1 348 5 is_stmt 1 view .LVU610
 348:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_mem_free(dsc);
 1816              		.loc 1 348 7 is_stmt 0 view .LVU611
 1817 0030 D0B1     		cbz	r0, .L112
 352:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1818              		.loc 1 352 5 is_stmt 1 view .LVU612
 1819 0032 6168     		ldr	r1, [r4, #4]
 1820 0034 FFF7FEFF 		bl	lv_memset_00
 1821              	.LVL219:
 355:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 1822              		.loc 1 355 5 view .LVU613
 355:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.w = w;
 1823              		.loc 1 355 29 is_stmt 0 view .LVU614
 1824 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1825 003a 6FF34713 		bfc	r3, #5, #3
 1826 003e 2370     		strb	r3, [r4]
 356:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 1827              		.loc 1 356 5 is_stmt 1 view .LVU615
 356:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.h = h;
 1828              		.loc 1 356 19 is_stmt 0 view .LVU616
 1829 0040 2368     		ldr	r3, [r4]
 1830 0042 67F39423 		bfi	r3, r7, #10, #11
 1831 0046 2360     		str	r3, [r4]
 357:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1832              		.loc 1 357 5 is_stmt 1 view .LVU617
 357:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->header.cf = cf;
 1833              		.loc 1 357 19 is_stmt 0 view .LVU618
 1834 0048 C3F30F42 		ubfx	r2, r3, #16, #16
 1835 004c 66F34F12 		bfi	r2, r6, #5, #11
 1836 0050 6280     		strh	r2, [r4, #2]	@ movhi
 358:lvgl/lvgl/src/draw/lv_img_buf.c ****     return dsc;
 1837              		.loc 1 358 5 is_stmt 1 view .LVU619
 358:lvgl/lvgl/src/draw/lv_img_buf.c ****     return dsc;
 1838              		.loc 1 358 20 is_stmt 0 view .LVU620
 1839 0052 65F30403 		bfi	r3, r5, #0, #5
 1840 0056 2370     		strb	r3, [r4]
 359:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 1841              		.loc 1 359 5 is_stmt 1 view .LVU621
 1842              	.LVL220:
 1843              	.L106:
 360:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 1844              		.loc 1 360 1 is_stmt 0 view .LVU622
 1845 0058 2046     		mov	r0, r4
 1846 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1847              	.LVL221:
 1848              	.L111:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 64


 342:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1849              		.loc 1 342 9 is_stmt 1 view .LVU623
 1850 005e 2046     		mov	r0, r4
 1851 0060 FFF7FEFF 		bl	lv_mem_free
 1852              	.LVL222:
 343:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1853              		.loc 1 343 9 view .LVU624
 343:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1854              		.loc 1 343 16 is_stmt 0 view .LVU625
 1855 0064 0024     		movs	r4, #0
 1856              	.LVL223:
 343:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1857              		.loc 1 343 16 view .LVU626
 1858 0066 F7E7     		b	.L106
 1859              	.LVL224:
 1860              	.L112:
 349:lvgl/lvgl/src/draw/lv_img_buf.c ****         return NULL;
 1861              		.loc 1 349 9 is_stmt 1 view .LVU627
 1862 0068 2046     		mov	r0, r4
 1863 006a FFF7FEFF 		bl	lv_mem_free
 1864              	.LVL225:
 350:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1865              		.loc 1 350 9 view .LVU628
 350:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1866              		.loc 1 350 16 is_stmt 0 view .LVU629
 1867 006e 4446     		mov	r4, r8
 1868              	.LVL226:
 350:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 1869              		.loc 1 350 16 view .LVU630
 1870 0070 F2E7     		b	.L106
 1871              		.cfi_endproc
 1872              	.LFE56:
 1874              		.section	.text._lv_img_buf_transform_init,"ax",%progbits
 1875              		.align	1
 1876              		.global	_lv_img_buf_transform_init
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv4-sp-d16
 1882              	_lv_img_buf_transform_init:
 1883              	.LVL227:
 1884              	.LFB59:
 412:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 413:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 414:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 415:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Initialize a descriptor to transform an image
 416:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to an `lv_img_transform_dsc_t` variable whose `cfg` field is initialized
 417:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 418:lvgl/lvgl/src/draw/lv_img_buf.c **** void _lv_img_buf_transform_init(lv_img_transform_dsc_t * dsc)
 419:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 1885              		.loc 1 419 1 is_stmt 1 view -0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		.loc 1 419 1 is_stmt 0 view .LVU632
 1890 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1891              	.LCFI20:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 65


 1892              		.cfi_def_cfa_offset 32
 1893              		.cfi_offset 4, -32
 1894              		.cfi_offset 5, -28
 1895              		.cfi_offset 6, -24
 1896              		.cfi_offset 7, -20
 1897              		.cfi_offset 8, -16
 1898              		.cfi_offset 9, -12
 1899              		.cfi_offset 10, -8
 1900              		.cfi_offset 14, -4
 1901 0004 0446     		mov	r4, r0
 420:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pivot_x_256 = dsc->cfg.pivot_x * 256;
 1902              		.loc 1 420 5 is_stmt 1 view .LVU633
 1903              		.loc 1 420 36 is_stmt 0 view .LVU634
 1904 0006 B0F90830 		ldrsh	r3, [r0, #8]
 1905              		.loc 1 420 45 view .LVU635
 1906 000a 1B02     		lsls	r3, r3, #8
 1907              		.loc 1 420 26 view .LVU636
 1908 000c 4362     		str	r3, [r0, #36]
 421:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pivot_y_256 = dsc->cfg.pivot_y * 256;
 1909              		.loc 1 421 5 is_stmt 1 view .LVU637
 1910              		.loc 1 421 36 is_stmt 0 view .LVU638
 1911 000e B0F90A30 		ldrsh	r3, [r0, #10]
 1912              		.loc 1 421 45 view .LVU639
 1913 0012 1B02     		lsls	r3, r3, #8
 1914              		.loc 1 421 26 view .LVU640
 1915 0014 8362     		str	r3, [r0, #40]
 422:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 423:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_low = dsc->cfg.angle / 10;
 1916              		.loc 1 423 5 is_stmt 1 view .LVU641
 1917              		.loc 1 423 33 is_stmt 0 view .LVU642
 1918 0016 B0F90C00 		ldrsh	r0, [r0, #12]
 1919              	.LVL228:
 1920              		.loc 1 423 40 view .LVU643
 1921 001a 424E     		ldr	r6, .L117
 1922 001c 86FB0023 		smull	r2, r3, r6, r0
 1923 0020 C217     		asrs	r2, r0, #31
 1924 0022 C2EBA302 		rsb	r2, r2, r3, asr #2
 1925 0026 12B2     		sxth	r2, r2
 1926              	.LVL229:
 424:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 1927              		.loc 1 424 5 is_stmt 1 view .LVU644
 1928              		.loc 1 424 13 is_stmt 0 view .LVU645
 1929 0028 02F1010A 		add	r10, r2, #1
 1930              	.LVL230:
 425:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = dsc->cfg.angle  - (angle_low * 10);
 1931              		.loc 1 425 5 is_stmt 1 view .LVU646
 1932              		.loc 1 425 13 is_stmt 0 view .LVU647
 1933 002c 6FF00907 		mvn	r7, #9
 1934 0030 07FB0207 		mla	r7, r7, r2, r0
 1935              	.LVL231:
 426:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 427:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s1 = lv_trigo_sin(-angle_low);
 1936              		.loc 1 427 5 is_stmt 1 view .LVU648
 1937              		.loc 1 427 18 is_stmt 0 view .LVU649
 1938 0034 1FFA82F8 		uxth	r8, r2
 1939 0038 C8F10000 		rsb	r0, r8, #0
 1940 003c 00B2     		sxth	r0, r0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 66


 1941 003e FFF7FEFF 		bl	lv_trigo_sin
 1942              	.LVL232:
 1943              		.loc 1 427 18 view .LVU650
 1944 0042 0546     		mov	r5, r0
 1945              	.LVL233:
 428:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(-angle_high);
 1946              		.loc 1 428 5 is_stmt 1 view .LVU651
 1947              		.loc 1 428 18 is_stmt 0 view .LVU652
 1948 0044 1FFA8AFA 		uxth	r10, r10
 1949              	.LVL234:
 1950              		.loc 1 428 18 view .LVU653
 1951 0048 CAF10000 		rsb	r0, r10, #0
 1952              	.LVL235:
 1953              		.loc 1 428 18 view .LVU654
 1954 004c 00B2     		sxth	r0, r0
 1955 004e FFF7FEFF 		bl	lv_trigo_sin
 1956              	.LVL236:
 1957 0052 8146     		mov	r9, r0
 1958              	.LVL237:
 429:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 430:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c1 = lv_trigo_sin(-angle_low + 90);
 1959              		.loc 1 430 5 is_stmt 1 view .LVU655
 1960              		.loc 1 430 42 is_stmt 0 view .LVU656
 1961 0054 C8F15A00 		rsb	r0, r8, #90
 1962              	.LVL238:
 1963              		.loc 1 430 18 view .LVU657
 1964 0058 00B2     		sxth	r0, r0
 1965 005a FFF7FEFF 		bl	lv_trigo_sin
 1966              	.LVL239:
 1967 005e 8046     		mov	r8, r0
 1968              	.LVL240:
 431:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(-angle_high + 90);
 1969              		.loc 1 431 5 is_stmt 1 view .LVU658
 1970              		.loc 1 431 43 is_stmt 0 view .LVU659
 1971 0060 CAF15A00 		rsb	r0, r10, #90
 1972              	.LVL241:
 1973              		.loc 1 431 18 view .LVU660
 1974 0064 00B2     		sxth	r0, r0
 1975 0066 FFF7FEFF 		bl	lv_trigo_sin
 1976              	.LVL242:
 432:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 433:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 1977              		.loc 1 433 5 is_stmt 1 view .LVU661
 1978              		.loc 1 433 32 is_stmt 0 view .LVU662
 1979 006a C7F10A03 		rsb	r3, r7, #10
 1980              		.loc 1 433 50 view .LVU663
 1981 006e 09FB07F2 		mul	r2, r9, r7
 1982              		.loc 1 433 45 view .LVU664
 1983 0072 05FB0322 		mla	r2, r5, r3, r2
 1984              		.loc 1 433 63 view .LVU665
 1985 0076 86FB0251 		smull	r5, r1, r6, r2
 1986              	.LVL243:
 1987              		.loc 1 433 63 view .LVU666
 1988 007a D217     		asrs	r2, r2, #31
 1989 007c C2EBA102 		rsb	r2, r2, r1, asr #2
 434:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1990              		.loc 1 434 5 is_stmt 1 view .LVU667
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 67


 1991              		.loc 1 434 50 is_stmt 0 view .LVU668
 1992 0080 00FB07F7 		mul	r7, r0, r7
 1993              	.LVL244:
 1994              		.loc 1 434 45 view .LVU669
 1995 0084 08FB0373 		mla	r3, r8, r3, r7
 1996              		.loc 1 434 63 view .LVU670
 1997 0088 86FB0316 		smull	r1, r6, r6, r3
 1998 008c DB17     		asrs	r3, r3, #31
 1999 008e C3EBA603 		rsb	r3, r3, r6, asr #2
 435:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 436:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 437:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.sinma = dsc->tmp.sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2000              		.loc 1 437 5 is_stmt 1 view .LVU671
 2001              		.loc 1 437 37 is_stmt 0 view .LVU672
 2002 0092 5211     		asrs	r2, r2, #5
 2003              		.loc 1 437 20 view .LVU673
 2004 0094 E262     		str	r2, [r4, #44]
 438:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.cosma = dsc->tmp.cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2005              		.loc 1 438 5 is_stmt 1 view .LVU674
 2006              		.loc 1 438 37 is_stmt 0 view .LVU675
 2007 0096 5B11     		asrs	r3, r3, #5
 2008              		.loc 1 438 20 view .LVU676
 2009 0098 2363     		str	r3, [r4, #48]
 439:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 440:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.chroma_keyed = lv_img_cf_is_chroma_keyed(dsc->cfg.cf) ? 1 : 0;
 2010              		.loc 1 440 5 is_stmt 1 view .LVU677
 2011              		.loc 1 440 29 is_stmt 0 view .LVU678
 2012 009a A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 2013              	.LVL245:
 2014              		.loc 1 440 29 view .LVU679
 2015 009c FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 2016              	.LVL246:
 2017              		.loc 1 440 27 view .LVU680
 2018 00a0 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2019 00a4 60F30003 		bfi	r3, r0, #0, #1
 2020 00a8 84F83430 		strb	r3, [r4, #52]
 441:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.has_alpha = lv_img_cf_has_alpha(dsc->cfg.cf) ? 1 : 0;
 2021              		.loc 1 441 5 is_stmt 1 view .LVU681
 2022              		.loc 1 441 26 is_stmt 0 view .LVU682
 2023 00ac A07C     		ldrb	r0, [r4, #18]	@ zero_extendqisi2
 2024 00ae FFF7FEFF 		bl	lv_img_cf_has_alpha
 2025              	.LVL247:
 2026              		.loc 1 441 24 view .LVU683
 2027 00b2 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2028 00b6 60F34103 		bfi	r3, r0, #1, #1
 2029 00ba 84F83430 		strb	r3, [r4, #52]
 442:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR || dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 2030              		.loc 1 442 5 is_stmt 1 view .LVU684
 2031              		.loc 1 442 16 is_stmt 0 view .LVU685
 2032 00be A27C     		ldrb	r2, [r4, #18]	@ zero_extendqisi2
 2033              		.loc 1 442 89 view .LVU686
 2034 00c0 131F     		subs	r3, r2, #4
 2035 00c2 DBB2     		uxtb	r3, r3
 2036              		.loc 1 442 7 view .LVU687
 2037 00c4 022B     		cmp	r3, #2
 2038 00c6 25D8     		bhi	.L114
 443:lvgl/lvgl/src/draw/lv_img_buf.c ****        dsc->cfg.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 68


 444:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->tmp.native_color = 1;
 2039              		.loc 1 444 9 is_stmt 1 view .LVU688
 2040              		.loc 1 444 31 is_stmt 0 view .LVU689
 2041 00c8 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2042 00cc 43F00403 		orr	r3, r3, #4
 2043 00d0 84F83430 		strb	r3, [r4, #52]
 2044              	.L115:
 445:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 446:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 447:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->tmp.native_color = 0;
 448:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 449:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 450:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.data = dsc->cfg.src;
 2045              		.loc 1 450 5 is_stmt 1 view .LVU690
 2046              		.loc 1 450 37 is_stmt 0 view .LVU691
 2047 00d4 2368     		ldr	r3, [r4]
 2048              		.loc 1 450 27 view .LVU692
 2049 00d6 2362     		str	r3, [r4, #32]
 451:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.always_zero = 0;
 2050              		.loc 1 451 5 is_stmt 1 view .LVU693
 2051              		.loc 1 451 41 is_stmt 0 view .LVU694
 2052 00d8 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 452:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.cf = dsc->cfg.cf;
 2053              		.loc 1 452 5 is_stmt 1 view .LVU695
 2054              		.loc 1 452 32 is_stmt 0 view .LVU696
 2055 00da 03F01F03 		and	r3, r3, #31
 2056 00de 62F30403 		bfi	r3, r2, #0, #5
 2057 00e2 2376     		strb	r3, [r4, #24]
 453:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.w = dsc->cfg.src_w;
 2058              		.loc 1 453 5 is_stmt 1 view .LVU697
 2059              		.loc 1 453 41 is_stmt 0 view .LVU698
 2060 00e4 A288     		ldrh	r2, [r4, #4]
 2061              		.loc 1 453 31 view .LVU699
 2062 00e6 A369     		ldr	r3, [r4, #24]
 2063 00e8 62F39423 		bfi	r3, r2, #10, #11
 2064 00ec A361     		str	r3, [r4, #24]
 454:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.img_dsc.header.h = dsc->cfg.src_h;
 2065              		.loc 1 454 5 is_stmt 1 view .LVU700
 2066              		.loc 1 454 41 is_stmt 0 view .LVU701
 2067 00ee E288     		ldrh	r2, [r4, #6]
 2068              		.loc 1 454 31 view .LVU702
 2069 00f0 C3F30F43 		ubfx	r3, r3, #16, #16
 2070 00f4 62F34F13 		bfi	r3, r2, #5, #11
 2071 00f8 6383     		strh	r3, [r4, #26]	@ movhi
 455:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 456:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*The inverse of the zoom will be sued during the transformation
 457:lvgl/lvgl/src/draw/lv_img_buf.c ****      * + dsc->cfg.zoom / 2 for rounding*/
 458:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.zoom_inv = (((256 * 256) << _LV_ZOOM_INV_UPSCALE) + dsc->cfg.zoom / 2) / dsc->cfg.zoom
 2072              		.loc 1 458 5 is_stmt 1 view .LVU703
 2073              		.loc 1 458 74 is_stmt 0 view .LVU704
 2074 00fa E289     		ldrh	r2, [r4, #14]
 2075              		.loc 1 458 80 view .LVU705
 2076 00fc 5308     		lsrs	r3, r2, #1
 2077              		.loc 1 458 64 view .LVU706
 2078 00fe 03F50013 		add	r3, r3, #2097152
 2079              		.loc 1 458 85 view .LVU707
 2080 0102 93FBF2F3 		sdiv	r3, r3, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 69


 2081              		.loc 1 458 23 view .LVU708
 2082 0106 A363     		str	r3, [r4, #56]
 459:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 460:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->res.opa = LV_OPA_COVER;
 2083              		.loc 1 460 5 is_stmt 1 view .LVU709
 2084              		.loc 1 460 18 is_stmt 0 view .LVU710
 2085 0108 FF23     		movs	r3, #255
 2086 010a A375     		strb	r3, [r4, #22]
 461:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->res.color = dsc->cfg.color;
 2087              		.loc 1 461 5 is_stmt 1 view .LVU711
 2088              		.loc 1 461 20 is_stmt 0 view .LVU712
 2089 010c 238A     		ldrh	r3, [r4, #16]
 2090 010e A382     		strh	r3, [r4, #20]	@ movhi
 462:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 2091              		.loc 1 462 1 view .LVU713
 2092 0110 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2093              	.LVL248:
 2094              	.L114:
 447:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2095              		.loc 1 447 9 is_stmt 1 view .LVU714
 447:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2096              		.loc 1 447 31 is_stmt 0 view .LVU715
 2097 0114 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2098 0118 6FF38203 		bfc	r3, #2, #1
 2099 011c 84F83430 		strb	r3, [r4, #52]
 2100 0120 D8E7     		b	.L115
 2101              	.L118:
 2102 0122 00BF     		.align	2
 2103              	.L117:
 2104 0124 67666666 		.word	1717986919
 2105              		.cfi_endproc
 2106              	.LFE59:
 2108              		.section	.text._lv_img_buf_get_transformed_area,"ax",%progbits
 2109              		.align	1
 2110              		.global	_lv_img_buf_get_transformed_area
 2111              		.syntax unified
 2112              		.thumb
 2113              		.thumb_func
 2114              		.fpu fpv4-sp-d16
 2116              	_lv_img_buf_get_transformed_area:
 2117              	.LVL249:
 2118              	.LFB60:
 463:lvgl/lvgl/src/draw/lv_img_buf.c **** #endif
 464:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 465:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 466:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Get the area of a rectangle if its rotated and scaled
 467:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param res store the coordinates here
 468:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param w width of the rectangle to transform
 469:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param h height of the rectangle to transform
 470:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param angle angle of rotation
 471:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param zoom zoom, (256 no zoom)
 472:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param pivot x,y pivot coordinates of rotation
 473:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 474:lvgl/lvgl/src/draw/lv_img_buf.c **** void _lv_img_buf_get_transformed_area(lv_area_t * res, lv_coord_t w, lv_coord_t h, int16_t angle, u
 475:lvgl/lvgl/src/draw/lv_img_buf.c ****                                       const lv_point_t * pivot)
 476:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 2119              		.loc 1 476 1 is_stmt 1 view -0
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 70


 2120              		.cfi_startproc
 2121              		@ args = 8, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123              		.loc 1 476 1 is_stmt 0 view .LVU717
 2124 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2125              	.LCFI21:
 2126              		.cfi_def_cfa_offset 40
 2127              		.cfi_offset 3, -40
 2128              		.cfi_offset 4, -36
 2129              		.cfi_offset 5, -32
 2130              		.cfi_offset 6, -28
 2131              		.cfi_offset 7, -24
 2132              		.cfi_offset 8, -20
 2133              		.cfi_offset 9, -16
 2134              		.cfi_offset 10, -12
 2135              		.cfi_offset 11, -8
 2136              		.cfi_offset 14, -4
 2137 0004 0446     		mov	r4, r0
 2138 0006 BDF828E0 		ldrh	lr, [sp, #40]
 2139 000a 0B9D     		ldr	r5, [sp, #44]
 477:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 478:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(angle == 0 && zoom == LV_IMG_ZOOM_NONE) {
 2140              		.loc 1 478 5 is_stmt 1 view .LVU718
 2141              		.loc 1 478 7 is_stmt 0 view .LVU719
 2142 000c 1E46     		mov	r6, r3
 2143 000e 13B9     		cbnz	r3, .L120
 2144              		.loc 1 478 19 discriminator 1 view .LVU720
 2145 0010 BEF5807F 		cmp	lr, #256
 2146 0014 39D0     		beq	.L125
 2147              	.L120:
 479:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x1 = 0;
 480:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 481:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 482:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 483:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 484:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 485:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 486:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x1 = (((-pivot->x) * zoom) >> 8) - 1;
 2148              		.loc 1 486 5 is_stmt 1 view .LVU721
 2149              		.loc 1 486 24 is_stmt 0 view .LVU722
 2150 0016 B5F90030 		ldrsh	r3, [r5]
 2151              	.LVL250:
 2152              		.loc 1 486 18 view .LVU723
 2153 001a 5B42     		rsbs	r3, r3, #0
 2154              		.loc 1 486 29 view .LVU724
 2155 001c 0EFB03F3 		mul	r3, lr, r3
 2156              		.loc 1 486 37 view .LVU725
 2157 0020 1B12     		asrs	r3, r3, #8
 2158              		.loc 1 486 43 view .LVU726
 2159 0022 013B     		subs	r3, r3, #1
 2160 0024 9FB2     		uxth	r7, r3
 2161              		.loc 1 486 13 view .LVU727
 2162 0026 2380     		strh	r3, [r4]	@ movhi
 487:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = (((-pivot->y) * zoom) >> 8) - 1;
 2163              		.loc 1 487 5 is_stmt 1 view .LVU728
 2164              		.loc 1 487 24 is_stmt 0 view .LVU729
 2165 0028 B5F902C0 		ldrsh	ip, [r5, #2]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 71


 2166              		.loc 1 487 18 view .LVU730
 2167 002c CCF1000C 		rsb	ip, ip, #0
 2168              		.loc 1 487 29 view .LVU731
 2169 0030 0CFB0EFC 		mul	ip, ip, lr
 2170              		.loc 1 487 37 view .LVU732
 2171 0034 4FEA2C2C 		asr	ip, ip, #8
 2172              		.loc 1 487 43 view .LVU733
 2173 0038 0CF1FF3C 		add	ip, ip, #-1
 2174 003c 1FFA8CF0 		uxth	r0, ip
 2175              	.LVL251:
 2176              		.loc 1 487 13 view .LVU734
 2177 0040 A4F802C0 		strh	ip, [r4, #2]	@ movhi
 488:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = (((w - pivot->x) * zoom) >> 8) + 2;
 2178              		.loc 1 488 5 is_stmt 1 view .LVU735
 2179              		.loc 1 488 27 is_stmt 0 view .LVU736
 2180 0044 B5F90030 		ldrsh	r3, [r5]
 2181              		.loc 1 488 20 view .LVU737
 2182 0048 C91A     		subs	r1, r1, r3
 2183              	.LVL252:
 2184              		.loc 1 488 32 view .LVU738
 2185 004a 01FB0EF1 		mul	r1, r1, lr
 2186              		.loc 1 488 40 view .LVU739
 2187 004e 0912     		asrs	r1, r1, #8
 2188              		.loc 1 488 46 view .LVU740
 2189 0050 0231     		adds	r1, r1, #2
 2190 0052 1FFA81FC 		uxth	ip, r1
 2191              		.loc 1 488 13 view .LVU741
 2192 0056 A180     		strh	r1, [r4, #4]	@ movhi
 489:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = (((h - pivot->y) * zoom) >> 8) + 2;
 2193              		.loc 1 489 5 is_stmt 1 view .LVU742
 2194              		.loc 1 489 27 is_stmt 0 view .LVU743
 2195 0058 B5F90230 		ldrsh	r3, [r5, #2]
 2196              		.loc 1 489 20 view .LVU744
 2197 005c D31A     		subs	r3, r2, r3
 2198              		.loc 1 489 32 view .LVU745
 2199 005e 03FB0EF3 		mul	r3, r3, lr
 2200              		.loc 1 489 40 view .LVU746
 2201 0062 1B12     		asrs	r3, r3, #8
 2202              		.loc 1 489 46 view .LVU747
 2203 0064 0233     		adds	r3, r3, #2
 2204 0066 9AB2     		uxth	r2, r3
 2205              	.LVL253:
 2206              		.loc 1 489 13 view .LVU748
 2207 0068 E380     		strh	r3, [r4, #6]	@ movhi
 490:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 491:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(angle == 0) {
 2208              		.loc 1 491 5 is_stmt 1 view .LVU749
 2209              		.loc 1 491 7 is_stmt 0 view .LVU750
 2210 006a AEB9     		cbnz	r6, .L122
 492:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x1 += pivot->x;
 2211              		.loc 1 492 9 is_stmt 1 view .LVU751
 2212              		.loc 1 492 25 is_stmt 0 view .LVU752
 2213 006c 2B88     		ldrh	r3, [r5]
 2214              		.loc 1 492 17 view .LVU753
 2215 006e 1F44     		add	r7, r7, r3
 2216 0070 2780     		strh	r7, [r4]	@ movhi
 493:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y1 += pivot->y;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 72


 2217              		.loc 1 493 9 is_stmt 1 view .LVU754
 2218              		.loc 1 493 25 is_stmt 0 view .LVU755
 2219 0072 6B88     		ldrh	r3, [r5, #2]
 2220              		.loc 1 493 17 view .LVU756
 2221 0074 1844     		add	r0, r0, r3
 2222 0076 6080     		strh	r0, [r4, #2]	@ movhi
 494:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x2 += pivot->x;
 2223              		.loc 1 494 9 is_stmt 1 view .LVU757
 2224              		.loc 1 494 25 is_stmt 0 view .LVU758
 2225 0078 2B88     		ldrh	r3, [r5]
 2226              		.loc 1 494 17 view .LVU759
 2227 007a 9C44     		add	ip, ip, r3
 2228 007c A4F804C0 		strh	ip, [r4, #4]	@ movhi
 495:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y2 += pivot->y;
 2229              		.loc 1 495 9 is_stmt 1 view .LVU760
 2230              		.loc 1 495 25 is_stmt 0 view .LVU761
 2231 0080 6B88     		ldrh	r3, [r5, #2]
 2232              		.loc 1 495 17 view .LVU762
 2233 0082 1A44     		add	r2, r2, r3
 2234 0084 E280     		strh	r2, [r4, #6]	@ movhi
 496:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 2235              		.loc 1 496 9 is_stmt 1 view .LVU763
 2236              	.L119:
 497:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 498:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 499:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_low = angle / 10;
 500:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 501:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 502:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 503:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s1 = lv_trigo_sin(angle_low);
 504:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 505:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 506:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c1 = lv_trigo_sin(angle_low + 90);
 507:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 508:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 510:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 511:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 512:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Use smaller value to avoid overflow*/
 513:lvgl/lvgl/src/draw/lv_img_buf.c ****     sinma = sinma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 514:lvgl/lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 515:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 516:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t lt;
 517:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t rt;
 518:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t lb;
 519:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t rb;
 520:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 521:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_coord_t xt;
 522:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_coord_t yt;
 523:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 524:lvgl/lvgl/src/draw/lv_img_buf.c ****     xt = res->x1;
 525:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 527:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 528:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 529:lvgl/lvgl/src/draw/lv_img_buf.c ****     xt = res->x2;
 530:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 73


 531:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 532:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 533:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 534:lvgl/lvgl/src/draw/lv_img_buf.c ****     xt = res->x1;
 535:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 536:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 537:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 538:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 539:lvgl/lvgl/src/draw/lv_img_buf.c ****     xt = res->x2;
 540:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 541:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 542:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 543:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 544:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x1 = LV_MIN4(lb.x, lt.x, rb.x, rt.x);
 545:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 546:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 547:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 548:lvgl/lvgl/src/draw/lv_img_buf.c **** #else
 549:lvgl/lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(angle);
 550:lvgl/lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(zoom);
 551:lvgl/lvgl/src/draw/lv_img_buf.c ****     LV_UNUSED(pivot);
 552:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x1 = 0;
 553:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = 0;
 554:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = w - 1;
 555:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = h - 1;
 556:lvgl/lvgl/src/draw/lv_img_buf.c **** #endif
 557:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 2237              		.loc 1 557 1 is_stmt 0 view .LVU764
 2238 0086 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2239              	.LVL254:
 2240              	.L125:
 479:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 2241              		.loc 1 479 9 is_stmt 1 view .LVU765
 479:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y1 = 0;
 2242              		.loc 1 479 17 is_stmt 0 view .LVU766
 2243 008a 0380     		strh	r3, [r0]	@ movhi
 480:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 2244              		.loc 1 480 9 is_stmt 1 view .LVU767
 480:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->x2 = w - 1;
 2245              		.loc 1 480 17 is_stmt 0 view .LVU768
 2246 008c 4380     		strh	r3, [r0, #2]	@ movhi
 481:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2247              		.loc 1 481 9 is_stmt 1 view .LVU769
 481:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2248              		.loc 1 481 21 is_stmt 0 view .LVU770
 2249 008e 0139     		subs	r1, r1, #1
 2250              	.LVL255:
 481:lvgl/lvgl/src/draw/lv_img_buf.c ****         res->y2 = h - 1;
 2251              		.loc 1 481 17 view .LVU771
 2252 0090 8180     		strh	r1, [r0, #4]	@ movhi
 482:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 2253              		.loc 1 482 9 is_stmt 1 view .LVU772
 482:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
 2254              		.loc 1 482 21 is_stmt 0 view .LVU773
 2255 0092 013A     		subs	r2, r2, #1
 2256              	.LVL256:
 482:lvgl/lvgl/src/draw/lv_img_buf.c ****         return;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 74


 2257              		.loc 1 482 17 view .LVU774
 2258 0094 C280     		strh	r2, [r0, #6]	@ movhi
 483:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2259              		.loc 1 483 9 is_stmt 1 view .LVU775
 2260 0096 F6E7     		b	.L119
 2261              	.LVL257:
 2262              	.L122:
 499:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2263              		.loc 1 499 5 view .LVU776
 499:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_high = angle_low + 1;
 2264              		.loc 1 499 31 is_stmt 0 view .LVU777
 2265 0098 DFF85491 		ldr	r9, .L126
 2266 009c 89FB0630 		smull	r3, r0, r9, r6
 2267 00a0 4FEAE678 		asr	r8, r6, #31
 2268 00a4 C8EBA008 		rsb	r8, r8, r0, asr #2
 2269 00a8 0FFA88F8 		sxth	r8, r8
 2270              	.LVL258:
 500:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2271              		.loc 1 500 5 is_stmt 1 view .LVU778
 500:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t angle_rem = angle  - (angle_low * 10);
 2272              		.loc 1 500 13 is_stmt 0 view .LVU779
 2273 00ac 08F1010A 		add	r10, r8, #1
 2274              	.LVL259:
 501:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2275              		.loc 1 501 5 is_stmt 1 view .LVU780
 501:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2276              		.loc 1 501 13 is_stmt 0 view .LVU781
 2277 00b0 6FF00900 		mvn	r0, #9
 2278 00b4 00FB0866 		mla	r6, r0, r8, r6
 2279              	.LVL260:
 503:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 2280              		.loc 1 503 5 is_stmt 1 view .LVU782
 503:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 2281              		.loc 1 503 18 is_stmt 0 view .LVU783
 2282 00b8 4046     		mov	r0, r8
 2283 00ba FFF7FEFF 		bl	lv_trigo_sin
 2284              	.LVL261:
 2285 00be 0746     		mov	r7, r0
 2286              	.LVL262:
 504:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2287              		.loc 1 504 5 is_stmt 1 view .LVU784
 504:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2288              		.loc 1 504 18 is_stmt 0 view .LVU785
 2289 00c0 0FFA8AF0 		sxth	r0, r10
 2290              	.LVL263:
 504:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2291              		.loc 1 504 18 view .LVU786
 2292 00c4 FFF7FEFF 		bl	lv_trigo_sin
 2293              	.LVL264:
 2294 00c8 8346     		mov	fp, r0
 2295              	.LVL265:
 506:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2296              		.loc 1 506 5 is_stmt 1 view .LVU787
 506:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2297              		.loc 1 506 41 is_stmt 0 view .LVU788
 2298 00ca 08F15A00 		add	r0, r8, #90
 2299              	.LVL266:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 75


 506:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 2300              		.loc 1 506 18 view .LVU789
 2301 00ce 00B2     		sxth	r0, r0
 2302 00d0 FFF7FEFF 		bl	lv_trigo_sin
 2303              	.LVL267:
 2304 00d4 8046     		mov	r8, r0
 2305              	.LVL268:
 507:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2306              		.loc 1 507 5 is_stmt 1 view .LVU790
 507:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2307              		.loc 1 507 42 is_stmt 0 view .LVU791
 2308 00d6 0AF15A00 		add	r0, r10, #90
 2309              	.LVL269:
 507:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2310              		.loc 1 507 18 view .LVU792
 2311 00da 00B2     		sxth	r0, r0
 2312 00dc FFF7FEFF 		bl	lv_trigo_sin
 2313              	.LVL270:
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2314              		.loc 1 509 5 is_stmt 1 view .LVU793
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2315              		.loc 1 509 31 is_stmt 0 view .LVU794
 2316 00e0 C6F10A01 		rsb	r1, r6, #10
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2317              		.loc 1 509 49 view .LVU795
 2318 00e4 0BFB06FB 		mul	fp, fp, r6
 2319              	.LVL271:
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2320              		.loc 1 509 44 view .LVU796
 2321 00e8 07FB01B7 		mla	r7, r7, r1, fp
 2322              	.LVL272:
 509:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 2323              		.loc 1 509 13 view .LVU797
 2324 00ec 89FB0723 		smull	r2, r3, r9, r7
 2325 00f0 FF17     		asrs	r7, r7, #31
 2326 00f2 C7EBA303 		rsb	r3, r7, r3, asr #2
 2327              	.LVL273:
 510:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2328              		.loc 1 510 5 is_stmt 1 view .LVU798
 510:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2329              		.loc 1 510 49 is_stmt 0 view .LVU799
 2330 00f6 00FB06F6 		mul	r6, r0, r6
 2331              	.LVL274:
 510:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2332              		.loc 1 510 44 view .LVU800
 2333 00fa 08FB0168 		mla	r8, r8, r1, r6
 2334              	.LVL275:
 510:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2335              		.loc 1 510 13 view .LVU801
 2336 00fe 89FB0829 		smull	r2, r9, r9, r8
 2337 0102 4FEAE871 		asr	r1, r8, #31
 2338 0106 C1EBA901 		rsb	r1, r1, r9, asr #2
 2339              	.LVL276:
 513:lvgl/lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2340              		.loc 1 513 5 is_stmt 1 view .LVU802
 513:lvgl/lvgl/src/draw/lv_img_buf.c ****     cosma = cosma >> (LV_TRIGO_SHIFT - _LV_TRANSFORM_TRIGO_SHIFT);
 2341              		.loc 1 513 11 is_stmt 0 view .LVU803
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 76


 2342 010a 5B11     		asrs	r3, r3, #5
 2343              	.LVL277:
 514:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2344              		.loc 1 514 5 is_stmt 1 view .LVU804
 514:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2345              		.loc 1 514 11 is_stmt 0 view .LVU805
 2346 010c 4911     		asrs	r1, r1, #5
 2347              	.LVL278:
 516:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t rt;
 2348              		.loc 1 516 5 is_stmt 1 view .LVU806
 517:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t lb;
 2349              		.loc 1 517 5 view .LVU807
 518:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_point_t rb;
 2350              		.loc 1 518 5 view .LVU808
 519:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2351              		.loc 1 519 5 view .LVU809
 521:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_coord_t yt;
 2352              		.loc 1 521 5 view .LVU810
 522:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2353              		.loc 1 522 5 view .LVU811
 524:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2354              		.loc 1 524 5 view .LVU812
 524:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2355              		.loc 1 524 8 is_stmt 0 view .LVU813
 2356 010e B4F90060 		ldrsh	r6, [r4]
 2357              	.LVL279:
 525:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2358              		.loc 1 525 5 is_stmt 1 view .LVU814
 525:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2359              		.loc 1 525 8 is_stmt 0 view .LVU815
 2360 0112 B4F90220 		ldrsh	r2, [r4, #2]
 2361              	.LVL280:
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2362              		.loc 1 526 5 is_stmt 1 view .LVU816
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2363              		.loc 1 526 20 is_stmt 0 view .LVU817
 2364 0116 01FB06F7 		mul	r7, r1, r6
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2365              		.loc 1 526 33 view .LVU818
 2366 011a 03FB02F0 		mul	r0, r3, r2
 2367              	.LVL281:
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2368              		.loc 1 526 25 view .LVU819
 2369 011e A7EB0008 		sub	r8, r7, r0
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2370              		.loc 1 526 76 view .LVU820
 2371 0122 B5F800C0 		ldrh	ip, [r5]
 526:lvgl/lvgl/src/draw/lv_img_buf.c ****     lt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2372              		.loc 1 526 69 view .LVU821
 2373 0126 0CEBA828 		add	r8, ip, r8, asr #10
 2374 012a 0FFA88F8 		sxth	r8, r8
 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2375              		.loc 1 527 5 is_stmt 1 view .LVU822
 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2376              		.loc 1 527 20 is_stmt 0 view .LVU823
 2377 012e 03FB06F6 		mul	r6, r3, r6
 2378              	.LVL282:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 77


 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2379              		.loc 1 527 33 view .LVU824
 2380 0132 01FB02F2 		mul	r2, r1, r2
 2381              	.LVL283:
 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2382              		.loc 1 527 25 view .LVU825
 2383 0136 06EB020E 		add	lr, r6, r2
 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2384              		.loc 1 527 76 view .LVU826
 2385 013a 6D88     		ldrh	r5, [r5, #2]
 527:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2386              		.loc 1 527 69 view .LVU827
 2387 013c 05EBAE2E 		add	lr, r5, lr, asr #10
 2388 0140 0FFA8EFE 		sxth	lr, lr
 529:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2389              		.loc 1 529 5 is_stmt 1 view .LVU828
 529:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y1;
 2390              		.loc 1 529 8 is_stmt 0 view .LVU829
 2391 0144 B4F90490 		ldrsh	r9, [r4, #4]
 2392              	.LVL284:
 530:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2393              		.loc 1 530 5 is_stmt 1 view .LVU830
 531:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2394              		.loc 1 531 5 view .LVU831
 531:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2395              		.loc 1 531 20 is_stmt 0 view .LVU832
 2396 0148 01FB09FB 		mul	fp, r1, r9
 531:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2397              		.loc 1 531 25 view .LVU833
 2398 014c ABEB0000 		sub	r0, fp, r0
 531:lvgl/lvgl/src/draw/lv_img_buf.c ****     rt.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2399              		.loc 1 531 69 view .LVU834
 2400 0150 0CEBA020 		add	r0, ip, r0, asr #10
 2401 0154 00B2     		sxth	r0, r0
 532:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2402              		.loc 1 532 5 is_stmt 1 view .LVU835
 532:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2403              		.loc 1 532 20 is_stmt 0 view .LVU836
 2404 0156 03FB09F9 		mul	r9, r3, r9
 2405              	.LVL285:
 532:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2406              		.loc 1 532 25 view .LVU837
 2407 015a 4A44     		add	r2, r2, r9
 532:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2408              		.loc 1 532 69 view .LVU838
 2409 015c 05EBA222 		add	r2, r5, r2, asr #10
 2410 0160 12B2     		sxth	r2, r2
 534:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 2411              		.loc 1 534 5 is_stmt 1 view .LVU839
 2412              	.LVL286:
 535:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2413              		.loc 1 535 5 view .LVU840
 535:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2414              		.loc 1 535 8 is_stmt 0 view .LVU841
 2415 0162 B4F906A0 		ldrsh	r10, [r4, #6]
 2416              	.LVL287:
 536:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 78


 2417              		.loc 1 536 5 is_stmt 1 view .LVU842
 536:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2418              		.loc 1 536 33 is_stmt 0 view .LVU843
 2419 0166 03FB0AF3 		mul	r3, r3, r10
 2420              	.LVL288:
 536:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2421              		.loc 1 536 25 view .LVU844
 2422 016a FF1A     		subs	r7, r7, r3
 536:lvgl/lvgl/src/draw/lv_img_buf.c ****     lb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2423              		.loc 1 536 69 view .LVU845
 2424 016c 0CEBA727 		add	r7, ip, r7, asr #10
 2425 0170 3FB2     		sxth	r7, r7
 537:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2426              		.loc 1 537 5 is_stmt 1 view .LVU846
 537:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2427              		.loc 1 537 33 is_stmt 0 view .LVU847
 2428 0172 01FB0AF1 		mul	r1, r1, r10
 2429              	.LVL289:
 537:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2430              		.loc 1 537 25 view .LVU848
 2431 0176 0E44     		add	r6, r6, r1
 537:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2432              		.loc 1 537 69 view .LVU849
 2433 0178 05EBA626 		add	r6, r5, r6, asr #10
 2434 017c 36B2     		sxth	r6, r6
 539:lvgl/lvgl/src/draw/lv_img_buf.c ****     yt = res->y2;
 2435              		.loc 1 539 5 is_stmt 1 view .LVU850
 2436              	.LVL290:
 540:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.x = ((cosma * xt - sinma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->x;
 2437              		.loc 1 540 5 view .LVU851
 541:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2438              		.loc 1 541 5 view .LVU852
 541:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2439              		.loc 1 541 25 is_stmt 0 view .LVU853
 2440 017e ABEB0303 		sub	r3, fp, r3
 541:lvgl/lvgl/src/draw/lv_img_buf.c ****     rb.y = ((sinma * xt + cosma * yt) >> _LV_TRANSFORM_TRIGO_SHIFT) + pivot->y;
 2441              		.loc 1 541 69 view .LVU854
 2442 0182 0CEBA32C 		add	ip, ip, r3, asr #10
 2443 0186 0FFA8CFC 		sxth	ip, ip
 542:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2444              		.loc 1 542 5 is_stmt 1 view .LVU855
 542:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2445              		.loc 1 542 25 is_stmt 0 view .LVU856
 2446 018a 4944     		add	r1, r1, r9
 542:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2447              		.loc 1 542 69 view .LVU857
 2448 018c 05EBA125 		add	r5, r5, r1, asr #10
 2449 0190 2DB2     		sxth	r5, r5
 544:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 2450              		.loc 1 544 5 is_stmt 1 view .LVU858
 544:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 2451              		.loc 1 544 15 is_stmt 0 view .LVU859
 2452 0192 0346     		mov	r3, r0
 2453 0194 6045     		cmp	r0, ip
 2454 0196 A8BF     		it	ge
 2455 0198 6346     		movge	r3, ip
 2456 019a 4146     		mov	r1, r8
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 79


 2457 019c B845     		cmp	r8, r7
 2458 019e A8BF     		it	ge
 2459 01a0 3946     		movge	r1, r7
 2460 01a2 8B42     		cmp	r3, r1
 2461 01a4 A8BF     		it	ge
 2462 01a6 0B46     		movge	r3, r1
 544:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->x2 = LV_MAX4(lb.x, lt.x, rb.x, rt.x);
 2463              		.loc 1 544 13 view .LVU860
 2464 01a8 2380     		strh	r3, [r4]	@ movhi
 545:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2465              		.loc 1 545 5 is_stmt 1 view .LVU861
 545:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2466              		.loc 1 545 15 is_stmt 0 view .LVU862
 2467 01aa 6045     		cmp	r0, ip
 2468 01ac B8BF     		it	lt
 2469 01ae 6046     		movlt	r0, ip
 2470 01b0 B845     		cmp	r8, r7
 2471 01b2 B8BF     		it	lt
 2472 01b4 B846     		movlt	r8, r7
 2473 01b6 8045     		cmp	r8, r0
 2474 01b8 B8BF     		it	lt
 2475 01ba 8046     		movlt	r8, r0
 545:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y1 = LV_MIN4(lb.y, lt.y, rb.y, rt.y);
 2476              		.loc 1 545 13 view .LVU863
 2477 01bc A4F80480 		strh	r8, [r4, #4]	@ movhi
 2478              	.LVL291:
 546:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2479              		.loc 1 546 5 is_stmt 1 view .LVU864
 546:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2480              		.loc 1 546 15 is_stmt 0 view .LVU865
 2481 01c0 1346     		mov	r3, r2
 2482 01c2 AA42     		cmp	r2, r5
 2483 01c4 A8BF     		it	ge
 2484 01c6 2B46     		movge	r3, r5
 2485 01c8 7146     		mov	r1, lr
 2486 01ca B645     		cmp	lr, r6
 2487 01cc A8BF     		it	ge
 2488 01ce 3146     		movge	r1, r6
 2489 01d0 8B42     		cmp	r3, r1
 2490 01d2 A8BF     		it	ge
 2491 01d4 0B46     		movge	r3, r1
 546:lvgl/lvgl/src/draw/lv_img_buf.c ****     res->y2 = LV_MAX4(lb.y, lt.y, rb.y, rt.y);
 2492              		.loc 1 546 13 view .LVU866
 2493 01d6 6380     		strh	r3, [r4, #2]	@ movhi
 547:lvgl/lvgl/src/draw/lv_img_buf.c **** #else
 2494              		.loc 1 547 5 is_stmt 1 view .LVU867
 547:lvgl/lvgl/src/draw/lv_img_buf.c **** #else
 2495              		.loc 1 547 15 is_stmt 0 view .LVU868
 2496 01d8 9542     		cmp	r5, r2
 2497 01da B8BF     		it	lt
 2498 01dc 1546     		movlt	r5, r2
 2499 01de B645     		cmp	lr, r6
 2500 01e0 B8BF     		it	lt
 2501 01e2 B646     		movlt	lr, r6
 2502 01e4 AE45     		cmp	lr, r5
 2503 01e6 B8BF     		it	lt
 2504 01e8 AE46     		movlt	lr, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 80


 547:lvgl/lvgl/src/draw/lv_img_buf.c **** #else
 2505              		.loc 1 547 13 view .LVU869
 2506 01ea A4F806E0 		strh	lr, [r4, #6]	@ movhi
 2507 01ee 4AE7     		b	.L119
 2508              	.L127:
 2509              		.align	2
 2510              	.L126:
 2511 01f0 67666666 		.word	1717986919
 2512              		.cfi_endproc
 2513              	.LFE60:
 2515              		.section	.text._lv_img_buf_transform_anti_alias,"ax",%progbits
 2516              		.align	1
 2517              		.global	_lv_img_buf_transform_anti_alias
 2518              		.syntax unified
 2519              		.thumb
 2520              		.thumb_func
 2521              		.fpu fpv4-sp-d16
 2523              	_lv_img_buf_transform_anti_alias:
 2524              	.LVL292:
 2525              	.LFB62:
 558:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 559:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 560:lvgl/lvgl/src/draw/lv_img_buf.c **** #if LV_DRAW_COMPLEX
 561:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 562:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Get which color and opa would come to a pixel if it were rotated
 563:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc a descriptor initialized by `lv_img_buf_rotate_init`
 564:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param x the coordinate which color and opa should be get
 565:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param y the coordinate which color and opa should be get
 566:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @return true: there is valid pixel on these x/y coordinates; false: the rotated pixel was out of
 567:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @note the result is written back to `dsc->res_color` and `dsc->res_opa`
 568:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 569:lvgl/lvgl/src/draw/lv_img_buf.c **** bool _lv_img_buf_transform(lv_img_transform_dsc_t * dsc, lv_coord_t x, lv_coord_t y)
 570:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 571:lvgl/lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 572:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 573:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Get the target point relative coordinates to the pivot*/
 574:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t xt = x - dsc->cfg.pivot_x;
 575:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 576:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 577:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t xs;
 578:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t ys;
 579:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.zoom == LV_IMG_ZOOM_NONE) {
 580:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 583:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 584:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(dsc->cfg.angle == 0) {
 585:lvgl/lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 586:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 587:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 588:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 589:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 590:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 591:lvgl/lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 592:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 81


 595:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 596:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 597:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Get the integer part of the source pixel*/
 598:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t xs_int = xs >> 8;
 599:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 600:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 601:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(xs_int >= dsc->cfg.src_w) return false;
 602:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 603:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(ys_int >= dsc->cfg.src_h) return false;
 605:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 606:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 607:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint8_t px_size;
 608:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint32_t pxi;
 609:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 610:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 611:lvgl/lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 612:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 613:lvgl/lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 614:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 615:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 616:lvgl/lvgl/src/draw/lv_img_buf.c ****         else {
 617:lvgl/lvgl/src/draw/lv_img_buf.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE;
 618:lvgl/lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 619:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 620:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 621:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 622:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 623:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 624:lvgl/lvgl/src/draw/lv_img_buf.c ****         pxi = 0; /*unused*/
 625:lvgl/lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 626:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.color = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, xs_int, ys_int, dsc->cfg.color)
 627:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 628:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 629:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 630:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.chroma_keyed) {
 631:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->res.color.full == ct.full) return false;
 633:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 634:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 635:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.antialias == false) return true;
 636:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 637:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs = xs;
 638:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 639:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 640:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 641:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 642:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 643:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 644:lvgl/lvgl/src/draw/lv_img_buf.c ****     bool ret;
 645:lvgl/lvgl/src/draw/lv_img_buf.c ****     ret = _lv_img_buf_transform_anti_alias(dsc);
 646:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 647:lvgl/lvgl/src/draw/lv_img_buf.c ****     return ret;
 648:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 649:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 650:lvgl/lvgl/src/draw/lv_img_buf.c **** /**
 651:lvgl/lvgl/src/draw/lv_img_buf.c ****  * Continue transformation by taking the neighbors into account
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 82


 652:lvgl/lvgl/src/draw/lv_img_buf.c ****  * @param dsc pointer to the transformation descriptor
 653:lvgl/lvgl/src/draw/lv_img_buf.c ****  */
 654:lvgl/lvgl/src/draw/lv_img_buf.c **** bool _lv_img_buf_transform_anti_alias(lv_img_transform_dsc_t * dsc)
 655:lvgl/lvgl/src/draw/lv_img_buf.c **** {
 2526              		.loc 1 655 1 is_stmt 1 view -0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 32
 2529              		@ frame_needed = 0, uses_anonymous_args = 0
 2530              		.loc 1 655 1 is_stmt 0 view .LVU871
 2531 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2532              	.LCFI22:
 2533              		.cfi_def_cfa_offset 36
 2534              		.cfi_offset 4, -36
 2535              		.cfi_offset 5, -32
 2536              		.cfi_offset 6, -28
 2537              		.cfi_offset 7, -24
 2538              		.cfi_offset 8, -20
 2539              		.cfi_offset 9, -16
 2540              		.cfi_offset 10, -12
 2541              		.cfi_offset 11, -8
 2542              		.cfi_offset 14, -4
 2543 0004 89B0     		sub	sp, sp, #36
 2544              	.LCFI23:
 2545              		.cfi_def_cfa_offset 72
 2546 0006 0446     		mov	r4, r0
 656:lvgl/lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = dsc->cfg.src;
 2547              		.loc 1 656 5 is_stmt 1 view .LVU872
 2548              		.loc 1 656 21 is_stmt 0 view .LVU873
 2549 0008 0168     		ldr	r1, [r0]
 2550              	.LVL293:
 657:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 658:lvgl/lvgl/src/draw/lv_img_buf.c ****     /*Get the fractional part of the source pixel*/
 659:lvgl/lvgl/src/draw/lv_img_buf.c ****     int xs_fract = dsc->tmp.xs & 0xff;
 2551              		.loc 1 659 5 is_stmt 1 view .LVU874
 2552              		.loc 1 659 28 is_stmt 0 view .LVU875
 2553 000a B0F93C50 		ldrsh	r5, [r0, #60]
 2554              		.loc 1 659 9 view .LVU876
 2555 000e EAB2     		uxtb	r2, r5
 2556              	.LVL294:
 660:lvgl/lvgl/src/draw/lv_img_buf.c ****     int ys_fract = dsc->tmp.ys & 0xff;
 2557              		.loc 1 660 5 is_stmt 1 view .LVU877
 2558              		.loc 1 660 28 is_stmt 0 view .LVU878
 2559 0010 B0F93E60 		ldrsh	r6, [r0, #62]
 2560              		.loc 1 660 9 view .LVU879
 2561 0014 F3B2     		uxtb	r3, r6
 2562              	.LVL295:
 661:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t xn;      /*x neighbor*/
 2563              		.loc 1 661 5 is_stmt 1 view .LVU880
 662:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr; /*x mix ratio*/
 2564              		.loc 1 662 5 view .LVU881
 663:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 664:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(xs_fract < 0x70) {
 2565              		.loc 1 664 5 view .LVU882
 2566              		.loc 1 664 7 is_stmt 0 view .LVU883
 2567 0016 6F2A     		cmp	r2, #111
 2568 0018 2FDC     		bgt	.L129
 665:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn = - 1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 83


 2569              		.loc 1 665 9 is_stmt 1 view .LVU884
 2570              	.LVL296:
 666:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn < 0) xn = 0;
 2571              		.loc 1 666 9 view .LVU885
 2572              		.loc 1 666 20 is_stmt 0 view .LVU886
 2573 001a B0F94020 		ldrsh	r2, [r0, #64]
 2574              	.LVL297:
 2575              		.loc 1 666 11 view .LVU887
 2576 001e 002A     		cmp	r2, #0
 2577 0020 29DD     		ble	.L162
 665:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn = - 1;
 2578              		.loc 1 665 12 view .LVU888
 2579 0022 4FF0FF37 		mov	r7, #-1
 2580              	.L130:
 2581              	.LVL298:
 667:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2582              		.loc 1 667 9 is_stmt 1 view .LVU889
 2583              		.loc 1 667 23 is_stmt 0 view .LVU890
 2584 0026 EDB2     		uxtb	r5, r5
 2585              		.loc 1 667 12 view .LVU891
 2586 0028 85F08005 		eor	r5, r5, #128
 2587              	.LVL299:
 2588              	.L131:
 668:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 669:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_fract > 0x90) {
 670:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 673:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 674:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 675:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn = 0;
 676:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = 0xFF;
 677:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 678:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 679:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t yn;      /*x neighbor*/
 2589              		.loc 1 679 5 is_stmt 1 view .LVU892
 680:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t yr; /*x mix ratio*/
 2590              		.loc 1 680 5 view .LVU893
 681:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 682:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(ys_fract < 0x70) {
 2591              		.loc 1 682 5 view .LVU894
 2592              		.loc 1 682 7 is_stmt 0 view .LVU895
 2593 002c 6F2B     		cmp	r3, #111
 2594 002e 3BDC     		bgt	.L133
 683:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn = - 1;
 2595              		.loc 1 683 9 is_stmt 1 view .LVU896
 2596              	.LVL300:
 684:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn < 0) yn = 0;
 2597              		.loc 1 684 9 view .LVU897
 2598              		.loc 1 684 20 is_stmt 0 view .LVU898
 2599 0030 B4F94230 		ldrsh	r3, [r4, #66]
 2600              	.LVL301:
 2601              		.loc 1 684 11 view .LVU899
 2602 0034 002B     		cmp	r3, #0
 2603 0036 34DD     		ble	.L165
 683:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn = - 1;
 2604              		.loc 1 683 12 view .LVU900
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 84


 2605 0038 4FF0FF39 		mov	r9, #-1
 2606              	.L134:
 2607              	.LVL302:
 685:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 686:lvgl/lvgl/src/draw/lv_img_buf.c ****         yr = ys_fract + 0x80;
 2608              		.loc 1 686 9 is_stmt 1 view .LVU901
 2609              		.loc 1 686 23 is_stmt 0 view .LVU902
 2610 003c F6B2     		uxtb	r6, r6
 2611              		.loc 1 686 12 view .LVU903
 2612 003e 86F08006 		eor	r6, r6, #128
 2613              	.LVL303:
 2614              	.L135:
 687:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 688:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_fract > 0x90) {
 689:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 690:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 691:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 692:lvgl/lvgl/src/draw/lv_img_buf.c ****         yr = (0xFF - ys_fract) + 0x80;
 693:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 694:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 695:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn = 0;
 696:lvgl/lvgl/src/draw/lv_img_buf.c ****         yr = 0xFF;
 697:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 698:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 699:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c00 = dsc->res.color;
 2615              		.loc 1 699 5 is_stmt 1 view .LVU904
 2616              		.loc 1 699 16 is_stmt 0 view .LVU905
 2617 0042 A38A     		ldrh	r3, [r4, #20]
 2618              	.LVL304:
 2619              		.loc 1 699 16 view .LVU906
 2620 0044 ADF80630 		strh	r3, [sp, #6]	@ movhi
 700:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c01;
 2621              		.loc 1 700 5 is_stmt 1 view .LVU907
 701:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c10;
 2622              		.loc 1 701 5 view .LVU908
 702:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c11;
 2623              		.loc 1 702 5 view .LVU909
 703:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 704:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a00 = dsc->res.opa;
 2624              		.loc 1 704 5 view .LVU910
 2625              		.loc 1 704 14 is_stmt 0 view .LVU911
 2626 0048 94F816A0 		ldrb	r10, [r4, #22]	@ zero_extendqisi2
 2627              	.LVL305:
 705:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a10 = 0;
 2628              		.loc 1 705 5 is_stmt 1 view .LVU912
 706:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a01 = 0;
 2629              		.loc 1 706 5 view .LVU913
 707:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 2630              		.loc 1 707 5 view .LVU914
 708:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 709:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 2631              		.loc 1 709 5 view .LVU915
 2632              		.loc 1 709 8 is_stmt 0 view .LVU916
 2633 004c 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 2634              	.LVL306:
 2635              		.loc 1 709 7 view .LVU917
 2636 0050 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 85


 2637 0054 00F08A80 		beq	.L137
 710:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c01, &src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn], sizeof(lv_color_t));
 2638              		.loc 1 710 9 is_stmt 1 view .LVU918
 2639              		.loc 1 710 47 is_stmt 0 view .LVU919
 2640 0058 636C     		ldr	r3, [r4, #68]
 2641              		.loc 1 710 62 view .LVU920
 2642 005a 94F84820 		ldrb	r2, [r4, #72]	@ zero_extendqisi2
 2643              		.loc 1 710 52 view .LVU921
 2644 005e 07FB0232 		mla	r2, r7, r2, r3
 2645              		.loc 1 710 31 view .LVU922
 2646 0062 0A44     		add	r2, r2, r1
 2647              	.LVL307:
 2648              	.LBB90:
 2649              	.LBI90:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 2650              		.loc 3 201 44 is_stmt 1 view .LVU923
 2651              	.LBB91:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2652              		.loc 3 203 5 view .LVU924
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 2653              		.loc 3 204 5 view .LVU925
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2654              		.loc 3 206 5 view .LVU926
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2655              		.loc 3 203 15 is_stmt 0 view .LVU927
 2656 0064 07A8     		add	r0, sp, #28
 2657              	.LVL308:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2658              		.loc 3 206 10 view .LVU928
 2659 0066 0223     		movs	r3, #2
 2660              	.LVL309:
 2661              	.L138:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2662              		.loc 3 206 10 is_stmt 1 view .LVU929
 2663 0068 ABB3     		cbz	r3, .L178
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2664              		.loc 3 207 9 view .LVU930
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2665              		.loc 3 207 15 is_stmt 0 view .LVU931
 2666 006a 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2667              	.LVL310:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2668              		.loc 3 207 13 view .LVU932
 2669 006e 00F801CB 		strb	ip, [r0], #1
 2670              	.LVL311:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2671              		.loc 3 208 9 is_stmt 1 view .LVU933
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2672              		.loc 3 209 9 view .LVU934
 2673              		.loc 3 210 9 view .LVU935
 2674              		.loc 3 210 12 is_stmt 0 view .LVU936
 2675 0072 013B     		subs	r3, r3, #1
 2676              	.LVL312:
 2677              		.loc 3 210 12 view .LVU937
 2678 0074 F8E7     		b	.L138
 2679              	.LVL313:
 2680              	.L162:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 86


 2681              		.loc 3 210 12 view .LVU938
 2682              	.LBE91:
 2683              	.LBE90:
 666:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = xs_fract + 0x80;
 2684              		.loc 1 666 41 view .LVU939
 2685 0076 0027     		movs	r7, #0
 2686 0078 D5E7     		b	.L130
 2687              	.LVL314:
 2688              	.L129:
 669:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 2689              		.loc 1 669 10 is_stmt 1 view .LVU940
 669:lvgl/lvgl/src/draw/lv_img_buf.c ****         xn =  1;
 2690              		.loc 1 669 12 is_stmt 0 view .LVU941
 2691 007a 902A     		cmp	r2, #144
 2692 007c 0EDD     		ble	.L163
 670:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2693              		.loc 1 670 9 is_stmt 1 view .LVU942
 2694              	.LVL315:
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2695              		.loc 1 671 9 view .LVU943
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2696              		.loc 1 671 20 is_stmt 0 view .LVU944
 2697 007e B0F94020 		ldrsh	r2, [r0, #64]
 2698              	.LVL316:
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2699              		.loc 1 671 28 view .LVU945
 2700 0082 0132     		adds	r2, r2, #1
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2701              		.loc 1 671 44 view .LVU946
 2702 0084 B0F90400 		ldrsh	r0, [r0, #4]
 2703              	.LVL317:
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2704              		.loc 1 671 11 view .LVU947
 2705 0088 8242     		cmp	r2, r0
 2706 008a 05DA     		bge	.L164
 670:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.xs_int + xn >= dsc->cfg.src_w) xn = 0;
 2707              		.loc 1 670 12 view .LVU948
 2708 008c 0127     		movs	r7, #1
 2709              	.L132:
 2710              	.LVL318:
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2711              		.loc 1 672 9 is_stmt 1 view .LVU949
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2712              		.loc 1 672 32 is_stmt 0 view .LVU950
 2713 008e EDB2     		uxtb	r5, r5
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2714              		.loc 1 672 12 view .LVU951
 2715 0090 C5F17F05 		rsb	r5, r5, #127
 2716              	.LVL319:
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2717              		.loc 1 672 12 view .LVU952
 2718 0094 EDB2     		uxtb	r5, r5
 2719              	.LVL320:
 672:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2720              		.loc 1 672 12 view .LVU953
 2721 0096 C9E7     		b	.L131
 2722              	.LVL321:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 87


 2723              	.L164:
 671:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = (0xFF - xs_fract) + 0x80;
 2724              		.loc 1 671 55 view .LVU954
 2725 0098 0027     		movs	r7, #0
 2726 009a F8E7     		b	.L132
 2727              	.LVL322:
 2728              	.L163:
 676:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2729              		.loc 1 676 12 view .LVU955
 2730 009c FF25     		movs	r5, #255
 675:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr = 0xFF;
 2731              		.loc 1 675 12 view .LVU956
 2732 009e 0027     		movs	r7, #0
 2733 00a0 C4E7     		b	.L131
 2734              	.LVL323:
 2735              	.L165:
 684:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2736              		.loc 1 684 41 view .LVU957
 2737 00a2 4FF00009 		mov	r9, #0
 2738 00a6 C9E7     		b	.L134
 2739              	.LVL324:
 2740              	.L133:
 688:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 2741              		.loc 1 688 10 is_stmt 1 view .LVU958
 688:lvgl/lvgl/src/draw/lv_img_buf.c ****         yn =  1;
 2742              		.loc 1 688 12 is_stmt 0 view .LVU959
 2743 00a8 902B     		cmp	r3, #144
 2744 00aa 10DD     		ble	.L166
 689:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2745              		.loc 1 689 9 is_stmt 1 view .LVU960
 2746              	.LVL325:
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2747              		.loc 1 690 9 view .LVU961
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2748              		.loc 1 690 20 is_stmt 0 view .LVU962
 2749 00ac B4F94230 		ldrsh	r3, [r4, #66]
 2750              	.LVL326:
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2751              		.loc 1 690 28 view .LVU963
 2752 00b0 0133     		adds	r3, r3, #1
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2753              		.loc 1 690 44 view .LVU964
 2754 00b2 B4F90620 		ldrsh	r2, [r4, #6]
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2755              		.loc 1 690 11 view .LVU965
 2756 00b6 9342     		cmp	r3, r2
 2757 00b8 06DA     		bge	.L167
 689:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.ys_int + yn >= dsc->cfg.src_h) yn = 0;
 2758              		.loc 1 689 12 view .LVU966
 2759 00ba 4FF00109 		mov	r9, #1
 2760              	.L136:
 2761              	.LVL327:
 692:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2762              		.loc 1 692 9 is_stmt 1 view .LVU967
 692:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2763              		.loc 1 692 32 is_stmt 0 view .LVU968
 2764 00be F6B2     		uxtb	r6, r6
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 88


 692:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2765              		.loc 1 692 12 view .LVU969
 2766 00c0 C6F17F06 		rsb	r6, r6, #127
 2767              	.LVL328:
 692:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2768              		.loc 1 692 12 view .LVU970
 2769 00c4 F6B2     		uxtb	r6, r6
 2770              	.LVL329:
 692:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2771              		.loc 1 692 12 view .LVU971
 2772 00c6 BCE7     		b	.L135
 2773              	.LVL330:
 2774              	.L167:
 690:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 2775              		.loc 1 690 55 view .LVU972
 2776 00c8 4FF00009 		mov	r9, #0
 2777 00cc F7E7     		b	.L136
 2778              	.LVL331:
 2779              	.L166:
 696:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 2780              		.loc 1 696 12 view .LVU973
 2781 00ce FF26     		movs	r6, #255
 695:lvgl/lvgl/src/draw/lv_img_buf.c ****         yr = 0xFF;
 2782              		.loc 1 695 12 view .LVU974
 2783 00d0 4FF00009 		mov	r9, #0
 2784 00d4 B5E7     		b	.L135
 2785              	.LVL332:
 2786              	.L178:
 2787              	.LBB93:
 2788              	.LBB92:
 211:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 212:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 213:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     return dst;
 2789              		.loc 3 213 5 is_stmt 1 view .LVU975
 2790              		.loc 3 213 5 is_stmt 0 view .LVU976
 2791              	.LBE92:
 2792              	.LBE93:
 711:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c10, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn], sizeo
 2793              		.loc 1 711 9 is_stmt 1 view .LVU977
 2794              		.loc 1 711 47 is_stmt 0 view .LVU978
 2795 00d6 636C     		ldr	r3, [r4, #68]
 2796              		.loc 1 711 62 view .LVU979
 2797 00d8 B4F90400 		ldrsh	r0, [r4, #4]
 2798              		.loc 1 711 79 view .LVU980
 2799 00dc 94F84820 		ldrb	r2, [r4, #72]	@ zero_extendqisi2
 2800              		.loc 1 711 69 view .LVU981
 2801 00e0 02FB00F2 		mul	r2, r2, r0
 2802              		.loc 1 711 52 view .LVU982
 2803 00e4 09FB0232 		mla	r2, r9, r2, r3
 2804              		.loc 1 711 31 view .LVU983
 2805 00e8 0A44     		add	r2, r2, r1
 2806              	.LVL333:
 2807              	.LBB94:
 2808              	.LBI94:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 2809              		.loc 3 201 44 is_stmt 1 view .LVU984
 2810              	.LBB95:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 89


 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2811              		.loc 3 203 15 is_stmt 0 view .LVU985
 2812 00ea 06A8     		add	r0, sp, #24
 2813              	.LVL334:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2814              		.loc 3 203 15 view .LVU986
 2815              	.LBE95:
 2816              	.LBE94:
 2817              		.loc 1 711 31 view .LVU987
 2818 00ec 0223     		movs	r3, #2
 2819 00ee 04E0     		b	.L140
 2820              	.LVL335:
 2821              	.L141:
 2822              	.LBB97:
 2823              	.LBB96:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2824              		.loc 3 207 9 is_stmt 1 view .LVU988
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2825              		.loc 3 207 15 is_stmt 0 view .LVU989
 2826 00f0 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2827              	.LVL336:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2828              		.loc 3 207 13 view .LVU990
 2829 00f4 00F801CB 		strb	ip, [r0], #1
 2830              	.LVL337:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2831              		.loc 3 208 9 is_stmt 1 view .LVU991
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2832              		.loc 3 209 9 view .LVU992
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 2833              		.loc 3 210 9 view .LVU993
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 2834              		.loc 3 210 12 is_stmt 0 view .LVU994
 2835 00f8 013B     		subs	r3, r3, #1
 2836              	.LVL338:
 2837              	.L140:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2838              		.loc 3 206 10 is_stmt 1 view .LVU995
 2839 00fa 002B     		cmp	r3, #0
 2840 00fc F8D1     		bne	.L141
 2841              		.loc 3 213 5 view .LVU996
 2842              	.LVL339:
 2843              		.loc 3 213 5 is_stmt 0 view .LVU997
 2844              	.LBE96:
 2845              	.LBE97:
 712:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_memcpy_small(&c11, &src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->
 2846              		.loc 1 712 9 is_stmt 1 view .LVU998
 2847              		.loc 1 712 47 is_stmt 0 view .LVU999
 2848 00fe 606C     		ldr	r0, [r4, #68]
 2849              		.loc 1 712 103 view .LVU1000
 2850 0100 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 2851              		.loc 1 712 62 view .LVU1001
 2852 0104 B4F90420 		ldrsh	r2, [r4, #4]
 2853              		.loc 1 712 69 view .LVU1002
 2854 0108 02FB03F2 		mul	r2, r2, r3
 2855              		.loc 1 712 88 view .LVU1003
 2856 010c 09FB02F2 		mul	r2, r9, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 90


 2857              		.loc 1 712 93 view .LVU1004
 2858 0110 07FB0322 		mla	r2, r7, r3, r2
 2859 0114 0244     		add	r2, r2, r0
 2860              		.loc 1 712 31 view .LVU1005
 2861 0116 0A44     		add	r2, r2, r1
 2862              	.LVL340:
 2863              	.LBB98:
 2864              	.LBI98:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 2865              		.loc 3 201 44 is_stmt 1 view .LVU1006
 2866              	.LBB99:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2867              		.loc 3 203 15 is_stmt 0 view .LVU1007
 2868 0118 05A8     		add	r0, sp, #20
 2869              	.LVL341:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 2870              		.loc 3 203 15 view .LVU1008
 2871              	.LBE99:
 2872              	.LBE98:
 2873              		.loc 1 712 31 view .LVU1009
 2874 011a 0223     		movs	r3, #2
 2875 011c 04E0     		b	.L142
 2876              	.LVL342:
 2877              	.L143:
 2878              	.LBB101:
 2879              	.LBB100:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2880              		.loc 3 207 9 is_stmt 1 view .LVU1010
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2881              		.loc 3 207 15 is_stmt 0 view .LVU1011
 2882 011e 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 2883              	.LVL343:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 2884              		.loc 3 207 13 view .LVU1012
 2885 0122 00F801CB 		strb	ip, [r0], #1
 2886              	.LVL344:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 2887              		.loc 3 208 9 is_stmt 1 view .LVU1013
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 2888              		.loc 3 209 9 view .LVU1014
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 2889              		.loc 3 210 9 view .LVU1015
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 2890              		.loc 3 210 12 is_stmt 0 view .LVU1016
 2891 0126 013B     		subs	r3, r3, #1
 2892              	.LVL345:
 2893              	.L142:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 2894              		.loc 3 206 10 is_stmt 1 view .LVU1017
 2895 0128 002B     		cmp	r3, #0
 2896 012a F8D1     		bne	.L143
 2897              		.loc 3 213 5 view .LVU1018
 2898              	.LVL346:
 2899              		.loc 3 213 5 is_stmt 0 view .LVU1019
 2900              	.LBE100:
 2901              	.LBE101:
 713:lvgl/lvgl/src/draw/lv_img_buf.c ****                          sizeof(lv_color_t));
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 91


 714:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 2902              		.loc 1 714 9 is_stmt 1 view .LVU1020
 2903              		.loc 1 714 12 is_stmt 0 view .LVU1021
 2904 012c 94F83480 		ldrb	r8, [r4, #52]	@ zero_extendqisi2
 2905              		.loc 1 714 11 view .LVU1022
 2906 0130 18F00208 		ands	r8, r8, #2
 2907 0134 69D0     		beq	.L168
 715:lvgl/lvgl/src/draw/lv_img_buf.c ****             a10 = src_u8[dsc->tmp.pxi + dsc->tmp.px_size * xn + dsc->tmp.px_size - 1];
 2908              		.loc 1 715 13 is_stmt 1 view .LVU1023
 2909              		.loc 1 715 34 is_stmt 0 view .LVU1024
 2910 0136 606C     		ldr	r0, [r4, #68]
 2911              		.loc 1 715 49 view .LVU1025
 2912 0138 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 2913              		.loc 1 715 58 view .LVU1026
 2914 013c 07FB03F2 		mul	r2, r7, r3
 2915              		.loc 1 715 39 view .LVU1027
 2916 0140 8718     		adds	r7, r0, r2
 2917              	.LVL347:
 2918              		.loc 1 715 63 view .LVU1028
 2919 0142 1F44     		add	r7, r7, r3
 2920              		.loc 1 715 25 view .LVU1029
 2921 0144 013F     		subs	r7, r7, #1
 2922              		.loc 1 715 17 view .LVU1030
 2923 0146 11F80780 		ldrb	r8, [r1, r7]	@ zero_extendqisi2
 2924              	.LVL348:
 716:lvgl/lvgl/src/draw/lv_img_buf.c ****             a01 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size -
 2925              		.loc 1 716 13 is_stmt 1 view .LVU1031
 2926              		.loc 1 716 49 is_stmt 0 view .LVU1032
 2927 014a B4F90470 		ldrsh	r7, [r4, #4]
 2928              		.loc 1 716 56 view .LVU1033
 2929 014e 07FB03F7 		mul	r7, r7, r3
 2930              		.loc 1 716 75 view .LVU1034
 2931 0152 09FB07F9 		mul	r9, r9, r7
 2932              	.LVL349:
 2933              		.loc 1 716 39 view .LVU1035
 2934 0156 00EB0907 		add	r7, r0, r9
 2935              		.loc 1 716 80 view .LVU1036
 2936 015a 1F44     		add	r7, r7, r3
 2937              		.loc 1 716 25 view .LVU1037
 2938 015c 013F     		subs	r7, r7, #1
 2939              		.loc 1 716 17 view .LVU1038
 2940 015e CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 2941              	.LVL350:
 717:lvgl/lvgl/src/draw/lv_img_buf.c ****             a11 = src_u8[dsc->tmp.pxi + dsc->cfg.src_w * dsc->tmp.px_size * yn + dsc->tmp.px_size *
 2942              		.loc 1 717 13 is_stmt 1 view .LVU1039
 2943              		.loc 1 717 80 is_stmt 0 view .LVU1040
 2944 0160 4A44     		add	r2, r2, r9
 2945 0162 0244     		add	r2, r2, r0
 2946              		.loc 1 717 104 view .LVU1041
 2947 0164 1344     		add	r3, r3, r2
 2948              		.loc 1 717 25 view .LVU1042
 2949 0166 013B     		subs	r3, r3, #1
 2950              		.loc 1 717 17 view .LVU1043
 2951 0168 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 2952              	.LVL351:
 2953              		.loc 1 717 17 view .LVU1044
 2954 016a 50E0     		b	.L144
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 92


 2955              	.LVL352:
 2956              	.L137:
 718:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 719:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 720:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 721:lvgl/lvgl/src/draw/lv_img_buf.c ****         c01 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int, dsc
 2957              		.loc 1 721 9 is_stmt 1 view .LVU1045
 2958              		.loc 1 721 15 is_stmt 0 view .LVU1046
 2959 016c 04F1180B 		add	fp, r4, #24
 2960              		.loc 1 721 66 view .LVU1047
 2961 0170 B4F84010 		ldrh	r1, [r4, #64]
 2962              	.LVL353:
 2963              		.loc 1 721 74 view .LVU1048
 2964 0174 BFB2     		uxth	r7, r7
 2965              	.LVL354:
 2966              		.loc 1 721 74 view .LVU1049
 2967 0176 3944     		add	r1, r1, r7
 2968              		.loc 1 721 15 view .LVU1050
 2969 0178 238A     		ldrh	r3, [r4, #16]
 2970 017a B4F94220 		ldrsh	r2, [r4, #66]
 2971 017e 09B2     		sxth	r1, r1
 2972 0180 5846     		mov	r0, fp
 2973 0182 FFF7FEFF 		bl	lv_img_buf_get_px_color
 2974              	.LVL355:
 2975              		.loc 1 721 15 view .LVU1051
 2976 0186 ADF81C00 		strh	r0, [sp, #28]	@ movhi
 722:lvgl/lvgl/src/draw/lv_img_buf.c ****         c10 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn, dsc
 2977              		.loc 1 722 9 is_stmt 1 view .LVU1052
 2978              		.loc 1 722 83 is_stmt 0 view .LVU1053
 2979 018a B4F84220 		ldrh	r2, [r4, #66]
 2980              		.loc 1 722 91 view .LVU1054
 2981 018e 1FFA89F9 		uxth	r9, r9
 2982              	.LVL356:
 2983              		.loc 1 722 91 view .LVU1055
 2984 0192 4A44     		add	r2, r2, r9
 2985              		.loc 1 722 15 view .LVU1056
 2986 0194 238A     		ldrh	r3, [r4, #16]
 2987 0196 12B2     		sxth	r2, r2
 2988 0198 B4F94010 		ldrsh	r1, [r4, #64]
 2989 019c 5846     		mov	r0, fp
 2990 019e FFF7FEFF 		bl	lv_img_buf_get_px_color
 2991              	.LVL357:
 2992 01a2 ADF81800 		strh	r0, [sp, #24]	@ movhi
 723:lvgl/lvgl/src/draw/lv_img_buf.c ****         c11 = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int + yn
 2993              		.loc 1 723 9 is_stmt 1 view .LVU1057
 2994              		.loc 1 723 66 is_stmt 0 view .LVU1058
 2995 01a6 B4F84010 		ldrh	r1, [r4, #64]
 2996              		.loc 1 723 74 view .LVU1059
 2997 01aa 3944     		add	r1, r1, r7
 2998              		.loc 1 723 88 view .LVU1060
 2999 01ac B4F84220 		ldrh	r2, [r4, #66]
 3000              		.loc 1 723 96 view .LVU1061
 3001 01b0 4A44     		add	r2, r2, r9
 3002              		.loc 1 723 15 view .LVU1062
 3003 01b2 238A     		ldrh	r3, [r4, #16]
 3004 01b4 12B2     		sxth	r2, r2
 3005 01b6 09B2     		sxth	r1, r1
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 93


 3006 01b8 5846     		mov	r0, fp
 3007 01ba FFF7FEFF 		bl	lv_img_buf_get_px_color
 3008              	.LVL358:
 3009 01be ADF81400 		strh	r0, [sp, #20]	@ movhi
 724:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 725:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha) {
 3010              		.loc 1 725 9 is_stmt 1 view .LVU1063
 3011              		.loc 1 725 12 is_stmt 0 view .LVU1064
 3012 01c2 94F83480 		ldrb	r8, [r4, #52]	@ zero_extendqisi2
 3013              		.loc 1 725 11 view .LVU1065
 3014 01c6 18F00208 		ands	r8, r8, #2
 3015 01ca 54D0     		beq	.L169
 726:lvgl/lvgl/src/draw/lv_img_buf.c ****             a10 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int)
 3016              		.loc 1 726 13 is_stmt 1 view .LVU1066
 3017              		.loc 1 726 70 is_stmt 0 view .LVU1067
 3018 01cc B4F94030 		ldrsh	r3, [r4, #64]
 3019              		.loc 1 726 78 view .LVU1068
 3020 01d0 0293     		str	r3, [sp, #8]
 3021 01d2 17FA83F7 		uxtah	r7, r7, r3
 3022              		.loc 1 726 19 view .LVU1069
 3023 01d6 3BB2     		sxth	r3, r7
 3024 01d8 B4F94270 		ldrsh	r7, [r4, #66]
 3025 01dc 3A46     		mov	r2, r7
 3026 01de 0393     		str	r3, [sp, #12]
 3027 01e0 1946     		mov	r1, r3
 3028 01e2 5846     		mov	r0, fp
 3029 01e4 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3030              	.LVL359:
 3031 01e8 8046     		mov	r8, r0
 3032              	.LVL360:
 727:lvgl/lvgl/src/draw/lv_img_buf.c ****             a01 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int, dsc->tmp.ys_int + yn)
 3033              		.loc 1 727 13 is_stmt 1 view .LVU1070
 3034              		.loc 1 727 95 is_stmt 0 view .LVU1071
 3035 01ea 19FA87F9 		uxtah	r9, r9, r7
 3036              		.loc 1 727 19 view .LVU1072
 3037 01ee 0FFA89F9 		sxth	r9, r9
 3038 01f2 4A46     		mov	r2, r9
 3039 01f4 0299     		ldr	r1, [sp, #8]
 3040 01f6 5846     		mov	r0, fp
 3041 01f8 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3042              	.LVL361:
 3043 01fc 0746     		mov	r7, r0
 3044              	.LVL362:
 728:lvgl/lvgl/src/draw/lv_img_buf.c ****             a11 = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, dsc->tmp.xs_int + xn, dsc->tmp.ys_int 
 3045              		.loc 1 728 13 is_stmt 1 view .LVU1073
 3046              		.loc 1 728 19 is_stmt 0 view .LVU1074
 3047 01fe 4A46     		mov	r2, r9
 3048 0200 0399     		ldr	r1, [sp, #12]
 3049 0202 5846     		mov	r0, fp
 3050 0204 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3051              	.LVL363:
 3052              		.loc 1 728 19 view .LVU1075
 3053 0208 01E0     		b	.L144
 3054              	.LVL364:
 3055              	.L168:
 707:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3056              		.loc 1 707 14 view .LVU1076
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 94


 3057 020a 4046     		mov	r0, r8
 706:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3058              		.loc 1 706 14 view .LVU1077
 3059 020c 4746     		mov	r7, r8
 3060              	.LVL365:
 3061              	.L144:
 729:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 730:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 731:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 732:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr0 = xr;
 3062              		.loc 1 732 5 is_stmt 1 view .LVU1078
 733:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 3063              		.loc 1 733 5 view .LVU1079
 734:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.has_alpha) {
 3064              		.loc 1 734 5 view .LVU1080
 3065              		.loc 1 734 8 is_stmt 0 view .LVU1081
 3066 020e 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 3067              		.loc 1 734 7 view .LVU1082
 3068 0212 13F0020F 		tst	r3, #2
 3069 0216 33D0     		beq	.L145
 3070              	.LBB102:
 735:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_opa_t a0 = (a00 * xr + (a10 * (255 - xr))) >> 8;
 3071              		.loc 1 735 9 is_stmt 1 view .LVU1083
 3072              		.loc 1 735 47 is_stmt 0 view .LVU1084
 3073 0218 C5F1FF03 		rsb	r3, r5, #255
 3074              		.loc 1 735 40 view .LVU1085
 3075 021c 03FB08F1 		mul	r1, r3, r8
 3076              		.loc 1 735 33 view .LVU1086
 3077 0220 05FB0A11 		mla	r1, r5, r10, r1
 3078              		.loc 1 735 18 view .LVU1087
 3079 0224 C1F30721 		ubfx	r1, r1, #8, #8
 3080              	.LVL366:
 736:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_opa_t a1 = (a01 * xr + (a11 * (255 - xr))) >> 8;
 3081              		.loc 1 736 9 is_stmt 1 view .LVU1088
 3082              		.loc 1 736 40 is_stmt 0 view .LVU1089
 3083 0228 03FB00F3 		mul	r3, r3, r0
 3084              		.loc 1 736 33 view .LVU1090
 3085 022c 05FB0733 		mla	r3, r5, r7, r3
 3086              		.loc 1 736 18 view .LVU1091
 3087 0230 C3F30723 		ubfx	r3, r3, #8, #8
 3088              	.LVL367:
 737:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = (a0 * yr + (a1 * (255 - yr))) >> 8;
 3089              		.loc 1 737 9 is_stmt 1 view .LVU1092
 3090              		.loc 1 737 46 is_stmt 0 view .LVU1093
 3091 0234 C6F1FF02 		rsb	r2, r6, #255
 3092              		.loc 1 737 39 view .LVU1094
 3093 0238 02FB03F2 		mul	r2, r2, r3
 3094              		.loc 1 737 33 view .LVU1095
 3095 023c 06FB0122 		mla	r2, r6, r1, r2
 3096              		.loc 1 737 54 view .LVU1096
 3097 0240 1212     		asrs	r2, r2, #8
 3098              		.loc 1 737 22 view .LVU1097
 3099 0242 A275     		strb	r2, [r4, #22]
 738:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 739:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN && a1 <= LV_OPA_MIN) return false;
 3100              		.loc 1 739 9 is_stmt 1 view .LVU1098
 3101              		.loc 1 739 11 is_stmt 0 view .LVU1099
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 95


 3102 0244 0229     		cmp	r1, #2
 3103 0246 01D8     		bhi	.L146
 3104              		.loc 1 739 29 discriminator 1 view .LVU1100
 3105 0248 022B     		cmp	r3, #2
 3106 024a 7ED9     		bls	.L170
 3107              	.L146:
 740:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3108              		.loc 1 740 9 is_stmt 1 view .LVU1101
 3109              		.loc 1 740 11 is_stmt 0 view .LVU1102
 3110 024c 0229     		cmp	r1, #2
 3111 024e 00D8     		bhi	.L148
 3112              		.loc 1 740 33 view .LVU1103
 3113 0250 0026     		movs	r6, #0
 3114              	.LVL368:
 3115              	.L148:
 741:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a1 <= LV_OPA_MIN) yr = LV_OPA_COVER;
 3116              		.loc 1 741 9 is_stmt 1 view .LVU1104
 3117              		.loc 1 741 11 is_stmt 0 view .LVU1105
 3118 0252 022B     		cmp	r3, #2
 3119 0254 00D8     		bhi	.L149
 3120              		.loc 1 741 33 view .LVU1106
 3121 0256 FF26     		movs	r6, #255
 3122              	.LVL369:
 3123              	.L149:
 742:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a00 <= LV_OPA_MIN) xr0 = LV_OPA_TRANSP;
 3124              		.loc 1 742 9 is_stmt 1 view .LVU1107
 3125              		.loc 1 742 11 is_stmt 0 view .LVU1108
 3126 0258 BAF1020F 		cmp	r10, #2
 3127 025c 0ED9     		bls	.L173
 3128              	.LBE102:
 732:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t xr1 = xr;
 3129              		.loc 1 732 14 view .LVU1109
 3130 025e 2B46     		mov	r3, r5
 3131              	.LVL370:
 3132              	.L150:
 3133              	.LBB103:
 743:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3134              		.loc 1 743 9 is_stmt 1 view .LVU1110
 3135              		.loc 1 743 11 is_stmt 0 view .LVU1111
 3136 0260 B8F1020F 		cmp	r8, #2
 3137 0264 00D8     		bhi	.L151
 3138              		.loc 1 743 35 view .LVU1112
 3139 0266 FF23     		movs	r3, #255
 3140              	.LVL371:
 3141              	.L151:
 744:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a01 <= LV_OPA_MIN) xr1 = LV_OPA_TRANSP;
 3142              		.loc 1 744 9 is_stmt 1 view .LVU1113
 3143              		.loc 1 744 11 is_stmt 0 view .LVU1114
 3144 0268 022F     		cmp	r7, #2
 3145 026a 00D8     		bhi	.L152
 3146              		.loc 1 744 35 view .LVU1115
 3147 026c 0025     		movs	r5, #0
 3148              	.LVL372:
 3149              	.L152:
 745:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a11 <= LV_OPA_MIN) xr1 = LV_OPA_COVER;
 3150              		.loc 1 745 9 is_stmt 1 view .LVU1116
 3151              		.loc 1 745 11 is_stmt 0 view .LVU1117
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 96


 3152 026e 0228     		cmp	r0, #2
 3153 0270 09D8     		bhi	.L153
 3154              		.loc 1 745 35 view .LVU1118
 3155 0272 FF25     		movs	r5, #255
 3156              	.LVL373:
 3157              		.loc 1 745 35 view .LVU1119
 3158 0274 07E0     		b	.L153
 3159              	.LVL374:
 3160              	.L169:
 3161              		.loc 1 745 35 view .LVU1120
 3162              	.LBE103:
 707:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3163              		.loc 1 707 14 view .LVU1121
 3164 0276 4046     		mov	r0, r8
 706:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_opa_t a11 = 0;
 3165              		.loc 1 706 14 view .LVU1122
 3166 0278 4746     		mov	r7, r8
 3167 027a C8E7     		b	.L144
 3168              	.LVL375:
 3169              	.L173:
 3170              	.LBB104:
 742:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3171              		.loc 1 742 35 view .LVU1123
 3172 027c 0023     		movs	r3, #0
 3173              	.LVL376:
 742:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3174              		.loc 1 742 35 view .LVU1124
 3175 027e EFE7     		b	.L150
 3176              	.LVL377:
 3177              	.L145:
 742:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a10 <= LV_OPA_MIN) xr0 = LV_OPA_COVER;
 3178              		.loc 1 742 35 view .LVU1125
 3179              	.LBE104:
 746:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 747:lvgl/lvgl/src/draw/lv_img_buf.c ****     else {
 748:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr0 = xr;
 3180              		.loc 1 748 9 is_stmt 1 view .LVU1126
 749:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr1 = xr;
 3181              		.loc 1 749 9 view .LVU1127
 750:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = LV_OPA_COVER;
 3182              		.loc 1 750 9 view .LVU1128
 3183              		.loc 1 750 22 is_stmt 0 view .LVU1129
 3184 0280 FF23     		movs	r3, #255
 3185 0282 A375     		strb	r3, [r4, #22]
 748:lvgl/lvgl/src/draw/lv_img_buf.c ****         xr1 = xr;
 3186              		.loc 1 748 13 view .LVU1130
 3187 0284 2B46     		mov	r3, r5
 3188              	.LVL378:
 3189              	.L153:
 751:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 752:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 753:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c0;
 3190              		.loc 1 753 5 is_stmt 1 view .LVU1131
 754:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(xr0 == LV_OPA_TRANSP) c0 = c01;
 3191              		.loc 1 754 5 view .LVU1132
 3192              		.loc 1 754 7 is_stmt 0 view .LVU1133
 3193 0286 5BB9     		cbnz	r3, .L154
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 97


 3194              		.loc 1 754 30 is_stmt 1 discriminator 1 view .LVU1134
 3195              		.loc 1 754 33 is_stmt 0 discriminator 1 view .LVU1135
 3196 0288 BDF81C20 		ldrh	r2, [sp, #28]
 3197              	.LVL379:
 3198              	.L155:
 755:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xr0 == LV_OPA_COVER) c0 = c00;
 756:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 757:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 758:lvgl/lvgl/src/draw/lv_img_buf.c ****     lv_color_t c1;
 3199              		.loc 1 758 5 is_stmt 1 view .LVU1136
 759:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(xr1 == LV_OPA_TRANSP) c1 = c11;
 3200              		.loc 1 759 5 view .LVU1137
 3201              		.loc 1 759 7 is_stmt 0 view .LVU1138
 3202 028c 2DBB     		cbnz	r5, .L157
 3203              		.loc 1 759 30 is_stmt 1 discriminator 1 view .LVU1139
 3204              		.loc 1 759 33 is_stmt 0 discriminator 1 view .LVU1140
 3205 028e BDF81430 		ldrh	r3, [sp, #20]
 3206              	.LVL380:
 3207              	.L158:
 760:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xr1 == LV_OPA_COVER) c1 = c10;
 761:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 762:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 763:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(yr == LV_OPA_TRANSP) dsc->res.color = c1;
 3208              		.loc 1 763 5 is_stmt 1 view .LVU1141
 3209              		.loc 1 763 7 is_stmt 0 view .LVU1142
 3210 0292 002E     		cmp	r6, #0
 3211 0294 3DD1     		bne	.L160
 3212              		.loc 1 763 29 is_stmt 1 discriminator 1 view .LVU1143
 3213              	.LVL381:
 3214              		.loc 1 763 44 is_stmt 0 discriminator 1 view .LVU1144
 3215 0296 A382     		strh	r3, [r4, #20]	@ movhi
 764:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(yr == LV_OPA_COVER) dsc->res.color = c0;
 765:lvgl/lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 766:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 767:lvgl/lvgl/src/draw/lv_img_buf.c ****     return true;
 3216              		.loc 1 767 12 discriminator 1 view .LVU1145
 3217 0298 0120     		movs	r0, #1
 3218              	.LVL382:
 3219              	.L147:
 768:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 3220              		.loc 1 768 1 view .LVU1146
 3221 029a 09B0     		add	sp, sp, #36
 3222              	.LCFI24:
 3223              		.cfi_remember_state
 3224              		.cfi_def_cfa_offset 36
 3225              		@ sp needed
 3226 029c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3227              	.LVL383:
 3228              	.L154:
 3229              	.LCFI25:
 3230              		.cfi_restore_state
 755:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3231              		.loc 1 755 10 is_stmt 1 view .LVU1147
 755:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3232              		.loc 1 755 12 is_stmt 0 view .LVU1148
 3233 02a0 FF2B     		cmp	r3, #255
 3234 02a2 17D0     		beq	.L179
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 98


 756:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3235              		.loc 1 756 10 is_stmt 1 view .LVU1149
 3236              	.LVL384:
 3237              	.LBB105:
 3238              	.LBI105:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3239              		.loc 2 459 48 view .LVU1150
 3240              	.LBB106:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3241              		.loc 2 461 5 view .LVU1151
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3242              		.loc 2 465 5 view .LVU1152
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3243              		.loc 2 465 17 is_stmt 0 view .LVU1153
 3244 02a4 0433     		adds	r3, r3, #4
 3245              	.LVL385:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3246              		.loc 2 466 5 is_stmt 1 view .LVU1154
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3247              		.loc 2 466 42 is_stmt 0 view .LVU1155
 3248 02a6 BDF81C20 		ldrh	r2, [sp, #28]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3249              		.loc 2 466 19 view .LVU1156
 3250 02aa 42EA0242 		orr	r2, r2, r2, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3251              		.loc 2 466 14 view .LVU1157
 3252 02ae 2848     		ldr	r0, .L182
 3253              	.LVL386:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3254              		.loc 2 466 14 view .LVU1158
 3255 02b0 0240     		ands	r2, r2, r0
 3256              	.LVL387:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3257              		.loc 2 467 5 is_stmt 1 view .LVU1159
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3258              		.loc 2 467 42 is_stmt 0 view .LVU1160
 3259 02b2 BDF80670 		ldrh	r7, [sp, #6]
 3260              	.LVL388:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3261              		.loc 2 467 42 view .LVU1161
 3262 02b6 B9B2     		uxth	r1, r7
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3263              		.loc 2 467 19 view .LVU1162
 3264 02b8 41EA0741 		orr	r1, r1, r7, lsl #16
 3265              	.LVL389:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3266              		.loc 2 467 14 view .LVU1163
 3267 02bc 0140     		ands	r1, r1, r0
 3268              	.LVL390:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3269              		.loc 2 468 5 is_stmt 1 view .LVU1164
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3270              		.loc 2 468 30 is_stmt 0 view .LVU1165
 3271 02be 891A     		subs	r1, r1, r2
 3272              	.LVL391:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3273              		.loc 2 468 36 view .LVU1166
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 99


 3274 02c0 C3F3C703 		ubfx	r3, r3, #3, #8
 3275              	.LVL392:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3276              		.loc 2 468 36 view .LVU1167
 3277 02c4 01FB03F3 		mul	r3, r1, r3
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3278              		.loc 2 468 49 view .LVU1168
 3279 02c8 02EB5312 		add	r2, r2, r3, lsr #5
 3280              	.LVL393:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3281              		.loc 2 468 14 view .LVU1169
 3282 02cc 0240     		ands	r2, r2, r0
 3283              	.LVL394:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3284              		.loc 2 469 5 is_stmt 1 view .LVU1170
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3285              		.loc 2 484 5 view .LVU1171
 3286 02ce 42EA1242 		orr	r2, r2, r2, lsr #16
 3287              	.LVL395:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3288              		.loc 2 484 5 is_stmt 0 view .LVU1172
 3289 02d2 DBE7     		b	.L155
 3290              	.LVL396:
 3291              	.L179:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3292              		.loc 2 484 5 view .LVU1173
 3293              	.LBE106:
 3294              	.LBE105:
 755:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3295              		.loc 1 755 34 is_stmt 1 discriminator 1 view .LVU1174
 755:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c0 = lv_color_mix(c00, c01, xr0);
 3296              		.loc 1 755 37 is_stmt 0 discriminator 1 view .LVU1175
 3297 02d4 BDF80620 		ldrh	r2, [sp, #6]
 3298 02d8 D8E7     		b	.L155
 3299              	.LVL397:
 3300              	.L157:
 760:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3301              		.loc 1 760 10 is_stmt 1 view .LVU1176
 760:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3302              		.loc 1 760 12 is_stmt 0 view .LVU1177
 3303 02da FF2D     		cmp	r5, #255
 3304 02dc 16D0     		beq	.L180
 761:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3305              		.loc 1 761 10 is_stmt 1 view .LVU1178
 3306              	.LVL398:
 3307              	.LBB107:
 3308              	.LBI107:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3309              		.loc 2 459 48 view .LVU1179
 3310              	.LBB108:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3311              		.loc 2 461 5 view .LVU1180
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3312              		.loc 2 465 5 view .LVU1181
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3313              		.loc 2 465 17 is_stmt 0 view .LVU1182
 3314 02de 0435     		adds	r5, r5, #4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 100


 3315              	.LVL399:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3316              		.loc 2 466 5 is_stmt 1 view .LVU1183
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3317              		.loc 2 466 42 is_stmt 0 view .LVU1184
 3318 02e0 BDF81430 		ldrh	r3, [sp, #20]
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3319              		.loc 2 466 19 view .LVU1185
 3320 02e4 43EA0343 		orr	r3, r3, r3, lsl #16
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3321              		.loc 2 466 14 view .LVU1186
 3322 02e8 1948     		ldr	r0, .L182
 3323 02ea 0340     		ands	r3, r3, r0
 3324              	.LVL400:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3325              		.loc 2 467 5 is_stmt 1 view .LVU1187
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3326              		.loc 2 467 42 is_stmt 0 view .LVU1188
 3327 02ec BDF81810 		ldrh	r1, [sp, #24]
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3328              		.loc 2 467 19 view .LVU1189
 3329 02f0 41EA0141 		orr	r1, r1, r1, lsl #16
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3330              		.loc 2 467 14 view .LVU1190
 3331 02f4 0140     		ands	r1, r1, r0
 3332              	.LVL401:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3333              		.loc 2 468 5 is_stmt 1 view .LVU1191
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3334              		.loc 2 468 30 is_stmt 0 view .LVU1192
 3335 02f6 C91A     		subs	r1, r1, r3
 3336              	.LVL402:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3337              		.loc 2 468 36 view .LVU1193
 3338 02f8 C5F3C705 		ubfx	r5, r5, #3, #8
 3339              	.LVL403:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3340              		.loc 2 468 36 view .LVU1194
 3341 02fc 01FB05F5 		mul	r5, r1, r5
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3342              		.loc 2 468 49 view .LVU1195
 3343 0300 03EB5513 		add	r3, r3, r5, lsr #5
 3344              	.LVL404:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3345              		.loc 2 468 14 view .LVU1196
 3346 0304 0340     		ands	r3, r3, r0
 3347              	.LVL405:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3348              		.loc 2 469 5 is_stmt 1 view .LVU1197
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3349              		.loc 2 484 5 view .LVU1198
 3350 0306 43EA1343 		orr	r3, r3, r3, lsr #16
 3351              	.LVL406:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3352              		.loc 2 484 5 is_stmt 0 view .LVU1199
 3353 030a C2E7     		b	.L158
 3354              	.LVL407:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 101


 3355              	.L180:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3356              		.loc 2 484 5 view .LVU1200
 3357              	.LBE108:
 3358              	.LBE107:
 760:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3359              		.loc 1 760 34 is_stmt 1 discriminator 1 view .LVU1201
 760:lvgl/lvgl/src/draw/lv_img_buf.c ****     else c1 = lv_color_mix(c10, c11, xr1);
 3360              		.loc 1 760 37 is_stmt 0 discriminator 1 view .LVU1202
 3361 030c BDF81830 		ldrh	r3, [sp, #24]
 3362 0310 BFE7     		b	.L158
 3363              	.LVL408:
 3364              	.L160:
 764:lvgl/lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3365              		.loc 1 764 10 is_stmt 1 view .LVU1203
 764:lvgl/lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3366              		.loc 1 764 12 is_stmt 0 view .LVU1204
 3367 0312 FF2E     		cmp	r6, #255
 3368 0314 16D0     		beq	.L181
 765:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3369              		.loc 1 765 10 is_stmt 1 view .LVU1205
 3370              	.LVL409:
 3371              	.LBB109:
 3372              	.LBI109:
 459:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3373              		.loc 2 459 48 view .LVU1206
 3374              	.LBB110:
 461:lvgl/lvgl/src/draw/../misc/lv_color.h **** 
 3375              		.loc 2 461 5 view .LVU1207
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3376              		.loc 2 465 5 view .LVU1208
 465:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 3377              		.loc 2 465 17 is_stmt 0 view .LVU1209
 3378 0316 0436     		adds	r6, r6, #4
 3379              	.LVL410:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3380              		.loc 2 466 5 is_stmt 1 view .LVU1210
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3381              		.loc 2 466 42 is_stmt 0 view .LVU1211
 3382 0318 99B2     		uxth	r1, r3
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3383              		.loc 2 466 19 view .LVU1212
 3384 031a 41EA0343 		orr	r3, r1, r3, lsl #16
 3385              	.LVL411:
 466:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 3386              		.loc 2 466 14 view .LVU1213
 3387 031e 0C48     		ldr	r0, .L182
 3388 0320 0340     		ands	r3, r3, r0
 3389              	.LVL412:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3390              		.loc 2 467 5 is_stmt 1 view .LVU1214
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3391              		.loc 2 467 42 is_stmt 0 view .LVU1215
 3392 0322 91B2     		uxth	r1, r2
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3393              		.loc 2 467 19 view .LVU1216
 3394 0324 41EA0242 		orr	r2, r1, r2, lsl #16
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 102


 3395              	.LVL413:
 467:lvgl/lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 3396              		.loc 2 467 14 view .LVU1217
 3397 0328 0240     		ands	r2, r2, r0
 3398              	.LVL414:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3399              		.loc 2 468 5 is_stmt 1 view .LVU1218
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3400              		.loc 2 468 30 is_stmt 0 view .LVU1219
 3401 032a D21A     		subs	r2, r2, r3
 3402              	.LVL415:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3403              		.loc 2 468 36 view .LVU1220
 3404 032c C6F3C706 		ubfx	r6, r6, #3, #8
 3405              	.LVL416:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3406              		.loc 2 468 36 view .LVU1221
 3407 0330 02FB06F6 		mul	r6, r2, r6
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3408              		.loc 2 468 49 view .LVU1222
 3409 0334 03EB5613 		add	r3, r3, r6, lsr #5
 3410              	.LVL417:
 468:lvgl/lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 3411              		.loc 2 468 14 view .LVU1223
 3412 0338 0340     		ands	r3, r3, r0
 3413              	.LVL418:
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3414              		.loc 2 469 5 is_stmt 1 view .LVU1224
 469:lvgl/lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 3415              		.loc 2 469 16 is_stmt 0 view .LVU1225
 3416 033a 43EA1343 		orr	r3, r3, r3, lsr #16
 3417              	.LVL419:
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3418              		.loc 2 484 5 is_stmt 1 view .LVU1226
 484:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3419              		.loc 2 484 5 is_stmt 0 view .LVU1227
 3420              	.LBE110:
 3421              	.LBE109:
 765:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3422              		.loc 1 765 27 view .LVU1228
 3423 033e A382     		strh	r3, [r4, #20]	@ movhi
 767:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 3424              		.loc 1 767 12 view .LVU1229
 3425 0340 0120     		movs	r0, #1
 3426 0342 AAE7     		b	.L147
 3427              	.LVL420:
 3428              	.L181:
 764:lvgl/lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3429              		.loc 1 764 33 is_stmt 1 discriminator 1 view .LVU1230
 764:lvgl/lvgl/src/draw/lv_img_buf.c ****     else dsc->res.color = lv_color_mix(c0, c1, yr);
 3430              		.loc 1 764 48 is_stmt 0 discriminator 1 view .LVU1231
 3431 0344 A282     		strh	r2, [r4, #20]	@ movhi
 767:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 3432              		.loc 1 767 12 discriminator 1 view .LVU1232
 3433 0346 0120     		movs	r0, #1
 3434 0348 A7E7     		b	.L147
 3435              	.LVL421:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 103


 3436              	.L170:
 3437              	.LBB111:
 739:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3438              		.loc 1 739 57 view .LVU1233
 3439 034a 0020     		movs	r0, #0
 3440              	.LVL422:
 739:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(a0 <= LV_OPA_MIN) yr = LV_OPA_TRANSP;
 3441              		.loc 1 739 57 view .LVU1234
 3442 034c A5E7     		b	.L147
 3443              	.L183:
 3444 034e 00BF     		.align	2
 3445              	.L182:
 3446 0350 1FF8E007 		.word	132184095
 3447              	.LBE111:
 3448              		.cfi_endproc
 3449              	.LFE62:
 3451              		.section	.text._lv_img_buf_transform,"ax",%progbits
 3452              		.align	1
 3453              		.global	_lv_img_buf_transform
 3454              		.syntax unified
 3455              		.thumb
 3456              		.thumb_func
 3457              		.fpu fpv4-sp-d16
 3459              	_lv_img_buf_transform:
 3460              	.LVL423:
 3461              	.LFB61:
 570:lvgl/lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 3462              		.loc 1 570 1 is_stmt 1 view -0
 3463              		.cfi_startproc
 3464              		@ args = 0, pretend = 0, frame = 8
 3465              		@ frame_needed = 0, uses_anonymous_args = 0
 570:lvgl/lvgl/src/draw/lv_img_buf.c ****     const uint8_t * src_u8 = (const uint8_t *)dsc->cfg.src;
 3466              		.loc 1 570 1 is_stmt 0 view .LVU1236
 3467 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3468              	.LCFI26:
 3469              		.cfi_def_cfa_offset 36
 3470              		.cfi_offset 4, -36
 3471              		.cfi_offset 5, -32
 3472              		.cfi_offset 6, -28
 3473              		.cfi_offset 7, -24
 3474              		.cfi_offset 8, -20
 3475              		.cfi_offset 9, -16
 3476              		.cfi_offset 10, -12
 3477              		.cfi_offset 11, -8
 3478              		.cfi_offset 14, -4
 3479 0004 83B0     		sub	sp, sp, #12
 3480              	.LCFI27:
 3481              		.cfi_def_cfa_offset 48
 3482 0006 0446     		mov	r4, r0
 571:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3483              		.loc 1 571 5 is_stmt 1 view .LVU1237
 571:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3484              		.loc 1 571 21 is_stmt 0 view .LVU1238
 3485 0008 0068     		ldr	r0, [r0]
 3486              	.LVL424:
 574:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3487              		.loc 1 574 5 is_stmt 1 view .LVU1239
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 104


 574:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3488              		.loc 1 574 30 is_stmt 0 view .LVU1240
 3489 000a B4F90830 		ldrsh	r3, [r4, #8]
 574:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t yt = y - dsc->cfg.pivot_y;
 3490              		.loc 1 574 13 view .LVU1241
 3491 000e CB1A     		subs	r3, r1, r3
 3492              	.LVL425:
 575:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3493              		.loc 1 575 5 is_stmt 1 view .LVU1242
 575:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3494              		.loc 1 575 30 is_stmt 0 view .LVU1243
 3495 0010 B4F90A70 		ldrsh	r7, [r4, #10]
 575:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3496              		.loc 1 575 13 view .LVU1244
 3497 0014 D21B     		subs	r2, r2, r7
 3498              	.LVL426:
 577:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t ys;
 3499              		.loc 1 577 5 is_stmt 1 view .LVU1245
 578:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->cfg.zoom == LV_IMG_ZOOM_NONE) {
 3500              		.loc 1 578 5 view .LVU1246
 579:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 3501              		.loc 1 579 5 view .LVU1247
 579:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 3502              		.loc 1 579 16 is_stmt 0 view .LVU1248
 3503 0016 E789     		ldrh	r7, [r4, #14]
 579:lvgl/lvgl/src/draw/lv_img_buf.c ****         /*Get the source pixel from the upscaled image*/
 3504              		.loc 1 579 7 view .LVU1249
 3505 0018 B7F5807F 		cmp	r7, #256
 3506 001c 0FD0     		beq	.L204
 584:lvgl/lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3507              		.loc 1 584 10 is_stmt 1 view .LVU1250
 584:lvgl/lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3508              		.loc 1 584 21 is_stmt 0 view .LVU1251
 3509 001e B4F90C10 		ldrsh	r1, [r4, #12]
 3510              	.LVL427:
 584:lvgl/lvgl/src/draw/lv_img_buf.c ****         xt = (int32_t)((int32_t)xt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3511              		.loc 1 584 12 view .LVU1252
 3512 0022 0029     		cmp	r1, #0
 3513 0024 41D1     		bne	.L187
 585:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3514              		.loc 1 585 9 is_stmt 1 view .LVU1253
 585:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3515              		.loc 1 585 46 is_stmt 0 view .LVU1254
 3516 0026 A76B     		ldr	r7, [r4, #56]
 585:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3517              		.loc 1 585 36 view .LVU1255
 3518 0028 03FB07F3 		mul	r3, r3, r7
 3519              	.LVL428:
 586:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 3520              		.loc 1 586 9 is_stmt 1 view .LVU1256
 586:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = xt + dsc->tmp.pivot_x_256;
 3521              		.loc 1 586 36 is_stmt 0 view .LVU1257
 3522 002c 02FB07F2 		mul	r2, r2, r7
 3523              	.LVL429:
 587:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 3524              		.loc 1 587 9 is_stmt 1 view .LVU1258
 587:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 105


 3525              		.loc 1 587 27 is_stmt 0 view .LVU1259
 3526 0030 656A     		ldr	r5, [r4, #36]
 587:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = yt + dsc->tmp.pivot_y_256;
 3527              		.loc 1 587 12 view .LVU1260
 3528 0032 05EB6315 		add	r5, r5, r3, asr #5
 3529              	.LVL430:
 588:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3530              		.loc 1 588 9 is_stmt 1 view .LVU1261
 588:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3531              		.loc 1 588 27 is_stmt 0 view .LVU1262
 3532 0036 A66A     		ldr	r6, [r4, #40]
 588:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3533              		.loc 1 588 12 view .LVU1263
 3534 0038 06EB6216 		add	r6, r6, r2, asr #5
 3535              	.LVL431:
 588:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3536              		.loc 1 588 12 view .LVU1264
 3537 003c 0FE0     		b	.L186
 3538              	.LVL432:
 3539              	.L204:
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3540              		.loc 1 581 9 is_stmt 1 view .LVU1265
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3541              		.loc 1 581 24 is_stmt 0 view .LVU1266
 3542 003e 276B     		ldr	r7, [r4, #48]
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3543              		.loc 1 581 31 view .LVU1267
 3544 0040 03FB07F5 		mul	r5, r3, r7
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3545              		.loc 1 581 46 view .LVU1268
 3546 0044 E66A     		ldr	r6, [r4, #44]
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3547              		.loc 1 581 36 view .LVU1269
 3548 0046 02FB1651 		mls	r1, r2, r6, r5
 3549              	.LVL433:
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3550              		.loc 1 581 105 view .LVU1270
 3551 004a 656A     		ldr	r5, [r4, #36]
 581:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT - 8)) + dsc
 3552              		.loc 1 581 12 view .LVU1271
 3553 004c 05EBA105 		add	r5, r5, r1, asr #2
 3554              	.LVL434:
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3555              		.loc 1 582 9 is_stmt 1 view .LVU1272
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3556              		.loc 1 582 53 is_stmt 0 view .LVU1273
 3557 0050 02FB07F2 		mul	r2, r2, r7
 3558              	.LVL435:
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3559              		.loc 1 582 36 view .LVU1274
 3560 0054 03FB0623 		mla	r3, r3, r6, r2
 3561              	.LVL436:
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3562              		.loc 1 582 105 view .LVU1275
 3563 0058 A66A     		ldr	r6, [r4, #40]
 582:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3564              		.loc 1 582 12 view .LVU1276
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 106


 3565 005a 06EBA306 		add	r6, r6, r3, asr #2
 3566              	.LVL437:
 3567              	.L186:
 598:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 3568              		.loc 1 598 5 is_stmt 1 view .LVU1277
 598:lvgl/lvgl/src/draw/lv_img_buf.c ****     int32_t ys_int = ys >> 8;
 3569              		.loc 1 598 13 is_stmt 0 view .LVU1278
 3570 005e 4FEA2528 		asr	r8, r5, #8
 3571              	.LVL438:
 599:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3572              		.loc 1 599 5 is_stmt 1 view .LVU1279
 599:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3573              		.loc 1 599 13 is_stmt 0 view .LVU1280
 3574 0062 3712     		asrs	r7, r6, #8
 3575              	.LVL439:
 601:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3576              		.loc 1 601 5 is_stmt 1 view .LVU1281
 601:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3577              		.loc 1 601 26 is_stmt 0 view .LVU1282
 3578 0064 B4F90430 		ldrsh	r3, [r4, #4]
 601:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3579              		.loc 1 601 7 view .LVU1283
 3580 0068 B3EB252F 		cmp	r3, r5, asr #8
 3581 006c 40F38780 		ble	.L198
 602:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3582              		.loc 1 602 10 is_stmt 1 view .LVU1284
 602:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3583              		.loc 1 602 12 is_stmt 0 view .LVU1285
 3584 0070 B8F1000F 		cmp	r8, #0
 3585 0074 C0F28780 		blt	.L199
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3586              		.loc 1 604 5 is_stmt 1 view .LVU1286
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3587              		.loc 1 604 26 is_stmt 0 view .LVU1287
 3588 0078 B4F90620 		ldrsh	r2, [r4, #6]
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3589              		.loc 1 604 7 view .LVU1288
 3590 007c BA42     		cmp	r2, r7
 3591 007e 40F38480 		ble	.L200
 605:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3592              		.loc 1 605 10 is_stmt 1 view .LVU1289
 605:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3593              		.loc 1 605 12 is_stmt 0 view .LVU1290
 3594 0082 002F     		cmp	r7, #0
 3595 0084 C0F28380 		blt	.L201
 607:lvgl/lvgl/src/draw/lv_img_buf.c ****     uint32_t pxi;
 3596              		.loc 1 607 5 is_stmt 1 view .LVU1291
 608:lvgl/lvgl/src/draw/lv_img_buf.c ****     if(dsc->tmp.native_color) {
 3597              		.loc 1 608 5 view .LVU1292
 609:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3598              		.loc 1 609 5 view .LVU1293
 609:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3599              		.loc 1 609 8 is_stmt 0 view .LVU1294
 3600 0088 94F83420 		ldrb	r2, [r4, #52]	@ zero_extendqisi2
 609:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->tmp.has_alpha == 0) {
 3601              		.loc 1 609 7 view .LVU1295
 3602 008c 12F00409 		ands	r9, r2, #4
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 107


 3603 0090 51D0     		beq	.L189
 610:lvgl/lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 3604              		.loc 1 610 9 is_stmt 1 view .LVU1296
 610:lvgl/lvgl/src/draw/lv_img_buf.c ****             px_size = LV_COLOR_SIZE >> 3;
 3605              		.loc 1 610 11 is_stmt 0 view .LVU1297
 3606 0092 12F0020F 		tst	r2, #2
 3607 0096 36D1     		bne	.L190
 611:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3608              		.loc 1 611 13 is_stmt 1 view .LVU1298
 3609              	.LVL440:
 613:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 3610              		.loc 1 613 13 view .LVU1299
 613:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size);
 3611              		.loc 1 613 57 is_stmt 0 view .LVU1300
 3612 0098 07FB0383 		mla	r3, r7, r3, r8
 3613 009c 5900     		lsls	r1, r3, #1
 3614              	.LVL441:
 614:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3615              		.loc 1 614 13 is_stmt 1 view .LVU1301
 614:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3616              		.loc 1 614 29 is_stmt 0 view .LVU1302
 3617 009e 04F1140C 		add	ip, r4, #20
 614:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3618              		.loc 1 614 46 view .LVU1303
 3619 00a2 00EB4303 		add	r3, r0, r3, lsl #1
 3620              	.LVL442:
 3621              	.LBB112:
 3622              	.LBI112:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 3623              		.loc 3 201 44 is_stmt 1 view .LVU1304
 3624              	.LBB113:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3625              		.loc 3 203 5 view .LVU1305
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 3626              		.loc 3 204 5 view .LVU1306
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3627              		.loc 3 206 5 view .LVU1307
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3628              		.loc 3 206 10 is_stmt 0 view .LVU1308
 3629 00a6 0222     		movs	r2, #2
 3630 00a8 1CE0     		b	.L191
 3631              	.LVL443:
 3632              	.L187:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3633              		.loc 3 206 10 view .LVU1309
 3634              	.LBE113:
 3635              	.LBE112:
 591:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3636              		.loc 1 591 9 is_stmt 1 view .LVU1310
 591:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3637              		.loc 1 591 46 is_stmt 0 view .LVU1311
 3638 00aa A66B     		ldr	r6, [r4, #56]
 591:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
 3639              		.loc 1 591 36 view .LVU1312
 3640 00ac 03FB06F3 		mul	r3, r3, r6
 3641              	.LVL444:
 591:lvgl/lvgl/src/draw/lv_img_buf.c ****         yt = (int32_t)((int32_t)yt * dsc->tmp.zoom_inv) >> _LV_ZOOM_INV_UPSCALE;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 108


 3642              		.loc 1 591 12 view .LVU1313
 3643 00b0 5B11     		asrs	r3, r3, #5
 3644              	.LVL445:
 592:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3645              		.loc 1 592 9 is_stmt 1 view .LVU1314
 592:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3646              		.loc 1 592 36 is_stmt 0 view .LVU1315
 3647 00b2 02FB06F2 		mul	r2, r2, r6
 3648              	.LVL446:
 592:lvgl/lvgl/src/draw/lv_img_buf.c ****         xs = ((dsc->tmp.cosma * xt - dsc->tmp.sinma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3649              		.loc 1 592 12 view .LVU1316
 3650 00b6 5211     		asrs	r2, r2, #5
 3651              	.LVL447:
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3652              		.loc 1 593 9 is_stmt 1 view .LVU1317
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3653              		.loc 1 593 24 is_stmt 0 view .LVU1318
 3654 00b8 276B     		ldr	r7, [r4, #48]
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3655              		.loc 1 593 31 view .LVU1319
 3656 00ba 03FB07F5 		mul	r5, r3, r7
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3657              		.loc 1 593 46 view .LVU1320
 3658 00be E66A     		ldr	r6, [r4, #44]
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3659              		.loc 1 593 36 view .LVU1321
 3660 00c0 02FB1651 		mls	r1, r2, r6, r5
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3661              		.loc 1 593 101 view .LVU1322
 3662 00c4 656A     		ldr	r5, [r4, #36]
 593:lvgl/lvgl/src/draw/lv_img_buf.c ****         ys = ((dsc->tmp.sinma * xt + dsc->tmp.cosma * yt) >> (_LV_TRANSFORM_TRIGO_SHIFT)) + dsc->tm
 3663              		.loc 1 593 12 view .LVU1323
 3664 00c6 05EBA125 		add	r5, r5, r1, asr #10
 3665              	.LVL448:
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3666              		.loc 1 594 9 is_stmt 1 view .LVU1324
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3667              		.loc 1 594 53 is_stmt 0 view .LVU1325
 3668 00ca 02FB07F2 		mul	r2, r2, r7
 3669              	.LVL449:
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3670              		.loc 1 594 36 view .LVU1326
 3671 00ce 03FB0622 		mla	r2, r3, r6, r2
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3672              		.loc 1 594 101 view .LVU1327
 3673 00d2 A66A     		ldr	r6, [r4, #40]
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3674              		.loc 1 594 12 view .LVU1328
 3675 00d4 06EBA226 		add	r6, r6, r2, asr #10
 3676              	.LVL450:
 594:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3677              		.loc 1 594 12 view .LVU1329
 3678 00d8 C1E7     		b	.L186
 3679              	.LVL451:
 3680              	.L192:
 3681              	.LBB115:
 3682              	.LBB114:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 109


 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3683              		.loc 3 207 9 is_stmt 1 view .LVU1330
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3684              		.loc 3 207 15 is_stmt 0 view .LVU1331
 3685 00da 13F8010B 		ldrb	r0, [r3], #1	@ zero_extendqisi2
 3686              	.LVL452:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3687              		.loc 3 207 13 view .LVU1332
 3688 00de 0CF8010B 		strb	r0, [ip], #1
 3689              	.LVL453:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 3690              		.loc 3 208 9 is_stmt 1 view .LVU1333
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 3691              		.loc 3 209 9 view .LVU1334
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 3692              		.loc 3 210 9 view .LVU1335
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 3693              		.loc 3 210 12 is_stmt 0 view .LVU1336
 3694 00e2 013A     		subs	r2, r2, #1
 3695              	.LVL454:
 3696              	.L191:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3697              		.loc 3 206 10 is_stmt 1 view .LVU1337
 3698 00e4 002A     		cmp	r2, #0
 3699 00e6 F8D1     		bne	.L192
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3700              		.loc 3 206 10 is_stmt 0 view .LVU1338
 3701              	.LBE114:
 3702              	.LBE115:
 611:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3703              		.loc 1 611 21 view .LVU1339
 3704 00e8 4FF00209 		mov	r9, #2
 3705              	.LVL455:
 3706              	.L193:
 630:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3707              		.loc 1 630 5 is_stmt 1 view .LVU1340
 630:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3708              		.loc 1 630 8 is_stmt 0 view .LVU1341
 3709 00ec 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 630:lvgl/lvgl/src/draw/lv_img_buf.c ****         lv_color_t ct = LV_COLOR_CHROMA_KEY;
 3710              		.loc 1 630 7 view .LVU1342
 3711 00f0 13F0010F 		tst	r3, #1
 3712 00f4 03D0     		beq	.L196
 3713              	.LBB116:
 631:lvgl/lvgl/src/draw/lv_img_buf.c ****         if(dsc->res.color.full == ct.full) return false;
 3714              		.loc 1 631 9 is_stmt 1 view .LVU1343
 3715              	.LVL456:
 3716              	.LBB117:
 3717              	.LBI117:
 620:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3718              		.loc 2 620 26 view .LVU1344
 3719              	.LBE117:
 3720              	.LBE116:
 622:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3721              		.loc 2 622 5 view .LVU1345
 3722              	.LBB121:
 3723              	.LBB120:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 110


 3724              	.LBB118:
 3725              	.LBI118:
 615:lvgl/lvgl/src/draw/../misc/lv_color.h **** {
 3726              		.loc 2 615 26 view .LVU1346
 3727              	.LBB119:
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3728              		.loc 2 617 5 view .LVU1347
 617:lvgl/lvgl/src/draw/../misc/lv_color.h **** }
 3729              		.loc 2 617 5 is_stmt 0 view .LVU1348
 3730              	.LBE119:
 3731              	.LBE118:
 3732              	.LBE120:
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3733              		.loc 1 632 9 is_stmt 1 view .LVU1349
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3734              		.loc 1 632 26 is_stmt 0 view .LVU1350
 3735 00f6 A38A     		ldrh	r3, [r4, #20]
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3736              		.loc 1 632 11 view .LVU1351
 3737 00f8 B3F5FC6F 		cmp	r3, #2016
 3738 00fc 30D0     		beq	.L205
 3739              	.L196:
 3740              	.LBE121:
 635:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3741              		.loc 1 635 5 is_stmt 1 view .LVU1352
 635:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3742              		.loc 1 635 16 is_stmt 0 view .LVU1353
 3743 00fe E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 635:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3744              		.loc 1 635 7 view .LVU1354
 3745 0100 83BB     		cbnz	r3, .L206
 635:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3746              		.loc 1 635 44 view .LVU1355
 3747 0102 0120     		movs	r0, #1
 3748 0104 3CE0     		b	.L188
 3749              	.LVL457:
 3750              	.L190:
 617:lvgl/lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 3751              		.loc 1 617 13 is_stmt 1 view .LVU1356
 618:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 3752              		.loc 1 618 13 view .LVU1357
 618:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 3753              		.loc 1 618 57 is_stmt 0 view .LVU1358
 3754 0106 07FB0383 		mla	r3, r7, r3, r8
 3755 010a 03EB4303 		add	r3, r3, r3, lsl #1
 618:lvgl/lvgl/src/draw/lv_img_buf.c ****             lv_memcpy_small(&dsc->res.color, &src_u8[pxi], px_size - 1);
 3756              		.loc 1 618 21 view .LVU1359
 3757 010e 1946     		mov	r1, r3
 3758              	.LVL458:
 619:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3759              		.loc 1 619 13 is_stmt 1 view .LVU1360
 619:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3760              		.loc 1 619 29 is_stmt 0 view .LVU1361
 3761 0110 04F1140E 		add	lr, r4, #20
 619:lvgl/lvgl/src/draw/lv_img_buf.c ****             dsc->res.opa = src_u8[pxi + px_size - 1];
 3762              		.loc 1 619 46 view .LVU1362
 3763 0114 00EB030C 		add	ip, r0, r3
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 111


 3764              	.LVL459:
 3765              	.LBB122:
 3766              	.LBI122:
 201:lvgl/lvgl/src/draw/../misc/lv_mem.h **** {
 3767              		.loc 3 201 44 is_stmt 1 view .LVU1363
 3768              	.LBB123:
 203:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 3769              		.loc 3 203 5 view .LVU1364
 204:lvgl/lvgl/src/draw/../misc/lv_mem.h **** 
 3770              		.loc 3 204 5 view .LVU1365
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3771              		.loc 3 206 5 view .LVU1366
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3772              		.loc 3 206 10 is_stmt 0 view .LVU1367
 3773 0118 0222     		movs	r2, #2
 3774 011a 04E0     		b	.L194
 3775              	.LVL460:
 3776              	.L195:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3777              		.loc 3 207 9 is_stmt 1 view .LVU1368
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3778              		.loc 3 207 15 is_stmt 0 view .LVU1369
 3779 011c 1CF8019B 		ldrb	r9, [ip], #1	@ zero_extendqisi2
 3780              	.LVL461:
 207:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 3781              		.loc 3 207 13 view .LVU1370
 3782 0120 0EF8019B 		strb	r9, [lr], #1
 3783              	.LVL462:
 208:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 3784              		.loc 3 208 9 is_stmt 1 view .LVU1371
 209:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         len--;
 3785              		.loc 3 209 9 view .LVU1372
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 3786              		.loc 3 210 9 view .LVU1373
 210:lvgl/lvgl/src/draw/../misc/lv_mem.h ****     }
 3787              		.loc 3 210 12 is_stmt 0 view .LVU1374
 3788 0124 013A     		subs	r2, r2, #1
 3789              	.LVL463:
 3790              	.L194:
 206:lvgl/lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 3791              		.loc 3 206 10 is_stmt 1 view .LVU1375
 3792 0126 002A     		cmp	r2, #0
 3793 0128 F8D1     		bne	.L195
 3794              		.loc 3 213 5 view .LVU1376
 3795              	.LVL464:
 3796              		.loc 3 213 5 is_stmt 0 view .LVU1377
 3797              	.LBE123:
 3798              	.LBE122:
 620:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3799              		.loc 1 620 13 is_stmt 1 view .LVU1378
 620:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3800              		.loc 1 620 34 is_stmt 0 view .LVU1379
 3801 012a 0344     		add	r3, r3, r0
 3802 012c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 620:lvgl/lvgl/src/draw/lv_img_buf.c ****         }
 3803              		.loc 1 620 26 view .LVU1380
 3804 012e A375     		strb	r3, [r4, #22]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 112


 617:lvgl/lvgl/src/draw/lv_img_buf.c ****             pxi     = dsc->cfg.src_w * ys_int * px_size + xs_int * px_size;
 3805              		.loc 1 617 21 view .LVU1381
 3806 0130 4FF00309 		mov	r9, #3
 3807 0134 DAE7     		b	.L193
 3808              	.LVL465:
 3809              	.L189:
 624:lvgl/lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 3810              		.loc 1 624 9 is_stmt 1 view .LVU1382
 625:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.color = lv_img_buf_get_px_color(&dsc->tmp.img_dsc, xs_int, ys_int, dsc->cfg.color)
 3811              		.loc 1 625 9 view .LVU1383
 626:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3812              		.loc 1 626 9 view .LVU1384
 626:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3813              		.loc 1 626 26 is_stmt 0 view .LVU1385
 3814 0136 04F1180A 		add	r10, r4, #24
 3815 013a 0FFA88F1 		sxth	r1, r8
 3816 013e 0FFA87FB 		sxth	fp, r7
 3817 0142 238A     		ldrh	r3, [r4, #16]
 3818 0144 5A46     		mov	r2, fp
 3819 0146 0191     		str	r1, [sp, #4]
 3820 0148 5046     		mov	r0, r10
 3821              	.LVL466:
 626:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3822              		.loc 1 626 26 view .LVU1386
 3823 014a FFF7FEFF 		bl	lv_img_buf_get_px_color
 3824              	.LVL467:
 626:lvgl/lvgl/src/draw/lv_img_buf.c ****         dsc->res.opa = lv_img_buf_get_px_alpha(&dsc->tmp.img_dsc, xs_int, ys_int);
 3825              		.loc 1 626 26 view .LVU1387
 3826 014e A082     		strh	r0, [r4, #20]	@ movhi
 627:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3827              		.loc 1 627 9 is_stmt 1 view .LVU1388
 627:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3828              		.loc 1 627 24 is_stmt 0 view .LVU1389
 3829 0150 5A46     		mov	r2, fp
 3830 0152 0199     		ldr	r1, [sp, #4]
 3831 0154 5046     		mov	r0, r10
 3832 0156 FFF7FEFF 		bl	lv_img_buf_get_px_alpha
 3833              	.LVL468:
 627:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3834              		.loc 1 627 22 view .LVU1390
 3835 015a A075     		strb	r0, [r4, #22]
 624:lvgl/lvgl/src/draw/lv_img_buf.c ****         px_size = 0;    /*unused*/
 3836              		.loc 1 624 13 view .LVU1391
 3837 015c 0021     		movs	r1, #0
 3838 015e C5E7     		b	.L193
 3839              	.LVL469:
 3840              	.L205:
 3841              	.LBB124:
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3842              		.loc 1 632 44 is_stmt 1 discriminator 1 view .LVU1392
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3843              		.loc 1 632 51 is_stmt 0 discriminator 1 view .LVU1393
 3844 0160 0020     		movs	r0, #0
 3845 0162 0DE0     		b	.L188
 3846              	.L206:
 632:lvgl/lvgl/src/draw/lv_img_buf.c ****     }
 3847              		.loc 1 632 51 discriminator 1 view .LVU1394
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 113


 3848              	.LBE124:
 637:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 3849              		.loc 1 637 5 is_stmt 1 view .LVU1395
 637:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys = ys;
 3850              		.loc 1 637 17 is_stmt 0 view .LVU1396
 3851 0164 A587     		strh	r5, [r4, #60]	@ movhi
 638:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 3852              		.loc 1 638 5 is_stmt 1 view .LVU1397
 638:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.xs_int = xs_int;
 3853              		.loc 1 638 17 is_stmt 0 view .LVU1398
 3854 0166 E687     		strh	r6, [r4, #62]	@ movhi
 639:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 3855              		.loc 1 639 5 is_stmt 1 view .LVU1399
 639:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.ys_int = ys_int;
 3856              		.loc 1 639 21 is_stmt 0 view .LVU1400
 3857 0168 A4F84080 		strh	r8, [r4, #64]	@ movhi
 640:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 3858              		.loc 1 640 5 is_stmt 1 view .LVU1401
 640:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.pxi = pxi;
 3859              		.loc 1 640 21 is_stmt 0 view .LVU1402
 3860 016c A4F84270 		strh	r7, [r4, #66]	@ movhi
 641:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 3861              		.loc 1 641 5 is_stmt 1 view .LVU1403
 641:lvgl/lvgl/src/draw/lv_img_buf.c ****     dsc->tmp.px_size = px_size;
 3862              		.loc 1 641 18 is_stmt 0 view .LVU1404
 3863 0170 6164     		str	r1, [r4, #68]
 642:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3864              		.loc 1 642 5 is_stmt 1 view .LVU1405
 642:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3865              		.loc 1 642 22 is_stmt 0 view .LVU1406
 3866 0172 84F84890 		strb	r9, [r4, #72]
 644:lvgl/lvgl/src/draw/lv_img_buf.c ****     ret = _lv_img_buf_transform_anti_alias(dsc);
 3867              		.loc 1 644 5 is_stmt 1 view .LVU1407
 645:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3868              		.loc 1 645 5 view .LVU1408
 645:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3869              		.loc 1 645 11 is_stmt 0 view .LVU1409
 3870 0176 2046     		mov	r0, r4
 3871 0178 FFF7FEFF 		bl	_lv_img_buf_transform_anti_alias
 3872              	.LVL470:
 647:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 3873              		.loc 1 647 5 is_stmt 1 view .LVU1410
 647:lvgl/lvgl/src/draw/lv_img_buf.c **** }
 3874              		.loc 1 647 12 is_stmt 0 view .LVU1411
 3875 017c 00E0     		b	.L188
 3876              	.LVL471:
 3877              	.L198:
 601:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(xs_int < 0) return false;
 3878              		.loc 1 601 41 view .LVU1412
 3879 017e 0020     		movs	r0, #0
 3880              	.LVL472:
 3881              	.L188:
 648:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3882              		.loc 1 648 1 view .LVU1413
 3883 0180 03B0     		add	sp, sp, #12
 3884              	.LCFI28:
 3885              		.cfi_remember_state
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 114


 3886              		.cfi_def_cfa_offset 36
 3887              		@ sp needed
 3888 0182 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3889              	.LVL473:
 3890              	.L199:
 3891              	.LCFI29:
 3892              		.cfi_restore_state
 602:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3893              		.loc 1 602 32 view .LVU1414
 3894 0186 0020     		movs	r0, #0
 3895              	.LVL474:
 602:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3896              		.loc 1 602 32 view .LVU1415
 3897 0188 FAE7     		b	.L188
 3898              	.LVL475:
 3899              	.L200:
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3900              		.loc 1 604 41 view .LVU1416
 3901 018a 0020     		movs	r0, #0
 3902              	.LVL476:
 604:lvgl/lvgl/src/draw/lv_img_buf.c ****     else if(ys_int < 0) return false;
 3903              		.loc 1 604 41 view .LVU1417
 3904 018c F8E7     		b	.L188
 3905              	.LVL477:
 3906              	.L201:
 605:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3907              		.loc 1 605 32 view .LVU1418
 3908 018e 0020     		movs	r0, #0
 3909              	.LVL478:
 605:lvgl/lvgl/src/draw/lv_img_buf.c **** 
 3910              		.loc 1 605 32 view .LVU1419
 3911 0190 F6E7     		b	.L188
 3912              		.cfi_endproc
 3913              	.LFE61:
 3915              		.section	.rodata
 3916              		.align	2
 3917              		.set	.LANCHOR0,. + 0
 3918              	.LC0:
 3919 0000 00112233 		.ascii	"\000\021\"3DUfw\210\231\252\273\314\335\356\377"
 3919      44556677 
 3919      8899AABB 
 3919      CCDDEEFF 
 3920              		.section	.rodata.__func__.7859,"a"
 3921              		.align	2
 3922              		.set	.LANCHOR1,. + 0
 3925              	__func__.7859:
 3926 0000 6C765F69 		.ascii	"lv_img_buf_set_palette\000"
 3926      6D675F62 
 3926      75665F73 
 3926      65745F70 
 3926      616C6574 
 3927              		.text
 3928              	.Letext0:
 3929              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 3930              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3931              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3932              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 115


 3933              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3934              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 3935              		.file 10 "lvgl/lvgl/src/draw/../misc/lv_area.h"
 3936              		.file 11 "lvgl/lvgl/src/draw/lv_img_buf.h"
 3937              		.file 12 "lvgl/lvgl/src/draw/../misc/../font/lv_font.h"
 3938              		.file 13 "lvgl/lvgl/src/draw/../misc/lv_txt.h"
 3939              		.file 14 "lvgl/lvgl/src/draw/../misc/lv_math.h"
 3940              		.file 15 "lvgl/lvgl/src/draw/lv_draw_img.h"
 3941              		.file 16 "lvgl/lvgl/src/draw/../misc/lv_log.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 lv_img_buf.c
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:18     .text.lv_img_buf_get_px_color:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:26     .text.lv_img_buf_get_px_color:00000000 lv_img_buf_get_px_color
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:369    .text.lv_img_buf_get_px_alpha:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:376    .text.lv_img_buf_get_px_alpha:00000000 lv_img_buf_get_px_alpha
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:658    .text.lv_img_buf_get_px_alpha:000000f4 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:665    .text.lv_img_buf_set_px_alpha:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:672    .text.lv_img_buf_set_px_alpha:00000000 lv_img_buf_set_px_alpha
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:935    .text.lv_img_buf_set_px_color:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:942    .text.lv_img_buf_set_px_color:00000000 lv_img_buf_set_px_color
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1339   .rodata.lv_img_buf_set_palette.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1346   .text.lv_img_buf_set_palette:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1353   .text.lv_img_buf_set_palette:00000000 lv_img_buf_set_palette
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1527   .text.lv_img_buf_set_palette:000000a8 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1534   .text.lv_img_buf_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1541   .text.lv_img_buf_free:00000000 lv_img_buf_free
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1586   .text.lv_img_buf_get_img_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1593   .text.lv_img_buf_get_img_size:00000000 lv_img_buf_get_img_size
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1612   .text.lv_img_buf_get_img_size:0000000c $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1754   .text.lv_img_buf_alloc:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1761   .text.lv_img_buf_alloc:00000000 lv_img_buf_alloc
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1875   .text._lv_img_buf_transform_init:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1882   .text._lv_img_buf_transform_init:00000000 _lv_img_buf_transform_init
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2104   .text._lv_img_buf_transform_init:00000124 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2109   .text._lv_img_buf_get_transformed_area:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2116   .text._lv_img_buf_get_transformed_area:00000000 _lv_img_buf_get_transformed_area
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2511   .text._lv_img_buf_get_transformed_area:000001f0 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2516   .text._lv_img_buf_transform_anti_alias:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:2523   .text._lv_img_buf_transform_anti_alias:00000000 _lv_img_buf_transform_anti_alias
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3446   .text._lv_img_buf_transform_anti_alias:00000350 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3452   .text._lv_img_buf_transform:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3459   .text._lv_img_buf_transform:00000000 _lv_img_buf_transform
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3916   .rodata:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3921   .rodata.__func__.7859:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:3925   .rodata.__func__.7859:00000000 __func__.7859
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1623   .text.lv_img_buf_get_img_size:00000017 $d
C:\Users\gx\AppData\Local\Temp\ccB2Cm9j.s:1623   .text.lv_img_buf_get_img_size:00000018 $t

UNDEFINED SYMBOLS
lv_img_cf_get_px_size
_lv_log_add
lv_mem_free
lv_mem_alloc
lv_memset_00
lv_trigo_sin
lv_img_cf_is_chroma_keyed
lv_img_cf_has_alpha
