ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"GUIDEMO_ColorBar.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.GUIDEMO_ColorBar.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 5354656D 		.ascii	"STemWin features an integrated\012color management "
  20      57696E20 
  20      66656174 
  20      75726573 
  20      20616E20 
  21 0030 77686963 		.ascii	"which automatically\012finds the best available col"
  21      68206175 
  21      746F6D61 
  21      74696361 
  21      6C6C790A 
  22 0060 6F722066 		.ascii	"or for\012any logical color\000"
  22      6F720A61 
  22      6E79206C 
  22      6F676963 
  22      616C2063 
  23 0079 000000   		.align	2
  24              	.LC1:
  25 007c 436F6C6F 		.ascii	"Color bar\000"
  25      72206261 
  25      7200
  26 0086 0000     		.align	2
  27              	.LC2:
  28 0088 436F6C6F 		.ascii	"Color bars\000"
  28      72206261 
  28      727300
  29 0093 00       		.align	2
  30              	.LC3:
  31 0094 52656400 		.ascii	"Red\000"
  32              		.align	2
  33              	.LC4:
  34 0098 47726565 		.ascii	"Green\000"
  34      6E00
  35 009e 0000     		.align	2
  36              	.LC5:
  37 00a0 426C7565 		.ascii	"Blue\000"
  37      00
  38 00a5 000000   		.align	2
  39              	.LC6:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 2


  40 00a8 47726579 		.ascii	"Grey\000"
  40      00
  41 00ad 000000   		.align	2
  42              	.LC7:
  43 00b0 59656C6C 		.ascii	"Yellow\000"
  43      6F7700
  44 00b7 00       		.align	2
  45              	.LC8:
  46 00b8 4379616E 		.ascii	"Cyan\000"
  46      00
  47 00bd 000000   		.align	2
  48              	.LC9:
  49 00c0 4D616765 		.ascii	"Magenta\000"
  49      6E746100 
  50              		.align	2
  51              	.LC10:
  52 00c8 20627070 		.ascii	" bpp\000"
  52      00
  53 00cd 000000   		.align	2
  54              	.LC11:
  55 00d0 2C2000   		.ascii	", \000"
  56 00d3 00       		.align	2
  57              	.LC12:
  58 00d4 20636F6C 		.ascii	" colors\000"
  58      6F727300 
  59              		.section	.text.GUIDEMO_ColorBar,"ax",%progbits
  60              		.align	1
  61              		.global	GUIDEMO_ColorBar
  62              		.arch armv7e-m
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	GUIDEMO_ColorBar:
  69              	.LFB0:
  70              		.file 1 "emWin/GUI_Demo/GUIDEMO_ColorBar.c"
   1:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** /*********************************************************************
   2:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *          Portions COPYRIGHT 2017 STMicroelectronics                 *
   3:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *          Portions SEGGER Microcontroller GmbH & Co. KG             *
   4:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *        Solutions for real time microcontroller applications        *
   5:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** **********************************************************************
   6:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *                                                                    *
   7:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *        (c) 1996 - 2015  SEGGER Microcontroller GmbH & Co. KG       *
   8:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *                                                                    *
   9:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *        Internet: www.segger.com    Support:  support@segger.com    *
  10:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *                                                                    *
  11:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** **********************************************************************
  12:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  13:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** ** emWin V5.28 - Graphical user interface for embedded applications **
  14:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** All  Intellectual Property rights  in the Software belongs to  SEGGER.
  15:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** emWin is protected by  international copyright laws.  Knowledge of the
  16:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** source code may not be used to write a similar product.  This file may
  17:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** only be used in accordance with the following terms:
  18:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  19:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** The  software has  been licensed  to STMicroelectronics International
  20:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** N.V. a Dutch company with a Swiss branch and its headquarters in Plan-
  21:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** les-Ouates, Geneva, 39 Chemin du Champ des Filles, Switzerland for the
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 3


  22:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** purposes of creating libraries for ARM Cortex-M-based 32-bit microcon_
  23:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** troller products commercialized by Licensee only, sublicensed and dis_
  24:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** tributed under the terms and conditions of the End User License Agree_
  25:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** ment supplied by STMicroelectronics International N.V.
  26:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** Full source code is available at: www.segger.com
  27:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  28:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** We appreciate your understanding and fairness.
  29:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** ----------------------------------------------------------------------
  30:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** File        : GUIDEMO_ColorBar.c
  31:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** Purpose     : Draws color bars
  32:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** ----------------------------------------------------------------------
  33:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** */
  34:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  35:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** /**
  36:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   ******************************************************************************
  37:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * @file    GUIDEMO_ColorBar.c
  38:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * @author  MCD Application Team
  39:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * @brief   Draws color bars
  40:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   ******************************************************************************
  41:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * @attention
  42:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *
  43:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * <h2><center>&copy; Copyright © 2017 STMicroelectronics International N.V. 
  44:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * All rights reserved.</center></h2>
  45:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *
  46:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * Redistribution and use in source and binary forms, with or without 
  47:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * modification, are permitted, provided that the following conditions are met:
  48:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *
  49:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  50:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    this list of conditions and the following disclaimer.
  51:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  52:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    this list of conditions and the following disclaimer in the documentation
  53:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    and/or other materials provided with the distribution.
  54:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  55:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    contributors to this software may be used to endorse or promote products 
  56:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    derived from this software without specific written permission.
  57:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * 4. This software, including modifications and/or derivative works of this 
  58:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    software, must execute solely and exclusively on microcontroller or
  59:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  60:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * 5. Redistribution and use of this software other than as permitted under 
  61:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    this license is void and will automatically terminate your rights under 
  62:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *    this license. 
  63:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *
  64:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  65:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  66:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  67:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  68:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  69:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  70:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  71:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  72:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  73:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  74:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  75:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   *
  77:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   ******************************************************************************
  78:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   */
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 4


  79:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  80:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #include "GUIDEMO.h"
  81:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  82:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** /*********************************************************************
  83:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *
  84:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *       GUIDEMO_ShowColorBar
  85:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** *
  86:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** **********************************************************************
  87:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** */
  88:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  89:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #if (SHOW_GUIDEMO_COLORBAR)
  90:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  91:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define GRADIENT_START_X 60
  92:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define Y_START          83
  93:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define Y_STEP           10
  94:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  95:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define TIME_PAUSE       500
  96:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define TIME_STEP        500
  97:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** #define TIME_RUN         (TIME_PAUSE + TIME_STEP) * 6
  98:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
  99:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** void GUIDEMO_ColorBar(void) {
  71              		.loc 1 99 29 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 80
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 24
  78              		.cfi_offset 4, -24
  79              		.cfi_offset 5, -20
  80              		.cfi_offset 6, -16
  81              		.cfi_offset 7, -12
  82              		.cfi_offset 8, -8
  83              		.cfi_offset 14, -4
  84 0004 96B0     		sub	sp, sp, #88
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 112
 100:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_COLOR ColorStartBlack, ColorStartWhite;
  87              		.loc 1 100 3 view .LVU1
 101:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   char      acText[80] = { 0 };
  88              		.loc 1 101 3 view .LVU2
  89              		.loc 1 101 13 is_stmt 0 view .LVU3
  90 0006 0021     		movs	r1, #0
  91 0008 0291     		str	r1, [sp, #8]
  92 000a 4C22     		movs	r2, #76
  93 000c 03A8     		add	r0, sp, #12
  94 000e FFF7FEFF 		bl	memset
  95              	.LVL0:
 102:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   int       NumColors, BitsPerPixel, xSize, ySize;
  96              		.loc 1 102 3 is_stmt 1 view .LVU4
 103:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   int       Time, TimeStart;
  97              		.loc 1 103 3 view .LVU5
 104:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   int       Dir, Index;
  98              		.loc 1 104 3 view .LVU6
 105:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 
 106:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   xSize = LCD_GetXSize();
  99              		.loc 1 106 3 view .LVU7
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 5


 100              		.loc 1 106 11 is_stmt 0 view .LVU8
 101 0012 FFF7FEFF 		bl	LCD_GetXSize
 102              	.LVL1:
 103 0016 0546     		mov	r5, r0
 104              	.LVL2:
 107:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   ySize = LCD_GetYSize();
 105              		.loc 1 107 3 is_stmt 1 view .LVU9
 106              		.loc 1 107 11 is_stmt 0 view .LVU10
 107 0018 FFF7FEFF 		bl	LCD_GetYSize
 108              	.LVL3:
 109              		.loc 1 107 11 view .LVU11
 110 001c 0446     		mov	r4, r0
 111              	.LVL4:
 108:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUIDEMO_ShowIntro("Color bar",
 112              		.loc 1 108 3 is_stmt 1 view .LVU12
 113 001e 9249     		ldr	r1, .L9
 114 0020 9248     		ldr	r0, .L9+4
 115              	.LVL5:
 116              		.loc 1 108 3 is_stmt 0 view .LVU13
 117 0022 FFF7FEFF 		bl	GUIDEMO_ShowIntro
 118              	.LVL6:
 109:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****                     "STemWin features an integrated\n"
 110:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****                     "color management which automatically\n"
 111:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****                     "finds the best available color for\n"
 112:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****                     "any logical color");
 113:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUIDEMO_DrawBk(1);
 119              		.loc 1 113 3 is_stmt 1 view .LVU14
 120 0026 0120     		movs	r0, #1
 121 0028 FFF7FEFF 		bl	GUIDEMO_DrawBk
 122              	.LVL7:
 114:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 115:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // Heading
 116:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 117:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 	GUI_SetColor(GUI_WHITE);
 123              		.loc 1 117 2 view .LVU15
 124 002c 6FF07F40 		mvn	r0, #-16777216
 125 0030 FFF7FEFF 		bl	GUI_SetColor
 126              	.LVL8:
 118:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 	GUI_SetFont(&GUI_FontRounded22);
 127              		.loc 1 118 2 view .LVU16
 128 0034 8E48     		ldr	r0, .L9+8
 129 0036 FFF7FEFF 		bl	GUI_SetFont
 130              	.LVL9:
 119:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** 	GUI_DispStringHCenterAt("Color bars", xSize*2/3, 12);
 131              		.loc 1 119 2 view .LVU17
 132              		.loc 1 119 45 is_stmt 0 view .LVU18
 133 003a 6900     		lsls	r1, r5, #1
 134              		.loc 1 119 2 view .LVU19
 135 003c 8D4B     		ldr	r3, .L9+12
 136 003e 83FB0123 		smull	r2, r3, r3, r1
 137 0042 0C22     		movs	r2, #12
 138 0044 A3EBE171 		sub	r1, r3, r1, asr #31
 139 0048 8B48     		ldr	r0, .L9+16
 140 004a FFF7FEFF 		bl	GUI_DispStringHCenterAt
 141              	.LVL10:
 120:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_SetFont(&GUI_Font16_ASCII);
 142              		.loc 1 120 3 is_stmt 1 view .LVU20
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 6


 143 004e 8B48     		ldr	r0, .L9+20
 144 0050 FFF7FEFF 		bl	GUI_SetFont
 145              	.LVL11:
 121:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 122:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // Colors
 123:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 124:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Red",     1, Y_START);
 146              		.loc 1 124 3 view .LVU21
 147 0054 5322     		movs	r2, #83
 148 0056 0121     		movs	r1, #1
 149 0058 8948     		ldr	r0, .L9+24
 150 005a FFF7FEFF 		bl	GUI_DispStringAt
 151              	.LVL12:
 125:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Green",   1, Y_START + Y_STEP *  2);
 152              		.loc 1 125 3 view .LVU22
 153 005e 6722     		movs	r2, #103
 154 0060 0121     		movs	r1, #1
 155 0062 8848     		ldr	r0, .L9+28
 156 0064 FFF7FEFF 		bl	GUI_DispStringAt
 157              	.LVL13:
 126:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Blue",    1, Y_START + Y_STEP *  4);
 158              		.loc 1 126 3 view .LVU23
 159 0068 7B22     		movs	r2, #123
 160 006a 0121     		movs	r1, #1
 161 006c 8648     		ldr	r0, .L9+32
 162 006e FFF7FEFF 		bl	GUI_DispStringAt
 163              	.LVL14:
 127:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Grey",    1, Y_START + Y_STEP *  5 + (Y_STEP >> 1));
 164              		.loc 1 127 3 view .LVU24
 165 0072 8A22     		movs	r2, #138
 166 0074 0121     		movs	r1, #1
 167 0076 8548     		ldr	r0, .L9+36
 168 0078 FFF7FEFF 		bl	GUI_DispStringAt
 169              	.LVL15:
 128:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Yellow",  1, Y_START + Y_STEP *  7);
 170              		.loc 1 128 3 view .LVU25
 171 007c 9922     		movs	r2, #153
 172 007e 0121     		movs	r1, #1
 173 0080 8348     		ldr	r0, .L9+40
 174 0082 FFF7FEFF 		bl	GUI_DispStringAt
 175              	.LVL16:
 129:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Cyan",    1, Y_START + Y_STEP *  9);
 176              		.loc 1 129 3 view .LVU26
 177 0086 AD22     		movs	r2, #173
 178 0088 0121     		movs	r1, #1
 179 008a 8248     		ldr	r0, .L9+44
 180 008c FFF7FEFF 		bl	GUI_DispStringAt
 181              	.LVL17:
 130:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt("Magenta", 1, Y_START + Y_STEP * 11);
 182              		.loc 1 130 3 view .LVU27
 183 0090 C122     		movs	r2, #193
 184 0092 0121     		movs	r1, #1
 185 0094 8048     		ldr	r0, .L9+48
 186 0096 FFF7FEFF 		bl	GUI_DispStringAt
 187              	.LVL18:
 131:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 132:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // Additional Information
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 7


 133:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 134:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_SetFont(&GUI_Font8_ASCII);
 188              		.loc 1 134 3 view .LVU28
 189 009a 8048     		ldr	r0, .L9+52
 190 009c FFF7FEFF 		bl	GUI_SetFont
 191              	.LVL19:
 135:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 136:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // LCD Controller
 137:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 138:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   #ifdef LCD_CONTROLLER
 139:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddStringToString(acText, "LCD Controller: ");
 140:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddStringToString(acText, LCD_CONTROLLER);
 141:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DispStringAt         (acText, 12, ySize - 45);
 142:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_ClearText        (acText);
 143:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   #endif
 144:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 145:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // BPP and number of colors
 146:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 147:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   BitsPerPixel = LCD_GetBitsPerPixel();
 192              		.loc 1 147 3 view .LVU29
 193              		.loc 1 147 18 is_stmt 0 view .LVU30
 194 00a0 FFF7FEFF 		bl	LCD_GetBitsPerPixel
 195              	.LVL20:
 196 00a4 0146     		mov	r1, r0
 197              	.LVL21:
 148:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUIDEMO_AddIntToString   (acText, BitsPerPixel);
 198              		.loc 1 148 3 is_stmt 1 view .LVU31
 199 00a6 02A8     		add	r0, sp, #8
 200              	.LVL22:
 201              		.loc 1 148 3 is_stmt 0 view .LVU32
 202 00a8 FFF7FEFF 		bl	GUIDEMO_AddIntToString
 203              	.LVL23:
 149:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUIDEMO_AddStringToString(acText, " bpp");
 204              		.loc 1 149 3 is_stmt 1 view .LVU33
 205 00ac 7C49     		ldr	r1, .L9+56
 206 00ae 02A8     		add	r0, sp, #8
 207 00b0 FFF7FEFF 		bl	GUIDEMO_AddStringToString
 208              	.LVL24:
 150:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   NumColors = LCD_GetDevCap(LCD_DEVCAP_NUMCOLORS);
 209              		.loc 1 150 3 view .LVU34
 210              		.loc 1 150 15 is_stmt 0 view .LVU35
 211 00b4 0920     		movs	r0, #9
 212 00b6 FFF7FEFF 		bl	LCD_GetDevCap
 213              	.LVL25:
 151:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   if (NumColors) {
 214              		.loc 1 151 3 is_stmt 1 view .LVU36
 215              		.loc 1 151 6 is_stmt 0 view .LVU37
 216 00ba 0028     		cmp	r0, #0
 217 00bc 40F0C380 		bne	.L8
 218              	.LVL26:
 219              	.L2:
 152:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddStringToString(acText, ", ");
 153:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddIntToString   (acText, NumColors);
 154:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddStringToString(acText, " colors");
 155:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   }
 156:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   GUI_DispStringAt(acText, 12, ySize - 25);
 220              		.loc 1 156 3 is_stmt 1 view .LVU38
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 8


 221 00c0 A4F11902 		sub	r2, r4, #25
 222 00c4 0C21     		movs	r1, #12
 223 00c6 02A8     		add	r0, sp, #8
 224 00c8 FFF7FEFF 		bl	GUI_DispStringAt
 225              	.LVL27:
 157:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 158:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   // Gradients
 159:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   //
 160:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   TimeStart = GUIDEMO_GetTime();
 226              		.loc 1 160 3 view .LVU39
 227              		.loc 1 160 15 is_stmt 0 view .LVU40
 228 00cc FFF7FEFF 		bl	GUIDEMO_GetTime
 229              	.LVL28:
 230 00d0 0646     		mov	r6, r0
 231              	.LVL29:
 161:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   while (((GUIDEMO_GetTime() - TimeStart) < TIME_RUN) && (GUIDEMO_CheckCancel() == 0)) {
 232              		.loc 1 161 3 is_stmt 1 view .LVU41
 233              	.L3:
 234              		.loc 1 161 9 view .LVU42
 235              		.loc 1 161 12 is_stmt 0 view .LVU43
 236 00d2 FFF7FEFF 		bl	GUIDEMO_GetTime
 237              	.LVL30:
 238              		.loc 1 161 30 view .LVU44
 239 00d6 801B     		subs	r0, r0, r6
 240              		.loc 1 161 9 view .LVU45
 241 00d8 41F26F73 		movw	r3, #5999
 242 00dc 9842     		cmp	r0, r3
 243 00de 00F3C080 		bgt	.L1
 244              		.loc 1 161 59 discriminator 1 view .LVU46
 245 00e2 FFF7FEFF 		bl	GUIDEMO_CheckCancel
 246              	.LVL31:
 247              		.loc 1 161 55 discriminator 1 view .LVU47
 248 00e6 0028     		cmp	r0, #0
 249 00e8 40F0BB80 		bne	.L1
 162:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     Time  = (GUIDEMO_GetTime() - TimeStart) % ((TIME_PAUSE + TIME_STEP) << 1);
 250              		.loc 1 162 5 is_stmt 1 view .LVU48
 251              		.loc 1 162 14 is_stmt 0 view .LVU49
 252 00ec FFF7FEFF 		bl	GUIDEMO_GetTime
 253              	.LVL32:
 254              		.loc 1 162 32 view .LVU50
 255 00f0 801B     		subs	r0, r0, r6
 256              		.loc 1 162 11 view .LVU51
 257 00f2 6C4C     		ldr	r4, .L9+60
 258 00f4 84FB0032 		smull	r3, r2, r4, r0
 259 00f8 C317     		asrs	r3, r0, #31
 260 00fa C3EBE212 		rsb	r2, r3, r2, asr #7
 261 00fe 4FF4FA63 		mov	r3, #2000
 262 0102 03FB1202 		mls	r2, r3, r2, r0
 263              	.LVL33:
 163:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     Dir   = Time / (TIME_PAUSE + TIME_STEP);
 264              		.loc 1 163 5 is_stmt 1 view .LVU52
 265              		.loc 1 163 11 is_stmt 0 view .LVU53
 266 0106 84FB0234 		smull	r3, r4, r4, r2
 267 010a D117     		asrs	r1, r2, #31
 268 010c C1EBA411 		rsb	r1, r1, r4, asr #6
 269              	.LVL34:
 164:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     Time -= Dir * (TIME_PAUSE + TIME_STEP);
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 9


 270              		.loc 1 164 5 is_stmt 1 view .LVU54
 271              		.loc 1 164 10 is_stmt 0 view .LVU55
 272 0110 654B     		ldr	r3, .L9+64
 273 0112 03FB0123 		mla	r3, r3, r1, r2
 274              	.LVL35:
 165:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     if (Time > TIME_PAUSE) {
 275              		.loc 1 165 5 is_stmt 1 view .LVU56
 276              		.loc 1 165 8 is_stmt 0 view .LVU57
 277 0116 B3F5FA7F 		cmp	r3, #500
 278 011a DADC     		bgt	.L3
 166:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****       continue;
 167:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     }
 168:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     Index = ((Time * 0xFF) / TIME_STEP) ^ (Dir * 0xFF);
 279              		.loc 1 168 5 is_stmt 1 view .LVU58
 280              		.loc 1 168 20 is_stmt 0 view .LVU59
 281 011c C3EB0323 		rsb	r3, r3, r3, lsl #8
 282              	.LVL36:
 283              		.loc 1 168 28 view .LVU60
 284 0120 604C     		ldr	r4, .L9+60
 285 0122 84FB0324 		smull	r2, r4, r4, r3
 286              	.LVL37:
 287              		.loc 1 168 28 view .LVU61
 288 0126 DB17     		asrs	r3, r3, #31
 289 0128 C3EB6414 		rsb	r4, r3, r4, asr #5
 290              		.loc 1 168 48 view .LVU62
 291 012c C1EB0121 		rsb	r1, r1, r1, lsl #8
 292              	.LVL38:
 293              		.loc 1 168 11 view .LVU63
 294 0130 4C40     		eors	r4, r4, r1
 295              	.LVL39:
 169:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     ColorStartBlack = 0x000000 + 0x010101 * Index;
 296              		.loc 1 169 5 is_stmt 1 view .LVU64
 297              		.loc 1 169 32 is_stmt 0 view .LVU65
 298 0132 04EB0423 		add	r3, r4, r4, lsl #8
 299 0136 04EB0324 		add	r4, r4, r3, lsl #8
 300              	.LVL40:
 170:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     ColorStartWhite = 0xFFFFFF - ColorStartBlack;
 301              		.loc 1 170 5 is_stmt 1 view .LVU66
 302              		.loc 1 170 21 is_stmt 0 view .LVU67
 303 013a C4F1FF17 		rsb	r7, r4, #16711935
 304 013e 07F57F47 		add	r7, r7, #65280
 305              	.LVL41:
 171:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  0, xSize, (Y_START + Y_STEP *  1) - 1, 
 306              		.loc 1 171 5 is_stmt 1 view .LVU68
 307 0142 0194     		str	r4, [sp, #4]
 308 0144 4FF0FF08 		mov	r8, #255
 309 0148 CDF80080 		str	r8, [sp]
 310 014c 5C23     		movs	r3, #92
 311 014e 2A46     		mov	r2, r5
 312 0150 5321     		movs	r1, #83
 313              	.LVL42:
 314              		.loc 1 171 5 is_stmt 0 view .LVU69
 315 0152 3C20     		movs	r0, #60
 316              	.LVL43:
 317              		.loc 1 171 5 view .LVU70
 318 0154 FFF7FEFF 		bl	GUI_DrawGradientH
 319              	.LVL44:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 10


 172:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  1, xSize, (Y_START + Y_STEP *  2) - 1, 
 320              		.loc 1 172 5 is_stmt 1 view .LVU71
 321 0158 0197     		str	r7, [sp, #4]
 322 015a CDF80080 		str	r8, [sp]
 323 015e 6623     		movs	r3, #102
 324 0160 2A46     		mov	r2, r5
 325 0162 5D21     		movs	r1, #93
 326 0164 3C20     		movs	r0, #60
 327 0166 FFF7FEFF 		bl	GUI_DrawGradientH
 328              	.LVL45:
 173:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  2, xSize, (Y_START + Y_STEP *  3) - 1, 
 329              		.loc 1 173 5 view .LVU72
 330 016a 0194     		str	r4, [sp, #4]
 331 016c 4FF47F48 		mov	r8, #65280
 332 0170 CDF80080 		str	r8, [sp]
 333 0174 7023     		movs	r3, #112
 334 0176 2A46     		mov	r2, r5
 335 0178 6721     		movs	r1, #103
 336 017a 3C20     		movs	r0, #60
 337 017c FFF7FEFF 		bl	GUI_DrawGradientH
 338              	.LVL46:
 174:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  3, xSize, (Y_START + Y_STEP *  4) - 1, 
 339              		.loc 1 174 5 view .LVU73
 340 0180 0197     		str	r7, [sp, #4]
 341 0182 CDF80080 		str	r8, [sp]
 342 0186 7A23     		movs	r3, #122
 343 0188 2A46     		mov	r2, r5
 344 018a 7121     		movs	r1, #113
 345 018c 3C20     		movs	r0, #60
 346 018e FFF7FEFF 		bl	GUI_DrawGradientH
 347              	.LVL47:
 175:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  4, xSize, (Y_START + Y_STEP *  5) - 1, 
 348              		.loc 1 175 5 view .LVU74
 349 0192 0194     		str	r4, [sp, #4]
 350 0194 4FF47F08 		mov	r8, #16711680
 351 0198 CDF80080 		str	r8, [sp]
 352 019c 8423     		movs	r3, #132
 353 019e 2A46     		mov	r2, r5
 354 01a0 7B21     		movs	r1, #123
 355 01a2 3C20     		movs	r0, #60
 356 01a4 FFF7FEFF 		bl	GUI_DrawGradientH
 357              	.LVL48:
 176:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  5, xSize, (Y_START + Y_STEP *  6) - 1, 
 358              		.loc 1 176 5 view .LVU75
 359 01a8 0197     		str	r7, [sp, #4]
 360 01aa CDF80080 		str	r8, [sp]
 361 01ae 8E23     		movs	r3, #142
 362 01b0 2A46     		mov	r2, r5
 363 01b2 8521     		movs	r1, #133
 364 01b4 3C20     		movs	r0, #60
 365 01b6 FFF7FEFF 		bl	GUI_DrawGradientH
 366              	.LVL49:
 177:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  6, xSize, (Y_START + Y_STEP *  7) - 1, 
 367              		.loc 1 177 5 view .LVU76
 368 01ba 0194     		str	r4, [sp, #4]
 369 01bc 3B4B     		ldr	r3, .L9+68
 370 01be 0093     		str	r3, [sp]
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 11


 371 01c0 9823     		movs	r3, #152
 372 01c2 2A46     		mov	r2, r5
 373 01c4 8F21     		movs	r1, #143
 374 01c6 3C20     		movs	r0, #60
 375 01c8 FFF7FEFF 		bl	GUI_DrawGradientH
 376              	.LVL50:
 178:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  7, xSize, (Y_START + Y_STEP *  8) - 1, 
 377              		.loc 1 178 5 view .LVU77
 378 01cc 0197     		str	r7, [sp, #4]
 379 01ce 4FF6FF78 		movw	r8, #65535
 380 01d2 CDF80080 		str	r8, [sp]
 381 01d6 A223     		movs	r3, #162
 382 01d8 2A46     		mov	r2, r5
 383 01da 9921     		movs	r1, #153
 384 01dc 3C20     		movs	r0, #60
 385 01de FFF7FEFF 		bl	GUI_DrawGradientH
 386              	.LVL51:
 179:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  8, xSize, (Y_START + Y_STEP *  9) - 1, 
 387              		.loc 1 179 5 view .LVU78
 388 01e2 0194     		str	r4, [sp, #4]
 389 01e4 CDF80080 		str	r8, [sp]
 390 01e8 AC23     		movs	r3, #172
 391 01ea 2A46     		mov	r2, r5
 392 01ec A321     		movs	r1, #163
 393 01ee 3C20     		movs	r0, #60
 394 01f0 FFF7FEFF 		bl	GUI_DrawGradientH
 395              	.LVL52:
 180:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP *  9, xSize, (Y_START + Y_STEP * 10) - 1, 
 396              		.loc 1 180 5 view .LVU79
 397 01f4 0197     		str	r7, [sp, #4]
 398 01f6 DFF8C080 		ldr	r8, .L9+80
 399 01fa CDF80080 		str	r8, [sp]
 400 01fe B623     		movs	r3, #182
 401 0200 2A46     		mov	r2, r5
 402 0202 AD21     		movs	r1, #173
 403 0204 3C20     		movs	r0, #60
 404 0206 FFF7FEFF 		bl	GUI_DrawGradientH
 405              	.LVL53:
 181:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP * 10, xSize, (Y_START + Y_STEP * 11) - 1, 
 406              		.loc 1 181 5 view .LVU80
 407 020a 0194     		str	r4, [sp, #4]
 408 020c CDF80080 		str	r8, [sp]
 409 0210 C023     		movs	r3, #192
 410 0212 2A46     		mov	r2, r5
 411 0214 B721     		movs	r1, #183
 412 0216 3C20     		movs	r0, #60
 413 0218 FFF7FEFF 		bl	GUI_DrawGradientH
 414              	.LVL54:
 182:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP * 11, xSize, (Y_START + Y_STEP * 12) - 1, 
 415              		.loc 1 182 5 view .LVU81
 416 021c 0197     		str	r7, [sp, #4]
 417 021e 4FF0FF17 		mov	r7, #16711935
 418              	.LVL55:
 419              		.loc 1 182 5 is_stmt 0 view .LVU82
 420 0222 0097     		str	r7, [sp]
 421 0224 CA23     		movs	r3, #202
 422 0226 2A46     		mov	r2, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 12


 423 0228 C121     		movs	r1, #193
 424 022a 3C20     		movs	r0, #60
 425 022c FFF7FEFF 		bl	GUI_DrawGradientH
 426              	.LVL56:
 183:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_DrawGradientH(GRADIENT_START_X, Y_START + Y_STEP * 12, xSize, (Y_START + Y_STEP * 13) - 1, 
 427              		.loc 1 183 5 is_stmt 1 view .LVU83
 428 0230 0194     		str	r4, [sp, #4]
 429 0232 0097     		str	r7, [sp]
 430 0234 D423     		movs	r3, #212
 431 0236 2A46     		mov	r2, r5
 432 0238 CB21     		movs	r1, #203
 433 023a 3C20     		movs	r0, #60
 434 023c FFF7FEFF 		bl	GUI_DrawGradientH
 435              	.LVL57:
 184:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUI_Exec();
 436              		.loc 1 184 5 view .LVU84
 437 0240 FFF7FEFF 		bl	GUI_Exec
 438              	.LVL58:
 439 0244 45E7     		b	.L3
 440              	.LVL59:
 441              	.L8:
 442              		.loc 1 184 5 is_stmt 0 view .LVU85
 443 0246 0646     		mov	r6, r0
 152:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddIntToString   (acText, NumColors);
 444              		.loc 1 152 5 is_stmt 1 view .LVU86
 445 0248 1949     		ldr	r1, .L9+72
 446 024a 02A8     		add	r0, sp, #8
 447              	.LVL60:
 152:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddIntToString   (acText, NumColors);
 448              		.loc 1 152 5 is_stmt 0 view .LVU87
 449 024c FFF7FEFF 		bl	GUIDEMO_AddStringToString
 450              	.LVL61:
 153:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****     GUIDEMO_AddStringToString(acText, " colors");
 451              		.loc 1 153 5 is_stmt 1 view .LVU88
 452 0250 3146     		mov	r1, r6
 453 0252 02A8     		add	r0, sp, #8
 454 0254 FFF7FEFF 		bl	GUIDEMO_AddIntToString
 455              	.LVL62:
 154:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   }
 456              		.loc 1 154 5 view .LVU89
 457 0258 1649     		ldr	r1, .L9+76
 458 025a 02A8     		add	r0, sp, #8
 459 025c FFF7FEFF 		bl	GUIDEMO_AddStringToString
 460              	.LVL63:
 461 0260 2EE7     		b	.L2
 462              	.LVL64:
 463              	.L1:
 185:emWin/GUI_Demo/GUIDEMO_ColorBar.c ****   }
 186:emWin/GUI_Demo/GUIDEMO_ColorBar.c **** }
 464              		.loc 1 186 1 is_stmt 0 view .LVU90
 465 0262 16B0     		add	sp, sp, #88
 466              	.LCFI2:
 467              		.cfi_def_cfa_offset 24
 468              		@ sp needed
 469 0264 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 470              	.LVL65:
 471              	.L10:
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 13


 472              		.loc 1 186 1 view .LVU91
 473              		.align	2
 474              	.L9:
 475 0268 00000000 		.word	.LC0
 476 026c 7C000000 		.word	.LC1
 477 0270 00000000 		.word	GUI_FontRounded22
 478 0274 56555555 		.word	1431655766
 479 0278 88000000 		.word	.LC2
 480 027c 00000000 		.word	GUI_Font16_ASCII
 481 0280 94000000 		.word	.LC3
 482 0284 98000000 		.word	.LC4
 483 0288 A0000000 		.word	.LC5
 484 028c A8000000 		.word	.LC6
 485 0290 B0000000 		.word	.LC7
 486 0294 B8000000 		.word	.LC8
 487 0298 C0000000 		.word	.LC9
 488 029c 00000000 		.word	GUI_Font8_ASCII
 489 02a0 C8000000 		.word	.LC10
 490 02a4 D34D6210 		.word	274877907
 491 02a8 18FCFFFF 		.word	-1000
 492 02ac 80808000 		.word	8421504
 493 02b0 D0000000 		.word	.LC11
 494 02b4 D4000000 		.word	.LC12
 495 02b8 00FFFF00 		.word	16776960
 496              		.cfi_endproc
 497              	.LFE0:
 499              		.text
 500              	.Letext0:
 501              		.file 2 "emWin/inc/LCD.h"
 502              		.file 3 "emWin/inc/GUI.h"
 503              		.file 4 "emWin/inc/GUI_Type.h"
 504              		.file 5 "emWin/inc/WM.h"
 505              		.file 6 "emWin/inc/LCD_Protected.h"
 506              		.file 7 "emWin/inc/GUI_Private.h"
 507              		.file 8 "emWin/inc/WM_Intern.h"
 508              		.file 9 "emWin/inc/WIDGET.h"
 509              		.file 10 "emWin/GUI_Demo/GUIDEMO.h"
 510              		.file 11 "<built-in>"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 GUIDEMO_ColorBar.c
C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s:18     .rodata.GUIDEMO_ColorBar.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s:60     .text.GUIDEMO_ColorBar:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s:68     .text.GUIDEMO_ColorBar:00000000 GUIDEMO_ColorBar
C:\Users\gx\AppData\Local\Temp\ccMf9vsd.s:475    .text.GUIDEMO_ColorBar:00000268 $d

UNDEFINED SYMBOLS
memset
LCD_GetXSize
LCD_GetYSize
GUIDEMO_ShowIntro
GUIDEMO_DrawBk
GUI_SetColor
GUI_SetFont
GUI_DispStringHCenterAt
GUI_DispStringAt
LCD_GetBitsPerPixel
GUIDEMO_AddIntToString
GUIDEMO_AddStringToString
LCD_GetDevCap
GUIDEMO_GetTime
GUIDEMO_CheckCancel
GUI_DrawGradientH
GUI_Exec
GUI_FontRounded22
GUI_Font16_ASCII
GUI_Font8_ASCII
