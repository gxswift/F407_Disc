ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_tlsf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.block_size,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	block_size:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "lvgl/lvgl/src/misc/lv_tlsf.c"
   1:lvgl/lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:lvgl/lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:lvgl/lvgl/src/misc/lv_tlsf.c **** 
   4:lvgl/lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:lvgl/lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:lvgl/lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:lvgl/lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:lvgl/lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:lvgl/lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:lvgl/lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  12:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  14:lvgl/lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:lvgl/lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
  17:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  18:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
  21:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
  23:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  24:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
  25:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:lvgl/lvgl/src/misc/lv_tlsf.c **** **
  27:lvgl/lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:lvgl/lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:lvgl/lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:lvgl/lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 2


  31:lvgl/lvgl/src/misc/lv_tlsf.c **** ** routines.
  32:lvgl/lvgl/src/misc/lv_tlsf.c **** **
  33:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:lvgl/lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:lvgl/lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:lvgl/lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:lvgl/lvgl/src/misc/lv_tlsf.c **** **
  38:lvgl/lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:lvgl/lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:lvgl/lvgl/src/misc/lv_tlsf.c **** */
  41:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  42:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
  43:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:lvgl/lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:lvgl/lvgl/src/misc/lv_tlsf.c **** */
  46:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:lvgl/lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
  50:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  51:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
  52:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:lvgl/lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:lvgl/lvgl/src/misc/lv_tlsf.c **** */
  55:lvgl/lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
  58:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
  60:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  61:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  68:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
  69:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:lvgl/lvgl/src/misc/lv_tlsf.c **** */
  72:lvgl/lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  74:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
  75:lvgl/lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:lvgl/lvgl/src/misc/lv_tlsf.c **** */
  78:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:lvgl/lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  81:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:lvgl/lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  84:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:lvgl/lvgl/src/misc/lv_tlsf.c **** {
  86:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 3


  88:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
  89:lvgl/lvgl/src/misc/lv_tlsf.c **** }
  90:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  91:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
  92:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  93:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:lvgl/lvgl/src/misc/lv_tlsf.c **** {
  95:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:lvgl/lvgl/src/misc/lv_tlsf.c **** }
  97:lvgl/lvgl/src/misc/lv_tlsf.c **** 
  98:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
  99:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 100:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 105:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 106:lvgl/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 109:lvgl/lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 111:lvgl/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:lvgl/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 114:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 116:lvgl/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 119:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 120:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 122:lvgl/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 125:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 126:lvgl/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 129:lvgl/lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 131:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 133:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 136:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 137:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 139:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 143:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 144:lvgl/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 4


 145:lvgl/lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
 146:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 147:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 149:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 153:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 154:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 156:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 159:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 160:lvgl/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 163:lvgl/lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 165:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 167:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 171:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 172:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 174:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 177:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 178:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
 179:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 181:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 184:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 187:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 188:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 190:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 192:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 193:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 194:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 195:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 199:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (high)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 5


 202:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 203:lvgl/lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 205:lvgl/lvgl/src/misc/lv_tlsf.c **** 	else
 206:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 207:lvgl/lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 209:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 210:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 212:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
 213:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 215:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 216:lvgl/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 218:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 219:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 221:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 222:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:lvgl/lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 225:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
 229:lvgl/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:lvgl/lvgl/src/misc/lv_tlsf.c **** };
 231:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 232:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:lvgl/lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 235:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:lvgl/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
 239:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:lvgl/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 242:lvgl/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 244:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
 245:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
 254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 255:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:lvgl/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:lvgl/lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 6


 259:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
 260:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
 262:lvgl/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
 264:lvgl/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 266:lvgl/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:lvgl/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:lvgl/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 270:lvgl/lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:lvgl/lvgl/src/misc/lv_tlsf.c **** };
 272:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 273:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 274:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 276:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 277:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 281:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 282:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 284:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 286:lvgl/lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 289:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 290:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 291:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 293:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 294:lvgl/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:lvgl/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:lvgl/lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 299:lvgl/lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 304:lvgl/lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 307:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:lvgl/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 310:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 311:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 313:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 314:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 315:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 7


 316:lvgl/lvgl/src/misc/lv_tlsf.c **** **
 317:lvgl/lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:lvgl/lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:lvgl/lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 324:lvgl/lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 326:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:lvgl/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 329:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 332:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:lvgl/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:lvgl/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:lvgl/lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 337:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 338:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:lvgl/lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 343:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 346:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 347:lvgl/lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:lvgl/lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 350:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 352:lvgl/lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:lvgl/lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 356:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 357:lvgl/lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:lvgl/lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:lvgl/lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 361:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:lvgl/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 365:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 366:lvgl/lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:lvgl/lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 369:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 372:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 8


 373:lvgl/lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
 374:lvgl/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 376:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:lvgl/lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 380:lvgl/lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:lvgl/lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 383:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 384:lvgl/lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 386:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 387:lvgl/lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:lvgl/lvgl/src/misc/lv_tlsf.c **** {
  29              		.loc 1 388 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 389:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  34              		.loc 1 389 2 view .LVU1
  35              		.loc 1 389 14 is_stmt 0 view .LVU2
  36 0000 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
 390:lvgl/lvgl/src/misc/lv_tlsf.c **** }
  38              		.loc 1 390 1 view .LVU3
  39 0002 20F00300 		bic	r0, r0, #3
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE3:
  44              		.section	.text.block_set_size,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	block_set_size:
  52              	.LVL2:
  53              	.LFB4:
 391:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 392:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:lvgl/lvgl/src/misc/lv_tlsf.c **** {
  54              		.loc 1 393 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 394:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  59              		.loc 1 394 2 view .LVU5
  60              		.loc 1 394 15 is_stmt 0 view .LVU6
  61 0000 4368     		ldr	r3, [r0, #4]
  62              	.LVL3:
 395:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  63              		.loc 1 395 2 is_stmt 1 view .LVU7
  64              		.loc 1 395 32 is_stmt 0 view .LVU8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 9


  65 0002 03F00303 		and	r3, r3, #3
  66              	.LVL4:
  67              		.loc 1 395 21 view .LVU9
  68 0006 0B43     		orrs	r3, r3, r1
  69              		.loc 1 395 14 view .LVU10
  70 0008 4360     		str	r3, [r0, #4]
  71              	.LVL5:
 396:lvgl/lvgl/src/misc/lv_tlsf.c **** }
  72              		.loc 1 396 1 view .LVU11
  73 000a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE4:
  77              		.section	.text.block_is_last,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	block_is_last:
  85              	.LVL6:
  86              	.LFB5:
 397:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 398:lvgl/lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:lvgl/lvgl/src/misc/lv_tlsf.c **** {
  87              		.loc 1 399 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 399 1 is_stmt 0 view .LVU13
  92 0000 08B5     		push	{r3, lr}
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
 400:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  97              		.loc 1 400 2 is_stmt 1 view .LVU14
  98              		.loc 1 400 9 is_stmt 0 view .LVU15
  99 0002 FFF7FEFF 		bl	block_size
 100              	.LVL7:
 401:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 101              		.loc 1 401 1 view .LVU16
 102 0006 B0FA80F0 		clz	r0, r0
 103 000a 4009     		lsrs	r0, r0, #5
 104 000c 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE5:
 108              		.section	.text.block_is_free,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	block_is_free:
 116              	.LVL8:
 117              	.LFB6:
 402:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 403:lvgl/lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 10


 404:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 118              		.loc 1 404 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 405:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 123              		.loc 1 405 2 view .LVU18
 124              		.loc 1 405 9 is_stmt 0 view .LVU19
 125 0000 4068     		ldr	r0, [r0, #4]
 126              	.LVL9:
 406:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 127              		.loc 1 406 1 view .LVU20
 128 0002 00F00100 		and	r0, r0, #1
 129 0006 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE6:
 133              		.section	.text.block_set_free,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	block_set_free:
 141              	.LVL10:
 142              	.LFB7:
 407:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 408:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 143              		.loc 1 409 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 410:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 148              		.loc 1 410 2 view .LVU22
 149              		.loc 1 410 14 is_stmt 0 view .LVU23
 150 0000 4368     		ldr	r3, [r0, #4]
 151 0002 43F00103 		orr	r3, r3, #1
 152 0006 4360     		str	r3, [r0, #4]
 411:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 153              		.loc 1 411 1 view .LVU24
 154 0008 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE7:
 158              		.section	.text.block_set_used,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	block_set_used:
 166              	.LVL11:
 167              	.LFB8:
 412:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 413:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:lvgl/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 11


 168              		.loc 1 414 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 415:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
 173              		.loc 1 415 2 view .LVU26
 174              		.loc 1 415 14 is_stmt 0 view .LVU27
 175 0000 4368     		ldr	r3, [r0, #4]
 176 0002 23F00103 		bic	r3, r3, #1
 177 0006 4360     		str	r3, [r0, #4]
 416:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 178              		.loc 1 416 1 view .LVU28
 179 0008 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE8:
 183              		.section	.text.block_is_prev_free,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	block_is_prev_free:
 191              	.LVL12:
 192              	.LFB9:
 417:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 418:lvgl/lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 193              		.loc 1 419 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 420:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 198              		.loc 1 420 2 view .LVU30
 199              		.loc 1 420 9 is_stmt 0 view .LVU31
 200 0000 4068     		ldr	r0, [r0, #4]
 201              	.LVL13:
 421:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 202              		.loc 1 421 1 view .LVU32
 203 0002 00F00200 		and	r0, r0, #2
 204 0006 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE9:
 208              		.section	.text.block_set_prev_free,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	block_set_prev_free:
 216              	.LVL14:
 217              	.LFB10:
 422:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 423:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 218              		.loc 1 424 1 is_stmt 1 view -0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 12


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 425:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 223              		.loc 1 425 2 view .LVU34
 224              		.loc 1 425 14 is_stmt 0 view .LVU35
 225 0000 4368     		ldr	r3, [r0, #4]
 226 0002 43F00203 		orr	r3, r3, #2
 227 0006 4360     		str	r3, [r0, #4]
 426:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 228              		.loc 1 426 1 view .LVU36
 229 0008 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE10:
 233              		.section	.text.block_set_prev_used,"ax",%progbits
 234              		.align	1
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	block_set_prev_used:
 241              	.LVL15:
 242              	.LFB11:
 427:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 428:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 243              		.loc 1 429 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 430:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 248              		.loc 1 430 2 view .LVU38
 249              		.loc 1 430 14 is_stmt 0 view .LVU39
 250 0000 4368     		ldr	r3, [r0, #4]
 251 0002 23F00203 		bic	r3, r3, #2
 252 0006 4360     		str	r3, [r0, #4]
 431:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 253              		.loc 1 431 1 view .LVU40
 254 0008 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE11:
 258              		.section	.text.block_from_ptr,"ax",%progbits
 259              		.align	1
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv4-sp-d16
 265              	block_from_ptr:
 266              	.LVL16:
 267              	.LFB12:
 432:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 433:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 268              		.loc 1 434 1 is_stmt 1 view -0
 269              		.cfi_startproc
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 13


 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 435:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 273              		.loc 1 435 2 view .LVU42
 436:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 274              		.loc 1 437 1 is_stmt 0 view .LVU43
 275 0000 0838     		subs	r0, r0, #8
 276              	.LVL17:
 277              		.loc 1 437 1 view .LVU44
 278 0002 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE12:
 282              		.section	.text.block_to_ptr,"ax",%progbits
 283              		.align	1
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	block_to_ptr:
 290              	.LVL18:
 291              	.LFB13:
 438:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 439:lvgl/lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 292              		.loc 1 440 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 441:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 297              		.loc 1 441 2 view .LVU46
 442:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 298              		.loc 1 443 1 is_stmt 0 view .LVU47
 299 0000 0830     		adds	r0, r0, #8
 300              	.LVL19:
 301              		.loc 1 443 1 view .LVU48
 302 0002 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE13:
 306              		.section	.text.offset_to_block,"ax",%progbits
 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	offset_to_block:
 314              	.LVL20:
 315              	.LFB14:
 444:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 445:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 316              		.loc 1 447 1 is_stmt 1 view -0
 317              		.cfi_startproc
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 14


 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 448:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 321              		.loc 1 448 2 view .LVU50
 449:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 322              		.loc 1 449 1 is_stmt 0 view .LVU51
 323 0000 0844     		add	r0, r0, r1
 324              	.LVL21:
 325              		.loc 1 449 1 view .LVU52
 326 0002 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE14:
 330              		.section	.text.block_can_split,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	block_can_split:
 338              	.LVL22:
 339              	.LFB31:
 450:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 451:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 455:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 456:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 457:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 458:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 461:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 462:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 464:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 466:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 467:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 470:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 471:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 472:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 473:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 474:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 475:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 477:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 479:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 480:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 481:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 482:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 483:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:lvgl/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 15


 485:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 486:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 487:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 488:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 489:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 490:lvgl/lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 493:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 494:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 495:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 496:lvgl/lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 499:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 500:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 501:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 502:lvgl/lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
 503:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 504:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 505:lvgl/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 507:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 508:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 509:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 510:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 511:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:lvgl/lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 514:lvgl/lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 516:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 517:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 518:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 519:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 521:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 524:lvgl/lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 526:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 527:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 528:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 529:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 530:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 531:lvgl/lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:lvgl/lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 534:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 535:lvgl/lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 537:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 540:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 16


 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 543:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 544:lvgl/lvgl/src/misc/lv_tlsf.c **** 	else
 545:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 546:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 550:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 553:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 554:lvgl/lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:lvgl/lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 557:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 562:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 564:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 565:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 567:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 570:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
 571:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
 574:lvgl/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 577:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 581:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:lvgl/lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 584:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 585:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 593:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 596:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 597:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:lvgl/lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 17


 599:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 600:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 601:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 604:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 605:lvgl/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 606:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 607:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 609:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 610:lvgl/lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 612:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
 613:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 617:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:lvgl/lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 620:lvgl/lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 622:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 623:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 624:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 625:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 626:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:lvgl/lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 629:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 632:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 633:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 634:lvgl/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 635:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 637:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
 639:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
 642:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 643:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 645:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 646:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 647:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
 649:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 650:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 651:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 652:lvgl/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 654:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 655:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 18


 656:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 658:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:lvgl/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 662:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 663:lvgl/lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 340              		.loc 1 664 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		.loc 1 664 1 is_stmt 0 view .LVU54
 345 0000 10B5     		push	{r4, lr}
 346              	.LCFI1:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 0002 0C46     		mov	r4, r1
 665:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 351              		.loc 1 665 2 is_stmt 1 view .LVU55
 352              		.loc 1 665 9 is_stmt 0 view .LVU56
 353 0004 FFF7FEFF 		bl	block_size
 354              	.LVL23:
 355              		.loc 1 665 53 view .LVU57
 356 0008 1034     		adds	r4, r4, #16
 357              	.LVL24:
 666:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 358              		.loc 1 666 1 view .LVU58
 359 000a A042     		cmp	r0, r4
 360 000c 34BF     		ite	cc
 361 000e 0020     		movcc	r0, #0
 362 0010 0120     		movcs	r0, #1
 363 0012 10BD     		pop	{r4, pc}
 364              		.loc 1 666 1 view .LVU59
 365              		.cfi_endproc
 366              	.LFE31:
 368              		.section	.text.control_constructor,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	control_constructor:
 376              	.LVL25:
 377              	.LFB41:
 667:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 668:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 671:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 673:lvgl/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 674:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 675:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
 676:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 19


 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 678:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 681:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 683:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 684:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 685:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 686:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 687:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 688:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 689:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 690:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 694:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:lvgl/lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
 696:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 697:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 698:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 699:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 700:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 703:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 705:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 711:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 712:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 714:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 715:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 718:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 721:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 725:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 726:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 727:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 728:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 730:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 731:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:lvgl/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 20


 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 737:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 742:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 743:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 744:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:lvgl/lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 750:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 754:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
 755:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 757:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 758:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 759:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 761:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 764:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 768:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 771:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 772:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 774:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 775:lvgl/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 777:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 780:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 782:lvgl/lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
 783:lvgl/lvgl/src/misc/lv_tlsf.c **** 		
 784:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/*
 785:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*/
 790:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 21


 791:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 792:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 794:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 795:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 796:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 801:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 802:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 804:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 805:lvgl/lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 807:lvgl/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
 811:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 812:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:lvgl/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 815:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 817:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 818:lvgl/lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:lvgl/lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 378              		.loc 1 820 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              		.loc 1 820 1 is_stmt 0 view .LVU61
 384 0000 10B4     		push	{r4}
 385              	.LCFI2:
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 4, -4
 821:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 388              		.loc 1 821 2 is_stmt 1 view .LVU62
 822:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 823:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 389              		.loc 1 823 2 view .LVU63
 390              		.loc 1 823 34 is_stmt 0 view .LVU64
 391 0002 0446     		mov	r4, r0
 392              		.loc 1 823 32 view .LVU65
 393 0004 8060     		str	r0, [r0, #8]
 824:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 394              		.loc 1 824 2 is_stmt 1 view .LVU66
 395              		.loc 1 824 32 is_stmt 0 view .LVU67
 396 0006 C060     		str	r0, [r0, #12]
 825:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 826:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
 397              		.loc 1 826 2 is_stmt 1 view .LVU68
 398              		.loc 1 826 21 is_stmt 0 view .LVU69
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 22


 399 0008 0021     		movs	r1, #0
 400 000a 0161     		str	r1, [r0, #16]
 827:lvgl/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 401              		.loc 1 827 2 is_stmt 1 view .LVU70
 402              	.LVL26:
 403              		.loc 1 827 2 is_stmt 0 view .LVU71
 404 000c 00E0     		b	.L17
 405              	.LVL27:
 406              	.L23:
 407              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU72
 408 000e 0131     		adds	r1, r1, #1
 409              	.LVL28:
 410              	.L17:
 411              		.loc 1 827 14 discriminator 1 view .LVU73
 412              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU74
 413 0010 0829     		cmp	r1, #8
 414 0012 0DDC     		bgt	.L22
 828:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 829:lvgl/lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 415              		.loc 1 829 3 is_stmt 1 view .LVU75
 416              		.loc 1 829 25 is_stmt 0 view .LVU76
 417 0014 0A1D     		adds	r2, r1, #4
 418 0016 00EB8202 		add	r2, r0, r2, lsl #2
 419 001a 0023     		movs	r3, #0
 420 001c 5360     		str	r3, [r2, #4]
 830:lvgl/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 421              		.loc 1 830 3 is_stmt 1 view .LVU77
 422              	.LVL29:
 423              	.L18:
 424              		.loc 1 830 15 discriminator 1 view .LVU78
 425              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU79
 426 001e 1F2B     		cmp	r3, #31
 427 0020 F5DC     		bgt	.L23
 831:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 832:lvgl/lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 428              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU80
 429              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU81
 430 0022 03EB4112 		add	r2, r3, r1, lsl #5
 431 0026 0E32     		adds	r2, r2, #14
 432 0028 40F82240 		str	r4, [r0, r2, lsl #2]
 830:lvgl/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 433              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU82
 434 002c 0133     		adds	r3, r3, #1
 435              	.LVL30:
 830:lvgl/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 436              		.loc 1 830 35 is_stmt 0 discriminator 3 view .LVU83
 437 002e F6E7     		b	.L18
 438              	.LVL31:
 439              	.L22:
 833:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 834:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 835:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 440              		.loc 1 835 1 view .LVU84
 441 0030 5DF8044B 		ldr	r4, [sp], #4
 442              	.LCFI3:
 443              		.cfi_restore 4
 444              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 23


 445 0034 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE41:
 449              		.section	.rodata.block_next.str1.4,"aMS",%progbits,1
 450              		.align	2
 451              	.LC0:
 452 0000 6C76676C 		.ascii	"lvgl/lvgl/src/misc/lv_tlsf.c\000"
 452      2F6C7667 
 452      6C2F7372 
 452      632F6D69 
 452      73632F6C 
 453 001d 000000   		.align	2
 454              	.LC1:
 455 0020 21626C6F 		.ascii	"!block_is_last(block)\000"
 455      636B5F69 
 455      735F6C61 
 455      73742862 
 455      6C6F636B 
 456 0036 0000     		.align	2
 457              	.LC2:
 458 0038 41737365 		.ascii	"Asserted at expression: %s\000"
 458      72746564 
 458      20617420 
 458      65787072 
 458      65737369 
 459              		.section	.text.block_next,"ax",%progbits
 460              		.align	1
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	block_next:
 467              	.LVL32:
 468              	.LFB16:
 460:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 469              		.loc 1 460 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 460:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 473              		.loc 1 460 1 is_stmt 0 view .LVU86
 474 0000 30B5     		push	{r4, r5, lr}
 475              	.LCFI4:
 476              		.cfi_def_cfa_offset 12
 477              		.cfi_offset 4, -12
 478              		.cfi_offset 5, -8
 479              		.cfi_offset 14, -4
 480 0002 83B0     		sub	sp, sp, #12
 481              	.LCFI5:
 482              		.cfi_def_cfa_offset 24
 483 0004 0446     		mov	r4, r0
 461:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 484              		.loc 1 461 2 is_stmt 1 view .LVU87
 461:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 485              		.loc 1 461 41 is_stmt 0 view .LVU88
 486 0006 FFF7FEFF 		bl	block_to_ptr
 487              	.LVL33:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 24


 461:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 488              		.loc 1 461 41 view .LVU89
 489 000a 0546     		mov	r5, r0
 462:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 490              		.loc 1 462 3 view .LVU90
 491 000c 2046     		mov	r0, r4
 492 000e FFF7FEFF 		bl	block_size
 493              	.LVL34:
 461:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 494              		.loc 1 461 25 view .LVU91
 495 0012 011F     		subs	r1, r0, #4
 496 0014 2846     		mov	r0, r5
 497 0016 FFF7FEFF 		bl	offset_to_block
 498              	.LVL35:
 499 001a 0546     		mov	r5, r0
 500              	.LVL36:
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 501              		.loc 1 463 2 is_stmt 1 view .LVU92
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 502              		.loc 1 463 2 view .LVU93
 503 001c 2046     		mov	r0, r4
 504              	.LVL37:
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 505              		.loc 1 463 2 is_stmt 0 view .LVU94
 506 001e FFF7FEFF 		bl	block_is_last
 507              	.LVL38:
 508 0022 10B9     		cbnz	r0, .L28
 465:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 509              		.loc 1 465 1 view .LVU95
 510 0024 2846     		mov	r0, r5
 511 0026 03B0     		add	sp, sp, #12
 512              	.LCFI6:
 513              		.cfi_remember_state
 514              		.cfi_def_cfa_offset 12
 515              		@ sp needed
 516 0028 30BD     		pop	{r4, r5, pc}
 517              	.LVL39:
 518              	.L28:
 519              	.LCFI7:
 520              		.cfi_restore_state
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 521              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU96
 522 002a 064B     		ldr	r3, .L29
 523 002c 0193     		str	r3, [sp, #4]
 524 002e 064B     		ldr	r3, .L29+4
 525 0030 0093     		str	r3, [sp]
 526 0032 064B     		ldr	r3, .L29+8
 527 0034 40F2CF12 		movw	r2, #463
 528 0038 0549     		ldr	r1, .L29+12
 529 003a 0320     		movs	r0, #3
 530 003c FFF7FEFF 		bl	_lv_log_add
 531              	.LVL40:
 532              	.L26:
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 533              		.loc 1 463 2 discriminator 1 view .LVU97
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 534              		.loc 1 463 2 discriminator 1 view .LVU98
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 25


 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 535              		.loc 1 463 2 discriminator 1 view .LVU99
 463:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 536              		.loc 1 463 2 discriminator 1 view .LVU100
 537 0040 FEE7     		b	.L26
 538              	.L30:
 539 0042 00BF     		.align	2
 540              	.L29:
 541 0044 20000000 		.word	.LC1
 542 0048 38000000 		.word	.LC2
 543 004c 00000000 		.word	.LANCHOR0
 544 0050 00000000 		.word	.LC0
 545              		.cfi_endproc
 546              	.LFE16:
 548              		.section	.text.block_link_next,"ax",%progbits
 549              		.align	1
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	block_link_next:
 556              	.LVL41:
 557              	.LFB17:
 469:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 558              		.loc 1 469 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 469:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 562              		.loc 1 469 1 is_stmt 0 view .LVU102
 563 0000 10B5     		push	{r4, lr}
 564              	.LCFI8:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
 568 0002 0446     		mov	r4, r0
 470:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 569              		.loc 1 470 2 is_stmt 1 view .LVU103
 470:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 570              		.loc 1 470 25 is_stmt 0 view .LVU104
 571 0004 FFF7FEFF 		bl	block_next
 572              	.LVL42:
 471:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 573              		.loc 1 471 2 is_stmt 1 view .LVU105
 471:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return next;
 574              		.loc 1 471 24 is_stmt 0 view .LVU106
 575 0008 0460     		str	r4, [r0]
 472:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 576              		.loc 1 472 2 is_stmt 1 view .LVU107
 473:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 577              		.loc 1 473 1 is_stmt 0 view .LVU108
 578 000a 10BD     		pop	{r4, pc}
 473:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 579              		.loc 1 473 1 view .LVU109
 580              		.cfi_endproc
 581              	.LFE17:
 583              		.section	.text.block_mark_as_free,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 26


 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	block_mark_as_free:
 591              	.LVL43:
 592              	.LFB18:
 476:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 593              		.loc 1 476 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 476:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 597              		.loc 1 476 1 is_stmt 0 view .LVU111
 598 0000 10B5     		push	{r4, lr}
 599              	.LCFI9:
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 4, -8
 602              		.cfi_offset 14, -4
 603 0002 0446     		mov	r4, r0
 478:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 604              		.loc 1 478 2 is_stmt 1 view .LVU112
 478:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 605              		.loc 1 478 25 is_stmt 0 view .LVU113
 606 0004 FFF7FEFF 		bl	block_link_next
 607              	.LVL44:
 479:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 608              		.loc 1 479 2 is_stmt 1 view .LVU114
 609 0008 FFF7FEFF 		bl	block_set_prev_free
 610              	.LVL45:
 480:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 611              		.loc 1 480 2 view .LVU115
 612 000c 2046     		mov	r0, r4
 613 000e FFF7FEFF 		bl	block_set_free
 614              	.LVL46:
 481:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 615              		.loc 1 481 1 is_stmt 0 view .LVU116
 616 0012 10BD     		pop	{r4, pc}
 481:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 617              		.loc 1 481 1 view .LVU117
 618              		.cfi_endproc
 619              	.LFE18:
 621              		.section	.text.block_mark_as_used,"ax",%progbits
 622              		.align	1
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	block_mark_as_used:
 629              	.LVL47:
 630              	.LFB19:
 484:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 631              		.loc 1 484 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 27


 484:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 635              		.loc 1 484 1 is_stmt 0 view .LVU119
 636 0000 10B5     		push	{r4, lr}
 637              	.LCFI10:
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 4, -8
 640              		.cfi_offset 14, -4
 641 0002 0446     		mov	r4, r0
 485:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 642              		.loc 1 485 2 is_stmt 1 view .LVU120
 485:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 643              		.loc 1 485 25 is_stmt 0 view .LVU121
 644 0004 FFF7FEFF 		bl	block_next
 645              	.LVL48:
 486:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 646              		.loc 1 486 2 is_stmt 1 view .LVU122
 647 0008 FFF7FEFF 		bl	block_set_prev_used
 648              	.LVL49:
 487:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 649              		.loc 1 487 2 view .LVU123
 650 000c 2046     		mov	r0, r4
 651 000e FFF7FEFF 		bl	block_set_used
 652              	.LVL50:
 488:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 653              		.loc 1 488 1 is_stmt 0 view .LVU124
 654 0012 10BD     		pop	{r4, pc}
 488:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 655              		.loc 1 488 1 view .LVU125
 656              		.cfi_endproc
 657              	.LFE19:
 659              		.section	.rodata.default_walker.str1.4,"aMS",%progbits,1
 660              		.align	2
 661              	.LC3:
 662 0000 66726565 		.ascii	"free\000"
 662      00
 663 0005 000000   		.align	2
 664              	.LC4:
 665 0008 75736564 		.ascii	"used\000"
 665      00
 666 000d 000000   		.align	2
 667              	.LC5:
 668 0010 09257020 		.ascii	"\011%p %s size: %x (%p)\012\000"
 668      25732073 
 668      697A653A 
 668      20257820 
 668      28257029 
 669              		.section	.text.default_walker,"ax",%progbits
 670              		.align	1
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv4-sp-d16
 676              	default_walker:
 677              	.LVL51:
 678              	.LFB44:
 836:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 837:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 28


 838:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 840:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 841:lvgl/lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 843:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:lvgl/lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 847:lvgl/lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 848:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 849:lvgl/lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 851:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 852:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 853:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 854:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 855:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 856:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 857:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 858:lvgl/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 861:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 862:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 863:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 864:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 865:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 866:lvgl/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 868:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 870:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 873:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 878:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 883:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:lvgl/lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 888:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 889:lvgl/lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
 892:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 893:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 894:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 29


 895:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 899:lvgl/lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 901:lvgl/lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 908:lvgl/lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 912:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 913:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 914:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 915:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 917:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 918:lvgl/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 920:lvgl/lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
 921:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 679              		.loc 1 921 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		.loc 1 921 1 is_stmt 0 view .LVU127
 684 0000 70B5     		push	{r4, r5, r6, lr}
 685              	.LCFI11:
 686              		.cfi_def_cfa_offset 16
 687              		.cfi_offset 4, -16
 688              		.cfi_offset 5, -12
 689              		.cfi_offset 6, -8
 690              		.cfi_offset 14, -4
 691 0002 86B0     		sub	sp, sp, #24
 692              	.LCFI12:
 693              		.cfi_def_cfa_offset 40
 694 0004 0446     		mov	r4, r0
 695 0006 0D46     		mov	r5, r1
 922:lvgl/lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 696              		.loc 1 922 2 is_stmt 1 view .LVU128
 923:lvgl/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 697              		.loc 1 923 2 view .LVU129
 698 0008 92B1     		cbz	r2, .L39
 699 000a 0A4E     		ldr	r6, .L41
 700              	.L38:
 701              		.loc 1 923 2 is_stmt 0 discriminator 4 view .LVU130
 702 000c 2046     		mov	r0, r4
 703              	.LVL52:
 704              		.loc 1 923 2 discriminator 4 view .LVU131
 705 000e FFF7FEFF 		bl	block_from_ptr
 706              	.LVL53:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 30


 707              		.loc 1 923 2 discriminator 4 view .LVU132
 708 0012 0490     		str	r0, [sp, #16]
 709 0014 0395     		str	r5, [sp, #12]
 710 0016 0296     		str	r6, [sp, #8]
 711 0018 0194     		str	r4, [sp, #4]
 712 001a 074B     		ldr	r3, .L41+4
 713 001c 0093     		str	r3, [sp]
 714 001e 074B     		ldr	r3, .L41+8
 715 0020 40F29B32 		movw	r2, #923
 716 0024 0649     		ldr	r1, .L41+12
 717 0026 0320     		movs	r0, #3
 718 0028 FFF7FEFF 		bl	_lv_log_add
 719              	.LVL54:
 720              		.loc 1 923 112 is_stmt 1 discriminator 4 view .LVU133
 924:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 721              		.loc 1 924 1 is_stmt 0 discriminator 4 view .LVU134
 722 002c 06B0     		add	sp, sp, #24
 723              	.LCFI13:
 724              		.cfi_remember_state
 725              		.cfi_def_cfa_offset 16
 726              		@ sp needed
 727 002e 70BD     		pop	{r4, r5, r6, pc}
 728              	.LVL55:
 729              	.L39:
 730              	.LCFI14:
 731              		.cfi_restore_state
 923:lvgl/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 732              		.loc 1 923 2 view .LVU135
 733 0030 044E     		ldr	r6, .L41+16
 734 0032 EBE7     		b	.L38
 735              	.L42:
 736              		.align	2
 737              	.L41:
 738 0034 08000000 		.word	.LC4
 739 0038 10000000 		.word	.LC5
 740 003c 00000000 		.word	.LANCHOR1
 741 0040 00000000 		.word	.LC0
 742 0044 00000000 		.word	.LC3
 743              		.cfi_endproc
 744              	.LFE44:
 746              		.section	.rodata.integrity_walker.str1.4,"aMS",%progbits,1
 747              		.align	2
 748              	.LC6:
 749 0000 696E7465 		.ascii	"integ->prev_status == this_prev_status && \"prev st"
 749      672D3E70 
 749      7265765F 
 749      73746174 
 749      7573203D 
 750 0032 61747573 		.ascii	"atus incorrect\"\000"
 750      20696E63 
 750      6F727265 
 750      63742200 
 751 0042 0000     		.align	2
 752              	.LC7:
 753 0044 73697A65 		.ascii	"size == this_block_size && \"block size incorrect\""
 753      203D3D20 
 753      74686973 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 31


 753      5F626C6F 
 753      636B5F73 
 754 0075 00       		.ascii	"\000"
 755              		.section	.text.integrity_walker,"ax",%progbits
 756              		.align	1
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu fpv4-sp-d16
 762              	integrity_walker:
 763              	.LVL56:
 764              	.LFB42:
 850:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 765              		.loc 1 850 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 850:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 769              		.loc 1 850 1 is_stmt 0 view .LVU137
 770 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 771              	.LCFI15:
 772              		.cfi_def_cfa_offset 24
 773              		.cfi_offset 4, -24
 774              		.cfi_offset 5, -20
 775              		.cfi_offset 6, -16
 776              		.cfi_offset 7, -12
 777              		.cfi_offset 8, -8
 778              		.cfi_offset 14, -4
 779 0004 82B0     		sub	sp, sp, #8
 780              	.LCFI16:
 781              		.cfi_def_cfa_offset 32
 782 0006 0F46     		mov	r7, r1
 783 0008 1C46     		mov	r4, r3
 851:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 784              		.loc 1 851 2 is_stmt 1 view .LVU138
 851:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 785              		.loc 1 851 26 is_stmt 0 view .LVU139
 786 000a FFF7FEFF 		bl	block_from_ptr
 787              	.LVL57:
 851:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 788              		.loc 1 851 26 view .LVU140
 789 000e 0546     		mov	r5, r0
 790              	.LVL58:
 852:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 791              		.loc 1 852 2 is_stmt 1 view .LVU141
 853:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 792              		.loc 1 853 2 view .LVU142
 853:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 793              		.loc 1 853 31 is_stmt 0 view .LVU143
 794 0010 FFF7FEFF 		bl	block_is_prev_free
 795              	.LVL59:
 853:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 796              		.loc 1 853 61 view .LVU144
 797 0014 B0F10008 		subs	r8, r0, #0
 798 0018 18BF     		it	ne
 799 001a 4FF00108 		movne	r8, #1
 800              	.LVL60:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 32


 854:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 801              		.loc 1 854 2 is_stmt 1 view .LVU145
 854:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 802              		.loc 1 854 26 is_stmt 0 view .LVU146
 803 001e 2846     		mov	r0, r5
 804 0020 FFF7FEFF 		bl	block_is_free
 805              	.LVL61:
 854:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 806              		.loc 1 854 51 view .LVU147
 807 0024 061E     		subs	r6, r0, #0
 808 0026 18BF     		it	ne
 809 0028 0126     		movne	r6, #1
 810              	.LVL62:
 855:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 811              		.loc 1 855 2 is_stmt 1 view .LVU148
 855:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 812              		.loc 1 855 33 is_stmt 0 view .LVU149
 813 002a 2846     		mov	r0, r5
 814 002c FFF7FEFF 		bl	block_size
 815              	.LVL63:
 857:lvgl/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 816              		.loc 1 857 2 is_stmt 1 view .LVU150
 858:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 817              		.loc 1 858 2 view .LVU151
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 818              		.loc 1 859 2 view .LVU152
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 819              		.loc 1 859 2 view .LVU153
 820 0030 2268     		ldr	r2, [r4]
 821 0032 4245     		cmp	r2, r8
 822 0034 05D1     		bne	.L49
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 823              		.loc 1 859 2 discriminator 6 view .LVU154
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 824              		.loc 1 859 2 discriminator 6 view .LVU155
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 825              		.loc 1 859 80 discriminator 6 view .LVU156
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 826              		.loc 1 860 2 discriminator 6 view .LVU157
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 827              		.loc 1 860 2 discriminator 6 view .LVU158
 828 0036 B842     		cmp	r0, r7
 829 0038 0FD1     		bne	.L50
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 830              		.loc 1 860 2 discriminator 6 view .LVU159
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 831              		.loc 1 860 2 discriminator 6 view .LVU160
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 832              		.loc 1 860 64 discriminator 6 view .LVU161
 862:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 833              		.loc 1 862 2 discriminator 6 view .LVU162
 862:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 834              		.loc 1 862 21 is_stmt 0 discriminator 6 view .LVU163
 835 003a 2660     		str	r6, [r4]
 863:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 836              		.loc 1 863 2 is_stmt 1 discriminator 6 view .LVU164
 864:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 33


 837              		.loc 1 864 1 is_stmt 0 discriminator 6 view .LVU165
 838 003c 02B0     		add	sp, sp, #8
 839              	.LCFI17:
 840              		.cfi_remember_state
 841              		.cfi_def_cfa_offset 24
 842              		@ sp needed
 843 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 844              	.LVL64:
 845              	.L49:
 846              	.LCFI18:
 847              		.cfi_restore_state
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 848              		.loc 1 859 2 is_stmt 1 discriminator 1 view .LVU166
 849 0042 0C4B     		ldr	r3, .L51
 850 0044 0193     		str	r3, [sp, #4]
 851 0046 0C4B     		ldr	r3, .L51+4
 852 0048 0093     		str	r3, [sp]
 853 004a 0C4B     		ldr	r3, .L51+8
 854 004c 40F25B32 		movw	r2, #859
 855 0050 0B49     		ldr	r1, .L51+12
 856 0052 0320     		movs	r0, #3
 857              	.LVL65:
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 858              		.loc 1 859 2 is_stmt 0 discriminator 1 view .LVU167
 859 0054 FFF7FEFF 		bl	_lv_log_add
 860              	.LVL66:
 861              	.L45:
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 862              		.loc 1 859 2 is_stmt 1 discriminator 1 view .LVU168
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 863              		.loc 1 859 2 discriminator 1 view .LVU169
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 864              		.loc 1 859 2 discriminator 1 view .LVU170
 859:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 865              		.loc 1 859 2 discriminator 1 view .LVU171
 866 0058 FEE7     		b	.L45
 867              	.LVL67:
 868              	.L50:
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 869              		.loc 1 860 2 discriminator 1 view .LVU172
 870 005a 0A4B     		ldr	r3, .L51+16
 871 005c 0193     		str	r3, [sp, #4]
 872 005e 064B     		ldr	r3, .L51+4
 873 0060 0093     		str	r3, [sp]
 874 0062 064B     		ldr	r3, .L51+8
 875 0064 4FF45772 		mov	r2, #860
 876 0068 0549     		ldr	r1, .L51+12
 877 006a 0320     		movs	r0, #3
 878              	.LVL68:
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 879              		.loc 1 860 2 is_stmt 0 discriminator 1 view .LVU173
 880 006c FFF7FEFF 		bl	_lv_log_add
 881              	.LVL69:
 882              	.L47:
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 883              		.loc 1 860 2 is_stmt 1 discriminator 2 view .LVU174
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 34


 884              		.loc 1 860 2 discriminator 2 view .LVU175
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 885              		.loc 1 860 2 discriminator 2 view .LVU176
 860:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 886              		.loc 1 860 2 discriminator 2 view .LVU177
 887 0070 FEE7     		b	.L47
 888              	.L52:
 889 0072 00BF     		.align	2
 890              	.L51:
 891 0074 00000000 		.word	.LC6
 892 0078 38000000 		.word	.LC2
 893 007c 00000000 		.word	.LANCHOR2
 894 0080 00000000 		.word	.LC0
 895 0084 44000000 		.word	.LC7
 896              		.cfi_endproc
 897              	.LFE42:
 899              		.section	.rodata.align_down.str1.4,"aMS",%progbits,1
 900              		.align	2
 901              	.LC8:
 902 0000 30203D3D 		.ascii	"0 == (align & (align - 1)) && \"must align to a pow"
 902      2028616C 
 902      69676E20 
 902      26202861 
 902      6C69676E 
 903 0032 6572206F 		.ascii	"er of two\"\000"
 903      66207477 
 903      6F2200
 904              		.section	.text.align_down,"ax",%progbits
 905              		.align	1
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	align_down:
 912              	.LVL70:
 913              	.LFB21:
 497:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 914              		.loc 1 497 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 918              		.loc 1 498 2 view .LVU179
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 919              		.loc 1 498 2 view .LVU180
 920 0000 4A1E     		subs	r2, r1, #1
 921 0002 0A42     		tst	r2, r1
 922 0004 02D1     		bne	.L59
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 923              		.loc 1 498 2 discriminator 2 view .LVU181
 499:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 924              		.loc 1 499 2 discriminator 2 view .LVU182
 499:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 925              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU183
 926 0006 4B42     		rsbs	r3, r1, #0
 500:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 927              		.loc 1 500 1 discriminator 2 view .LVU184
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 35


 928 0008 1840     		ands	r0, r0, r3
 929              	.LVL71:
 500:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 930              		.loc 1 500 1 discriminator 2 view .LVU185
 931 000a 7047     		bx	lr
 932              	.LVL72:
 933              	.L59:
 497:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 934              		.loc 1 497 1 discriminator 1 view .LVU186
 935 000c 00B5     		push	{lr}
 936              	.LCFI19:
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 14, -4
 939 000e 83B0     		sub	sp, sp, #12
 940              	.LCFI20:
 941              		.cfi_def_cfa_offset 16
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 942              		.loc 1 498 2 is_stmt 1 discriminator 1 view .LVU187
 943 0010 054B     		ldr	r3, .L60
 944 0012 0193     		str	r3, [sp, #4]
 945 0014 054B     		ldr	r3, .L60+4
 946 0016 0093     		str	r3, [sp]
 947 0018 054B     		ldr	r3, .L60+8
 948 001a 4FF4F972 		mov	r2, #498
 949 001e 0549     		ldr	r1, .L60+12
 950              	.LVL73:
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 951              		.loc 1 498 2 is_stmt 0 discriminator 1 view .LVU188
 952 0020 0320     		movs	r0, #3
 953              	.LVL74:
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 954              		.loc 1 498 2 discriminator 1 view .LVU189
 955 0022 FFF7FEFF 		bl	_lv_log_add
 956              	.LVL75:
 957              	.L55:
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 958              		.loc 1 498 2 is_stmt 1 discriminator 1 view .LVU190
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 959              		.loc 1 498 2 discriminator 1 view .LVU191
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 960              		.loc 1 498 2 discriminator 1 view .LVU192
 498:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 961              		.loc 1 498 2 discriminator 1 view .LVU193
 962 0026 FEE7     		b	.L55
 963              	.L61:
 964              		.align	2
 965              	.L60:
 966 0028 00000000 		.word	.LC8
 967 002c 38000000 		.word	.LC2
 968 0030 00000000 		.word	.LANCHOR3
 969 0034 00000000 		.word	.LC0
 970              		.cfi_endproc
 971              	.LFE21:
 973              		.section	.text.align_ptr,"ax",%progbits
 974              		.align	1
 975              		.syntax unified
 976              		.thumb
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 36


 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	align_ptr:
 981              	.LVL76:
 982              	.LFB22:
 503:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 983              		.loc 1 503 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 504:lvgl/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 987              		.loc 1 504 2 view .LVU195
 505:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 988              		.loc 1 505 30 is_stmt 0 view .LVU196
 989 0000 0844     		add	r0, r0, r1
 990              	.LVL77:
 505:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 991              		.loc 1 505 30 view .LVU197
 992 0002 0138     		subs	r0, r0, #1
 505:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 993              		.loc 1 505 47 view .LVU198
 994 0004 4A42     		rsbs	r2, r1, #0
 505:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 995              		.loc 1 505 45 view .LVU199
 996 0006 1040     		ands	r0, r0, r2
 997              	.LVL78:
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 998              		.loc 1 506 2 is_stmt 1 view .LVU200
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 999              		.loc 1 506 2 view .LVU201
 1000 0008 4A1E     		subs	r2, r1, #1
 1001 000a 0A42     		tst	r2, r1
 1002 000c 00D1     		bne	.L68
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1003              		.loc 1 506 2 discriminator 2 view .LVU202
 507:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1004              		.loc 1 507 2 discriminator 2 view .LVU203
 508:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1005              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU204
 1006 000e 7047     		bx	lr
 1007              	.L68:
 503:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 1008              		.loc 1 503 1 discriminator 1 view .LVU205
 1009 0010 00B5     		push	{lr}
 1010              	.LCFI21:
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 14, -4
 1013 0012 83B0     		sub	sp, sp, #12
 1014              	.LCFI22:
 1015              		.cfi_def_cfa_offset 16
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1016              		.loc 1 506 2 is_stmt 1 discriminator 1 view .LVU206
 1017 0014 054B     		ldr	r3, .L69
 1018 0016 0193     		str	r3, [sp, #4]
 1019 0018 054B     		ldr	r3, .L69+4
 1020 001a 0093     		str	r3, [sp]
 1021 001c 054B     		ldr	r3, .L69+8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 37


 1022 001e 4FF4FD72 		mov	r2, #506
 1023 0022 0549     		ldr	r1, .L69+12
 1024              	.LVL79:
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1025              		.loc 1 506 2 is_stmt 0 discriminator 1 view .LVU207
 1026 0024 0320     		movs	r0, #3
 1027              	.LVL80:
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1028              		.loc 1 506 2 discriminator 1 view .LVU208
 1029 0026 FFF7FEFF 		bl	_lv_log_add
 1030              	.LVL81:
 1031              	.L64:
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1032              		.loc 1 506 2 is_stmt 1 discriminator 1 view .LVU209
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1033              		.loc 1 506 2 discriminator 1 view .LVU210
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1034              		.loc 1 506 2 discriminator 1 view .LVU211
 506:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 1035              		.loc 1 506 2 discriminator 1 view .LVU212
 1036 002a FEE7     		b	.L64
 1037              	.L70:
 1038              		.align	2
 1039              	.L69:
 1040 002c 00000000 		.word	.LC8
 1041 0030 38000000 		.word	.LC2
 1042 0034 00000000 		.word	.LANCHOR4
 1043 0038 00000000 		.word	.LC0
 1044              		.cfi_endproc
 1045              	.LFE22:
 1047              		.section	.rodata.insert_free_block.str1.4,"aMS",%progbits,1
 1048              		.align	2
 1049              	.LC9:
 1050 0000 63757272 		.ascii	"current && \"free list cannot have a null entry\"\000"
 1050      656E7420 
 1050      26262022 
 1050      66726565 
 1050      206C6973 
 1051              		.align	2
 1052              	.LC10:
 1053 0030 626C6F63 		.ascii	"block && \"cannot insert a null entry into the free"
 1053      6B202626 
 1053      20226361 
 1053      6E6E6F74 
 1053      20696E73 
 1054 0062 206C6973 		.ascii	" list\"\000"
 1054      742200
 1055 0069 000000   		.align	2
 1056              	.LC11:
 1057 006c 626C6F63 		.ascii	"block_to_ptr(block) == align_ptr(block_to_ptr(block"
 1057      6B5F746F 
 1057      5F707472 
 1057      28626C6F 
 1057      636B2920 
 1058 009f 292C2041 		.ascii	"), ALIGN_SIZE) && \"block not aligned properly\"\000"
 1058      4C49474E 
 1058      5F53495A 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 38


 1058      45292026 
 1058      26202262 
 1059              		.section	.text.insert_free_block,"ax",%progbits
 1060              		.align	1
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu fpv4-sp-d16
 1066              	insert_free_block:
 1067              	.LVL82:
 1068              	.LFB28:
 628:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 1069              		.loc 1 628 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 628:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 1073              		.loc 1 628 1 is_stmt 0 view .LVU214
 1074 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1075              	.LCFI23:
 1076              		.cfi_def_cfa_offset 24
 1077              		.cfi_offset 4, -24
 1078              		.cfi_offset 5, -20
 1079              		.cfi_offset 6, -16
 1080              		.cfi_offset 7, -12
 1081              		.cfi_offset 8, -8
 1082              		.cfi_offset 14, -4
 1083 0004 82B0     		sub	sp, sp, #8
 1084              	.LCFI24:
 1085              		.cfi_def_cfa_offset 32
 1086 0006 1F46     		mov	r7, r3
 629:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 1087              		.loc 1 629 2 is_stmt 1 view .LVU215
 629:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 1088              		.loc 1 629 18 is_stmt 0 view .LVU216
 1089 0008 03EB4213 		add	r3, r3, r2, lsl #5
 1090              	.LVL83:
 629:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 1091              		.loc 1 629 18 view .LVU217
 1092 000c 0E33     		adds	r3, r3, #14
 1093 000e 50F82330 		ldr	r3, [r0, r3, lsl #2]
 1094              	.LVL84:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1095              		.loc 1 630 2 is_stmt 1 view .LVU218
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1096              		.loc 1 630 2 view .LVU219
 1097 0012 DBB1     		cbz	r3, .L79
 1098 0014 0446     		mov	r4, r0
 1099 0016 0E46     		mov	r6, r1
 1100 0018 1546     		mov	r5, r2
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1101              		.loc 1 630 2 discriminator 2 view .LVU220
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1102              		.loc 1 631 2 discriminator 2 view .LVU221
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1103              		.loc 1 631 2 discriminator 2 view .LVU222
 1104 001a 19B3     		cbz	r1, .L80
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 39


 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1105              		.loc 1 631 2 discriminator 2 view .LVU223
 632:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 1106              		.loc 1 632 2 discriminator 2 view .LVU224
 632:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 1107              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU225
 1108 001c 8B60     		str	r3, [r1, #8]
 633:lvgl/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 1109              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU226
 633:lvgl/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 1110              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU227
 1111 001e C860     		str	r0, [r1, #12]
 634:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1112              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU228
 634:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1113              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU229
 1114 0020 D960     		str	r1, [r3, #12]
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1115              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU230
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1116              		.loc 1 636 2 discriminator 2 view .LVU231
 1117 0022 0846     		mov	r0, r1
 1118              	.LVL85:
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1119              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU232
 1120 0024 FFF7FEFF 		bl	block_to_ptr
 1121              	.LVL86:
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1122              		.loc 1 636 2 discriminator 2 view .LVU233
 1123 0028 8046     		mov	r8, r0
 1124 002a 0421     		movs	r1, #4
 1125 002c FFF7FEFF 		bl	align_ptr
 1126              	.LVL87:
 1127 0030 8045     		cmp	r8, r0
 1128 0032 23D0     		beq	.L76
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1129              		.loc 1 636 2 is_stmt 1 discriminator 1 view .LVU234
 1130 0034 1C4B     		ldr	r3, .L81
 1131 0036 0193     		str	r3, [sp, #4]
 1132 0038 1C4B     		ldr	r3, .L81+4
 1133 003a 0093     		str	r3, [sp]
 1134 003c 1C4B     		ldr	r3, .L81+8
 1135 003e 4FF41F72 		mov	r2, #636
 1136 0042 1C49     		ldr	r1, .L81+12
 1137 0044 0320     		movs	r0, #3
 1138 0046 FFF7FEFF 		bl	_lv_log_add
 1139              	.LVL88:
 1140              	.L77:
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1141              		.loc 1 636 2 discriminator 3 view .LVU235
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1142              		.loc 1 636 2 discriminator 3 view .LVU236
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1143              		.loc 1 636 2 discriminator 3 view .LVU237
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1144              		.loc 1 636 2 discriminator 3 view .LVU238
 1145 004a FEE7     		b	.L77
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 40


 1146              	.LVL89:
 1147              	.L79:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1148              		.loc 1 630 2 discriminator 1 view .LVU239
 1149 004c 1A4B     		ldr	r3, .L81+16
 1150              	.LVL90:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1151              		.loc 1 630 2 is_stmt 0 discriminator 1 view .LVU240
 1152 004e 0193     		str	r3, [sp, #4]
 1153              	.LVL91:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1154              		.loc 1 630 2 discriminator 1 view .LVU241
 1155 0050 164B     		ldr	r3, .L81+4
 1156 0052 0093     		str	r3, [sp]
 1157 0054 164B     		ldr	r3, .L81+8
 1158 0056 40F27622 		movw	r2, #630
 1159              	.LVL92:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1160              		.loc 1 630 2 discriminator 1 view .LVU242
 1161 005a 1649     		ldr	r1, .L81+12
 1162              	.LVL93:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1163              		.loc 1 630 2 discriminator 1 view .LVU243
 1164 005c 0320     		movs	r0, #3
 1165              	.LVL94:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1166              		.loc 1 630 2 discriminator 1 view .LVU244
 1167 005e FFF7FEFF 		bl	_lv_log_add
 1168              	.LVL95:
 1169              	.L73:
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1170              		.loc 1 630 2 is_stmt 1 discriminator 1 view .LVU245
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1171              		.loc 1 630 2 discriminator 1 view .LVU246
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1172              		.loc 1 630 2 discriminator 1 view .LVU247
 630:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 1173              		.loc 1 630 2 discriminator 1 view .LVU248
 1174 0062 FEE7     		b	.L73
 1175              	.LVL96:
 1176              	.L80:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1177              		.loc 1 631 2 discriminator 1 view .LVU249
 1178 0064 154B     		ldr	r3, .L81+20
 1179              	.LVL97:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1180              		.loc 1 631 2 is_stmt 0 discriminator 1 view .LVU250
 1181 0066 0193     		str	r3, [sp, #4]
 1182              	.LVL98:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1183              		.loc 1 631 2 discriminator 1 view .LVU251
 1184 0068 104B     		ldr	r3, .L81+4
 1185 006a 0093     		str	r3, [sp]
 1186 006c 104B     		ldr	r3, .L81+8
 1187 006e 40F27722 		movw	r2, #631
 1188              	.LVL99:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 41


 1189              		.loc 1 631 2 discriminator 1 view .LVU252
 1190 0072 1049     		ldr	r1, .L81+12
 1191              	.LVL100:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1192              		.loc 1 631 2 discriminator 1 view .LVU253
 1193 0074 0320     		movs	r0, #3
 1194              	.LVL101:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1195              		.loc 1 631 2 discriminator 1 view .LVU254
 1196 0076 FFF7FEFF 		bl	_lv_log_add
 1197              	.LVL102:
 1198              	.L75:
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1199              		.loc 1 631 2 is_stmt 1 discriminator 2 view .LVU255
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1200              		.loc 1 631 2 discriminator 2 view .LVU256
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1201              		.loc 1 631 2 discriminator 2 view .LVU257
 631:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 1202              		.loc 1 631 2 discriminator 2 view .LVU258
 1203 007a FEE7     		b	.L75
 1204              	.L76:
 636:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 1205              		.loc 1 636 2 discriminator 2 view .LVU259
 642:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 1206              		.loc 1 642 2 discriminator 2 view .LVU260
 642:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 1207              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU261
 1208 007c 07EB4513 		add	r3, r7, r5, lsl #5
 1209 0080 0E33     		adds	r3, r3, #14
 1210 0082 44F82360 		str	r6, [r4, r3, lsl #2]
 643:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 1211              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU262
 643:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 1212              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU263
 1213 0086 0123     		movs	r3, #1
 1214 0088 03FA05F1 		lsl	r1, r3, r5
 643:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 1215              		.loc 1 643 21 discriminator 2 view .LVU264
 1216 008c 2269     		ldr	r2, [r4, #16]
 1217 008e 0A43     		orrs	r2, r2, r1
 1218 0090 2261     		str	r2, [r4, #16]
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1219              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU265
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1220              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU266
 1221 0092 BB40     		lsls	r3, r3, r7
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1222              		.loc 1 644 25 discriminator 2 view .LVU267
 1223 0094 0435     		adds	r5, r5, #4
 1224              	.LVL103:
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1225              		.loc 1 644 25 discriminator 2 view .LVU268
 1226 0096 04EB8504 		add	r4, r4, r5, lsl #2
 1227              	.LVL104:
 644:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1228              		.loc 1 644 25 discriminator 2 view .LVU269
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 42


 1229 009a 6268     		ldr	r2, [r4, #4]
 1230 009c 1343     		orrs	r3, r3, r2
 1231 009e 6360     		str	r3, [r4, #4]
 645:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1232              		.loc 1 645 1 discriminator 2 view .LVU270
 1233 00a0 02B0     		add	sp, sp, #8
 1234              	.LCFI25:
 1235              		.cfi_def_cfa_offset 24
 1236              		@ sp needed
 1237 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1238              	.LVL105:
 1239              	.L82:
 645:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1240              		.loc 1 645 1 discriminator 2 view .LVU271
 1241 00a6 00BF     		.align	2
 1242              	.L81:
 1243 00a8 6C000000 		.word	.LC11
 1244 00ac 38000000 		.word	.LC2
 1245 00b0 00000000 		.word	.LANCHOR5
 1246 00b4 00000000 		.word	.LC0
 1247 00b8 00000000 		.word	.LC9
 1248 00bc 30000000 		.word	.LC10
 1249              		.cfi_endproc
 1250              	.LFE28:
 1252              		.section	.rodata.remove_free_block.str1.4,"aMS",%progbits,1
 1253              		.align	2
 1254              	.LC12:
 1255 0000 70726576 		.ascii	"prev && \"prev_free field can not be null\"\000"
 1255      20262620 
 1255      22707265 
 1255      765F6672 
 1255      65652066 
 1256 002a 0000     		.align	2
 1257              	.LC13:
 1258 002c 6E657874 		.ascii	"next && \"next_free field can not be null\"\000"
 1258      20262620 
 1258      226E6578 
 1258      745F6672 
 1258      65652066 
 1259              		.section	.text.remove_free_block,"ax",%progbits
 1260              		.align	1
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv4-sp-d16
 1266              	remove_free_block:
 1267              	.LVL106:
 1268              	.LFB27:
 599:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 1269              		.loc 1 599 1 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 599:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 1273              		.loc 1 599 1 is_stmt 0 view .LVU273
 1274 0000 30B5     		push	{r4, r5, lr}
 1275              	.LCFI26:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 43


 1276              		.cfi_def_cfa_offset 12
 1277              		.cfi_offset 4, -12
 1278              		.cfi_offset 5, -8
 1279              		.cfi_offset 14, -4
 1280 0002 83B0     		sub	sp, sp, #12
 1281              	.LCFI27:
 1282              		.cfi_def_cfa_offset 24
 1283 0004 0C46     		mov	r4, r1
 600:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 1284              		.loc 1 600 2 is_stmt 1 view .LVU274
 600:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 1285              		.loc 1 600 18 is_stmt 0 view .LVU275
 1286 0006 CD68     		ldr	r5, [r1, #12]
 1287              	.LVL107:
 601:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 1288              		.loc 1 601 2 is_stmt 1 view .LVU276
 601:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 1289              		.loc 1 601 18 is_stmt 0 view .LVU277
 1290 0008 8968     		ldr	r1, [r1, #8]
 1291              	.LVL108:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1292              		.loc 1 602 2 is_stmt 1 view .LVU278
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1293              		.loc 1 602 2 view .LVU279
 1294 000a 5DB1     		cbz	r5, .L90
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1295              		.loc 1 602 2 discriminator 2 view .LVU280
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1296              		.loc 1 603 2 discriminator 2 view .LVU281
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1297              		.loc 1 603 2 discriminator 2 view .LVU282
 1298 000c B1B1     		cbz	r1, .L91
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1299              		.loc 1 603 2 discriminator 2 view .LVU283
 604:lvgl/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 1300              		.loc 1 604 2 discriminator 2 view .LVU284
 604:lvgl/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 1301              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU285
 1302 000e CD60     		str	r5, [r1, #12]
 605:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1303              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU286
 605:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1304              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU287
 1305 0010 A960     		str	r1, [r5, #8]
 608:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1306              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU288
 608:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1307              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU289
 1308 0012 03EB4215 		add	r5, r3, r2, lsl #5
 1309              	.LVL109:
 608:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1310              		.loc 1 608 25 discriminator 2 view .LVU290
 1311 0016 0E35     		adds	r5, r5, #14
 1312 0018 50F82550 		ldr	r5, [r0, r5, lsl #2]
 608:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1313              		.loc 1 608 5 discriminator 2 view .LVU291
 1314 001c A542     		cmp	r5, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 44


 1315 001e 19D0     		beq	.L92
 1316              	.LVL110:
 1317              	.L83:
 624:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1318              		.loc 1 624 1 view .LVU292
 1319 0020 03B0     		add	sp, sp, #12
 1320              	.LCFI28:
 1321              		.cfi_remember_state
 1322              		.cfi_def_cfa_offset 12
 1323              		@ sp needed
 1324 0022 30BD     		pop	{r4, r5, pc}
 1325              	.LVL111:
 1326              	.L90:
 1327              	.LCFI29:
 1328              		.cfi_restore_state
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1329              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU293
 1330 0024 184B     		ldr	r3, .L93
 1331              	.LVL112:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1332              		.loc 1 602 2 is_stmt 0 discriminator 1 view .LVU294
 1333 0026 0193     		str	r3, [sp, #4]
 1334 0028 184B     		ldr	r3, .L93+4
 1335 002a 0093     		str	r3, [sp]
 1336 002c 184B     		ldr	r3, .L93+8
 1337 002e 40F25A22 		movw	r2, #602
 1338              	.LVL113:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1339              		.loc 1 602 2 discriminator 1 view .LVU295
 1340 0032 1849     		ldr	r1, .L93+12
 1341              	.LVL114:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1342              		.loc 1 602 2 discriminator 1 view .LVU296
 1343 0034 0320     		movs	r0, #3
 1344              	.LVL115:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1345              		.loc 1 602 2 discriminator 1 view .LVU297
 1346 0036 FFF7FEFF 		bl	_lv_log_add
 1347              	.LVL116:
 1348              	.L85:
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1349              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU298
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1350              		.loc 1 602 2 discriminator 1 view .LVU299
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1351              		.loc 1 602 2 discriminator 1 view .LVU300
 602:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 1352              		.loc 1 602 2 discriminator 1 view .LVU301
 1353 003a FEE7     		b	.L85
 1354              	.LVL117:
 1355              	.L91:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1356              		.loc 1 603 2 discriminator 1 view .LVU302
 1357 003c 164B     		ldr	r3, .L93+16
 1358              	.LVL118:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1359              		.loc 1 603 2 is_stmt 0 discriminator 1 view .LVU303
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 45


 1360 003e 0193     		str	r3, [sp, #4]
 1361 0040 124B     		ldr	r3, .L93+4
 1362 0042 0093     		str	r3, [sp]
 1363 0044 124B     		ldr	r3, .L93+8
 1364 0046 40F25B22 		movw	r2, #603
 1365              	.LVL119:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1366              		.loc 1 603 2 discriminator 1 view .LVU304
 1367 004a 1249     		ldr	r1, .L93+12
 1368              	.LVL120:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1369              		.loc 1 603 2 discriminator 1 view .LVU305
 1370 004c 0320     		movs	r0, #3
 1371              	.LVL121:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1372              		.loc 1 603 2 discriminator 1 view .LVU306
 1373 004e FFF7FEFF 		bl	_lv_log_add
 1374              	.LVL122:
 1375              	.L87:
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1376              		.loc 1 603 2 is_stmt 1 discriminator 2 view .LVU307
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1377              		.loc 1 603 2 discriminator 2 view .LVU308
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1378              		.loc 1 603 2 discriminator 2 view .LVU309
 603:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 1379              		.loc 1 603 2 discriminator 2 view .LVU310
 1380 0052 FEE7     		b	.L87
 1381              	.LVL123:
 1382              	.L92:
 610:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1383              		.loc 1 610 3 view .LVU311
 610:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1384              		.loc 1 610 27 is_stmt 0 view .LVU312
 1385 0054 03EB4214 		add	r4, r3, r2, lsl #5
 1386              	.LVL124:
 610:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1387              		.loc 1 610 27 view .LVU313
 1388 0058 0E34     		adds	r4, r4, #14
 1389 005a 40F82410 		str	r1, [r0, r4, lsl #2]
 613:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 1390              		.loc 1 613 3 is_stmt 1 view .LVU314
 613:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 1391              		.loc 1 613 6 is_stmt 0 view .LVU315
 1392 005e 8842     		cmp	r0, r1
 1393 0060 DED1     		bne	.L83
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1394              		.loc 1 615 4 is_stmt 1 view .LVU316
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1395              		.loc 1 615 35 is_stmt 0 view .LVU317
 1396 0062 0124     		movs	r4, #1
 1397 0064 9C40     		lsls	r4, r4, r3
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1398              		.loc 1 615 27 view .LVU318
 1399 0066 111D     		adds	r1, r2, #4
 1400              	.LVL125:
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 46


 1401              		.loc 1 615 27 view .LVU319
 1402 0068 00EB8101 		add	r1, r0, r1, lsl #2
 1403 006c 4B68     		ldr	r3, [r1, #4]
 1404              	.LVL126:
 615:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1405              		.loc 1 615 27 view .LVU320
 1406 006e 23EA0403 		bic	r3, r3, r4
 1407 0072 4B60     		str	r3, [r1, #4]
 1408              	.LVL127:
 618:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 1409              		.loc 1 618 4 is_stmt 1 view .LVU321
 618:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 1410              		.loc 1 618 7 is_stmt 0 view .LVU322
 1411 0074 002B     		cmp	r3, #0
 1412 0076 D3D1     		bne	.L83
 620:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 1413              		.loc 1 620 5 is_stmt 1 view .LVU323
 620:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 1414              		.loc 1 620 32 is_stmt 0 view .LVU324
 1415 0078 0123     		movs	r3, #1
 1416 007a 03FA02F2 		lsl	r2, r3, r2
 1417              	.LVL128:
 620:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 1418              		.loc 1 620 24 view .LVU325
 1419 007e 0369     		ldr	r3, [r0, #16]
 1420 0080 23EA0203 		bic	r3, r3, r2
 1421 0084 0361     		str	r3, [r0, #16]
 624:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1422              		.loc 1 624 1 view .LVU326
 1423 0086 CBE7     		b	.L83
 1424              	.L94:
 1425              		.align	2
 1426              	.L93:
 1427 0088 00000000 		.word	.LC12
 1428 008c 38000000 		.word	.LC2
 1429 0090 00000000 		.word	.LANCHOR6
 1430 0094 00000000 		.word	.LC0
 1431 0098 2C000000 		.word	.LC13
 1432              		.cfi_endproc
 1433              	.LFE27:
 1435              		.section	.text.align_up,"ax",%progbits
 1436              		.align	1
 1437              		.syntax unified
 1438              		.thumb
 1439              		.thumb_func
 1440              		.fpu fpv4-sp-d16
 1442              	align_up:
 1443              	.LVL129:
 1444              	.LFB20:
 491:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 1445              		.loc 1 491 1 is_stmt 1 view -0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 491:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 1449              		.loc 1 491 1 is_stmt 0 view .LVU328
 1450 0000 0B46     		mov	r3, r1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 47


 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1451              		.loc 1 492 2 is_stmt 1 view .LVU329
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1452              		.loc 1 492 2 view .LVU330
 1453 0002 0139     		subs	r1, r1, #1
 1454              	.LVL130:
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1455              		.loc 1 492 2 is_stmt 0 view .LVU331
 1456 0004 1942     		tst	r1, r3
 1457 0006 05D1     		bne	.L101
 1458 0008 0246     		mov	r2, r0
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1459              		.loc 1 492 2 is_stmt 1 discriminator 2 view .LVU332
 493:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1460              		.loc 1 493 2 discriminator 2 view .LVU333
 493:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1461              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU334
 1462 000a 1A44     		add	r2, r2, r3
 1463 000c 501E     		subs	r0, r2, #1
 1464              	.LVL131:
 493:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1465              		.loc 1 493 29 discriminator 2 view .LVU335
 1466 000e 5B42     		rsbs	r3, r3, #0
 1467              	.LVL132:
 494:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1468              		.loc 1 494 1 discriminator 2 view .LVU336
 1469 0010 1840     		ands	r0, r0, r3
 1470 0012 7047     		bx	lr
 1471              	.LVL133:
 1472              	.L101:
 491:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 1473              		.loc 1 491 1 discriminator 1 view .LVU337
 1474 0014 00B5     		push	{lr}
 1475              	.LCFI30:
 1476              		.cfi_def_cfa_offset 4
 1477              		.cfi_offset 14, -4
 1478 0016 83B0     		sub	sp, sp, #12
 1479              	.LCFI31:
 1480              		.cfi_def_cfa_offset 16
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1481              		.loc 1 492 2 is_stmt 1 discriminator 1 view .LVU338
 1482 0018 054B     		ldr	r3, .L102
 1483              	.LVL134:
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1484              		.loc 1 492 2 is_stmt 0 discriminator 1 view .LVU339
 1485 001a 0193     		str	r3, [sp, #4]
 1486 001c 054B     		ldr	r3, .L102+4
 1487 001e 0093     		str	r3, [sp]
 1488 0020 054B     		ldr	r3, .L102+8
 1489 0022 4FF4F672 		mov	r2, #492
 1490 0026 0549     		ldr	r1, .L102+12
 1491              	.LVL135:
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1492              		.loc 1 492 2 discriminator 1 view .LVU340
 1493 0028 0320     		movs	r0, #3
 1494              	.LVL136:
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 48


 1495              		.loc 1 492 2 discriminator 1 view .LVU341
 1496 002a FFF7FEFF 		bl	_lv_log_add
 1497              	.LVL137:
 1498              	.L97:
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1499              		.loc 1 492 2 is_stmt 1 discriminator 1 view .LVU342
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1500              		.loc 1 492 2 discriminator 1 view .LVU343
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1501              		.loc 1 492 2 discriminator 1 view .LVU344
 492:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 1502              		.loc 1 492 2 discriminator 1 view .LVU345
 1503 002e FEE7     		b	.L97
 1504              	.L103:
 1505              		.align	2
 1506              	.L102:
 1507 0030 00000000 		.word	.LC8
 1508 0034 38000000 		.word	.LC2
 1509 0038 00000000 		.word	.LANCHOR7
 1510 003c 00000000 		.word	.LC0
 1511              		.cfi_endproc
 1512              	.LFE20:
 1514              		.section	.text.adjust_request_size,"ax",%progbits
 1515              		.align	1
 1516              		.syntax unified
 1517              		.thumb
 1518              		.thumb_func
 1519              		.fpu fpv4-sp-d16
 1521              	adjust_request_size:
 1522              	.LVL138:
 1523              	.LFB23:
 515:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 1524              		.loc 1 515 1 view -0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 515:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 1528              		.loc 1 515 1 is_stmt 0 view .LVU347
 1529 0000 08B5     		push	{r3, lr}
 1530              	.LCFI32:
 1531              		.cfi_def_cfa_offset 8
 1532              		.cfi_offset 3, -8
 1533              		.cfi_offset 14, -4
 516:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 1534              		.loc 1 516 2 is_stmt 1 view .LVU348
 1535              	.LVL139:
 517:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1536              		.loc 1 517 2 view .LVU349
 517:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1537              		.loc 1 517 5 is_stmt 0 view .LVU350
 1538 0002 00B9     		cbnz	r0, .L108
 1539              	.LVL140:
 1540              	.L105:
 527:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1541              		.loc 1 527 2 is_stmt 1 view .LVU351
 528:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1542              		.loc 1 528 1 is_stmt 0 view .LVU352
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 49


 1543 0004 08BD     		pop	{r3, pc}
 1544              	.LVL141:
 1545              	.L108:
 1546              	.LBB2:
 519:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1547              		.loc 1 519 3 is_stmt 1 view .LVU353
 519:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1548              		.loc 1 519 26 is_stmt 0 view .LVU354
 1549 0006 FFF7FEFF 		bl	align_up
 1550              	.LVL142:
 522:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 1551              		.loc 1 522 3 is_stmt 1 view .LVU355
 522:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 1552              		.loc 1 522 6 is_stmt 0 view .LVU356
 1553 000a B0F5004F 		cmp	r0, #32768
 1554 000e 03D2     		bcs	.L106
 524:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 1555              		.loc 1 524 4 is_stmt 1 view .LVU357
 524:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 1556              		.loc 1 524 11 is_stmt 0 view .LVU358
 1557 0010 0C28     		cmp	r0, #12
 1558 0012 38BF     		it	cc
 1559 0014 0C20     		movcc	r0, #12
 1560              	.LVL143:
 524:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 1561              		.loc 1 524 11 view .LVU359
 1562 0016 F5E7     		b	.L105
 1563              	.LVL144:
 1564              	.L106:
 524:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 1565              		.loc 1 524 11 view .LVU360
 1566              	.LBE2:
 516:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 1567              		.loc 1 516 9 view .LVU361
 1568 0018 0020     		movs	r0, #0
 1569              	.LVL145:
 516:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 1570              		.loc 1 516 9 view .LVU362
 1571 001a F3E7     		b	.L105
 1572              		.cfi_endproc
 1573              	.LFE23:
 1575              		.section	.rodata.block_split.str1.4,"aMS",%progbits,1
 1576              		.align	2
 1577              	.LC14:
 1578 0000 626C6F63 		.ascii	"block_to_ptr(remaining) == align_ptr(block_to_ptr(r"
 1578      6B5F746F 
 1578      5F707472 
 1578      2872656D 
 1578      61696E69 
 1579 0033 656D6169 		.ascii	"emaining), ALIGN_SIZE) && \"remaining block not ali"
 1579      6E696E67 
 1579      292C2041 
 1579      4C49474E 
 1579      5F53495A 
 1580 0065 676E6564 		.ascii	"gned properly\"\000"
 1580      2070726F 
 1580      7065726C 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 50


 1580      792200
 1581              		.align	2
 1582              	.LC15:
 1583 0074 626C6F63 		.ascii	"block_size(block) == remain_size + size + block_hea"
 1583      6B5F7369 
 1583      7A652862 
 1583      6C6F636B 
 1583      29203D3D 
 1584 00a7 6465725F 		.ascii	"der_overhead\000"
 1584      6F766572 
 1584      68656164 
 1584      00
 1585              		.align	2
 1586              	.LC16:
 1587 00b4 626C6F63 		.ascii	"block_size(remaining) >= block_size_min && \"block "
 1587      6B5F7369 
 1587      7A652872 
 1587      656D6169 
 1587      6E696E67 
 1588 00e6 73706C69 		.ascii	"split with invalid size\"\000"
 1588      74207769 
 1588      74682069 
 1588      6E76616C 
 1588      69642073 
 1589              		.section	.text.block_split,"ax",%progbits
 1590              		.align	1
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu fpv4-sp-d16
 1596              	block_split:
 1597              	.LVL146:
 1598              	.LFB32:
 670:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 1599              		.loc 1 670 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 670:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 1603              		.loc 1 670 1 is_stmt 0 view .LVU364
 1604 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1605              	.LCFI33:
 1606              		.cfi_def_cfa_offset 24
 1607              		.cfi_offset 4, -24
 1608              		.cfi_offset 5, -20
 1609              		.cfi_offset 6, -16
 1610              		.cfi_offset 7, -12
 1611              		.cfi_offset 8, -8
 1612              		.cfi_offset 14, -4
 1613 0004 82B0     		sub	sp, sp, #8
 1614              	.LCFI34:
 1615              		.cfi_def_cfa_offset 32
 1616 0006 0746     		mov	r7, r0
 1617 0008 0D46     		mov	r5, r1
 672:lvgl/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1618              		.loc 1 672 2 is_stmt 1 view .LVU365
 673:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 51


 1619              		.loc 1 673 19 is_stmt 0 view .LVU366
 1620 000a FFF7FEFF 		bl	block_to_ptr
 1621              	.LVL147:
 673:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1622              		.loc 1 673 3 view .LVU367
 1623 000e 291F     		subs	r1, r5, #4
 1624 0010 FFF7FEFF 		bl	offset_to_block
 1625              	.LVL148:
 1626 0014 0446     		mov	r4, r0
 1627              	.LVL149:
 675:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1628              		.loc 1 675 2 is_stmt 1 view .LVU368
 675:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1629              		.loc 1 675 29 is_stmt 0 view .LVU369
 1630 0016 3846     		mov	r0, r7
 1631              	.LVL150:
 675:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1632              		.loc 1 675 29 view .LVU370
 1633 0018 FFF7FEFF 		bl	block_size
 1634              	.LVL151:
 675:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1635              		.loc 1 675 47 view .LVU371
 1636 001c 461B     		subs	r6, r0, r5
 1637              	.LVL152:
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1638              		.loc 1 677 2 is_stmt 1 view .LVU372
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1639              		.loc 1 677 2 view .LVU373
 1640 001e 2046     		mov	r0, r4
 1641 0020 FFF7FEFF 		bl	block_to_ptr
 1642              	.LVL153:
 1643 0024 8046     		mov	r8, r0
 1644 0026 0421     		movs	r1, #4
 1645 0028 FFF7FEFF 		bl	align_ptr
 1646              	.LVL154:
 1647 002c 8045     		cmp	r8, r0
 1648 002e 0BD0     		beq	.L110
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1649              		.loc 1 677 2 discriminator 1 view .LVU374
 1650 0030 1F4B     		ldr	r3, .L117
 1651 0032 0193     		str	r3, [sp, #4]
 1652 0034 1F4B     		ldr	r3, .L117+4
 1653 0036 0093     		str	r3, [sp]
 1654 0038 1F4B     		ldr	r3, .L117+8
 1655 003a 40F2A522 		movw	r2, #677
 1656 003e 1F49     		ldr	r1, .L117+12
 1657 0040 0320     		movs	r0, #3
 1658 0042 FFF7FEFF 		bl	_lv_log_add
 1659              	.LVL155:
 1660              	.L111:
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1661              		.loc 1 677 2 discriminator 1 view .LVU375
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1662              		.loc 1 677 2 discriminator 1 view .LVU376
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1663              		.loc 1 677 2 discriminator 1 view .LVU377
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 52


 1664              		.loc 1 677 2 discriminator 1 view .LVU378
 1665 0046 FEE7     		b	.L111
 1666              	.L110:
 1667 0048 043E     		subs	r6, r6, #4
 1668              	.LVL156:
 677:lvgl/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 1669              		.loc 1 677 2 discriminator 2 view .LVU379
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1670              		.loc 1 680 2 discriminator 2 view .LVU380
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1671              		.loc 1 680 2 discriminator 2 view .LVU381
 1672 004a 3846     		mov	r0, r7
 1673 004c FFF7FEFF 		bl	block_size
 1674              	.LVL157:
 1675 0050 AB19     		adds	r3, r5, r6
 1676 0052 0433     		adds	r3, r3, #4
 1677 0054 9842     		cmp	r0, r3
 1678 0056 0BD0     		beq	.L112
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1679              		.loc 1 680 2 discriminator 1 view .LVU382
 1680 0058 194B     		ldr	r3, .L117+16
 1681 005a 0193     		str	r3, [sp, #4]
 1682 005c 154B     		ldr	r3, .L117+4
 1683 005e 0093     		str	r3, [sp]
 1684 0060 154B     		ldr	r3, .L117+8
 1685 0062 4FF42A72 		mov	r2, #680
 1686 0066 1549     		ldr	r1, .L117+12
 1687 0068 0320     		movs	r0, #3
 1688 006a FFF7FEFF 		bl	_lv_log_add
 1689              	.LVL158:
 1690              	.L113:
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1691              		.loc 1 680 2 discriminator 2 view .LVU383
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1692              		.loc 1 680 2 discriminator 2 view .LVU384
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1693              		.loc 1 680 2 discriminator 2 view .LVU385
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1694              		.loc 1 680 2 discriminator 2 view .LVU386
 1695 006e FEE7     		b	.L113
 1696              	.L112:
 680:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1697              		.loc 1 680 2 discriminator 2 view .LVU387
 681:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1698              		.loc 1 681 2 discriminator 2 view .LVU388
 1699 0070 3146     		mov	r1, r6
 1700 0072 2046     		mov	r0, r4
 1701 0074 FFF7FEFF 		bl	block_set_size
 1702              	.LVL159:
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1703              		.loc 1 682 2 discriminator 2 view .LVU389
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1704              		.loc 1 682 2 discriminator 2 view .LVU390
 1705 0078 2046     		mov	r0, r4
 1706 007a FFF7FEFF 		bl	block_size
 1707              	.LVL160:
 1708 007e 0B28     		cmp	r0, #11
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 53


 1709 0080 0BD8     		bhi	.L114
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1710              		.loc 1 682 2 discriminator 3 view .LVU391
 1711 0082 104B     		ldr	r3, .L117+20
 1712 0084 0193     		str	r3, [sp, #4]
 1713 0086 0B4B     		ldr	r3, .L117+4
 1714 0088 0093     		str	r3, [sp]
 1715 008a 0B4B     		ldr	r3, .L117+8
 1716 008c 40F2AA22 		movw	r2, #682
 1717 0090 0A49     		ldr	r1, .L117+12
 1718 0092 0320     		movs	r0, #3
 1719 0094 FFF7FEFF 		bl	_lv_log_add
 1720              	.LVL161:
 1721              	.L115:
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1722              		.loc 1 682 2 discriminator 3 view .LVU392
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1723              		.loc 1 682 2 discriminator 3 view .LVU393
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1724              		.loc 1 682 2 discriminator 3 view .LVU394
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1725              		.loc 1 682 2 discriminator 3 view .LVU395
 1726 0098 FEE7     		b	.L115
 1727              	.L114:
 682:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1728              		.loc 1 682 2 discriminator 4 view .LVU396
 684:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 1729              		.loc 1 684 2 discriminator 4 view .LVU397
 1730 009a 2946     		mov	r1, r5
 1731 009c 3846     		mov	r0, r7
 1732 009e FFF7FEFF 		bl	block_set_size
 1733              	.LVL162:
 685:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1734              		.loc 1 685 2 discriminator 4 view .LVU398
 1735 00a2 2046     		mov	r0, r4
 1736 00a4 FFF7FEFF 		bl	block_mark_as_free
 1737              	.LVL163:
 687:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1738              		.loc 1 687 2 discriminator 4 view .LVU399
 688:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1739              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU400
 1740 00a8 2046     		mov	r0, r4
 1741 00aa 02B0     		add	sp, sp, #8
 1742              	.LCFI35:
 1743              		.cfi_def_cfa_offset 24
 1744              		@ sp needed
 1745 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1746              	.LVL164:
 1747              	.L118:
 688:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1748              		.loc 1 688 1 discriminator 4 view .LVU401
 1749              		.align	2
 1750              	.L117:
 1751 00b0 00000000 		.word	.LC14
 1752 00b4 38000000 		.word	.LC2
 1753 00b8 00000000 		.word	.LANCHOR8
 1754 00bc 00000000 		.word	.LC0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 54


 1755 00c0 74000000 		.word	.LC15
 1756 00c4 B4000000 		.word	.LC16
 1757              		.cfi_endproc
 1758              	.LFE32:
 1760              		.section	.rodata.block_prev.str1.4,"aMS",%progbits,1
 1761              		.align	2
 1762              	.LC17:
 1763 0000 626C6F63 		.ascii	"block_is_prev_free(block) && \"previous block must "
 1763      6B5F6973 
 1763      5F707265 
 1763      765F6672 
 1763      65652862 
 1764 0032 62652066 		.ascii	"be free\"\000"
 1764      72656522 
 1764      00
 1765              		.section	.text.block_prev,"ax",%progbits
 1766              		.align	1
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
 1770              		.fpu fpv4-sp-d16
 1772              	block_prev:
 1773              	.LVL165:
 1774              	.LFB15:
 453:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 1775              		.loc 1 453 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 0
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 453:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 1779              		.loc 1 453 1 is_stmt 0 view .LVU403
 1780 0000 10B5     		push	{r4, lr}
 1781              	.LCFI36:
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 4, -8
 1784              		.cfi_offset 14, -4
 1785 0002 82B0     		sub	sp, sp, #8
 1786              	.LCFI37:
 1787              		.cfi_def_cfa_offset 16
 1788 0004 0446     		mov	r4, r0
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1789              		.loc 1 454 2 is_stmt 1 view .LVU404
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1790              		.loc 1 454 2 view .LVU405
 1791 0006 FFF7FEFF 		bl	block_is_prev_free
 1792              	.LVL166:
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1793              		.loc 1 454 2 is_stmt 0 view .LVU406
 1794 000a 10B1     		cbz	r0, .L123
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1795              		.loc 1 454 2 is_stmt 1 discriminator 4 view .LVU407
 455:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1796              		.loc 1 455 2 discriminator 4 view .LVU408
 456:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1797              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU409
 1798 000c 2068     		ldr	r0, [r4]
 1799 000e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 55


 1800              	.LCFI38:
 1801              		.cfi_remember_state
 1802              		.cfi_def_cfa_offset 8
 1803              		@ sp needed
 1804 0010 10BD     		pop	{r4, pc}
 1805              	.LVL167:
 1806              	.L123:
 1807              	.LCFI39:
 1808              		.cfi_restore_state
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1809              		.loc 1 454 2 is_stmt 1 discriminator 3 view .LVU410
 1810 0012 064B     		ldr	r3, .L124
 1811 0014 0193     		str	r3, [sp, #4]
 1812 0016 064B     		ldr	r3, .L124+4
 1813 0018 0093     		str	r3, [sp]
 1814 001a 064B     		ldr	r3, .L124+8
 1815 001c 4FF4E372 		mov	r2, #454
 1816 0020 0549     		ldr	r1, .L124+12
 1817 0022 0320     		movs	r0, #3
 1818 0024 FFF7FEFF 		bl	_lv_log_add
 1819              	.LVL168:
 1820              	.L121:
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1821              		.loc 1 454 2 discriminator 1 view .LVU411
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1822              		.loc 1 454 2 discriminator 1 view .LVU412
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1823              		.loc 1 454 2 discriminator 1 view .LVU413
 454:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 1824              		.loc 1 454 2 discriminator 1 view .LVU414
 1825 0028 FEE7     		b	.L121
 1826              	.L125:
 1827 002a 00BF     		.align	2
 1828              	.L124:
 1829 002c 00000000 		.word	.LC17
 1830 0030 38000000 		.word	.LC2
 1831 0034 00000000 		.word	.LANCHOR9
 1832 0038 00000000 		.word	.LC0
 1833              		.cfi_endproc
 1834              	.LFE15:
 1836              		.section	.rodata.block_absorb.str1.4,"aMS",%progbits,1
 1837              		.align	2
 1838              	.LC18:
 1839 0000 21626C6F 		.ascii	"!block_is_last(prev) && \"previous block can't be l"
 1839      636B5F69 
 1839      735F6C61 
 1839      73742870 
 1839      72657629 
 1840 0032 61737422 		.ascii	"ast\"\000"
 1840      00
 1841              		.section	.text.block_absorb,"ax",%progbits
 1842              		.align	1
 1843              		.syntax unified
 1844              		.thumb
 1845              		.thumb_func
 1846              		.fpu fpv4-sp-d16
 1848              	block_absorb:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 56


 1849              	.LVL169:
 1850              	.LFB33:
 692:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1851              		.loc 1 692 1 view -0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 692:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1855              		.loc 1 692 1 is_stmt 0 view .LVU416
 1856 0000 30B5     		push	{r4, r5, lr}
 1857              	.LCFI40:
 1858              		.cfi_def_cfa_offset 12
 1859              		.cfi_offset 4, -12
 1860              		.cfi_offset 5, -8
 1861              		.cfi_offset 14, -4
 1862 0002 83B0     		sub	sp, sp, #12
 1863              	.LCFI41:
 1864              		.cfi_def_cfa_offset 24
 1865 0004 0446     		mov	r4, r0
 1866 0006 0D46     		mov	r5, r1
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1867              		.loc 1 693 2 is_stmt 1 view .LVU417
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1868              		.loc 1 693 2 view .LVU418
 1869 0008 FFF7FEFF 		bl	block_is_last
 1870              	.LVL170:
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1871              		.loc 1 693 2 is_stmt 0 view .LVU419
 1872 000c 58B1     		cbz	r0, .L127
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1873              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU420
 1874 000e 0C4B     		ldr	r3, .L130
 1875 0010 0193     		str	r3, [sp, #4]
 1876 0012 0C4B     		ldr	r3, .L130+4
 1877 0014 0093     		str	r3, [sp]
 1878 0016 0C4B     		ldr	r3, .L130+8
 1879 0018 40F2B522 		movw	r2, #693
 1880 001c 0B49     		ldr	r1, .L130+12
 1881 001e 0320     		movs	r0, #3
 1882 0020 FFF7FEFF 		bl	_lv_log_add
 1883              	.LVL171:
 1884              	.L128:
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1885              		.loc 1 693 2 discriminator 1 view .LVU421
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1886              		.loc 1 693 2 discriminator 1 view .LVU422
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1887              		.loc 1 693 2 discriminator 1 view .LVU423
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1888              		.loc 1 693 2 discriminator 1 view .LVU424
 1889 0024 FEE7     		b	.L128
 1890              	.L127:
 693:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 1891              		.loc 1 693 2 discriminator 2 view .LVU425
 695:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1892              		.loc 1 695 2 discriminator 2 view .LVU426
 695:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 57


 1893              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU427
 1894 0026 2846     		mov	r0, r5
 1895 0028 FFF7FEFF 		bl	block_size
 1896              	.LVL172:
 695:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1897              		.loc 1 695 34 discriminator 2 view .LVU428
 1898 002c 021D     		adds	r2, r0, #4
 695:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1899              		.loc 1 695 13 discriminator 2 view .LVU429
 1900 002e 6368     		ldr	r3, [r4, #4]
 1901 0030 1344     		add	r3, r3, r2
 1902 0032 6360     		str	r3, [r4, #4]
 696:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1903              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU430
 1904 0034 2046     		mov	r0, r4
 1905 0036 FFF7FEFF 		bl	block_link_next
 1906              	.LVL173:
 697:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1907              		.loc 1 697 2 discriminator 2 view .LVU431
 698:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1908              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU432
 1909 003a 2046     		mov	r0, r4
 1910 003c 03B0     		add	sp, sp, #12
 1911              	.LCFI42:
 1912              		.cfi_def_cfa_offset 12
 1913              		@ sp needed
 1914 003e 30BD     		pop	{r4, r5, pc}
 1915              	.LVL174:
 1916              	.L131:
 698:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1917              		.loc 1 698 1 discriminator 2 view .LVU433
 1918              		.align	2
 1919              	.L130:
 1920 0040 00000000 		.word	.LC18
 1921 0044 38000000 		.word	.LC2
 1922 0048 00000000 		.word	.LANCHOR10
 1923 004c 00000000 		.word	.LC0
 1924              		.cfi_endproc
 1925              	.LFE33:
 1927              		.section	.text.tlsf_fls,"ax",%progbits
 1928              		.align	1
 1929              		.syntax unified
 1930              		.thumb
 1931              		.thumb_func
 1932              		.fpu fpv4-sp-d16
 1934              	tlsf_fls:
 1935              	.LVL175:
 1936              	.LFB2:
 101:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1937              		.loc 1 101 1 is_stmt 1 view -0
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 0
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941              		@ link register save eliminated.
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1942              		.loc 1 102 2 view .LVU435
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 58


 1943              		.loc 1 102 50 is_stmt 0 view .LVU436
 1944 0000 28B1     		cbz	r0, .L134
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1945              		.loc 1 102 30 discriminator 1 view .LVU437
 1946 0002 B0FA80F0 		clz	r0, r0
 1947              	.LVL176:
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1948              		.loc 1 102 50 discriminator 1 view .LVU438
 1949 0006 C0F12000 		rsb	r0, r0, #32
 1950              	.L133:
 1951              	.LVL177:
 103:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 1952              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU439
 104:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1953              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU440
 1954 000a 0138     		subs	r0, r0, #1
 1955              	.LVL178:
 104:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 1956              		.loc 1 104 1 discriminator 4 view .LVU441
 1957 000c 7047     		bx	lr
 1958              	.LVL179:
 1959              	.L134:
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1960              		.loc 1 102 50 view .LVU442
 1961 000e 0020     		movs	r0, #0
 1962              	.LVL180:
 102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1963              		.loc 1 102 50 view .LVU443
 1964 0010 FBE7     		b	.L133
 1965              		.cfi_endproc
 1966              	.LFE2:
 1968              		.section	.text.mapping_insert,"ax",%progbits
 1969              		.align	1
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu fpv4-sp-d16
 1975              	mapping_insert:
 1976              	.LVL181:
 1977              	.LFB24:
 536:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1978              		.loc 1 536 1 is_stmt 1 view -0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 536:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1982              		.loc 1 536 1 is_stmt 0 view .LVU445
 1983 0000 70B5     		push	{r4, r5, r6, lr}
 1984              	.LCFI43:
 1985              		.cfi_def_cfa_offset 16
 1986              		.cfi_offset 4, -16
 1987              		.cfi_offset 5, -12
 1988              		.cfi_offset 6, -8
 1989              		.cfi_offset 14, -4
 1990 0002 0446     		mov	r4, r0
 1991 0004 0D46     		mov	r5, r1
 1992 0006 1646     		mov	r6, r2
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 59


 537:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1993              		.loc 1 537 2 is_stmt 1 view .LVU446
 538:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1994              		.loc 1 538 2 view .LVU447
 538:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 1995              		.loc 1 538 5 is_stmt 0 view .LVU448
 1996 0008 7F28     		cmp	r0, #127
 1997 000a 08D8     		bhi	.L136
 541:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1998              		.loc 1 541 3 is_stmt 1 view .LVU449
 1999              	.LVL182:
 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2000              		.loc 1 542 3 view .LVU450
 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2001              		.loc 1 542 6 is_stmt 0 view .LVU451
 2002 000c 0028     		cmp	r0, #0
 2003 000e 04DB     		blt	.L140
 2004              	.LVL183:
 2005              	.L137:
 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2006              		.loc 1 542 6 view .LVU452
 2007 0010 8410     		asrs	r4, r0, #2
 2008              	.LVL184:
 541:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 2009              		.loc 1 541 6 view .LVU453
 2010 0012 0020     		movs	r0, #0
 2011              	.LVL185:
 2012              	.L138:
 550:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2013              		.loc 1 550 2 is_stmt 1 view .LVU454
 550:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2014              		.loc 1 550 7 is_stmt 0 view .LVU455
 2015 0014 2860     		str	r0, [r5]
 551:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2016              		.loc 1 551 2 is_stmt 1 view .LVU456
 551:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2017              		.loc 1 551 7 is_stmt 0 view .LVU457
 2018 0016 3460     		str	r4, [r6]
 552:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2019              		.loc 1 552 1 view .LVU458
 2020 0018 70BD     		pop	{r4, r5, r6, pc}
 2021              	.LVL186:
 2022              	.L140:
 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2023              		.loc 1 542 6 view .LVU459
 2024 001a 0330     		adds	r0, r0, #3
 2025              	.LVL187:
 542:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2026              		.loc 1 542 6 view .LVU460
 2027 001c F8E7     		b	.L137
 2028              	.LVL188:
 2029              	.L136:
 546:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 2030              		.loc 1 546 3 is_stmt 1 view .LVU461
 546:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 2031              		.loc 1 546 8 is_stmt 0 view .LVU462
 2032 001e FFF7FEFF 		bl	tlsf_fls
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 60


 2033              	.LVL189:
 547:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 2034              		.loc 1 547 3 is_stmt 1 view .LVU463
 547:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 2035              		.loc 1 547 8 is_stmt 0 view .LVU464
 2036 0022 431F     		subs	r3, r0, #5
 2037 0024 DC40     		lsrs	r4, r4, r3
 2038              	.LVL190:
 547:lvgl/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 2039              		.loc 1 547 6 view .LVU465
 2040 0026 84F02004 		eor	r4, r4, #32
 2041              	.LVL191:
 548:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2042              		.loc 1 548 3 is_stmt 1 view .LVU466
 548:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2043              		.loc 1 548 6 is_stmt 0 view .LVU467
 2044 002a 0638     		subs	r0, r0, #6
 2045              	.LVL192:
 548:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2046              		.loc 1 548 6 view .LVU468
 2047 002c F2E7     		b	.L138
 2048              		.cfi_endproc
 2049              	.LFE24:
 2051              		.section	.text.block_insert,"ax",%progbits
 2052              		.align	1
 2053              		.syntax unified
 2054              		.thumb
 2055              		.thumb_func
 2056              		.fpu fpv4-sp-d16
 2058              	block_insert:
 2059              	.LVL193:
 2060              	.LFB30:
 657:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 2061              		.loc 1 657 1 is_stmt 1 view -0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 657:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 2065              		.loc 1 657 1 is_stmt 0 view .LVU470
 2066 0000 30B5     		push	{r4, r5, lr}
 2067              	.LCFI44:
 2068              		.cfi_def_cfa_offset 12
 2069              		.cfi_offset 4, -12
 2070              		.cfi_offset 5, -8
 2071              		.cfi_offset 14, -4
 2072 0002 83B0     		sub	sp, sp, #12
 2073              	.LCFI45:
 2074              		.cfi_def_cfa_offset 24
 2075 0004 0546     		mov	r5, r0
 2076 0006 0C46     		mov	r4, r1
 658:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 2077              		.loc 1 658 2 is_stmt 1 view .LVU471
 659:lvgl/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 2078              		.loc 1 659 2 view .LVU472
 2079 0008 0846     		mov	r0, r1
 2080              	.LVL194:
 659:lvgl/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 61


 2081              		.loc 1 659 2 is_stmt 0 view .LVU473
 2082 000a FFF7FEFF 		bl	block_size
 2083              	.LVL195:
 659:lvgl/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 2084              		.loc 1 659 2 view .LVU474
 2085 000e 6A46     		mov	r2, sp
 2086 0010 01A9     		add	r1, sp, #4
 2087 0012 FFF7FEFF 		bl	mapping_insert
 2088              	.LVL196:
 660:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2089              		.loc 1 660 2 is_stmt 1 view .LVU475
 2090 0016 009B     		ldr	r3, [sp]
 2091 0018 019A     		ldr	r2, [sp, #4]
 2092 001a 2146     		mov	r1, r4
 2093 001c 2846     		mov	r0, r5
 2094 001e FFF7FEFF 		bl	insert_free_block
 2095              	.LVL197:
 661:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2096              		.loc 1 661 1 is_stmt 0 view .LVU476
 2097 0022 03B0     		add	sp, sp, #12
 2098              	.LCFI46:
 2099              		.cfi_def_cfa_offset 12
 2100              		@ sp needed
 2101 0024 30BD     		pop	{r4, r5, pc}
 661:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2102              		.loc 1 661 1 view .LVU477
 2103              		.cfi_endproc
 2104              	.LFE30:
 2106              		.section	.rodata.block_trim_free.str1.4,"aMS",%progbits,1
 2107              		.align	2
 2108              	.LC19:
 2109 0000 626C6F63 		.ascii	"block_is_free(block) && \"block must be free\"\000"
 2109      6B5F6973 
 2109      5F667265 
 2109      6528626C 
 2109      6F636B29 
 2110              		.section	.text.block_trim_free,"ax",%progbits
 2111              		.align	1
 2112              		.syntax unified
 2113              		.thumb
 2114              		.thumb_func
 2115              		.fpu fpv4-sp-d16
 2117              	block_trim_free:
 2118              	.LVL198:
 2119              	.LFB36:
 733:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 2120              		.loc 1 733 1 is_stmt 1 view -0
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 0
 2123              		@ frame_needed = 0, uses_anonymous_args = 0
 733:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 2124              		.loc 1 733 1 is_stmt 0 view .LVU479
 2125 0000 70B5     		push	{r4, r5, r6, lr}
 2126              	.LCFI47:
 2127              		.cfi_def_cfa_offset 16
 2128              		.cfi_offset 4, -16
 2129              		.cfi_offset 5, -12
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 62


 2130              		.cfi_offset 6, -8
 2131              		.cfi_offset 14, -4
 2132 0002 82B0     		sub	sp, sp, #8
 2133              	.LCFI48:
 2134              		.cfi_def_cfa_offset 24
 2135 0004 0646     		mov	r6, r0
 2136 0006 0C46     		mov	r4, r1
 2137 0008 1546     		mov	r5, r2
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2138              		.loc 1 734 2 is_stmt 1 view .LVU480
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2139              		.loc 1 734 2 view .LVU481
 2140 000a 0846     		mov	r0, r1
 2141              	.LVL199:
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2142              		.loc 1 734 2 is_stmt 0 view .LVU482
 2143 000c FFF7FEFF 		bl	block_is_free
 2144              	.LVL200:
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2145              		.loc 1 734 2 view .LVU483
 2146 0010 30B1     		cbz	r0, .L148
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2147              		.loc 1 734 2 is_stmt 1 discriminator 4 view .LVU484
 735:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2148              		.loc 1 735 2 discriminator 4 view .LVU485
 735:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2149              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU486
 2150 0012 2946     		mov	r1, r5
 2151 0014 2046     		mov	r0, r4
 2152 0016 FFF7FEFF 		bl	block_can_split
 2153              	.LVL201:
 735:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2154              		.loc 1 735 5 discriminator 4 view .LVU487
 2155 001a 68B9     		cbnz	r0, .L149
 2156              	.LVL202:
 2157              	.L143:
 742:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2158              		.loc 1 742 1 view .LVU488
 2159 001c 02B0     		add	sp, sp, #8
 2160              	.LCFI49:
 2161              		.cfi_remember_state
 2162              		.cfi_def_cfa_offset 16
 2163              		@ sp needed
 2164 001e 70BD     		pop	{r4, r5, r6, pc}
 2165              	.LVL203:
 2166              	.L148:
 2167              	.LCFI50:
 2168              		.cfi_restore_state
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2169              		.loc 1 734 2 is_stmt 1 discriminator 3 view .LVU489
 2170 0020 0D4B     		ldr	r3, .L150
 2171 0022 0193     		str	r3, [sp, #4]
 2172 0024 0D4B     		ldr	r3, .L150+4
 2173 0026 0093     		str	r3, [sp]
 2174 0028 0D4B     		ldr	r3, .L150+8
 2175 002a 40F2DE22 		movw	r2, #734
 2176 002e 0D49     		ldr	r1, .L150+12
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 63


 2177 0030 0320     		movs	r0, #3
 2178 0032 FFF7FEFF 		bl	_lv_log_add
 2179              	.LVL204:
 2180              	.L145:
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2181              		.loc 1 734 2 discriminator 1 view .LVU490
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2182              		.loc 1 734 2 discriminator 1 view .LVU491
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2183              		.loc 1 734 2 discriminator 1 view .LVU492
 734:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2184              		.loc 1 734 2 discriminator 1 view .LVU493
 2185 0036 FEE7     		b	.L145
 2186              	.L149:
 2187              	.LBB3:
 737:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 2188              		.loc 1 737 3 view .LVU494
 737:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 2189              		.loc 1 737 37 is_stmt 0 view .LVU495
 2190 0038 2946     		mov	r1, r5
 2191 003a 2046     		mov	r0, r4
 2192 003c FFF7FEFF 		bl	block_split
 2193              	.LVL205:
 2194 0040 0546     		mov	r5, r0
 2195              	.LVL206:
 738:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2196              		.loc 1 738 3 is_stmt 1 view .LVU496
 2197 0042 2046     		mov	r0, r4
 2198              	.LVL207:
 738:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2199              		.loc 1 738 3 is_stmt 0 view .LVU497
 2200 0044 FFF7FEFF 		bl	block_link_next
 2201              	.LVL208:
 739:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2202              		.loc 1 739 3 is_stmt 1 view .LVU498
 2203 0048 2846     		mov	r0, r5
 2204 004a FFF7FEFF 		bl	block_set_prev_free
 2205              	.LVL209:
 740:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2206              		.loc 1 740 3 view .LVU499
 2207 004e 2946     		mov	r1, r5
 2208 0050 3046     		mov	r0, r6
 2209 0052 FFF7FEFF 		bl	block_insert
 2210              	.LVL210:
 2211              	.LBE3:
 742:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2212              		.loc 1 742 1 is_stmt 0 view .LVU500
 2213 0056 E1E7     		b	.L143
 2214              	.L151:
 2215              		.align	2
 2216              	.L150:
 2217 0058 00000000 		.word	.LC19
 2218 005c 38000000 		.word	.LC2
 2219 0060 00000000 		.word	.LANCHOR11
 2220 0064 00000000 		.word	.LC0
 2221              		.cfi_endproc
 2222              	.LFE36:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 64


 2224              		.section	.rodata.block_prepare_used.str1.4,"aMS",%progbits,1
 2225              		.align	2
 2226              	.LC20:
 2227 0000 73697A65 		.ascii	"size && \"size must be non-zero\"\000"
 2227      20262620 
 2227      2273697A 
 2227      65206D75 
 2227      73742062 
 2228              		.section	.text.block_prepare_used,"ax",%progbits
 2229              		.align	1
 2230              		.syntax unified
 2231              		.thumb
 2232              		.thumb_func
 2233              		.fpu fpv4-sp-d16
 2235              	block_prepare_used:
 2236              	.LVL211:
 2237              	.LFB40:
 806:lvgl/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 2238              		.loc 1 806 1 is_stmt 1 view -0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 0
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 806:lvgl/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 2242              		.loc 1 806 1 is_stmt 0 view .LVU502
 2243 0000 10B5     		push	{r4, lr}
 2244              	.LCFI51:
 2245              		.cfi_def_cfa_offset 8
 2246              		.cfi_offset 4, -8
 2247              		.cfi_offset 14, -4
 2248 0002 82B0     		sub	sp, sp, #8
 2249              	.LCFI52:
 2250              		.cfi_def_cfa_offset 16
 807:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 2251              		.loc 1 807 2 is_stmt 1 view .LVU503
 2252              	.LVL212:
 808:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2253              		.loc 1 808 2 view .LVU504
 808:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2254              		.loc 1 808 5 is_stmt 0 view .LVU505
 2255 0004 0C46     		mov	r4, r1
 2256 0006 A9B1     		cbz	r1, .L153
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2257              		.loc 1 810 3 is_stmt 1 view .LVU506
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2258              		.loc 1 810 3 view .LVU507
 2259 0008 5AB9     		cbnz	r2, .L154
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2260              		.loc 1 810 3 discriminator 1 view .LVU508
 2261 000a 0C4B     		ldr	r3, .L157
 2262 000c 0193     		str	r3, [sp, #4]
 2263 000e 0C4B     		ldr	r3, .L157+4
 2264 0010 0093     		str	r3, [sp]
 2265 0012 0C4B     		ldr	r3, .L157+8
 2266 0014 40F22A32 		movw	r2, #810
 2267              	.LVL213:
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2268              		.loc 1 810 3 is_stmt 0 discriminator 1 view .LVU509
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 65


 2269 0018 0B49     		ldr	r1, .L157+12
 2270              	.LVL214:
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2271              		.loc 1 810 3 discriminator 1 view .LVU510
 2272 001a 0320     		movs	r0, #3
 2273              	.LVL215:
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2274              		.loc 1 810 3 discriminator 1 view .LVU511
 2275 001c FFF7FEFF 		bl	_lv_log_add
 2276              	.LVL216:
 2277              	.L155:
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2278              		.loc 1 810 3 is_stmt 1 discriminator 1 view .LVU512
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2279              		.loc 1 810 3 discriminator 1 view .LVU513
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2280              		.loc 1 810 3 discriminator 1 view .LVU514
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2281              		.loc 1 810 3 discriminator 1 view .LVU515
 2282 0020 FEE7     		b	.L155
 2283              	.LVL217:
 2284              	.L154:
 810:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 2285              		.loc 1 810 3 discriminator 2 view .LVU516
 811:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 2286              		.loc 1 811 3 discriminator 2 view .LVU517
 2287 0022 FFF7FEFF 		bl	block_trim_free
 2288              	.LVL218:
 812:lvgl/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 2289              		.loc 1 812 3 discriminator 2 view .LVU518
 2290 0026 2046     		mov	r0, r4
 2291 0028 FFF7FEFF 		bl	block_mark_as_used
 2292              	.LVL219:
 813:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2293              		.loc 1 813 3 discriminator 2 view .LVU519
 813:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2294              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU520
 2295 002c 2046     		mov	r0, r4
 2296 002e FFF7FEFF 		bl	block_to_ptr
 2297              	.LVL220:
 2298 0032 0446     		mov	r4, r0
 2299              	.LVL221:
 2300              	.L153:
 815:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2301              		.loc 1 815 2 is_stmt 1 view .LVU521
 816:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2302              		.loc 1 816 1 is_stmt 0 view .LVU522
 2303 0034 2046     		mov	r0, r4
 2304 0036 02B0     		add	sp, sp, #8
 2305              	.LCFI53:
 2306              		.cfi_def_cfa_offset 8
 2307              		@ sp needed
 2308 0038 10BD     		pop	{r4, pc}
 2309              	.LVL222:
 2310              	.L158:
 816:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2311              		.loc 1 816 1 view .LVU523
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 66


 2312 003a 00BF     		.align	2
 2313              	.L157:
 2314 003c 00000000 		.word	.LC20
 2315 0040 38000000 		.word	.LC2
 2316 0044 00000000 		.word	.LANCHOR12
 2317 0048 00000000 		.word	.LC0
 2318              		.cfi_endproc
 2319              	.LFE40:
 2321              		.section	.text.block_trim_free_leading,"ax",%progbits
 2322              		.align	1
 2323              		.syntax unified
 2324              		.thumb
 2325              		.thumb_func
 2326              		.fpu fpv4-sp-d16
 2328              	block_trim_free_leading:
 2329              	.LVL223:
 2330              	.LFB38:
 760:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 2331              		.loc 1 760 1 is_stmt 1 view -0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 760:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 2335              		.loc 1 760 1 is_stmt 0 view .LVU525
 2336 0000 70B5     		push	{r4, r5, r6, lr}
 2337              	.LCFI54:
 2338              		.cfi_def_cfa_offset 16
 2339              		.cfi_offset 4, -16
 2340              		.cfi_offset 5, -12
 2341              		.cfi_offset 6, -8
 2342              		.cfi_offset 14, -4
 2343 0002 0646     		mov	r6, r0
 2344 0004 0C46     		mov	r4, r1
 2345 0006 1546     		mov	r5, r2
 761:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2346              		.loc 1 761 2 is_stmt 1 view .LVU526
 2347              	.LVL224:
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2348              		.loc 1 762 2 view .LVU527
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2349              		.loc 1 762 6 is_stmt 0 view .LVU528
 2350 0008 1146     		mov	r1, r2
 2351              	.LVL225:
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2352              		.loc 1 762 6 view .LVU529
 2353 000a 2046     		mov	r0, r4
 2354              	.LVL226:
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2355              		.loc 1 762 6 view .LVU530
 2356 000c FFF7FEFF 		bl	block_can_split
 2357              	.LVL227:
 762:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2358              		.loc 1 762 5 view .LVU531
 2359 0010 08B9     		cbnz	r0, .L162
 2360              	.LVL228:
 2361              	.L160:
 772:lvgl/lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 67


 2362              		.loc 1 772 2 is_stmt 1 view .LVU532
 773:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2363              		.loc 1 773 1 is_stmt 0 view .LVU533
 2364 0012 2046     		mov	r0, r4
 2365 0014 70BD     		pop	{r4, r5, r6, pc}
 2366              	.LVL229:
 2367              	.L162:
 765:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2368              		.loc 1 765 3 is_stmt 1 view .LVU534
 765:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2369              		.loc 1 765 21 is_stmt 0 view .LVU535
 2370 0016 291F     		subs	r1, r5, #4
 2371 0018 2046     		mov	r0, r4
 2372 001a FFF7FEFF 		bl	block_split
 2373              	.LVL230:
 2374 001e 0546     		mov	r5, r0
 2375              	.LVL231:
 766:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2376              		.loc 1 766 3 is_stmt 1 view .LVU536
 2377 0020 FFF7FEFF 		bl	block_set_prev_free
 2378              	.LVL232:
 768:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 2379              		.loc 1 768 3 view .LVU537
 2380 0024 2046     		mov	r0, r4
 2381 0026 FFF7FEFF 		bl	block_link_next
 2382              	.LVL233:
 769:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2383              		.loc 1 769 3 view .LVU538
 2384 002a 2146     		mov	r1, r4
 2385 002c 3046     		mov	r0, r6
 2386 002e FFF7FEFF 		bl	block_insert
 2387              	.LVL234:
 765:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2388              		.loc 1 765 21 is_stmt 0 view .LVU539
 2389 0032 2C46     		mov	r4, r5
 2390              	.LVL235:
 765:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 2391              		.loc 1 765 21 view .LVU540
 2392 0034 EDE7     		b	.L160
 2393              		.cfi_endproc
 2394              	.LFE38:
 2396              		.section	.text.block_remove,"ax",%progbits
 2397              		.align	1
 2398              		.syntax unified
 2399              		.thumb
 2400              		.thumb_func
 2401              		.fpu fpv4-sp-d16
 2403              	block_remove:
 2404              	.LVL236:
 2405              	.LFB29:
 649:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 2406              		.loc 1 649 1 is_stmt 1 view -0
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 8
 2409              		@ frame_needed = 0, uses_anonymous_args = 0
 649:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 2410              		.loc 1 649 1 is_stmt 0 view .LVU542
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 68


 2411 0000 30B5     		push	{r4, r5, lr}
 2412              	.LCFI55:
 2413              		.cfi_def_cfa_offset 12
 2414              		.cfi_offset 4, -12
 2415              		.cfi_offset 5, -8
 2416              		.cfi_offset 14, -4
 2417 0002 83B0     		sub	sp, sp, #12
 2418              	.LCFI56:
 2419              		.cfi_def_cfa_offset 24
 2420 0004 0546     		mov	r5, r0
 2421 0006 0C46     		mov	r4, r1
 650:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 2422              		.loc 1 650 2 is_stmt 1 view .LVU543
 651:lvgl/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 2423              		.loc 1 651 2 view .LVU544
 2424 0008 0846     		mov	r0, r1
 2425              	.LVL237:
 651:lvgl/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 2426              		.loc 1 651 2 is_stmt 0 view .LVU545
 2427 000a FFF7FEFF 		bl	block_size
 2428              	.LVL238:
 651:lvgl/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 2429              		.loc 1 651 2 view .LVU546
 2430 000e 6A46     		mov	r2, sp
 2431 0010 01A9     		add	r1, sp, #4
 2432 0012 FFF7FEFF 		bl	mapping_insert
 2433              	.LVL239:
 652:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2434              		.loc 1 652 2 is_stmt 1 view .LVU547
 2435 0016 009B     		ldr	r3, [sp]
 2436 0018 019A     		ldr	r2, [sp, #4]
 2437 001a 2146     		mov	r1, r4
 2438 001c 2846     		mov	r0, r5
 2439 001e FFF7FEFF 		bl	remove_free_block
 2440              	.LVL240:
 653:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2441              		.loc 1 653 1 is_stmt 0 view .LVU548
 2442 0022 03B0     		add	sp, sp, #12
 2443              	.LCFI57:
 2444              		.cfi_def_cfa_offset 12
 2445              		@ sp needed
 2446 0024 30BD     		pop	{r4, r5, pc}
 653:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2447              		.loc 1 653 1 view .LVU549
 2448              		.cfi_endproc
 2449              	.LFE29:
 2451              		.section	.rodata.block_merge_prev.str1.4,"aMS",%progbits,1
 2452              		.align	2
 2453              	.LC21:
 2454 0000 70726576 		.ascii	"prev && \"prev physical block can't be null\"\000"
 2454      20262620 
 2454      22707265 
 2454      76207068 
 2454      79736963 
 2455              		.align	2
 2456              	.LC22:
 2457 002c 626C6F63 		.ascii	"block_is_free(prev) && \"prev block is not free tho"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 69


 2457      6B5F6973 
 2457      5F667265 
 2457      65287072 
 2457      65762920 
 2458 005e 75676820 		.ascii	"ugh marked as such\"\000"
 2458      6D61726B 
 2458      65642061 
 2458      73207375 
 2458      63682200 
 2459              		.section	.text.block_merge_prev,"ax",%progbits
 2460              		.align	1
 2461              		.syntax unified
 2462              		.thumb
 2463              		.thumb_func
 2464              		.fpu fpv4-sp-d16
 2466              	block_merge_prev:
 2467              	.LVL241:
 2468              	.LFB34:
 702:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 2469              		.loc 1 702 1 is_stmt 1 view -0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 702:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 2473              		.loc 1 702 1 is_stmt 0 view .LVU551
 2474 0000 70B5     		push	{r4, r5, r6, lr}
 2475              	.LCFI58:
 2476              		.cfi_def_cfa_offset 16
 2477              		.cfi_offset 4, -16
 2478              		.cfi_offset 5, -12
 2479              		.cfi_offset 6, -8
 2480              		.cfi_offset 14, -4
 2481 0002 82B0     		sub	sp, sp, #8
 2482              	.LCFI59:
 2483              		.cfi_def_cfa_offset 24
 2484 0004 0646     		mov	r6, r0
 2485 0006 0C46     		mov	r4, r1
 703:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2486              		.loc 1 703 2 is_stmt 1 view .LVU552
 703:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2487              		.loc 1 703 6 is_stmt 0 view .LVU553
 2488 0008 0846     		mov	r0, r1
 2489              	.LVL242:
 703:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2490              		.loc 1 703 6 view .LVU554
 2491 000a FFF7FEFF 		bl	block_is_prev_free
 2492              	.LVL243:
 703:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2493              		.loc 1 703 5 view .LVU555
 2494 000e 10B9     		cbnz	r0, .L172
 2495              	.L166:
 712:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2496              		.loc 1 712 2 is_stmt 1 view .LVU556
 713:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2497              		.loc 1 713 1 is_stmt 0 view .LVU557
 2498 0010 2046     		mov	r0, r4
 2499 0012 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 70


 2500              	.LCFI60:
 2501              		.cfi_remember_state
 2502              		.cfi_def_cfa_offset 16
 2503              		@ sp needed
 2504 0014 70BD     		pop	{r4, r5, r6, pc}
 2505              	.LVL244:
 2506              	.L172:
 2507              	.LCFI61:
 2508              		.cfi_restore_state
 2509              	.LBB4:
 705:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 2510              		.loc 1 705 3 is_stmt 1 view .LVU558
 705:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 2511              		.loc 1 705 26 is_stmt 0 view .LVU559
 2512 0016 2046     		mov	r0, r4
 2513 0018 FFF7FEFF 		bl	block_prev
 2514              	.LVL245:
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2515              		.loc 1 706 3 is_stmt 1 view .LVU560
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2516              		.loc 1 706 3 view .LVU561
 2517 001c 0546     		mov	r5, r0
 2518 001e 70B1     		cbz	r0, .L173
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2519              		.loc 1 706 3 discriminator 2 view .LVU562
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2520              		.loc 1 707 3 discriminator 2 view .LVU563
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2521              		.loc 1 707 3 discriminator 2 view .LVU564
 2522 0020 FFF7FEFF 		bl	block_is_free
 2523              	.LVL246:
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2524              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU565
 2525 0024 B8B9     		cbnz	r0, .L169
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2526              		.loc 1 707 3 is_stmt 1 discriminator 3 view .LVU566
 2527 0026 114B     		ldr	r3, .L174
 2528 0028 0193     		str	r3, [sp, #4]
 2529 002a 114B     		ldr	r3, .L174+4
 2530 002c 0093     		str	r3, [sp]
 2531 002e 114B     		ldr	r3, .L174+8
 2532 0030 40F2C322 		movw	r2, #707
 2533 0034 1049     		ldr	r1, .L174+12
 2534 0036 0320     		movs	r0, #3
 2535 0038 FFF7FEFF 		bl	_lv_log_add
 2536              	.LVL247:
 2537              	.L170:
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2538              		.loc 1 707 3 discriminator 2 view .LVU567
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2539              		.loc 1 707 3 discriminator 2 view .LVU568
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2540              		.loc 1 707 3 discriminator 2 view .LVU569
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2541              		.loc 1 707 3 discriminator 2 view .LVU570
 2542 003c FEE7     		b	.L170
 2543              	.LVL248:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 71


 2544              	.L173:
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2545              		.loc 1 706 3 discriminator 1 view .LVU571
 2546 003e 0F4B     		ldr	r3, .L174+16
 2547 0040 0193     		str	r3, [sp, #4]
 2548 0042 0B4B     		ldr	r3, .L174+4
 2549 0044 0093     		str	r3, [sp]
 2550 0046 0B4B     		ldr	r3, .L174+8
 2551 0048 40F2C222 		movw	r2, #706
 2552 004c 0A49     		ldr	r1, .L174+12
 2553 004e 0320     		movs	r0, #3
 2554              	.LVL249:
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2555              		.loc 1 706 3 is_stmt 0 discriminator 1 view .LVU572
 2556 0050 FFF7FEFF 		bl	_lv_log_add
 2557              	.LVL250:
 2558              	.L168:
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2559              		.loc 1 706 3 is_stmt 1 discriminator 1 view .LVU573
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2560              		.loc 1 706 3 discriminator 1 view .LVU574
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2561              		.loc 1 706 3 discriminator 1 view .LVU575
 706:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 2562              		.loc 1 706 3 discriminator 1 view .LVU576
 2563 0054 FEE7     		b	.L168
 2564              	.L169:
 707:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 2565              		.loc 1 707 3 discriminator 4 view .LVU577
 708:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 2566              		.loc 1 708 3 discriminator 4 view .LVU578
 2567 0056 2946     		mov	r1, r5
 2568 0058 3046     		mov	r0, r6
 2569 005a FFF7FEFF 		bl	block_remove
 2570              	.LVL251:
 709:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2571              		.loc 1 709 3 discriminator 4 view .LVU579
 709:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2572              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU580
 2573 005e 2146     		mov	r1, r4
 2574 0060 2846     		mov	r0, r5
 2575 0062 FFF7FEFF 		bl	block_absorb
 2576              	.LVL252:
 2577 0066 0446     		mov	r4, r0
 2578              	.LVL253:
 709:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2579              		.loc 1 709 11 discriminator 4 view .LVU581
 2580 0068 D2E7     		b	.L166
 2581              	.L175:
 2582 006a 00BF     		.align	2
 2583              	.L174:
 2584 006c 2C000000 		.word	.LC22
 2585 0070 38000000 		.word	.LC2
 2586 0074 00000000 		.word	.LANCHOR13
 2587 0078 00000000 		.word	.LC0
 2588 007c 00000000 		.word	.LC21
 2589              	.LBE4:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 72


 2590              		.cfi_endproc
 2591              	.LFE34:
 2593              		.section	.rodata.block_merge_next.str1.4,"aMS",%progbits,1
 2594              		.align	2
 2595              	.LC23:
 2596 0000 6E657874 		.ascii	"next && \"next physical block can't be null\"\000"
 2596      20262620 
 2596      226E6578 
 2596      74207068 
 2596      79736963 
 2597              		.align	2
 2598              	.LC24:
 2599 002c 21626C6F 		.ascii	"!block_is_last(block) && \"previous block can't be "
 2599      636B5F69 
 2599      735F6C61 
 2599      73742862 
 2599      6C6F636B 
 2600 005e 6C617374 		.ascii	"last\"\000"
 2600      2200
 2601              		.section	.text.block_merge_next,"ax",%progbits
 2602              		.align	1
 2603              		.syntax unified
 2604              		.thumb
 2605              		.thumb_func
 2606              		.fpu fpv4-sp-d16
 2608              	block_merge_next:
 2609              	.LVL254:
 2610              	.LFB35:
 717:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 2611              		.loc 1 717 1 is_stmt 1 view -0
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 0, uses_anonymous_args = 0
 717:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 2615              		.loc 1 717 1 is_stmt 0 view .LVU583
 2616 0000 70B5     		push	{r4, r5, r6, lr}
 2617              	.LCFI62:
 2618              		.cfi_def_cfa_offset 16
 2619              		.cfi_offset 4, -16
 2620              		.cfi_offset 5, -12
 2621              		.cfi_offset 6, -8
 2622              		.cfi_offset 14, -4
 2623 0002 82B0     		sub	sp, sp, #8
 2624              	.LCFI63:
 2625              		.cfi_def_cfa_offset 24
 2626 0004 0646     		mov	r6, r0
 2627 0006 0C46     		mov	r4, r1
 718:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 2628              		.loc 1 718 2 is_stmt 1 view .LVU584
 718:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 2629              		.loc 1 718 25 is_stmt 0 view .LVU585
 2630 0008 0846     		mov	r0, r1
 2631              	.LVL255:
 718:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 2632              		.loc 1 718 25 view .LVU586
 2633 000a FFF7FEFF 		bl	block_next
 2634              	.LVL256:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 73


 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2635              		.loc 1 719 2 is_stmt 1 view .LVU587
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2636              		.loc 1 719 2 view .LVU588
 2637 000e 98B1     		cbz	r0, .L183
 2638 0010 0546     		mov	r5, r0
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2639              		.loc 1 719 2 discriminator 2 view .LVU589
 721:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2640              		.loc 1 721 2 discriminator 2 view .LVU590
 721:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2641              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU591
 2642 0012 FFF7FEFF 		bl	block_is_free
 2643              	.LVL257:
 721:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2644              		.loc 1 721 5 discriminator 2 view .LVU592
 2645 0016 20B3     		cbz	r0, .L179
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2646              		.loc 1 723 3 is_stmt 1 view .LVU593
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2647              		.loc 1 723 3 view .LVU594
 2648 0018 2046     		mov	r0, r4
 2649 001a FFF7FEFF 		bl	block_is_last
 2650              	.LVL258:
 2651 001e B8B1     		cbz	r0, .L180
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2652              		.loc 1 723 3 discriminator 1 view .LVU595
 2653 0020 114B     		ldr	r3, .L184
 2654 0022 0193     		str	r3, [sp, #4]
 2655 0024 114B     		ldr	r3, .L184+4
 2656 0026 0093     		str	r3, [sp]
 2657 0028 114B     		ldr	r3, .L184+8
 2658 002a 40F2D322 		movw	r2, #723
 2659 002e 1149     		ldr	r1, .L184+12
 2660 0030 0320     		movs	r0, #3
 2661 0032 FFF7FEFF 		bl	_lv_log_add
 2662              	.LVL259:
 2663              	.L181:
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2664              		.loc 1 723 3 discriminator 2 view .LVU596
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2665              		.loc 1 723 3 discriminator 2 view .LVU597
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2666              		.loc 1 723 3 discriminator 2 view .LVU598
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2667              		.loc 1 723 3 discriminator 2 view .LVU599
 2668 0036 FEE7     		b	.L181
 2669              	.LVL260:
 2670              	.L183:
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2671              		.loc 1 719 2 discriminator 1 view .LVU600
 2672 0038 0F4B     		ldr	r3, .L184+16
 2673 003a 0193     		str	r3, [sp, #4]
 2674 003c 0B4B     		ldr	r3, .L184+4
 2675 003e 0093     		str	r3, [sp]
 2676 0040 0B4B     		ldr	r3, .L184+8
 2677 0042 40F2CF22 		movw	r2, #719
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 74


 2678 0046 0B49     		ldr	r1, .L184+12
 2679 0048 0320     		movs	r0, #3
 2680              	.LVL261:
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2681              		.loc 1 719 2 is_stmt 0 discriminator 1 view .LVU601
 2682 004a FFF7FEFF 		bl	_lv_log_add
 2683              	.LVL262:
 2684              	.L178:
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2685              		.loc 1 719 2 is_stmt 1 discriminator 1 view .LVU602
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2686              		.loc 1 719 2 discriminator 1 view .LVU603
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2687              		.loc 1 719 2 discriminator 1 view .LVU604
 719:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2688              		.loc 1 719 2 discriminator 1 view .LVU605
 2689 004e FEE7     		b	.L178
 2690              	.LVL263:
 2691              	.L180:
 723:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 2692              		.loc 1 723 3 discriminator 2 view .LVU606
 724:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 2693              		.loc 1 724 3 discriminator 2 view .LVU607
 2694 0050 2946     		mov	r1, r5
 2695 0052 3046     		mov	r0, r6
 2696 0054 FFF7FEFF 		bl	block_remove
 2697              	.LVL264:
 725:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2698              		.loc 1 725 3 discriminator 2 view .LVU608
 725:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2699              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU609
 2700 0058 2946     		mov	r1, r5
 2701 005a 2046     		mov	r0, r4
 2702 005c FFF7FEFF 		bl	block_absorb
 2703              	.LVL265:
 2704 0060 0446     		mov	r4, r0
 2705              	.LVL266:
 2706              	.L179:
 728:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2707              		.loc 1 728 2 is_stmt 1 view .LVU610
 729:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2708              		.loc 1 729 1 is_stmt 0 view .LVU611
 2709 0062 2046     		mov	r0, r4
 2710 0064 02B0     		add	sp, sp, #8
 2711              	.LCFI64:
 2712              		.cfi_def_cfa_offset 16
 2713              		@ sp needed
 2714 0066 70BD     		pop	{r4, r5, r6, pc}
 2715              	.LVL267:
 2716              	.L185:
 729:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2717              		.loc 1 729 1 view .LVU612
 2718              		.align	2
 2719              	.L184:
 2720 0068 2C000000 		.word	.LC24
 2721 006c 38000000 		.word	.LC2
 2722 0070 00000000 		.word	.LANCHOR14
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 75


 2723 0074 00000000 		.word	.LC0
 2724 0078 00000000 		.word	.LC23
 2725              		.cfi_endproc
 2726              	.LFE35:
 2728              		.section	.rodata.block_trim_used.str1.4,"aMS",%progbits,1
 2729              		.align	2
 2730              	.LC25:
 2731 0000 21626C6F 		.ascii	"!block_is_free(block) && \"block must be used\"\000"
 2731      636B5F69 
 2731      735F6672 
 2731      65652862 
 2731      6C6F636B 
 2732              		.section	.text.block_trim_used,"ax",%progbits
 2733              		.align	1
 2734              		.syntax unified
 2735              		.thumb
 2736              		.thumb_func
 2737              		.fpu fpv4-sp-d16
 2739              	block_trim_used:
 2740              	.LVL268:
 2741              	.LFB37:
 746:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2742              		.loc 1 746 1 is_stmt 1 view -0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 0
 2745              		@ frame_needed = 0, uses_anonymous_args = 0
 746:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2746              		.loc 1 746 1 is_stmt 0 view .LVU614
 2747 0000 70B5     		push	{r4, r5, r6, lr}
 2748              	.LCFI65:
 2749              		.cfi_def_cfa_offset 16
 2750              		.cfi_offset 4, -16
 2751              		.cfi_offset 5, -12
 2752              		.cfi_offset 6, -8
 2753              		.cfi_offset 14, -4
 2754 0002 82B0     		sub	sp, sp, #8
 2755              	.LCFI66:
 2756              		.cfi_def_cfa_offset 24
 2757 0004 0546     		mov	r5, r0
 2758 0006 0C46     		mov	r4, r1
 2759 0008 1646     		mov	r6, r2
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2760              		.loc 1 747 2 is_stmt 1 view .LVU615
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2761              		.loc 1 747 2 view .LVU616
 2762 000a 0846     		mov	r0, r1
 2763              	.LVL269:
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2764              		.loc 1 747 2 is_stmt 0 view .LVU617
 2765 000c FFF7FEFF 		bl	block_is_free
 2766              	.LVL270:
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2767              		.loc 1 747 2 view .LVU618
 2768 0010 30B9     		cbnz	r0, .L191
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2769              		.loc 1 747 2 is_stmt 1 discriminator 2 view .LVU619
 748:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 76


 2770              		.loc 1 748 2 discriminator 2 view .LVU620
 748:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2771              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU621
 2772 0012 3146     		mov	r1, r6
 2773 0014 2046     		mov	r0, r4
 2774 0016 FFF7FEFF 		bl	block_can_split
 2775              	.LVL271:
 748:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2776              		.loc 1 748 5 discriminator 2 view .LVU622
 2777 001a 68B9     		cbnz	r0, .L192
 2778              	.LVL272:
 2779              	.L186:
 757:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2780              		.loc 1 757 1 view .LVU623
 2781 001c 02B0     		add	sp, sp, #8
 2782              	.LCFI67:
 2783              		.cfi_remember_state
 2784              		.cfi_def_cfa_offset 16
 2785              		@ sp needed
 2786 001e 70BD     		pop	{r4, r5, r6, pc}
 2787              	.LVL273:
 2788              	.L191:
 2789              	.LCFI68:
 2790              		.cfi_restore_state
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2791              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU624
 2792 0020 0D4B     		ldr	r3, .L193
 2793 0022 0193     		str	r3, [sp, #4]
 2794 0024 0D4B     		ldr	r3, .L193+4
 2795 0026 0093     		str	r3, [sp]
 2796 0028 0D4B     		ldr	r3, .L193+8
 2797 002a 40F2EB22 		movw	r2, #747
 2798 002e 0D49     		ldr	r1, .L193+12
 2799 0030 0320     		movs	r0, #3
 2800 0032 FFF7FEFF 		bl	_lv_log_add
 2801              	.LVL274:
 2802              	.L188:
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2803              		.loc 1 747 2 discriminator 1 view .LVU625
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2804              		.loc 1 747 2 discriminator 1 view .LVU626
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2805              		.loc 1 747 2 discriminator 1 view .LVU627
 747:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2806              		.loc 1 747 2 discriminator 1 view .LVU628
 2807 0036 FEE7     		b	.L188
 2808              	.L192:
 2809              	.LBB5:
 751:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2810              		.loc 1 751 3 view .LVU629
 751:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2811              		.loc 1 751 37 is_stmt 0 view .LVU630
 2812 0038 3146     		mov	r1, r6
 2813 003a 2046     		mov	r0, r4
 2814 003c FFF7FEFF 		bl	block_split
 2815              	.LVL275:
 2816 0040 0446     		mov	r4, r0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 77


 2817              	.LVL276:
 752:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2818              		.loc 1 752 3 is_stmt 1 view .LVU631
 2819 0042 FFF7FEFF 		bl	block_set_prev_used
 2820              	.LVL277:
 754:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2821              		.loc 1 754 3 view .LVU632
 754:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2822              		.loc 1 754 21 is_stmt 0 view .LVU633
 2823 0046 2146     		mov	r1, r4
 2824 0048 2846     		mov	r0, r5
 2825 004a FFF7FEFF 		bl	block_merge_next
 2826              	.LVL278:
 2827 004e 0146     		mov	r1, r0
 2828              	.LVL279:
 755:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2829              		.loc 1 755 3 is_stmt 1 view .LVU634
 2830 0050 2846     		mov	r0, r5
 2831              	.LVL280:
 755:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2832              		.loc 1 755 3 is_stmt 0 view .LVU635
 2833 0052 FFF7FEFF 		bl	block_insert
 2834              	.LVL281:
 755:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2835              		.loc 1 755 3 view .LVU636
 2836              	.LBE5:
 757:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2837              		.loc 1 757 1 view .LVU637
 2838 0056 E1E7     		b	.L186
 2839              	.L194:
 2840              		.align	2
 2841              	.L193:
 2842 0058 00000000 		.word	.LC25
 2843 005c 38000000 		.word	.LC2
 2844 0060 00000000 		.word	.LANCHOR15
 2845 0064 00000000 		.word	.LC0
 2846              		.cfi_endproc
 2847              	.LFE37:
 2849              		.section	.text.mapping_search,"ax",%progbits
 2850              		.align	1
 2851              		.syntax unified
 2852              		.thumb
 2853              		.thumb_func
 2854              		.fpu fpv4-sp-d16
 2856              	mapping_search:
 2857              	.LVL282:
 2858              	.LFB25:
 556:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2859              		.loc 1 556 1 is_stmt 1 view -0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 0, uses_anonymous_args = 0
 556:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2863              		.loc 1 556 1 is_stmt 0 view .LVU639
 2864 0000 70B5     		push	{r4, r5, r6, lr}
 2865              	.LCFI69:
 2866              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 78


 2867              		.cfi_offset 4, -16
 2868              		.cfi_offset 5, -12
 2869              		.cfi_offset 6, -8
 2870              		.cfi_offset 14, -4
 2871 0002 0446     		mov	r4, r0
 2872 0004 0D46     		mov	r5, r1
 2873 0006 1646     		mov	r6, r2
 557:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2874              		.loc 1 557 2 is_stmt 1 view .LVU640
 557:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2875              		.loc 1 557 5 is_stmt 0 view .LVU641
 2876 0008 7F28     		cmp	r0, #127
 2877 000a 06D9     		bls	.L196
 2878              	.LBB6:
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2879              		.loc 1 559 3 is_stmt 1 view .LVU642
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2880              		.loc 1 559 31 is_stmt 0 view .LVU643
 2881 000c FFF7FEFF 		bl	tlsf_fls
 2882              	.LVL283:
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2883              		.loc 1 559 52 view .LVU644
 2884 0010 431F     		subs	r3, r0, #5
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2885              		.loc 1 559 27 view .LVU645
 2886 0012 0120     		movs	r0, #1
 2887 0014 9840     		lsls	r0, r0, r3
 559:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2888              		.loc 1 559 76 view .LVU646
 2889 0016 0138     		subs	r0, r0, #1
 2890              	.LVL284:
 560:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2891              		.loc 1 560 3 is_stmt 1 view .LVU647
 560:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2892              		.loc 1 560 8 is_stmt 0 view .LVU648
 2893 0018 0444     		add	r4, r4, r0
 2894              	.LVL285:
 2895              	.L196:
 560:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 2896              		.loc 1 560 8 view .LVU649
 2897              	.LBE6:
 562:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2898              		.loc 1 562 2 is_stmt 1 view .LVU650
 2899 001a 3246     		mov	r2, r6
 2900 001c 2946     		mov	r1, r5
 2901 001e 2046     		mov	r0, r4
 2902 0020 FFF7FEFF 		bl	mapping_insert
 2903              	.LVL286:
 563:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2904              		.loc 1 563 1 is_stmt 0 view .LVU651
 2905 0024 70BD     		pop	{r4, r5, r6, pc}
 563:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2906              		.loc 1 563 1 view .LVU652
 2907              		.cfi_endproc
 2908              	.LFE25:
 2910              		.section	.text.tlsf_ffs,"ax",%progbits
 2911              		.align	1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 79


 2912              		.syntax unified
 2913              		.thumb
 2914              		.thumb_func
 2915              		.fpu fpv4-sp-d16
 2917              	tlsf_ffs:
 2918              	.LVL287:
 2919              	.LFB1:
  94:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2920              		.loc 1 94 1 is_stmt 1 view -0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 0
 2923              		@ frame_needed = 0, uses_anonymous_args = 0
 2924              		@ link register save eliminated.
  94:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2925              		.loc 1 94 1 is_stmt 0 view .LVU654
 2926 0000 0346     		mov	r3, r0
  95:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2927              		.loc 1 95 2 is_stmt 1 view .LVU655
  95:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2928              		.loc 1 95 9 is_stmt 0 view .LVU656
 2929 0002 90FAA0F0 		rbit	r0, r0
 2930              	.LVL288:
  95:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 2931              		.loc 1 95 9 view .LVU657
 2932 0006 B0FA80F0 		clz	r0, r0
 2933 000a 0BB9     		cbnz	r3, .L199
 2934 000c 4FF0FF30 		mov	r0, #-1
 2935              	.L199:
  96:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2936              		.loc 1 96 1 view .LVU658
 2937 0010 7047     		bx	lr
 2938              		.cfi_endproc
 2939              	.LFE1:
 2941              		.section	.rodata.search_suitable_block.str1.4,"aMS",%progbits,1
 2942              		.align	2
 2943              	.LC26:
 2944 0000 736C5F6D 		.ascii	"sl_map && \"internal error - second level bitmap is"
 2944      61702026 
 2944      26202269 
 2944      6E746572 
 2944      6E616C20 
 2945 0032 206E756C 		.ascii	" null\"\000"
 2945      6C2200
 2946              		.section	.text.search_suitable_block,"ax",%progbits
 2947              		.align	1
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	search_suitable_block:
 2954              	.LVL289:
 2955              	.LFB26:
 566:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2956              		.loc 1 566 1 is_stmt 1 view -0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 0
 2959              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 80


 566:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2960              		.loc 1 566 1 is_stmt 0 view .LVU660
 2961 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2962              	.LCFI70:
 2963              		.cfi_def_cfa_offset 20
 2964              		.cfi_offset 4, -20
 2965              		.cfi_offset 5, -16
 2966              		.cfi_offset 6, -12
 2967              		.cfi_offset 7, -8
 2968              		.cfi_offset 14, -4
 2969 0002 83B0     		sub	sp, sp, #12
 2970              	.LCFI71:
 2971              		.cfi_def_cfa_offset 32
 2972 0004 0546     		mov	r5, r0
 2973 0006 1646     		mov	r6, r2
 567:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2974              		.loc 1 567 2 is_stmt 1 view .LVU661
 567:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2975              		.loc 1 567 6 is_stmt 0 view .LVU662
 2976 0008 0C68     		ldr	r4, [r1]
 2977              	.LVL290:
 568:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2978              		.loc 1 568 2 is_stmt 1 view .LVU663
 568:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 2979              		.loc 1 568 6 is_stmt 0 view .LVU664
 2980 000a 1268     		ldr	r2, [r2]
 2981              	.LVL291:
 574:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2982              		.loc 1 574 2 is_stmt 1 view .LVU665
 574:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2983              		.loc 1 574 42 is_stmt 0 view .LVU666
 2984 000c 231D     		adds	r3, r4, #4
 2985 000e 00EB8303 		add	r3, r0, r3, lsl #2
 2986 0012 5868     		ldr	r0, [r3, #4]
 2987              	.LVL292:
 574:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2988              		.loc 1 574 54 view .LVU667
 2989 0014 4FF0FF33 		mov	r3, #-1
 2990 0018 9340     		lsls	r3, r3, r2
 2991              	.LVL293:
 575:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2992              		.loc 1 575 2 is_stmt 1 view .LVU668
 575:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2993              		.loc 1 575 5 is_stmt 0 view .LVU669
 2994 001a 1840     		ands	r0, r0, r3
 2995              	.LVL294:
 575:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 2996              		.loc 1 575 5 view .LVU670
 2997 001c 0FD1     		bne	.L201
 2998 001e 0F46     		mov	r7, r1
 2999              	.LBB7:
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 3000              		.loc 1 578 3 is_stmt 1 view .LVU671
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 3001              		.loc 1 578 38 is_stmt 0 view .LVU672
 3002 0020 2B69     		ldr	r3, [r5, #16]
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 81


 3003              		.loc 1 578 64 view .LVU673
 3004 0022 0134     		adds	r4, r4, #1
 3005              	.LVL295:
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 3006              		.loc 1 578 57 view .LVU674
 3007 0024 4FF0FF30 		mov	r0, #-1
 3008              	.LVL296:
 578:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 3009              		.loc 1 578 57 view .LVU675
 3010 0028 A040     		lsls	r0, r0, r4
 3011              	.LVL297:
 579:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3012              		.loc 1 579 3 is_stmt 1 view .LVU676
 579:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3013              		.loc 1 579 6 is_stmt 0 view .LVU677
 3014 002a 1840     		ands	r0, r3, r0
 3015              	.LVL298:
 579:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3016              		.loc 1 579 6 view .LVU678
 3017 002c 1ED0     		beq	.L205
 585:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 3018              		.loc 1 585 3 is_stmt 1 view .LVU679
 585:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 3019              		.loc 1 585 8 is_stmt 0 view .LVU680
 3020 002e FFF7FEFF 		bl	tlsf_ffs
 3021              	.LVL299:
 585:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 3022              		.loc 1 585 8 view .LVU681
 3023 0032 0446     		mov	r4, r0
 3024              	.LVL300:
 586:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 3025              		.loc 1 586 3 is_stmt 1 view .LVU682
 586:lvgl/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 3026              		.loc 1 586 8 is_stmt 0 view .LVU683
 3027 0034 3860     		str	r0, [r7]
 587:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 3028              		.loc 1 587 3 is_stmt 1 view .LVU684
 587:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 3029              		.loc 1 587 10 is_stmt 0 view .LVU685
 3030 0036 031D     		adds	r3, r0, #4
 3031 0038 05EB8303 		add	r3, r5, r3, lsl #2
 3032 003c 5868     		ldr	r0, [r3, #4]
 3033              	.LVL301:
 3034              	.L201:
 587:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 3035              		.loc 1 587 10 view .LVU686
 3036              	.LBE7:
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3037              		.loc 1 589 2 is_stmt 1 view .LVU687
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3038              		.loc 1 589 2 view .LVU688
 3039 003e 48B1     		cbz	r0, .L207
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3040              		.loc 1 589 2 discriminator 2 view .LVU689
 590:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 3041              		.loc 1 590 2 discriminator 2 view .LVU690
 590:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 82


 3042              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU691
 3043 0040 FFF7FEFF 		bl	tlsf_ffs
 3044              	.LVL302:
 591:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3045              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU692
 591:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3046              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU693
 3047 0044 3060     		str	r0, [r6]
 594:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3048              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU694
 594:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3049              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU695
 3050 0046 00EB4413 		add	r3, r0, r4, lsl #5
 3051 004a 0E33     		adds	r3, r3, #14
 3052 004c 55F82300 		ldr	r0, [r5, r3, lsl #2]
 3053              	.LVL303:
 3054              	.L200:
 595:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3055              		.loc 1 595 1 view .LVU696
 3056 0050 03B0     		add	sp, sp, #12
 3057              	.LCFI72:
 3058              		.cfi_remember_state
 3059              		.cfi_def_cfa_offset 20
 3060              		@ sp needed
 3061 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 3062              	.LVL304:
 3063              	.L207:
 3064              	.LCFI73:
 3065              		.cfi_restore_state
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3066              		.loc 1 589 2 is_stmt 1 discriminator 1 view .LVU697
 3067 0054 064B     		ldr	r3, .L208
 3068 0056 0193     		str	r3, [sp, #4]
 3069 0058 064B     		ldr	r3, .L208+4
 3070 005a 0093     		str	r3, [sp]
 3071 005c 064B     		ldr	r3, .L208+8
 3072 005e 40F24D22 		movw	r2, #589
 3073 0062 0649     		ldr	r1, .L208+12
 3074 0064 0320     		movs	r0, #3
 3075              	.LVL305:
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3076              		.loc 1 589 2 is_stmt 0 discriminator 1 view .LVU698
 3077 0066 FFF7FEFF 		bl	_lv_log_add
 3078              	.LVL306:
 3079              	.L204:
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3080              		.loc 1 589 2 is_stmt 1 discriminator 1 view .LVU699
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3081              		.loc 1 589 2 discriminator 1 view .LVU700
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3082              		.loc 1 589 2 discriminator 1 view .LVU701
 589:lvgl/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 3083              		.loc 1 589 2 discriminator 1 view .LVU702
 3084 006a FEE7     		b	.L204
 3085              	.LVL307:
 3086              	.L205:
 3087              	.LBB8:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 83


 582:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 3088              		.loc 1 582 11 is_stmt 0 view .LVU703
 3089 006c 0020     		movs	r0, #0
 3090              	.LVL308:
 582:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 3091              		.loc 1 582 11 view .LVU704
 3092 006e EFE7     		b	.L200
 3093              	.L209:
 3094              		.align	2
 3095              	.L208:
 3096 0070 00000000 		.word	.LC26
 3097 0074 38000000 		.word	.LC2
 3098 0078 00000000 		.word	.LANCHOR16
 3099 007c 00000000 		.word	.LC0
 3100              	.LBE8:
 3101              		.cfi_endproc
 3102              	.LFE26:
 3104              		.section	.rodata.block_locate_free.str1.4,"aMS",%progbits,1
 3105              		.align	2
 3106              	.LC27:
 3107 0000 626C6F63 		.ascii	"block_size(block) >= size\000"
 3107      6B5F7369 
 3107      7A652862 
 3107      6C6F636B 
 3107      29203E3D 
 3108              		.section	.text.block_locate_free,"ax",%progbits
 3109              		.align	1
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu fpv4-sp-d16
 3115              	block_locate_free:
 3116              	.LVL309:
 3117              	.LFB39:
 776:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3118              		.loc 1 776 1 is_stmt 1 view -0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 8
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 776:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3122              		.loc 1 776 1 is_stmt 0 view .LVU706
 3123 0000 70B5     		push	{r4, r5, r6, lr}
 3124              	.LCFI74:
 3125              		.cfi_def_cfa_offset 16
 3126              		.cfi_offset 4, -16
 3127              		.cfi_offset 5, -12
 3128              		.cfi_offset 6, -8
 3129              		.cfi_offset 14, -4
 3130 0002 84B0     		sub	sp, sp, #16
 3131              	.LCFI75:
 3132              		.cfi_def_cfa_offset 32
 777:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 3133              		.loc 1 777 2 is_stmt 1 view .LVU707
 777:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 3134              		.loc 1 777 6 is_stmt 0 view .LVU708
 3135 0004 0023     		movs	r3, #0
 3136 0006 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 84


 777:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 3137              		.loc 1 777 14 view .LVU709
 3138 0008 0293     		str	r3, [sp, #8]
 778:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3139              		.loc 1 778 2 is_stmt 1 view .LVU710
 3140              	.LVL310:
 780:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3141              		.loc 1 780 2 view .LVU711
 780:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3142              		.loc 1 780 5 is_stmt 0 view .LVU712
 3143 000a 39B3     		cbz	r1, .L214
 3144 000c 0546     		mov	r5, r0
 3145 000e 0E46     		mov	r6, r1
 782:lvgl/lvgl/src/misc/lv_tlsf.c **** 		
 3146              		.loc 1 782 3 is_stmt 1 view .LVU713
 3147 0010 02AA     		add	r2, sp, #8
 3148 0012 03A9     		add	r1, sp, #12
 3149              	.LVL311:
 782:lvgl/lvgl/src/misc/lv_tlsf.c **** 		
 3150              		.loc 1 782 3 is_stmt 0 view .LVU714
 3151 0014 3046     		mov	r0, r6
 3152              	.LVL312:
 782:lvgl/lvgl/src/misc/lv_tlsf.c **** 		
 3153              		.loc 1 782 3 view .LVU715
 3154 0016 FFF7FEFF 		bl	mapping_search
 3155              	.LVL313:
 790:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3156              		.loc 1 790 3 is_stmt 1 view .LVU716
 790:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3157              		.loc 1 790 10 is_stmt 0 view .LVU717
 3158 001a 039B     		ldr	r3, [sp, #12]
 790:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3159              		.loc 1 790 6 view .LVU718
 3160 001c 082B     		cmp	r3, #8
 3161 001e 21DC     		bgt	.L215
 792:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 3162              		.loc 1 792 4 is_stmt 1 view .LVU719
 792:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
 3163              		.loc 1 792 12 is_stmt 0 view .LVU720
 3164 0020 02AA     		add	r2, sp, #8
 3165 0022 03A9     		add	r1, sp, #12
 3166 0024 2846     		mov	r0, r5
 3167 0026 FFF7FEFF 		bl	search_suitable_block
 3168              	.LVL314:
 796:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3169              		.loc 1 796 2 is_stmt 1 view .LVU721
 796:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3170              		.loc 1 796 5 is_stmt 0 view .LVU722
 3171 002a 0446     		mov	r4, r0
 3172 002c B8B1     		cbz	r0, .L210
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3173              		.loc 1 798 3 is_stmt 1 view .LVU723
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3174              		.loc 1 798 3 view .LVU724
 3175 002e FFF7FEFF 		bl	block_size
 3176              	.LVL315:
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 85


 3177              		.loc 1 798 3 is_stmt 0 view .LVU725
 3178 0032 B042     		cmp	r0, r6
 3179 0034 0BD2     		bcs	.L212
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3180              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU726
 3181 0036 0C4B     		ldr	r3, .L217
 3182 0038 0193     		str	r3, [sp, #4]
 3183 003a 0C4B     		ldr	r3, .L217+4
 3184 003c 0093     		str	r3, [sp]
 3185 003e 0C4B     		ldr	r3, .L217+8
 3186 0040 40F21E32 		movw	r2, #798
 3187 0044 0B49     		ldr	r1, .L217+12
 3188 0046 0320     		movs	r0, #3
 3189 0048 FFF7FEFF 		bl	_lv_log_add
 3190              	.LVL316:
 3191              	.L213:
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3192              		.loc 1 798 3 discriminator 1 view .LVU727
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3193              		.loc 1 798 3 discriminator 1 view .LVU728
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3194              		.loc 1 798 3 discriminator 1 view .LVU729
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3195              		.loc 1 798 3 discriminator 1 view .LVU730
 3196 004c FEE7     		b	.L213
 3197              	.L212:
 798:lvgl/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 3198              		.loc 1 798 3 discriminator 2 view .LVU731
 799:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 3199              		.loc 1 799 3 discriminator 2 view .LVU732
 3200 004e 029B     		ldr	r3, [sp, #8]
 3201 0050 039A     		ldr	r2, [sp, #12]
 3202 0052 2146     		mov	r1, r4
 3203 0054 2846     		mov	r0, r5
 3204 0056 FFF7FEFF 		bl	remove_free_block
 3205              	.LVL317:
 3206 005a 00E0     		b	.L210
 3207              	.LVL318:
 3208              	.L214:
 778:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3209              		.loc 1 778 18 is_stmt 0 view .LVU733
 3210 005c 0024     		movs	r4, #0
 3211              	.LVL319:
 3212              	.L210:
 803:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3213              		.loc 1 803 1 view .LVU734
 3214 005e 2046     		mov	r0, r4
 3215 0060 04B0     		add	sp, sp, #16
 3216              	.LCFI76:
 3217              		.cfi_remember_state
 3218              		.cfi_def_cfa_offset 16
 3219              		@ sp needed
 3220 0062 70BD     		pop	{r4, r5, r6, pc}
 3221              	.LVL320:
 3222              	.L215:
 3223              	.LCFI77:
 3224              		.cfi_restore_state
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 86


 778:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3225              		.loc 1 778 18 view .LVU735
 3226 0064 0024     		movs	r4, #0
 3227              	.LVL321:
 802:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3228              		.loc 1 802 2 is_stmt 1 view .LVU736
 802:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3229              		.loc 1 802 9 is_stmt 0 view .LVU737
 3230 0066 FAE7     		b	.L210
 3231              	.L218:
 3232              		.align	2
 3233              	.L217:
 3234 0068 00000000 		.word	.LC27
 3235 006c 38000000 		.word	.LC2
 3236 0070 00000000 		.word	.LANCHOR17
 3237 0074 00000000 		.word	.LC0
 3238              		.cfi_endproc
 3239              	.LFE39:
 3241              		.section	.rodata.lv_tlsf_check.str1.4,"aMS",%progbits,1
 3242              		.align	2
 3243              	.LC28:
 3244 0000 21736C5F 		.ascii	"!sl_map && \"second-level map must be null\"\000"
 3244      6D617020 
 3244      26262022 
 3244      7365636F 
 3244      6E642D6C 
 3245 002b 00       		.align	2
 3246              	.LC29:
 3247 002c 626C6F63 		.ascii	"block == &control->block_null && \"block list must "
 3247      6B203D3D 
 3247      2026636F 
 3247      6E74726F 
 3247      6C2D3E62 
 3248 005e 6265206E 		.ascii	"be null\"\000"
 3248      756C6C22 
 3248      00
 3249 0067 00       		.align	2
 3250              	.LC30:
 3251 0068 736C5F6C 		.ascii	"sl_list && \"no free blocks in second-level map\"\000"
 3251      69737420 
 3251      26262022 
 3251      6E6F2066 
 3251      72656520 
 3252              		.align	2
 3253              	.LC31:
 3254 0098 626C6F63 		.ascii	"block != &control->block_null && \"block should not"
 3254      6B20213D 
 3254      2026636F 
 3254      6E74726F 
 3254      6C2D3E62 
 3255 00ca 20626520 		.ascii	" be null\"\000"
 3255      6E756C6C 
 3255      2200
 3256              		.align	2
 3257              	.LC32:
 3258 00d4 626C6F63 		.ascii	"block_is_free(block) && \"block should be free\"\000"
 3258      6B5F6973 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 87


 3258      5F667265 
 3258      6528626C 
 3258      6F636B29 
 3259 0103 00       		.align	2
 3260              	.LC33:
 3261 0104 21626C6F 		.ascii	"!block_is_prev_free(block) && \"blocks should have "
 3261      636B5F69 
 3261      735F7072 
 3261      65765F66 
 3261      72656528 
 3262 0136 636F616C 		.ascii	"coalesced\"\000"
 3262      65736365 
 3262      642200
 3263 0141 000000   		.align	2
 3264              	.LC34:
 3265 0144 21626C6F 		.ascii	"!block_is_free(block_next(block)) && \"blocks shoul"
 3265      636B5F69 
 3265      735F6672 
 3265      65652862 
 3265      6C6F636B 
 3266 0176 64206861 		.ascii	"d have coalesced\"\000"
 3266      76652063 
 3266      6F616C65 
 3266      73636564 
 3266      2200
 3267              		.align	2
 3268              	.LC35:
 3269 0188 626C6F63 		.ascii	"block_is_prev_free(block_next(block)) && \"block sh"
 3269      6B5F6973 
 3269      5F707265 
 3269      765F6672 
 3269      65652862 
 3270 01ba 6F756C64 		.ascii	"ould be free\"\000"
 3270      20626520 
 3270      66726565 
 3270      2200
 3271              		.align	2
 3272              	.LC36:
 3273 01c8 626C6F63 		.ascii	"block_size(block) >= block_size_min && \"block not "
 3273      6B5F7369 
 3273      7A652862 
 3273      6C6F636B 
 3273      29203E3D 
 3274 01fa 6D696E69 		.ascii	"minimum size\"\000"
 3274      6D756D20 
 3274      73697A65 
 3274      2200
 3275              		.align	2
 3276              	.LC37:
 3277 0208 666C6920 		.ascii	"fli == i && sli == j && \"block size indexed in wro"
 3277      3D3D2069 
 3277      20262620 
 3277      736C6920 
 3277      3D3D206A 
 3278 023a 6E67206C 		.ascii	"ng list\"\000"
 3278      69737422 
 3278      00
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 88


 3279              		.section	.text.lv_tlsf_check,"ax",%progbits
 3280              		.align	1
 3281              		.global	lv_tlsf_check
 3282              		.syntax unified
 3283              		.thumb
 3284              		.thumb_func
 3285              		.fpu fpv4-sp-d16
 3287              	lv_tlsf_check:
 3288              	.LVL322:
 3289              	.LFB43:
 867:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 3290              		.loc 1 867 1 is_stmt 1 view -0
 3291              		.cfi_startproc
 3292              		@ args = 0, pretend = 0, frame = 8
 3293              		@ frame_needed = 0, uses_anonymous_args = 0
 867:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 3294              		.loc 1 867 1 is_stmt 0 view .LVU739
 3295 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3296              	.LCFI78:
 3297              		.cfi_def_cfa_offset 28
 3298              		.cfi_offset 4, -28
 3299              		.cfi_offset 5, -24
 3300              		.cfi_offset 6, -20
 3301              		.cfi_offset 7, -16
 3302              		.cfi_offset 8, -12
 3303              		.cfi_offset 9, -8
 3304              		.cfi_offset 14, -4
 3305 0004 85B0     		sub	sp, sp, #20
 3306              	.LCFI79:
 3307              		.cfi_def_cfa_offset 48
 3308 0006 0546     		mov	r5, r0
 868:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3309              		.loc 1 868 2 is_stmt 1 view .LVU740
 870:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 3310              		.loc 1 870 2 view .LVU741
 3311              	.LVL323:
 871:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3312              		.loc 1 871 2 view .LVU742
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3313              		.loc 1 874 2 view .LVU743
 871:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3314              		.loc 1 871 6 is_stmt 0 view .LVU744
 3315 0008 0027     		movs	r7, #0
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3316              		.loc 1 874 9 view .LVU745
 3317 000a 3E46     		mov	r6, r7
 3318              	.LVL324:
 3319              	.L220:
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3320              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU746
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3321              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU747
 3322 000c 082E     		cmp	r6, #8
 3323 000e 00F3D880 		bgt	.L250
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3324              		.loc 1 876 10 view .LVU748
 3325 0012 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 89


 3326              	.L247:
 3327              	.LVL325:
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3328              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU749
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3329              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU750
 3330 0016 B8F11F0F 		cmp	r8, #31
 3331 001a 00F3D080 		bgt	.L251
 3332              	.LBB9:
 878:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 3333              		.loc 1 878 4 is_stmt 1 view .LVU751
 878:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 3334              		.loc 1 878 48 is_stmt 0 view .LVU752
 3335 001e 0123     		movs	r3, #1
 3336 0020 03FA06F0 		lsl	r0, r3, r6
 3337              	.LVL326:
 879:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 3338              		.loc 1 879 4 is_stmt 1 view .LVU753
 879:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 3339              		.loc 1 879 42 is_stmt 0 view .LVU754
 3340 0024 311D     		adds	r1, r6, #4
 3341 0026 05EB8101 		add	r1, r5, r1, lsl #2
 3342 002a 4A68     		ldr	r2, [r1, #4]
 3343              	.LVL327:
 880:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 3344              		.loc 1 880 4 is_stmt 1 view .LVU755
 880:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 3345              		.loc 1 880 37 is_stmt 0 view .LVU756
 3346 002c 03FA08F3 		lsl	r3, r3, r8
 880:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 3347              		.loc 1 880 31 view .LVU757
 3348 0030 1340     		ands	r3, r3, r2
 3349              	.LVL328:
 881:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3350              		.loc 1 881 4 is_stmt 1 view .LVU758
 881:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3351              		.loc 1 881 26 is_stmt 0 view .LVU759
 3352 0032 08EB4611 		add	r1, r8, r6, lsl #5
 3353 0036 0E31     		adds	r1, r1, #14
 3354 0038 55F82140 		ldr	r4, [r5, r1, lsl #2]
 3355              	.LVL329:
 884:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 3356              		.loc 1 884 4 is_stmt 1 view .LVU760
 884:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 3357              		.loc 1 884 7 is_stmt 0 view .LVU761
 3358 003c 2969     		ldr	r1, [r5, #16]
 3359 003e 0142     		tst	r1, r0
 3360 0040 00D1     		bne	.L221
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3361              		.loc 1 886 5 is_stmt 1 view .LVU762
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3362              		.loc 1 886 5 view .LVU763
 3363 0042 7BB9     		cbnz	r3, .L252
 3364              	.L221:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3365              		.loc 1 886 60 discriminator 6 view .LVU764
 889:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 90


 3366              		.loc 1 889 4 discriminator 6 view .LVU765
 889:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 3367              		.loc 1 889 7 is_stmt 0 discriminator 6 view .LVU766
 3368 0044 D3B9     		cbnz	r3, .L223
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3369              		.loc 1 891 5 is_stmt 1 view .LVU767
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3370              		.loc 1 891 5 view .LVU768
 3371 0046 A542     		cmp	r5, r4
 3372 0048 00F0B680 		beq	.L224
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3373              		.loc 1 891 5 discriminator 1 view .LVU769
 3374 004c 5F4B     		ldr	r3, .L259
 3375              	.LVL330:
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3376              		.loc 1 891 5 is_stmt 0 discriminator 1 view .LVU770
 3377 004e 0193     		str	r3, [sp, #4]
 3378              	.LVL331:
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3379              		.loc 1 891 5 discriminator 1 view .LVU771
 3380 0050 5F4B     		ldr	r3, .L259+4
 3381 0052 0093     		str	r3, [sp]
 3382 0054 5F4B     		ldr	r3, .L259+8
 3383 0056 40F27B32 		movw	r2, #891
 3384              	.LVL332:
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3385              		.loc 1 891 5 discriminator 1 view .LVU772
 3386 005a 5F49     		ldr	r1, .L259+12
 3387              	.LVL333:
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3388              		.loc 1 891 5 discriminator 1 view .LVU773
 3389 005c 0320     		movs	r0, #3
 3390 005e FFF7FEFF 		bl	_lv_log_add
 3391              	.LVL334:
 3392              	.L225:
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3393              		.loc 1 891 5 is_stmt 1 discriminator 2 view .LVU774
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3394              		.loc 1 891 5 discriminator 2 view .LVU775
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3395              		.loc 1 891 5 discriminator 2 view .LVU776
 891:lvgl/lvgl/src/misc/lv_tlsf.c **** 				continue;
 3396              		.loc 1 891 5 discriminator 2 view .LVU777
 3397 0062 FEE7     		b	.L225
 3398              	.LVL335:
 3399              	.L252:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3400              		.loc 1 886 5 discriminator 1 view .LVU778
 3401 0064 5D4B     		ldr	r3, .L259+16
 3402              	.LVL336:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3403              		.loc 1 886 5 is_stmt 0 discriminator 1 view .LVU779
 3404 0066 0193     		str	r3, [sp, #4]
 3405 0068 594B     		ldr	r3, .L259+4
 3406 006a 0093     		str	r3, [sp]
 3407 006c 594B     		ldr	r3, .L259+8
 3408 006e 40F27632 		movw	r2, #886
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 91


 3409              	.LVL337:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3410              		.loc 1 886 5 discriminator 1 view .LVU780
 3411 0072 5949     		ldr	r1, .L259+12
 3412              	.LVL338:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3413              		.loc 1 886 5 discriminator 1 view .LVU781
 3414 0074 0320     		movs	r0, #3
 3415 0076 FFF7FEFF 		bl	_lv_log_add
 3416              	.LVL339:
 3417              	.L222:
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3418              		.loc 1 886 5 is_stmt 1 discriminator 1 view .LVU782
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3419              		.loc 1 886 5 discriminator 1 view .LVU783
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3420              		.loc 1 886 5 discriminator 1 view .LVU784
 886:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3421              		.loc 1 886 5 discriminator 1 view .LVU785
 3422 007a FEE7     		b	.L222
 3423              	.LVL340:
 3424              	.L223:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3425              		.loc 1 896 4 view .LVU786
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3426              		.loc 1 896 4 view .LVU787
 3427 007c 72B1     		cbz	r2, .L253
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3428              		.loc 1 896 4 discriminator 6 view .LVU788
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3429              		.loc 1 896 4 discriminator 6 view .LVU789
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3430              		.loc 1 896 64 discriminator 6 view .LVU790
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3431              		.loc 1 897 4 discriminator 6 view .LVU791
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3432              		.loc 1 897 4 discriminator 6 view .LVU792
 3433 007e A946     		mov	r9, r5
 3434 0080 A542     		cmp	r5, r4
 3435 0082 57D1     		bne	.L228
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3436              		.loc 1 897 4 discriminator 1 view .LVU793
 3437 0084 564B     		ldr	r3, .L259+20
 3438              	.LVL341:
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3439              		.loc 1 897 4 is_stmt 0 discriminator 1 view .LVU794
 3440 0086 0193     		str	r3, [sp, #4]
 3441 0088 514B     		ldr	r3, .L259+4
 3442 008a 0093     		str	r3, [sp]
 3443 008c 514B     		ldr	r3, .L259+8
 3444 008e 40F28132 		movw	r2, #897
 3445              	.LVL342:
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3446              		.loc 1 897 4 discriminator 1 view .LVU795
 3447 0092 5149     		ldr	r1, .L259+12
 3448              	.LVL343:
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 92


 3449              		.loc 1 897 4 discriminator 1 view .LVU796
 3450 0094 0320     		movs	r0, #3
 3451 0096 FFF7FEFF 		bl	_lv_log_add
 3452              	.LVL344:
 3453              	.L229:
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3454              		.loc 1 897 4 is_stmt 1 discriminator 4 view .LVU797
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3455              		.loc 1 897 4 discriminator 4 view .LVU798
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3456              		.loc 1 897 4 discriminator 4 view .LVU799
 897:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3457              		.loc 1 897 4 discriminator 4 view .LVU800
 3458 009a FEE7     		b	.L229
 3459              	.LVL345:
 3460              	.L253:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3461              		.loc 1 896 4 discriminator 1 view .LVU801
 3462 009c 514B     		ldr	r3, .L259+24
 3463              	.LVL346:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3464              		.loc 1 896 4 is_stmt 0 discriminator 1 view .LVU802
 3465 009e 0193     		str	r3, [sp, #4]
 3466 00a0 4B4B     		ldr	r3, .L259+4
 3467 00a2 0093     		str	r3, [sp]
 3468 00a4 4B4B     		ldr	r3, .L259+8
 3469 00a6 4FF46072 		mov	r2, #896
 3470              	.LVL347:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3471              		.loc 1 896 4 discriminator 1 view .LVU803
 3472 00aa 4B49     		ldr	r1, .L259+12
 3473              	.LVL348:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3474              		.loc 1 896 4 discriminator 1 view .LVU804
 3475 00ac 0320     		movs	r0, #3
 3476 00ae FFF7FEFF 		bl	_lv_log_add
 3477              	.LVL349:
 3478              	.L227:
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3479              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU805
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3480              		.loc 1 896 4 discriminator 3 view .LVU806
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3481              		.loc 1 896 4 discriminator 3 view .LVU807
 896:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 3482              		.loc 1 896 4 discriminator 3 view .LVU808
 3483 00b2 FEE7     		b	.L227
 3484              	.L255:
 3485              	.LBB10:
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3486              		.loc 1 902 5 discriminator 3 view .LVU809
 3487 00b4 4C4B     		ldr	r3, .L259+28
 3488 00b6 0193     		str	r3, [sp, #4]
 3489 00b8 454B     		ldr	r3, .L259+4
 3490 00ba 0093     		str	r3, [sp]
 3491 00bc 454B     		ldr	r3, .L259+8
 3492 00be 40F28632 		movw	r2, #902
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 93


 3493 00c2 4549     		ldr	r1, .L259+12
 3494 00c4 0320     		movs	r0, #3
 3495 00c6 FFF7FEFF 		bl	_lv_log_add
 3496              	.LVL350:
 3497              	.L231:
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3498              		.loc 1 902 5 discriminator 5 view .LVU810
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3499              		.loc 1 902 5 discriminator 5 view .LVU811
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3500              		.loc 1 902 5 discriminator 5 view .LVU812
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3501              		.loc 1 902 5 discriminator 5 view .LVU813
 3502 00ca FEE7     		b	.L231
 3503              	.L256:
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3504              		.loc 1 903 5 discriminator 1 view .LVU814
 3505 00cc 474B     		ldr	r3, .L259+32
 3506 00ce 0193     		str	r3, [sp, #4]
 3507 00d0 3F4B     		ldr	r3, .L259+4
 3508 00d2 0093     		str	r3, [sp]
 3509 00d4 3F4B     		ldr	r3, .L259+8
 3510 00d6 40F28732 		movw	r2, #903
 3511 00da 3F49     		ldr	r1, .L259+12
 3512 00dc 0320     		movs	r0, #3
 3513 00de FFF7FEFF 		bl	_lv_log_add
 3514              	.LVL351:
 3515              	.L233:
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3516              		.loc 1 903 5 discriminator 6 view .LVU815
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3517              		.loc 1 903 5 discriminator 6 view .LVU816
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3518              		.loc 1 903 5 discriminator 6 view .LVU817
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3519              		.loc 1 903 5 discriminator 6 view .LVU818
 3520 00e2 FEE7     		b	.L233
 3521              	.L257:
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3522              		.loc 1 904 5 discriminator 1 view .LVU819
 3523 00e4 424B     		ldr	r3, .L259+36
 3524 00e6 0193     		str	r3, [sp, #4]
 3525 00e8 394B     		ldr	r3, .L259+4
 3526 00ea 0093     		str	r3, [sp]
 3527 00ec 394B     		ldr	r3, .L259+8
 3528 00ee 4FF46272 		mov	r2, #904
 3529 00f2 3949     		ldr	r1, .L259+12
 3530 00f4 0320     		movs	r0, #3
 3531 00f6 FFF7FEFF 		bl	_lv_log_add
 3532              	.LVL352:
 3533              	.L235:
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3534              		.loc 1 904 5 discriminator 7 view .LVU820
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3535              		.loc 1 904 5 discriminator 7 view .LVU821
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3536              		.loc 1 904 5 discriminator 7 view .LVU822
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 94


 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3537              		.loc 1 904 5 discriminator 7 view .LVU823
 3538 00fa FEE7     		b	.L235
 3539              	.L258:
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3540              		.loc 1 905 5 discriminator 3 view .LVU824
 3541 00fc 3D4B     		ldr	r3, .L259+40
 3542 00fe 0193     		str	r3, [sp, #4]
 3543 0100 334B     		ldr	r3, .L259+4
 3544 0102 0093     		str	r3, [sp]
 3545 0104 334B     		ldr	r3, .L259+8
 3546 0106 40F28932 		movw	r2, #905
 3547 010a 3349     		ldr	r1, .L259+12
 3548 010c 0320     		movs	r0, #3
 3549 010e FFF7FEFF 		bl	_lv_log_add
 3550              	.LVL353:
 3551              	.L238:
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3552              		.loc 1 905 5 discriminator 8 view .LVU825
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3553              		.loc 1 905 5 discriminator 8 view .LVU826
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3554              		.loc 1 905 5 discriminator 8 view .LVU827
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3555              		.loc 1 905 5 discriminator 8 view .LVU828
 3556 0112 FEE7     		b	.L238
 3557              	.L239:
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3558              		.loc 1 905 81 discriminator 10 view .LVU829
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3559              		.loc 1 906 5 discriminator 10 view .LVU830
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3560              		.loc 1 906 5 discriminator 10 view .LVU831
 3561 0114 2046     		mov	r0, r4
 3562 0116 FFF7FEFF 		bl	block_size
 3563              	.LVL354:
 3564 011a 0B28     		cmp	r0, #11
 3565 011c 34D9     		bls	.L254
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3566              		.loc 1 906 5 discriminator 10 view .LVU832
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3567              		.loc 1 906 5 discriminator 10 view .LVU833
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3568              		.loc 1 906 81 discriminator 10 view .LVU834
 908:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 3569              		.loc 1 908 5 discriminator 10 view .LVU835
 3570 011e 03AA     		add	r2, sp, #12
 3571 0120 02A9     		add	r1, sp, #8
 3572 0122 FFF7FEFF 		bl	mapping_insert
 3573              	.LVL355:
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3574              		.loc 1 909 5 discriminator 10 view .LVU836
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3575              		.loc 1 909 5 discriminator 10 view .LVU837
 3576 0126 029B     		ldr	r3, [sp, #8]
 3577 0128 B342     		cmp	r3, r6
 3578 012a 39D1     		bne	.L242
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 95


 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3579              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU838
 3580 012c 039B     		ldr	r3, [sp, #12]
 3581 012e 4345     		cmp	r3, r8
 3582 0130 36D1     		bne	.L242
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3583              		.loc 1 909 5 is_stmt 1 discriminator 10 view .LVU839
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3584              		.loc 1 909 5 discriminator 10 view .LVU840
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3585              		.loc 1 909 76 discriminator 10 view .LVU841
 910:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3586              		.loc 1 910 5 discriminator 10 view .LVU842
 910:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3587              		.loc 1 910 11 is_stmt 0 discriminator 10 view .LVU843
 3588 0132 A468     		ldr	r4, [r4, #8]
 3589              	.LVL356:
 3590              	.L228:
 910:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 3591              		.loc 1 910 11 discriminator 10 view .LVU844
 3592              	.LBE10:
 899:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
 3593              		.loc 1 899 10 is_stmt 1 view .LVU845
 3594 0134 A145     		cmp	r9, r4
 3595 0136 3FD0     		beq	.L224
 3596              	.LBB11:
 901:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 3597              		.loc 1 901 5 view .LVU846
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3598              		.loc 1 902 5 view .LVU847
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3599              		.loc 1 902 5 view .LVU848
 3600 0138 2046     		mov	r0, r4
 3601 013a FFF7FEFF 		bl	block_is_free
 3602              	.LVL357:
 3603 013e 0028     		cmp	r0, #0
 3604 0140 B8D0     		beq	.L255
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3605              		.loc 1 902 5 discriminator 10 view .LVU849
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3606              		.loc 1 902 5 discriminator 10 view .LVU850
 902:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 3607              		.loc 1 902 64 discriminator 10 view .LVU851
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3608              		.loc 1 903 5 discriminator 10 view .LVU852
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3609              		.loc 1 903 5 discriminator 10 view .LVU853
 3610 0142 2046     		mov	r0, r4
 3611 0144 FFF7FEFF 		bl	block_is_prev_free
 3612              	.LVL358:
 3613 0148 0028     		cmp	r0, #0
 3614 014a BFD1     		bne	.L256
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3615              		.loc 1 903 5 discriminator 6 view .LVU854
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 3616              		.loc 1 903 5 discriminator 6 view .LVU855
 903:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 96


 3617              		.loc 1 903 78 discriminator 6 view .LVU856
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3618              		.loc 1 904 5 discriminator 6 view .LVU857
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3619              		.loc 1 904 5 discriminator 6 view .LVU858
 3620 014c 2046     		mov	r0, r4
 3621 014e FFF7FEFF 		bl	block_next
 3622              	.LVL359:
 3623 0152 FFF7FEFF 		bl	block_is_free
 3624              	.LVL360:
 3625 0156 0028     		cmp	r0, #0
 3626 0158 C4D1     		bne	.L257
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3627              		.loc 1 904 5 discriminator 2 view .LVU859
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3628              		.loc 1 904 5 discriminator 2 view .LVU860
 3629 015a 2046     		mov	r0, r4
 3630 015c FFF7FEFF 		bl	block_next
 3631              	.LVL361:
 3632 0160 FFF7FEFF 		bl	block_is_free
 3633              	.LVL362:
 3634 0164 00B1     		cbz	r0, .L236
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3635              		.loc 1 904 5 discriminator 4 view .LVU861
 3636 0166 013F     		subs	r7, r7, #1
 3637              	.LVL363:
 3638              	.L236:
 904:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 3639              		.loc 1 904 85 discriminator 6 view .LVU862
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3640              		.loc 1 905 5 discriminator 6 view .LVU863
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3641              		.loc 1 905 5 discriminator 6 view .LVU864
 3642 0168 2046     		mov	r0, r4
 3643 016a FFF7FEFF 		bl	block_next
 3644              	.LVL364:
 3645 016e FFF7FEFF 		bl	block_is_prev_free
 3646              	.LVL365:
 3647 0172 0028     		cmp	r0, #0
 3648 0174 C2D0     		beq	.L258
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3649              		.loc 1 905 5 discriminator 4 view .LVU865
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3650              		.loc 1 905 5 discriminator 4 view .LVU866
 3651 0176 2046     		mov	r0, r4
 3652 0178 FFF7FEFF 		bl	block_next
 3653              	.LVL366:
 3654 017c FFF7FEFF 		bl	block_is_prev_free
 3655              	.LVL367:
 3656 0180 0028     		cmp	r0, #0
 3657 0182 C7D1     		bne	.L239
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3658              		.loc 1 905 5 discriminator 8 view .LVU867
 3659 0184 013F     		subs	r7, r7, #1
 3660              	.LVL368:
 905:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 3661              		.loc 1 905 5 is_stmt 0 discriminator 8 view .LVU868
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 97


 3662 0186 C5E7     		b	.L239
 3663              	.L254:
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3664              		.loc 1 906 5 is_stmt 1 discriminator 3 view .LVU869
 3665 0188 1B4B     		ldr	r3, .L259+44
 3666 018a 0193     		str	r3, [sp, #4]
 3667 018c 104B     		ldr	r3, .L259+4
 3668 018e 0093     		str	r3, [sp]
 3669 0190 104B     		ldr	r3, .L259+8
 3670 0192 40F28A32 		movw	r2, #906
 3671 0196 1049     		ldr	r1, .L259+12
 3672 0198 0320     		movs	r0, #3
 3673 019a FFF7FEFF 		bl	_lv_log_add
 3674              	.LVL369:
 3675              	.L241:
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3676              		.loc 1 906 5 discriminator 9 view .LVU870
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3677              		.loc 1 906 5 discriminator 9 view .LVU871
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3678              		.loc 1 906 5 discriminator 9 view .LVU872
 906:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3679              		.loc 1 906 5 discriminator 9 view .LVU873
 3680 019e FEE7     		b	.L241
 3681              	.L242:
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3682              		.loc 1 909 5 discriminator 3 view .LVU874
 3683 01a0 164B     		ldr	r3, .L259+48
 3684 01a2 0193     		str	r3, [sp, #4]
 3685 01a4 0A4B     		ldr	r3, .L259+4
 3686 01a6 0093     		str	r3, [sp]
 3687 01a8 0A4B     		ldr	r3, .L259+8
 3688 01aa 40F28D32 		movw	r2, #909
 3689 01ae 0A49     		ldr	r1, .L259+12
 3690 01b0 0320     		movs	r0, #3
 3691 01b2 FFF7FEFF 		bl	_lv_log_add
 3692              	.LVL370:
 3693              	.L244:
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3694              		.loc 1 909 5 discriminator 10 view .LVU875
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3695              		.loc 1 909 5 discriminator 10 view .LVU876
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3696              		.loc 1 909 5 discriminator 10 view .LVU877
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3697              		.loc 1 909 5 discriminator 10 view .LVU878
 3698 01b6 FEE7     		b	.L244
 3699              	.L224:
 909:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 3700              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU879
 3701              	.LBE11:
 3702              	.LBE9:
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
 3703              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU880
 3704 01b8 08F10108 		add	r8, r8, #1
 3705              	.LVL371:
 876:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 98


 3706              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU881
 3707 01bc 2BE7     		b	.L247
 3708              	.LVL372:
 3709              	.L251:
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3710              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU882
 3711 01be 0136     		adds	r6, r6, #1
 3712              	.LVL373:
 874:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 3713              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU883
 3714 01c0 24E7     		b	.L220
 3715              	.LVL374:
 3716              	.L250:
 915:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3717              		.loc 1 915 2 is_stmt 1 view .LVU884
 916:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3718              		.loc 1 916 1 is_stmt 0 view .LVU885
 3719 01c2 3846     		mov	r0, r7
 3720 01c4 05B0     		add	sp, sp, #20
 3721              	.LCFI80:
 3722              		.cfi_def_cfa_offset 28
 3723              		@ sp needed
 3724 01c6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3725              	.LVL375:
 3726              	.L260:
 916:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 3727              		.loc 1 916 1 view .LVU886
 3728 01ca 00BF     		.align	2
 3729              	.L259:
 3730 01cc 2C000000 		.word	.LC29
 3731 01d0 38000000 		.word	.LC2
 3732 01d4 00000000 		.word	.LANCHOR18
 3733 01d8 00000000 		.word	.LC0
 3734 01dc 00000000 		.word	.LC28
 3735 01e0 98000000 		.word	.LC31
 3736 01e4 68000000 		.word	.LC30
 3737 01e8 D4000000 		.word	.LC32
 3738 01ec 04010000 		.word	.LC33
 3739 01f0 44010000 		.word	.LC34
 3740 01f4 88010000 		.word	.LC35
 3741 01f8 C8010000 		.word	.LC36
 3742 01fc 08020000 		.word	.LC37
 3743              		.cfi_endproc
 3744              	.LFE43:
 3746              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 3747              		.align	1
 3748              		.global	lv_tlsf_walk_pool
 3749              		.syntax unified
 3750              		.thumb
 3751              		.thumb_func
 3752              		.fpu fpv4-sp-d16
 3754              	lv_tlsf_walk_pool:
 3755              	.LVL376:
 3756              	.LFB45:
 925:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 926:lvgl/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:lvgl/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 99


 3757              		.loc 1 927 1 is_stmt 1 view -0
 3758              		.cfi_startproc
 3759              		@ args = 0, pretend = 0, frame = 0
 3760              		@ frame_needed = 0, uses_anonymous_args = 0
 3761              		.loc 1 927 1 is_stmt 0 view .LVU888
 3762 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3763              	.LCFI81:
 3764              		.cfi_def_cfa_offset 24
 3765              		.cfi_offset 4, -24
 3766              		.cfi_offset 5, -20
 3767              		.cfi_offset 6, -16
 3768              		.cfi_offset 7, -12
 3769              		.cfi_offset 8, -8
 3770              		.cfi_offset 14, -4
 3771 0004 1746     		mov	r7, r2
 928:lvgl/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 3772              		.loc 1 928 2 is_stmt 1 view .LVU889
 3773              		.loc 1 928 47 is_stmt 0 view .LVU890
 3774 0006 8846     		mov	r8, r1
 3775 0008 01B3     		cbz	r1, .L268
 3776              	.L262:
 3777              	.LVL377:
 929:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 3778              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU891
 930:lvgl/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 3779              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU892
 3780 000a 6FF00301 		mvn	r1, #3
 3781              	.LVL378:
 3782              		.loc 1 930 3 discriminator 4 view .LVU893
 3783 000e FFF7FEFF 		bl	offset_to_block
 3784              	.LVL379:
 3785              		.loc 1 930 3 discriminator 4 view .LVU894
 3786 0012 0446     		mov	r4, r0
 3787              	.LVL380:
 931:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 932:lvgl/lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 3788              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU895
 3789              	.L263:
 3790              		.loc 1 932 8 view .LVU896
 3791 0014 ECB1     		cbz	r4, .L261
 3792              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU897
 3793 0016 2046     		mov	r0, r4
 3794              		.loc 1 932 19 discriminator 1 view .LVU898
 3795 0018 FFF7FEFF 		bl	block_is_last
 3796              	.LVL381:
 3797              		.loc 1 932 15 discriminator 1 view .LVU899
 3798 001c C8B9     		cbnz	r0, .L261
 933:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 934:lvgl/lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 3799              		.loc 1 934 3 is_stmt 1 view .LVU900
 3800 001e 2046     		mov	r0, r4
 3801 0020 FFF7FEFF 		bl	block_to_ptr
 3802              	.LVL382:
 3803 0024 0546     		mov	r5, r0
 3804 0026 2046     		mov	r0, r4
 3805 0028 FFF7FEFF 		bl	block_size
 3806              	.LVL383:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 100


 3807 002c 0646     		mov	r6, r0
 935:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 936:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
 937:lvgl/lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 3808              		.loc 1 937 5 is_stmt 0 view .LVU901
 3809 002e 2046     		mov	r0, r4
 3810 0030 FFF7FEFF 		bl	block_is_free
 3811              	.LVL384:
 934:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 3812              		.loc 1 934 3 view .LVU902
 3813 0034 3B46     		mov	r3, r7
 3814 0036 B0FA80F2 		clz	r2, r0
 3815 003a 5209     		lsrs	r2, r2, #5
 3816 003c 3146     		mov	r1, r6
 3817 003e 2846     		mov	r0, r5
 3818 0040 C047     		blx	r8
 3819              	.LVL385:
 938:lvgl/lvgl/src/misc/lv_tlsf.c **** 			user);
 939:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
 3820              		.loc 1 939 3 is_stmt 1 view .LVU903
 3821              		.loc 1 939 11 is_stmt 0 view .LVU904
 3822 0042 2046     		mov	r0, r4
 3823 0044 FFF7FEFF 		bl	block_next
 3824              	.LVL386:
 3825 0048 0446     		mov	r4, r0
 3826              	.LVL387:
 3827              		.loc 1 939 11 view .LVU905
 3828 004a E3E7     		b	.L263
 3829              	.LVL388:
 3830              	.L268:
 928:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 3831              		.loc 1 928 47 view .LVU906
 3832 004c DFF80880 		ldr	r8, .L269
 3833 0050 DBE7     		b	.L262
 3834              	.LVL389:
 3835              	.L261:
 940:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 941:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3836              		.loc 1 941 1 view .LVU907
 3837 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3838              	.LVL390:
 3839              	.L270:
 3840              		.loc 1 941 1 view .LVU908
 3841 0056 00BF     		.align	2
 3842              	.L269:
 3843 0058 00000000 		.word	default_walker
 3844              		.cfi_endproc
 3845              	.LFE45:
 3847              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 3848              		.align	1
 3849              		.global	lv_tlsf_block_size
 3850              		.syntax unified
 3851              		.thumb
 3852              		.thumb_func
 3853              		.fpu fpv4-sp-d16
 3855              	lv_tlsf_block_size:
 3856              	.LVL391:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 101


 3857              	.LFB46:
 942:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 943:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 3858              		.loc 1 944 1 is_stmt 1 view -0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 0
 3861              		@ frame_needed = 0, uses_anonymous_args = 0
 945:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 3862              		.loc 1 945 2 view .LVU910
 946:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3863              		.loc 1 946 2 view .LVU911
 3864              		.loc 1 946 5 is_stmt 0 view .LVU912
 3865 0000 28B1     		cbz	r0, .L273
 944:lvgl/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 3866              		.loc 1 944 1 view .LVU913
 3867 0002 08B5     		push	{r3, lr}
 3868              	.LCFI82:
 3869              		.cfi_def_cfa_offset 8
 3870              		.cfi_offset 3, -8
 3871              		.cfi_offset 14, -4
 3872              	.LBB12:
 947:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
 948:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 3873              		.loc 1 948 3 is_stmt 1 view .LVU914
 3874              		.loc 1 948 33 is_stmt 0 view .LVU915
 3875 0004 FFF7FEFF 		bl	block_from_ptr
 3876              	.LVL392:
 949:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 3877              		.loc 1 949 3 is_stmt 1 view .LVU916
 3878              		.loc 1 949 10 is_stmt 0 view .LVU917
 3879 0008 FFF7FEFF 		bl	block_size
 3880              	.LVL393:
 3881              		.loc 1 949 10 view .LVU918
 3882              	.LBE12:
 950:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 951:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3883              		.loc 1 952 1 view .LVU919
 3884 000c 08BD     		pop	{r3, pc}
 3885              	.LVL394:
 3886              	.L273:
 3887              	.LCFI83:
 3888              		.cfi_def_cfa_offset 0
 3889              		.cfi_restore 3
 3890              		.cfi_restore 14
 945:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3891              		.loc 1 945 9 view .LVU920
 3892 000e 0020     		movs	r0, #0
 3893              	.LVL395:
 951:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3894              		.loc 1 951 2 is_stmt 1 view .LVU921
 3895              		.loc 1 952 1 is_stmt 0 view .LVU922
 3896 0010 7047     		bx	lr
 3897              		.cfi_endproc
 3898              	.LFE46:
 3900              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 102


 3901              		.align	1
 3902              		.global	lv_tlsf_check_pool
 3903              		.syntax unified
 3904              		.thumb
 3905              		.thumb_func
 3906              		.fpu fpv4-sp-d16
 3908              	lv_tlsf_check_pool:
 3909              	.LVL396:
 3910              	.LFB47:
 953:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 954:lvgl/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 3911              		.loc 1 955 1 is_stmt 1 view -0
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 8
 3914              		@ frame_needed = 0, uses_anonymous_args = 0
 3915              		.loc 1 955 1 is_stmt 0 view .LVU924
 3916 0000 00B5     		push	{lr}
 3917              	.LCFI84:
 3918              		.cfi_def_cfa_offset 4
 3919              		.cfi_offset 14, -4
 3920 0002 83B0     		sub	sp, sp, #12
 3921              	.LCFI85:
 3922              		.cfi_def_cfa_offset 16
 956:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:lvgl/lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 3923              		.loc 1 957 2 is_stmt 1 view .LVU925
 3924              		.loc 1 957 14 is_stmt 0 view .LVU926
 3925 0004 0023     		movs	r3, #0
 3926 0006 0093     		str	r3, [sp]
 3927 0008 0193     		str	r3, [sp, #4]
 958:lvgl/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 3928              		.loc 1 958 2 is_stmt 1 view .LVU927
 3929 000a 6A46     		mov	r2, sp
 3930 000c 0349     		ldr	r1, .L280
 3931 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 3932              	.LVL397:
 959:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 960:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 3933              		.loc 1 960 2 view .LVU928
 961:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3934              		.loc 1 961 1 is_stmt 0 view .LVU929
 3935 0012 0198     		ldr	r0, [sp, #4]
 3936 0014 03B0     		add	sp, sp, #12
 3937              	.LCFI86:
 3938              		.cfi_def_cfa_offset 4
 3939              		@ sp needed
 3940 0016 5DF804FB 		ldr	pc, [sp], #4
 3941              	.L281:
 3942 001a 00BF     		.align	2
 3943              	.L280:
 3944 001c 00000000 		.word	integrity_walker
 3945              		.cfi_endproc
 3946              	.LFE47:
 3948              		.section	.text.lv_tlsf_size,"ax",%progbits
 3949              		.align	1
 3950              		.global	lv_tlsf_size
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 103


 3951              		.syntax unified
 3952              		.thumb
 3953              		.thumb_func
 3954              		.fpu fpv4-sp-d16
 3956              	lv_tlsf_size:
 3957              	.LFB48:
 962:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 963:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 964:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:lvgl/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 967:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
 968:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 3958              		.loc 1 968 1 is_stmt 1 view -0
 3959              		.cfi_startproc
 3960              		@ args = 0, pretend = 0, frame = 0
 3961              		@ frame_needed = 0, uses_anonymous_args = 0
 3962              		@ link register save eliminated.
 969:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 3963              		.loc 1 969 2 view .LVU931
 970:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3964              		.loc 1 970 1 is_stmt 0 view .LVU932
 3965 0000 4FF49760 		mov	r0, #1208
 3966 0004 7047     		bx	lr
 3967              		.cfi_endproc
 3968              	.LFE48:
 3970              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 3971              		.align	1
 3972              		.global	lv_tlsf_align_size
 3973              		.syntax unified
 3974              		.thumb
 3975              		.thumb_func
 3976              		.fpu fpv4-sp-d16
 3978              	lv_tlsf_align_size:
 3979              	.LFB49:
 971:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 972:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 3980              		.loc 1 973 1 is_stmt 1 view -0
 3981              		.cfi_startproc
 3982              		@ args = 0, pretend = 0, frame = 0
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              		@ link register save eliminated.
 974:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 3985              		.loc 1 974 2 view .LVU934
 975:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 3986              		.loc 1 975 1 is_stmt 0 view .LVU935
 3987 0000 0420     		movs	r0, #4
 3988 0002 7047     		bx	lr
 3989              		.cfi_endproc
 3990              	.LFE49:
 3992              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 3993              		.align	1
 3994              		.global	lv_tlsf_block_size_min
 3995              		.syntax unified
 3996              		.thumb
 3997              		.thumb_func
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 104


 3998              		.fpu fpv4-sp-d16
 4000              	lv_tlsf_block_size_min:
 4001              	.LFB50:
 976:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 977:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4002              		.loc 1 978 1 is_stmt 1 view -0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 0
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
 4006              		@ link register save eliminated.
 979:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
 4007              		.loc 1 979 2 view .LVU937
 980:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4008              		.loc 1 980 1 is_stmt 0 view .LVU938
 4009 0000 0C20     		movs	r0, #12
 4010 0002 7047     		bx	lr
 4011              		.cfi_endproc
 4012              	.LFE50:
 4014              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 4015              		.align	1
 4016              		.global	lv_tlsf_block_size_max
 4017              		.syntax unified
 4018              		.thumb
 4019              		.thumb_func
 4020              		.fpu fpv4-sp-d16
 4022              	lv_tlsf_block_size_max:
 4023              	.LFB51:
 981:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 982:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4024              		.loc 1 983 1 is_stmt 1 view -0
 4025              		.cfi_startproc
 4026              		@ args = 0, pretend = 0, frame = 0
 4027              		@ frame_needed = 0, uses_anonymous_args = 0
 4028              		@ link register save eliminated.
 984:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 4029              		.loc 1 984 2 view .LVU940
 985:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4030              		.loc 1 985 1 is_stmt 0 view .LVU941
 4031 0000 4FF40040 		mov	r0, #32768
 4032 0004 7047     		bx	lr
 4033              		.cfi_endproc
 4034              	.LFE51:
 4036              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 4037              		.align	1
 4038              		.global	lv_tlsf_pool_overhead
 4039              		.syntax unified
 4040              		.thumb
 4041              		.thumb_func
 4042              		.fpu fpv4-sp-d16
 4044              	lv_tlsf_pool_overhead:
 4045              	.LFB52:
 986:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 987:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
 988:lvgl/lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:lvgl/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 105


 990:lvgl/lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:lvgl/lvgl/src/misc/lv_tlsf.c **** */
 992:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 993:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4046              		.loc 1 993 1 is_stmt 1 view -0
 4047              		.cfi_startproc
 4048              		@ args = 0, pretend = 0, frame = 0
 4049              		@ frame_needed = 0, uses_anonymous_args = 0
 4050              		@ link register save eliminated.
 994:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 4051              		.loc 1 994 2 view .LVU943
 995:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4052              		.loc 1 995 1 is_stmt 0 view .LVU944
 4053 0000 0820     		movs	r0, #8
 4054 0002 7047     		bx	lr
 4055              		.cfi_endproc
 4056              	.LFE52:
 4058              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 4059              		.align	1
 4060              		.global	lv_tlsf_alloc_overhead
 4061              		.syntax unified
 4062              		.thumb
 4063              		.thumb_func
 4064              		.fpu fpv4-sp-d16
 4066              	lv_tlsf_alloc_overhead:
 4067              	.LFB53:
 996:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 997:lvgl/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4068              		.loc 1 998 1 is_stmt 1 view -0
 4069              		.cfi_startproc
 4070              		@ args = 0, pretend = 0, frame = 0
 4071              		@ frame_needed = 0, uses_anonymous_args = 0
 4072              		@ link register save eliminated.
 999:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 4073              		.loc 1 999 2 view .LVU946
1000:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4074              		.loc 1 1000 1 is_stmt 0 view .LVU947
 4075 0000 0420     		movs	r0, #4
 4076 0002 7047     		bx	lr
 4077              		.cfi_endproc
 4078              	.LFE53:
 4080              		.section	.rodata.lv_tlsf_add_pool.str1.4,"aMS",%progbits,1
 4081              		.align	2
 4082              	.LC38:
 4083 0000 6C765F74 		.ascii	"lv_tlsf_add_pool: Memory must be aligned by %u byte"
 4083      6C73665F 
 4083      6164645F 
 4083      706F6F6C 
 4083      3A204D65 
 4084 0033 732E0A00 		.ascii	"s.\012\000"
 4085 0037 00       		.align	2
 4086              	.LC39:
 4087 0038 6C765F74 		.ascii	"lv_tlsf_add_pool: Memory size must be between %u an"
 4087      6C73665F 
 4087      6164645F 
 4087      706F6F6C 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 106


 4087      3A204D65 
 4088 006b 64202575 		.ascii	"d %u bytes.\012\000"
 4088      20627974 
 4088      65732E0A 
 4088      00
 4089              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 4090              		.align	1
 4091              		.global	lv_tlsf_add_pool
 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4095              		.fpu fpv4-sp-d16
 4097              	lv_tlsf_add_pool:
 4098              	.LVL398:
 4099              	.LFB54:
1001:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1002:lvgl/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4100              		.loc 1 1003 1 is_stmt 1 view -0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 0
 4103              		@ frame_needed = 0, uses_anonymous_args = 0
 4104              		.loc 1 1003 1 is_stmt 0 view .LVU949
 4105 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4106              	.LCFI87:
 4107              		.cfi_def_cfa_offset 20
 4108              		.cfi_offset 4, -20
 4109              		.cfi_offset 5, -16
 4110              		.cfi_offset 6, -12
 4111              		.cfi_offset 7, -8
 4112              		.cfi_offset 14, -4
 4113 0002 85B0     		sub	sp, sp, #20
 4114              	.LCFI88:
 4115              		.cfi_def_cfa_offset 40
 4116 0004 0746     		mov	r7, r0
 4117 0006 0C46     		mov	r4, r1
 4118 0008 1646     		mov	r6, r2
1004:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 4119              		.loc 1 1004 2 is_stmt 1 view .LVU950
1005:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 4120              		.loc 1 1005 2 view .LVU951
1006:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1007:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 4121              		.loc 1 1007 2 view .LVU952
 4122              		.loc 1 1007 31 is_stmt 0 view .LVU953
 4123 000a FFF7FEFF 		bl	lv_tlsf_pool_overhead
 4124              	.LVL399:
 4125              		.loc 1 1007 31 view .LVU954
 4126 000e 0546     		mov	r5, r0
 4127              	.LVL400:
1008:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 4128              		.loc 1 1008 2 is_stmt 1 view .LVU955
 4129              		.loc 1 1008 28 is_stmt 0 view .LVU956
 4130 0010 0421     		movs	r1, #4
 4131 0012 301A     		subs	r0, r6, r0
 4132              	.LVL401:
 4133              		.loc 1 1008 28 view .LVU957
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 107


 4134 0014 FFF7FEFF 		bl	align_down
 4135              	.LVL402:
1009:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1010:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 4136              		.loc 1 1010 2 is_stmt 1 view .LVU958
 4137              		.loc 1 1010 5 is_stmt 0 view .LVU959
 4138 0018 14F0030F 		tst	r4, #3
 4139 001c 29D1     		bne	.L293
 4140 001e 0646     		mov	r6, r0
 4141              	.LVL403:
1011:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1012:lvgl/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1016:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1017:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 4142              		.loc 1 1017 2 is_stmt 1 view .LVU960
 4143              		.loc 1 1017 34 is_stmt 0 view .LVU961
 4144 0020 A0F10C02 		sub	r2, r0, #12
 4145              		.loc 1 1017 5 view .LVU962
 4146 0024 47F6F473 		movw	r3, #32756
 4147 0028 9A42     		cmp	r2, r3
 4148 002a 2FD8     		bhi	.L294
1018:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1019:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:lvgl/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:lvgl/lvgl/src/misc/lv_tlsf.c **** #else
1024:lvgl/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
1025:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
1027:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
1028:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1030:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1031:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
1032:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
1036:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 4149              		.loc 1 1036 2 is_stmt 1 view .LVU963
 4150              		.loc 1 1036 10 is_stmt 0 view .LVU964
 4151 002c 6FF00301 		mvn	r1, #3
 4152 0030 2046     		mov	r0, r4
 4153              	.LVL404:
 4154              		.loc 1 1036 10 view .LVU965
 4155 0032 FFF7FEFF 		bl	offset_to_block
 4156              	.LVL405:
 4157 0036 0546     		mov	r5, r0
 4158              	.LVL406:
1037:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 4159              		.loc 1 1037 2 is_stmt 1 view .LVU966
 4160 0038 3146     		mov	r1, r6
 4161 003a FFF7FEFF 		bl	block_set_size
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 108


 4162              	.LVL407:
1038:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 4163              		.loc 1 1038 2 view .LVU967
 4164 003e 2846     		mov	r0, r5
 4165 0040 FFF7FEFF 		bl	block_set_free
 4166              	.LVL408:
1039:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 4167              		.loc 1 1039 2 view .LVU968
 4168 0044 2846     		mov	r0, r5
 4169 0046 FFF7FEFF 		bl	block_set_prev_used
 4170              	.LVL409:
1040:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 4171              		.loc 1 1040 2 view .LVU969
 4172 004a 2946     		mov	r1, r5
 4173 004c 3846     		mov	r0, r7
 4174 004e FFF7FEFF 		bl	block_insert
 4175              	.LVL410:
1041:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1042:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:lvgl/lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 4176              		.loc 1 1043 2 view .LVU970
 4177              		.loc 1 1043 9 is_stmt 0 view .LVU971
 4178 0052 2846     		mov	r0, r5
 4179 0054 FFF7FEFF 		bl	block_link_next
 4180              	.LVL411:
 4181 0058 0546     		mov	r5, r0
 4182              	.LVL412:
1044:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 4183              		.loc 1 1044 2 is_stmt 1 view .LVU972
 4184 005a 0021     		movs	r1, #0
 4185 005c FFF7FEFF 		bl	block_set_size
 4186              	.LVL413:
1045:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
 4187              		.loc 1 1045 2 view .LVU973
 4188 0060 2846     		mov	r0, r5
 4189 0062 FFF7FEFF 		bl	block_set_used
 4190              	.LVL414:
1046:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 4191              		.loc 1 1046 2 view .LVU974
 4192 0066 2846     		mov	r0, r5
 4193 0068 FFF7FEFF 		bl	block_set_prev_free
 4194              	.LVL415:
1047:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1048:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return mem;
 4195              		.loc 1 1048 2 view .LVU975
 4196              		.loc 1 1048 9 is_stmt 0 view .LVU976
 4197 006c 2046     		mov	r0, r4
 4198              	.LVL416:
 4199              	.L288:
1049:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4200              		.loc 1 1049 1 view .LVU977
 4201 006e 05B0     		add	sp, sp, #20
 4202              	.LCFI89:
 4203              		.cfi_remember_state
 4204              		.cfi_def_cfa_offset 20
 4205              		@ sp needed
 4206 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 109


 4207              	.LVL417:
 4208              	.L293:
 4209              	.LCFI90:
 4210              		.cfi_restore_state
1012:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
 4211              		.loc 1 1012 3 is_stmt 1 view .LVU978
 4212 0072 0423     		movs	r3, #4
 4213 0074 0193     		str	r3, [sp, #4]
 4214 0076 0D4B     		ldr	r3, .L295
 4215 0078 0093     		str	r3, [sp]
 4216 007a 0D4B     		ldr	r3, .L295+4
 4217 007c 4FF47D72 		mov	r2, #1012
 4218 0080 0C49     		ldr	r1, .L295+8
 4219 0082 0320     		movs	r0, #3
 4220              	.LVL418:
1012:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
 4221              		.loc 1 1012 3 is_stmt 0 view .LVU979
 4222 0084 FFF7FEFF 		bl	_lv_log_add
 4223              	.LVL419:
1013:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
 4224              		.loc 1 1013 29 is_stmt 1 view .LVU980
1014:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4225              		.loc 1 1014 3 view .LVU981
1014:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4226              		.loc 1 1014 10 is_stmt 0 view .LVU982
 4227 0088 0020     		movs	r0, #0
 4228 008a F0E7     		b	.L288
 4229              	.LVL420:
 4230              	.L294:
1024:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
 4231              		.loc 1 1024 3 is_stmt 1 view .LVU983
 4232 008c 05F50043 		add	r3, r5, #32768
 4233 0090 0293     		str	r3, [sp, #8]
 4234 0092 0C35     		adds	r5, r5, #12
 4235              	.LVL421:
1024:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
 4236              		.loc 1 1024 3 is_stmt 0 view .LVU984
 4237 0094 0195     		str	r5, [sp, #4]
 4238 0096 084B     		ldr	r3, .L295+12
 4239 0098 0093     		str	r3, [sp]
 4240 009a 054B     		ldr	r3, .L295+4
 4241 009c 4FF48062 		mov	r2, #1024
 4242 00a0 0449     		ldr	r1, .L295+8
 4243 00a2 0320     		movs	r0, #3
 4244              	.LVL422:
1024:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
 4245              		.loc 1 1024 3 view .LVU985
 4246 00a4 FFF7FEFF 		bl	_lv_log_add
 4247              	.LVL423:
1026:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
 4248              		.loc 1 1026 51 is_stmt 1 view .LVU986
1028:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4249              		.loc 1 1028 3 view .LVU987
1028:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4250              		.loc 1 1028 10 is_stmt 0 view .LVU988
 4251 00a8 0020     		movs	r0, #0
 4252 00aa E0E7     		b	.L288
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 110


 4253              	.L296:
 4254              		.align	2
 4255              	.L295:
 4256 00ac 00000000 		.word	.LC38
 4257 00b0 00000000 		.word	.LANCHOR19
 4258 00b4 00000000 		.word	.LC0
 4259 00b8 38000000 		.word	.LC39
 4260              		.cfi_endproc
 4261              	.LFE54:
 4263              		.section	.rodata.lv_tlsf_remove_pool.str1.4,"aMS",%progbits,1
 4264              		.align	2
 4265              	.LC40:
 4266 0000 21626C6F 		.ascii	"!block_is_free(block_next(block)) && \"next block s"
 4266      636B5F69 
 4266      735F6672 
 4266      65652862 
 4266      6C6F636B 
 4267 0032 686F756C 		.ascii	"hould not be free\"\000"
 4267      64206E6F 
 4267      74206265 
 4267      20667265 
 4267      652200
 4268 0045 000000   		.align	2
 4269              	.LC41:
 4270 0048 626C6F63 		.ascii	"block_size(block_next(block)) == 0 && \"next block "
 4270      6B5F7369 
 4270      7A652862 
 4270      6C6F636B 
 4270      5F6E6578 
 4271 007a 73697A65 		.ascii	"size should be zero\"\000"
 4271      2073686F 
 4271      756C6420 
 4271      6265207A 
 4271      65726F22 
 4272              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 4273              		.align	1
 4274              		.global	lv_tlsf_remove_pool
 4275              		.syntax unified
 4276              		.thumb
 4277              		.thumb_func
 4278              		.fpu fpv4-sp-d16
 4280              	lv_tlsf_remove_pool:
 4281              	.LVL424:
 4282              	.LFB55:
1050:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1051:lvgl/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4283              		.loc 1 1052 1 is_stmt 1 view -0
 4284              		.cfi_startproc
 4285              		@ args = 0, pretend = 0, frame = 8
 4286              		@ frame_needed = 0, uses_anonymous_args = 0
 4287              		.loc 1 1052 1 is_stmt 0 view .LVU990
 4288 0000 30B5     		push	{r4, r5, lr}
 4289              	.LCFI91:
 4290              		.cfi_def_cfa_offset 12
 4291              		.cfi_offset 4, -12
 4292              		.cfi_offset 5, -8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 111


 4293              		.cfi_offset 14, -4
 4294 0002 85B0     		sub	sp, sp, #20
 4295              	.LCFI92:
 4296              		.cfi_def_cfa_offset 32
 4297 0004 0546     		mov	r5, r0
 4298 0006 0846     		mov	r0, r1
 4299              	.LVL425:
1053:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 4300              		.loc 1 1053 2 is_stmt 1 view .LVU991
1054:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 4301              		.loc 1 1054 2 view .LVU992
 4302              		.loc 1 1054 26 is_stmt 0 view .LVU993
 4303 0008 6FF00301 		mvn	r1, #3
 4304              	.LVL426:
 4305              		.loc 1 1054 26 view .LVU994
 4306 000c FFF7FEFF 		bl	offset_to_block
 4307              	.LVL427:
 4308              		.loc 1 1054 26 view .LVU995
 4309 0010 0446     		mov	r4, r0
 4310              	.LVL428:
1055:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1056:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 4311              		.loc 1 1056 2 is_stmt 1 view .LVU996
 4312              		.loc 1 1056 6 is_stmt 0 view .LVU997
 4313 0012 0023     		movs	r3, #0
 4314 0014 0393     		str	r3, [sp, #12]
 4315              		.loc 1 1056 14 view .LVU998
 4316 0016 0293     		str	r3, [sp, #8]
1057:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1058:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 4317              		.loc 1 1058 2 is_stmt 1 view .LVU999
 4318              		.loc 1 1058 2 view .LVU1000
 4319 0018 FFF7FEFF 		bl	block_is_free
 4320              	.LVL429:
 4321              		.loc 1 1058 2 is_stmt 0 view .LVU1001
 4322 001c 58B9     		cbnz	r0, .L298
 4323              		.loc 1 1058 2 is_stmt 1 discriminator 3 view .LVU1002
 4324 001e 1F4B     		ldr	r3, .L305
 4325 0020 0193     		str	r3, [sp, #4]
 4326 0022 1F4B     		ldr	r3, .L305+4
 4327 0024 0093     		str	r3, [sp]
 4328 0026 1F4B     		ldr	r3, .L305+8
 4329 0028 40F22242 		movw	r2, #1058
 4330 002c 1E49     		ldr	r1, .L305+12
 4331 002e 0320     		movs	r0, #3
 4332 0030 FFF7FEFF 		bl	_lv_log_add
 4333              	.LVL430:
 4334              	.L299:
 4335              		.loc 1 1058 2 discriminator 1 view .LVU1003
 4336              		.loc 1 1058 2 discriminator 1 view .LVU1004
 4337              		.loc 1 1058 2 discriminator 1 view .LVU1005
 4338              		.loc 1 1058 2 discriminator 1 view .LVU1006
 4339 0034 FEE7     		b	.L299
 4340              	.L298:
 4341              		.loc 1 1058 2 discriminator 4 view .LVU1007
1059:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 4342              		.loc 1 1059 2 discriminator 4 view .LVU1008
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 112


 4343              		.loc 1 1059 2 discriminator 4 view .LVU1009
 4344 0036 2046     		mov	r0, r4
 4345 0038 FFF7FEFF 		bl	block_next
 4346              	.LVL431:
 4347 003c FFF7FEFF 		bl	block_is_free
 4348              	.LVL432:
 4349 0040 58B1     		cbz	r0, .L300
 4350              		.loc 1 1059 2 discriminator 1 view .LVU1010
 4351 0042 1A4B     		ldr	r3, .L305+16
 4352 0044 0193     		str	r3, [sp, #4]
 4353 0046 164B     		ldr	r3, .L305+4
 4354 0048 0093     		str	r3, [sp]
 4355 004a 164B     		ldr	r3, .L305+8
 4356 004c 40F22342 		movw	r2, #1059
 4357 0050 1549     		ldr	r1, .L305+12
 4358 0052 0320     		movs	r0, #3
 4359 0054 FFF7FEFF 		bl	_lv_log_add
 4360              	.LVL433:
 4361              	.L301:
 4362              		.loc 1 1059 2 discriminator 2 view .LVU1011
 4363              		.loc 1 1059 2 discriminator 2 view .LVU1012
 4364              		.loc 1 1059 2 discriminator 2 view .LVU1013
 4365              		.loc 1 1059 2 discriminator 2 view .LVU1014
 4366 0058 FEE7     		b	.L301
 4367              	.L300:
 4368              		.loc 1 1059 2 discriminator 2 view .LVU1015
1060:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 4369              		.loc 1 1060 2 discriminator 2 view .LVU1016
 4370              		.loc 1 1060 2 discriminator 2 view .LVU1017
 4371 005a 2046     		mov	r0, r4
 4372 005c FFF7FEFF 		bl	block_next
 4373              	.LVL434:
 4374 0060 FFF7FEFF 		bl	block_size
 4375              	.LVL435:
 4376 0064 58B1     		cbz	r0, .L302
 4377              		.loc 1 1060 2 discriminator 1 view .LVU1018
 4378 0066 124B     		ldr	r3, .L305+20
 4379 0068 0193     		str	r3, [sp, #4]
 4380 006a 0D4B     		ldr	r3, .L305+4
 4381 006c 0093     		str	r3, [sp]
 4382 006e 0D4B     		ldr	r3, .L305+8
 4383 0070 40F22442 		movw	r2, #1060
 4384 0074 0C49     		ldr	r1, .L305+12
 4385 0076 0320     		movs	r0, #3
 4386 0078 FFF7FEFF 		bl	_lv_log_add
 4387              	.LVL436:
 4388              	.L303:
 4389              		.loc 1 1060 2 discriminator 3 view .LVU1019
 4390              		.loc 1 1060 2 discriminator 3 view .LVU1020
 4391              		.loc 1 1060 2 discriminator 3 view .LVU1021
 4392              		.loc 1 1060 2 discriminator 3 view .LVU1022
 4393 007c FEE7     		b	.L303
 4394              	.L302:
 4395              		.loc 1 1060 2 discriminator 2 view .LVU1023
1061:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1062:lvgl/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 4396              		.loc 1 1062 2 discriminator 2 view .LVU1024
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 113


 4397 007e 2046     		mov	r0, r4
 4398 0080 FFF7FEFF 		bl	block_size
 4399              	.LVL437:
 4400 0084 02AA     		add	r2, sp, #8
 4401 0086 03A9     		add	r1, sp, #12
 4402 0088 FFF7FEFF 		bl	mapping_insert
 4403              	.LVL438:
1063:lvgl/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 4404              		.loc 1 1063 2 discriminator 2 view .LVU1025
 4405 008c 029B     		ldr	r3, [sp, #8]
 4406 008e 039A     		ldr	r2, [sp, #12]
 4407 0090 2146     		mov	r1, r4
 4408 0092 2846     		mov	r0, r5
 4409 0094 FFF7FEFF 		bl	remove_free_block
 4410              	.LVL439:
1064:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4411              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU1026
 4412 0098 05B0     		add	sp, sp, #20
 4413              	.LCFI93:
 4414              		.cfi_def_cfa_offset 12
 4415              		@ sp needed
 4416 009a 30BD     		pop	{r4, r5, pc}
 4417              	.LVL440:
 4418              	.L306:
 4419              		.loc 1 1064 1 discriminator 2 view .LVU1027
 4420              		.align	2
 4421              	.L305:
 4422 009c D4000000 		.word	.LC32
 4423 00a0 38000000 		.word	.LC2
 4424 00a4 00000000 		.word	.LANCHOR20
 4425 00a8 00000000 		.word	.LC0
 4426 00ac 00000000 		.word	.LC40
 4427 00b0 48000000 		.word	.LC41
 4428              		.cfi_endproc
 4429              	.LFE55:
 4431              		.section	.rodata.lv_tlsf_create.str1.4,"aMS",%progbits,1
 4432              		.align	2
 4433              	.LC42:
 4434 0000 6C765F74 		.ascii	"lv_tlsf_create: Memory must be aligned to %u bytes."
 4434      6C73665F 
 4434      63726561 
 4434      74653A20 
 4434      4D656D6F 
 4435 0033 0A00     		.ascii	"\012\000"
 4436              		.section	.text.lv_tlsf_create,"ax",%progbits
 4437              		.align	1
 4438              		.global	lv_tlsf_create
 4439              		.syntax unified
 4440              		.thumb
 4441              		.thumb_func
 4442              		.fpu fpv4-sp-d16
 4444              	lv_tlsf_create:
 4445              	.LVL441:
 4446              	.LFB56:
1065:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1066:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
1067:lvgl/lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 114


1068:lvgl/lvgl/src/misc/lv_tlsf.c **** */
1069:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1070:lvgl/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:lvgl/lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:lvgl/lvgl/src/misc/lv_tlsf.c **** {
1073:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:lvgl/lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1084:lvgl/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:lvgl/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
1089:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1090:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1092:lvgl/lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1094:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:lvgl/lvgl/src/misc/lv_tlsf.c **** }
1096:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
1097:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1098:lvgl/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4447              		.loc 1 1099 1 is_stmt 1 view -0
 4448              		.cfi_startproc
 4449              		@ args = 0, pretend = 0, frame = 0
 4450              		@ frame_needed = 0, uses_anonymous_args = 0
 4451              		.loc 1 1099 1 is_stmt 0 view .LVU1029
 4452 0000 10B5     		push	{r4, lr}
 4453              	.LCFI94:
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0002 82B0     		sub	sp, sp, #8
 4458              	.LCFI95:
 4459              		.cfi_def_cfa_offset 16
1100:lvgl/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1103:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1105:lvgl/lvgl/src/misc/lv_tlsf.c **** #endif
1106:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1107:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 4460              		.loc 1 1107 2 is_stmt 1 view .LVU1030
 4461              		.loc 1 1107 5 is_stmt 0 view .LVU1031
 4462 0004 10F0030F 		tst	r0, #3
 4463 0008 05D1     		bne	.L311
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 115


 4464 000a 0446     		mov	r4, r0
1108:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1109:lvgl/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1113:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1114:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 4465              		.loc 1 1114 2 is_stmt 1 view .LVU1032
 4466 000c FFF7FEFF 		bl	control_constructor
 4467              	.LVL442:
1115:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1116:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 4468              		.loc 1 1116 2 view .LVU1033
 4469              		.loc 1 1116 9 is_stmt 0 view .LVU1034
 4470 0010 2046     		mov	r0, r4
 4471              	.LVL443:
 4472              	.L307:
1117:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4473              		.loc 1 1117 1 view .LVU1035
 4474 0012 02B0     		add	sp, sp, #8
 4475              	.LCFI96:
 4476              		.cfi_remember_state
 4477              		.cfi_def_cfa_offset 8
 4478              		@ sp needed
 4479 0014 10BD     		pop	{r4, pc}
 4480              	.LVL444:
 4481              	.L311:
 4482              	.LCFI97:
 4483              		.cfi_restore_state
1109:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
 4484              		.loc 1 1109 3 is_stmt 1 view .LVU1036
 4485 0016 0423     		movs	r3, #4
 4486 0018 0193     		str	r3, [sp, #4]
 4487 001a 054B     		ldr	r3, .L312
 4488 001c 0093     		str	r3, [sp]
 4489 001e 054B     		ldr	r3, .L312+4
 4490 0020 40F25542 		movw	r2, #1109
 4491 0024 0449     		ldr	r1, .L312+8
 4492 0026 0320     		movs	r0, #3
 4493              	.LVL445:
1109:lvgl/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
 4494              		.loc 1 1109 3 is_stmt 0 view .LVU1037
 4495 0028 FFF7FEFF 		bl	_lv_log_add
 4496              	.LVL446:
1110:lvgl/lvgl/src/misc/lv_tlsf.c **** 		return 0;
 4497              		.loc 1 1110 29 is_stmt 1 view .LVU1038
1111:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4498              		.loc 1 1111 3 view .LVU1039
1111:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 4499              		.loc 1 1111 10 is_stmt 0 view .LVU1040
 4500 002c 0020     		movs	r0, #0
 4501 002e F0E7     		b	.L307
 4502              	.L313:
 4503              		.align	2
 4504              	.L312:
 4505 0030 00000000 		.word	.LC42
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 116


 4506 0034 00000000 		.word	.LANCHOR21
 4507 0038 00000000 		.word	.LC0
 4508              		.cfi_endproc
 4509              	.LFE56:
 4511              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 4512              		.align	1
 4513              		.global	lv_tlsf_create_with_pool
 4514              		.syntax unified
 4515              		.thumb
 4516              		.thumb_func
 4517              		.fpu fpv4-sp-d16
 4519              	lv_tlsf_create_with_pool:
 4520              	.LVL447:
 4521              	.LFB57:
1118:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1119:lvgl/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4522              		.loc 1 1120 1 is_stmt 1 view -0
 4523              		.cfi_startproc
 4524              		@ args = 0, pretend = 0, frame = 0
 4525              		@ frame_needed = 0, uses_anonymous_args = 0
 4526              		.loc 1 1120 1 is_stmt 0 view .LVU1042
 4527 0000 70B5     		push	{r4, r5, r6, lr}
 4528              	.LCFI98:
 4529              		.cfi_def_cfa_offset 16
 4530              		.cfi_offset 4, -16
 4531              		.cfi_offset 5, -12
 4532              		.cfi_offset 6, -8
 4533              		.cfi_offset 14, -4
 4534 0002 0546     		mov	r5, r0
 4535 0004 0E46     		mov	r6, r1
1121:lvgl/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 4536              		.loc 1 1121 2 is_stmt 1 view .LVU1043
 4537              		.loc 1 1121 19 is_stmt 0 view .LVU1044
 4538 0006 FFF7FEFF 		bl	lv_tlsf_create
 4539              	.LVL448:
 4540              		.loc 1 1121 19 view .LVU1045
 4541 000a 0446     		mov	r4, r0
 4542              	.LVL449:
1122:lvgl/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 4543              		.loc 1 1122 2 is_stmt 1 view .LVU1046
 4544              		.loc 1 1122 38 is_stmt 0 view .LVU1047
 4545 000c FFF7FEFF 		bl	lv_tlsf_size
 4546              	.LVL450:
 4547              		.loc 1 1122 2 view .LVU1048
 4548 0010 321A     		subs	r2, r6, r0
 4549 0012 2918     		adds	r1, r5, r0
 4550 0014 2046     		mov	r0, r4
 4551 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 4552              	.LVL451:
1123:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 4553              		.loc 1 1123 2 is_stmt 1 view .LVU1049
1124:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4554              		.loc 1 1124 1 is_stmt 0 view .LVU1050
 4555 001a 2046     		mov	r0, r4
 4556 001c 70BD     		pop	{r4, r5, r6, pc}
 4557              		.loc 1 1124 1 view .LVU1051
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 117


 4558              		.cfi_endproc
 4559              	.LFE57:
 4561              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 4562              		.align	1
 4563              		.global	lv_tlsf_destroy
 4564              		.syntax unified
 4565              		.thumb
 4566              		.thumb_func
 4567              		.fpu fpv4-sp-d16
 4569              	lv_tlsf_destroy:
 4570              	.LVL452:
 4571              	.LFB58:
1125:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1126:lvgl/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4572              		.loc 1 1127 1 is_stmt 1 view -0
 4573              		.cfi_startproc
 4574              		@ args = 0, pretend = 0, frame = 0
 4575              		@ frame_needed = 0, uses_anonymous_args = 0
 4576              		@ link register save eliminated.
1128:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
1129:lvgl/lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
 4577              		.loc 1 1129 2 view .LVU1053
1130:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4578              		.loc 1 1130 1 is_stmt 0 view .LVU1054
 4579 0000 7047     		bx	lr
 4580              		.cfi_endproc
 4581              	.LFE58:
 4583              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 4584              		.align	1
 4585              		.global	lv_tlsf_get_pool
 4586              		.syntax unified
 4587              		.thumb
 4588              		.thumb_func
 4589              		.fpu fpv4-sp-d16
 4591              	lv_tlsf_get_pool:
 4592              	.LVL453:
 4593              	.LFB59:
1131:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1132:lvgl/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4594              		.loc 1 1133 1 is_stmt 1 view -0
 4595              		.cfi_startproc
 4596              		@ args = 0, pretend = 0, frame = 0
 4597              		@ frame_needed = 0, uses_anonymous_args = 0
 4598              		.loc 1 1133 1 is_stmt 0 view .LVU1056
 4599 0000 10B5     		push	{r4, lr}
 4600              	.LCFI99:
 4601              		.cfi_def_cfa_offset 8
 4602              		.cfi_offset 4, -8
 4603              		.cfi_offset 14, -4
 4604 0002 0446     		mov	r4, r0
1134:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 4605              		.loc 1 1134 2 is_stmt 1 view .LVU1057
 4606              		.loc 1 1134 9 is_stmt 0 view .LVU1058
 4607 0004 FFF7FEFF 		bl	lv_tlsf_size
 4608              	.LVL454:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 118


1135:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4609              		.loc 1 1135 1 view .LVU1059
 4610 0008 2044     		add	r0, r0, r4
 4611 000a 10BD     		pop	{r4, pc}
 4612              		.loc 1 1135 1 view .LVU1060
 4613              		.cfi_endproc
 4614              	.LFE59:
 4616              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 4617              		.align	1
 4618              		.global	lv_tlsf_malloc
 4619              		.syntax unified
 4620              		.thumb
 4621              		.thumb_func
 4622              		.fpu fpv4-sp-d16
 4624              	lv_tlsf_malloc:
 4625              	.LVL455:
 4626              	.LFB60:
1136:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1137:lvgl/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4627              		.loc 1 1138 1 is_stmt 1 view -0
 4628              		.cfi_startproc
 4629              		@ args = 0, pretend = 0, frame = 0
 4630              		@ frame_needed = 0, uses_anonymous_args = 0
 4631              		.loc 1 1138 1 is_stmt 0 view .LVU1062
 4632 0000 38B5     		push	{r3, r4, r5, lr}
 4633              	.LCFI100:
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 3, -16
 4636              		.cfi_offset 4, -12
 4637              		.cfi_offset 5, -8
 4638              		.cfi_offset 14, -4
 4639 0002 0446     		mov	r4, r0
 4640 0004 0846     		mov	r0, r1
 4641              	.LVL456:
1139:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 4642              		.loc 1 1139 2 is_stmt 1 view .LVU1063
1140:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 4643              		.loc 1 1140 2 view .LVU1064
 4644              		.loc 1 1140 24 is_stmt 0 view .LVU1065
 4645 0006 0421     		movs	r1, #4
 4646              	.LVL457:
 4647              		.loc 1 1140 24 view .LVU1066
 4648 0008 FFF7FEFF 		bl	adjust_request_size
 4649              	.LVL458:
 4650              		.loc 1 1140 24 view .LVU1067
 4651 000c 0546     		mov	r5, r0
 4652              	.LVL459:
1141:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 4653              		.loc 1 1141 2 is_stmt 1 view .LVU1068
 4654              		.loc 1 1141 26 is_stmt 0 view .LVU1069
 4655 000e 0146     		mov	r1, r0
 4656 0010 2046     		mov	r0, r4
 4657              	.LVL460:
 4658              		.loc 1 1141 26 view .LVU1070
 4659 0012 FFF7FEFF 		bl	block_locate_free
 4660              	.LVL461:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 119


 4661              		.loc 1 1141 26 view .LVU1071
 4662 0016 0146     		mov	r1, r0
 4663              	.LVL462:
1142:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 4664              		.loc 1 1142 2 is_stmt 1 view .LVU1072
 4665              		.loc 1 1142 9 is_stmt 0 view .LVU1073
 4666 0018 2A46     		mov	r2, r5
 4667 001a 2046     		mov	r0, r4
 4668              	.LVL463:
 4669              		.loc 1 1142 9 view .LVU1074
 4670 001c FFF7FEFF 		bl	block_prepare_used
 4671              	.LVL464:
1143:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4672              		.loc 1 1143 1 view .LVU1075
 4673 0020 38BD     		pop	{r3, r4, r5, pc}
 4674              		.loc 1 1143 1 view .LVU1076
 4675              		.cfi_endproc
 4676              	.LFE60:
 4678              		.section	.rodata.lv_tlsf_memalign.str1.4,"aMS",%progbits,1
 4679              		.align	2
 4680              	.LC43:
 4681 0000 67617020 		.ascii	"gap >= gap_minimum && \"gap size too small\"\000"
 4681      3E3D2067 
 4681      61705F6D 
 4681      696E696D 
 4681      756D2026 
 4682              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 4683              		.align	1
 4684              		.global	lv_tlsf_memalign
 4685              		.syntax unified
 4686              		.thumb
 4687              		.thumb_func
 4688              		.fpu fpv4-sp-d16
 4690              	lv_tlsf_memalign:
 4691              	.LVL465:
 4692              	.LFB61:
1144:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1145:lvgl/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4693              		.loc 1 1146 1 is_stmt 1 view -0
 4694              		.cfi_startproc
 4695              		@ args = 0, pretend = 0, frame = 0
 4696              		@ frame_needed = 0, uses_anonymous_args = 0
 4697              		.loc 1 1146 1 is_stmt 0 view .LVU1078
 4698 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4699              	.LCFI101:
 4700              		.cfi_def_cfa_offset 24
 4701              		.cfi_offset 4, -24
 4702              		.cfi_offset 5, -20
 4703              		.cfi_offset 6, -16
 4704              		.cfi_offset 7, -12
 4705              		.cfi_offset 8, -8
 4706              		.cfi_offset 14, -4
 4707 0004 82B0     		sub	sp, sp, #8
 4708              	.LCFI102:
 4709              		.cfi_def_cfa_offset 32
 4710 0006 0746     		mov	r7, r0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 120


 4711 0008 0C46     		mov	r4, r1
1147:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 4712              		.loc 1 1147 2 is_stmt 1 view .LVU1079
 4713              	.LVL466:
1148:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 4714              		.loc 1 1148 2 view .LVU1080
 4715              		.loc 1 1148 24 is_stmt 0 view .LVU1081
 4716 000a 0421     		movs	r1, #4
 4717              	.LVL467:
 4718              		.loc 1 1148 24 view .LVU1082
 4719 000c 1046     		mov	r0, r2
 4720              	.LVL468:
 4721              		.loc 1 1148 24 view .LVU1083
 4722 000e FFF7FEFF 		bl	adjust_request_size
 4723              	.LVL469:
 4724              		.loc 1 1148 24 view .LVU1084
 4725 0012 0546     		mov	r5, r0
 4726              	.LVL470:
1149:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1150:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
1151:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
1158:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 4727              		.loc 1 1158 2 is_stmt 1 view .LVU1085
1159:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 4728              		.loc 1 1159 2 view .LVU1086
 4729              		.loc 1 1159 58 is_stmt 0 view .LVU1087
 4730 0014 2044     		add	r0, r0, r4
 4731              	.LVL471:
 4732              		.loc 1 1159 31 view .LVU1088
 4733 0016 2146     		mov	r1, r4
 4734 0018 1030     		adds	r0, r0, #16
 4735 001a FFF7FEFF 		bl	adjust_request_size
 4736              	.LVL472:
1160:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1161:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/*
1162:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:lvgl/lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:lvgl/lvgl/src/misc/lv_tlsf.c **** 	*/
1165:lvgl/lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 4737              		.loc 1 1165 2 is_stmt 1 view .LVU1089
 4738              		.loc 1 1165 77 is_stmt 0 view .LVU1090
 4739 001e 25B1     		cbz	r5, .L327
 4740 0020 0146     		mov	r1, r0
 4741              		.loc 1 1165 38 discriminator 1 view .LVU1091
 4742 0022 042C     		cmp	r4, #4
 4743 0024 02D8     		bhi	.L322
 4744              		.loc 1 1165 77 view .LVU1092
 4745 0026 2946     		mov	r1, r5
 4746 0028 00E0     		b	.L322
 4747              	.L327:
 4748              		.loc 1 1165 77 view .LVU1093
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 121


 4749 002a 2946     		mov	r1, r5
 4750              	.L322:
 4751              	.LVL473:
1166:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1167:lvgl/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 4752              		.loc 1 1167 2 is_stmt 1 discriminator 6 view .LVU1094
 4753              		.loc 1 1167 26 is_stmt 0 discriminator 6 view .LVU1095
 4754 002c 3846     		mov	r0, r7
 4755              	.LVL474:
 4756              		.loc 1 1167 26 discriminator 6 view .LVU1096
 4757 002e FFF7FEFF 		bl	block_locate_free
 4758              	.LVL475:
1168:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1169:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:lvgl/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 4759              		.loc 1 1170 2 is_stmt 1 discriminator 6 view .LVU1097
 4760              		.loc 1 1170 2 discriminator 6 view .LVU1098
 4761              		.loc 1 1170 2 discriminator 6 view .LVU1099
1171:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1172:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 4762              		.loc 1 1172 2 discriminator 6 view .LVU1100
 4763              		.loc 1 1172 5 is_stmt 0 discriminator 6 view .LVU1101
 4764 0032 0646     		mov	r6, r0
 4765 0034 50B3     		cbz	r0, .L323
 4766              	.LBB13:
1173:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1174:lvgl/lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 4767              		.loc 1 1174 3 is_stmt 1 view .LVU1102
 4768              		.loc 1 1174 15 is_stmt 0 view .LVU1103
 4769 0036 FFF7FEFF 		bl	block_to_ptr
 4770              	.LVL476:
 4771              		.loc 1 1174 15 view .LVU1104
 4772 003a 8046     		mov	r8, r0
 4773              	.LVL477:
1175:lvgl/lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
 4774              		.loc 1 1175 3 is_stmt 1 view .LVU1105
 4775              		.loc 1 1175 19 is_stmt 0 view .LVU1106
 4776 003c 2146     		mov	r1, r4
 4777 003e FFF7FEFF 		bl	align_ptr
 4778              	.LVL478:
1176:lvgl/lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 4779              		.loc 1 1176 3 is_stmt 1 view .LVU1107
 4780              		.loc 1 1176 16 is_stmt 0 view .LVU1108
 4781 0042 A0EB0802 		sub	r2, r0, r8
 4782              	.LVL479:
1177:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1179:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 4783              		.loc 1 1180 3 is_stmt 1 view .LVU1109
 4784              		.loc 1 1180 11 is_stmt 0 view .LVU1110
 4785 0046 531E     		subs	r3, r2, #1
 4786              		.loc 1 1180 6 view .LVU1111
 4787 0048 0E2B     		cmp	r3, #14
 4788 004a 0ED9     		bls	.L329
 4789              	.L324:
1181:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 122


1182:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1187:lvgl/lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:lvgl/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
1191:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1192:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 4790              		.loc 1 1192 3 is_stmt 1 view .LVU1112
 4791              		.loc 1 1192 6 is_stmt 0 view .LVU1113
 4792 004c F2B1     		cbz	r2, .L323
1193:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
1194:lvgl/lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 4793              		.loc 1 1194 4 is_stmt 1 view .LVU1114
 4794              		.loc 1 1194 4 view .LVU1115
 4795 004e 0F2A     		cmp	r2, #15
 4796 0050 17D8     		bhi	.L325
 4797              		.loc 1 1194 4 discriminator 1 view .LVU1116
 4798 0052 124B     		ldr	r3, .L330
 4799 0054 0193     		str	r3, [sp, #4]
 4800 0056 124B     		ldr	r3, .L330+4
 4801 0058 0093     		str	r3, [sp]
 4802 005a 124B     		ldr	r3, .L330+8
 4803 005c 40F2AA42 		movw	r2, #1194
 4804              	.LVL480:
 4805              		.loc 1 1194 4 is_stmt 0 discriminator 1 view .LVU1117
 4806 0060 1149     		ldr	r1, .L330+12
 4807 0062 0320     		movs	r0, #3
 4808              	.LVL481:
 4809              		.loc 1 1194 4 discriminator 1 view .LVU1118
 4810 0064 FFF7FEFF 		bl	_lv_log_add
 4811              	.LVL482:
 4812              	.L326:
 4813              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1119
 4814              		.loc 1 1194 4 discriminator 2 view .LVU1120
 4815              		.loc 1 1194 4 discriminator 2 view .LVU1121
 4816              		.loc 1 1194 4 discriminator 2 view .LVU1122
 4817 0068 FEE7     		b	.L326
 4818              	.LVL483:
 4819              	.L329:
 4820              	.LBB14:
1182:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 4821              		.loc 1 1182 4 view .LVU1123
1182:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 4822              		.loc 1 1182 17 is_stmt 0 view .LVU1124
 4823 006a C2F11002 		rsb	r2, r2, #16
 4824              	.LVL484:
1183:lvgl/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
 4825              		.loc 1 1183 4 is_stmt 1 view .LVU1125
1184:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 4826              		.loc 1 1184 4 view .LVU1126
1187:lvgl/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 4827              		.loc 1 1187 4 view .LVU1127
1187:lvgl/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 123


 4828              		.loc 1 1187 14 is_stmt 0 view .LVU1128
 4829 006e 2146     		mov	r1, r4
 4830 0070 9442     		cmp	r4, r2
 4831 0072 2CBF     		ite	cs
 4832 0074 0019     		addcs	r0, r0, r4
 4833 0076 8018     		addcc	r0, r0, r2
 4834              	.LVL485:
1187:lvgl/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 4835              		.loc 1 1187 14 view .LVU1129
 4836 0078 FFF7FEFF 		bl	align_ptr
 4837              	.LVL486:
1188:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 4838              		.loc 1 1188 4 is_stmt 1 view .LVU1130
1188:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 4839              		.loc 1 1188 10 is_stmt 0 view .LVU1131
 4840 007c A0EB0802 		sub	r2, r0, r8
 4841              	.LVL487:
1188:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 4842              		.loc 1 1188 10 view .LVU1132
 4843 0080 E4E7     		b	.L324
 4844              	.L325:
1188:lvgl/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 4845              		.loc 1 1188 10 view .LVU1133
 4846              	.LBE14:
 4847              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1134
1195:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 4848              		.loc 1 1195 4 discriminator 2 view .LVU1135
 4849              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1136
 4850 0082 3146     		mov	r1, r6
 4851 0084 3846     		mov	r0, r7
 4852              	.LVL488:
 4853              		.loc 1 1195 12 discriminator 2 view .LVU1137
 4854 0086 FFF7FEFF 		bl	block_trim_free_leading
 4855              	.LVL489:
 4856              		.loc 1 1195 12 discriminator 2 view .LVU1138
 4857 008a 0646     		mov	r6, r0
 4858              	.LVL490:
 4859              	.L323:
 4860              		.loc 1 1195 12 discriminator 2 view .LVU1139
 4861              	.LBE13:
1196:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
1197:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1198:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1199:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 4862              		.loc 1 1199 2 is_stmt 1 view .LVU1140
 4863              		.loc 1 1199 9 is_stmt 0 view .LVU1141
 4864 008c 2A46     		mov	r2, r5
 4865 008e 3146     		mov	r1, r6
 4866 0090 3846     		mov	r0, r7
 4867 0092 FFF7FEFF 		bl	block_prepare_used
 4868              	.LVL491:
1200:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4869              		.loc 1 1200 1 view .LVU1142
 4870 0096 02B0     		add	sp, sp, #8
 4871              	.LCFI103:
 4872              		.cfi_def_cfa_offset 24
 4873              		@ sp needed
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 124


 4874 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4875              	.LVL492:
 4876              	.L331:
 4877              		.loc 1 1200 1 view .LVU1143
 4878              		.align	2
 4879              	.L330:
 4880 009c 00000000 		.word	.LC43
 4881 00a0 38000000 		.word	.LC2
 4882 00a4 00000000 		.word	.LANCHOR22
 4883 00a8 00000000 		.word	.LC0
 4884              		.cfi_endproc
 4885              	.LFE61:
 4887              		.section	.rodata.lv_tlsf_free.str1.4,"aMS",%progbits,1
 4888              		.align	2
 4889              	.LC44:
 4890 0000 21626C6F 		.ascii	"!block_is_free(block) && \"block already marked as "
 4890      636B5F69 
 4890      735F6672 
 4890      65652862 
 4890      6C6F636B 
 4891 0032 66726565 		.ascii	"free\"\000"
 4891      2200
 4892              		.section	.text.lv_tlsf_free,"ax",%progbits
 4893              		.align	1
 4894              		.global	lv_tlsf_free
 4895              		.syntax unified
 4896              		.thumb
 4897              		.thumb_func
 4898              		.fpu fpv4-sp-d16
 4900              	lv_tlsf_free:
 4901              	.LVL493:
 4902              	.LFB62:
1201:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1202:lvgl/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 4903              		.loc 1 1203 1 is_stmt 1 view -0
 4904              		.cfi_startproc
 4905              		@ args = 0, pretend = 0, frame = 0
 4906              		@ frame_needed = 0, uses_anonymous_args = 0
1204:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 4907              		.loc 1 1205 2 view .LVU1145
 4908              		.loc 1 1205 5 is_stmt 0 view .LVU1146
 4909 0000 31B3     		cbz	r1, .L337
1203:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 4910              		.loc 1 1203 1 view .LVU1147
 4911 0002 30B5     		push	{r4, r5, lr}
 4912              	.LCFI104:
 4913              		.cfi_def_cfa_offset 12
 4914              		.cfi_offset 4, -12
 4915              		.cfi_offset 5, -8
 4916              		.cfi_offset 14, -4
 4917 0004 83B0     		sub	sp, sp, #12
 4918              	.LCFI105:
 4919              		.cfi_def_cfa_offset 24
 4920 0006 0446     		mov	r4, r0
 4921 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 125


 4922              	.LVL494:
 4923              	.LBB15:
1206:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1207:lvgl/lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 4924              		.loc 1 1207 3 is_stmt 1 view .LVU1148
1208:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 4925              		.loc 1 1208 3 view .LVU1149
 4926              		.loc 1 1208 27 is_stmt 0 view .LVU1150
 4927 000a FFF7FEFF 		bl	block_from_ptr
 4928              	.LVL495:
 4929              		.loc 1 1208 27 view .LVU1151
 4930 000e 0546     		mov	r5, r0
 4931              	.LVL496:
1209:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 4932              		.loc 1 1209 3 is_stmt 1 view .LVU1152
 4933              		.loc 1 1209 3 view .LVU1153
 4934 0010 FFF7FEFF 		bl	block_is_free
 4935              	.LVL497:
 4936              		.loc 1 1209 3 is_stmt 0 view .LVU1154
 4937 0014 58B1     		cbz	r0, .L334
 4938              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1155
 4939 0016 0F4B     		ldr	r3, .L340
 4940 0018 0193     		str	r3, [sp, #4]
 4941 001a 0F4B     		ldr	r3, .L340+4
 4942 001c 0093     		str	r3, [sp]
 4943 001e 0F4B     		ldr	r3, .L340+8
 4944 0020 40F2B942 		movw	r2, #1209
 4945 0024 0E49     		ldr	r1, .L340+12
 4946 0026 0320     		movs	r0, #3
 4947 0028 FFF7FEFF 		bl	_lv_log_add
 4948              	.LVL498:
 4949              	.L335:
 4950              		.loc 1 1209 3 discriminator 1 view .LVU1156
 4951              		.loc 1 1209 3 discriminator 1 view .LVU1157
 4952              		.loc 1 1209 3 discriminator 1 view .LVU1158
 4953              		.loc 1 1209 3 discriminator 1 view .LVU1159
 4954 002c FEE7     		b	.L335
 4955              	.L334:
 4956              		.loc 1 1209 3 discriminator 2 view .LVU1160
1210:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 4957              		.loc 1 1210 3 discriminator 2 view .LVU1161
 4958 002e 2846     		mov	r0, r5
 4959 0030 FFF7FEFF 		bl	block_mark_as_free
 4960              	.LVL499:
1211:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 4961              		.loc 1 1211 3 discriminator 2 view .LVU1162
 4962              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1163
 4963 0034 2946     		mov	r1, r5
 4964 0036 2046     		mov	r0, r4
 4965 0038 FFF7FEFF 		bl	block_merge_prev
 4966              	.LVL500:
 4967 003c 0146     		mov	r1, r0
 4968              	.LVL501:
1212:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 4969              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1164
 4970              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1165
 4971 003e 2046     		mov	r0, r4
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 126


 4972              	.LVL502:
 4973              		.loc 1 1212 11 discriminator 2 view .LVU1166
 4974 0040 FFF7FEFF 		bl	block_merge_next
 4975              	.LVL503:
 4976              		.loc 1 1212 11 discriminator 2 view .LVU1167
 4977 0044 0146     		mov	r1, r0
 4978              	.LVL504:
1213:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 4979              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1168
 4980 0046 2046     		mov	r0, r4
 4981              	.LVL505:
 4982              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1169
 4983 0048 FFF7FEFF 		bl	block_insert
 4984              	.LVL506:
 4985              		.loc 1 1213 3 discriminator 2 view .LVU1170
 4986              	.LBE15:
1214:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1215:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 4987              		.loc 1 1215 1 discriminator 2 view .LVU1171
 4988 004c 03B0     		add	sp, sp, #12
 4989              	.LCFI106:
 4990              		.cfi_def_cfa_offset 12
 4991              		@ sp needed
 4992 004e 30BD     		pop	{r4, r5, pc}
 4993              	.LVL507:
 4994              	.L337:
 4995              	.LCFI107:
 4996              		.cfi_def_cfa_offset 0
 4997              		.cfi_restore 4
 4998              		.cfi_restore 5
 4999              		.cfi_restore 14
 5000              		.loc 1 1215 1 discriminator 2 view .LVU1172
 5001 0050 7047     		bx	lr
 5002              	.L341:
 5003 0052 00BF     		.align	2
 5004              	.L340:
 5005 0054 00000000 		.word	.LC44
 5006 0058 38000000 		.word	.LC2
 5007 005c 00000000 		.word	.LANCHOR23
 5008 0060 00000000 		.word	.LC0
 5009              		.cfi_endproc
 5010              	.LFE62:
 5012              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 5013              		.align	1
 5014              		.global	lv_tlsf_realloc
 5015              		.syntax unified
 5016              		.thumb
 5017              		.thumb_func
 5018              		.fpu fpv4-sp-d16
 5020              	lv_tlsf_realloc:
 5021              	.LVL508:
 5022              	.LFB63:
1216:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1217:lvgl/lvgl/src/misc/lv_tlsf.c **** /*
1218:lvgl/lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:lvgl/lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:lvgl/lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 127


1221:lvgl/lvgl/src/misc/lv_tlsf.c **** **
1222:lvgl/lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:lvgl/lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:lvgl/lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:lvgl/lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:lvgl/lvgl/src/misc/lv_tlsf.c **** */
1230:lvgl/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:lvgl/lvgl/src/misc/lv_tlsf.c **** {
 5023              		.loc 1 1231 1 is_stmt 1 view -0
 5024              		.cfi_startproc
 5025              		@ args = 0, pretend = 0, frame = 0
 5026              		@ frame_needed = 0, uses_anonymous_args = 0
 5027              		.loc 1 1231 1 is_stmt 0 view .LVU1174
 5028 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5029              	.LCFI108:
 5030              		.cfi_def_cfa_offset 36
 5031              		.cfi_offset 4, -36
 5032              		.cfi_offset 5, -32
 5033              		.cfi_offset 6, -28
 5034              		.cfi_offset 7, -24
 5035              		.cfi_offset 8, -20
 5036              		.cfi_offset 9, -16
 5037              		.cfi_offset 10, -12
 5038              		.cfi_offset 11, -8
 5039              		.cfi_offset 14, -4
 5040 0004 83B0     		sub	sp, sp, #12
 5041              	.LCFI109:
 5042              		.cfi_def_cfa_offset 48
 5043 0006 0446     		mov	r4, r0
 5044 0008 1646     		mov	r6, r2
1232:lvgl/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 5045              		.loc 1 1232 2 is_stmt 1 view .LVU1175
 5046              	.LVL509:
1233:lvgl/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 5047              		.loc 1 1233 2 view .LVU1176
1234:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1235:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:lvgl/lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
 5048              		.loc 1 1236 2 view .LVU1177
 5049              		.loc 1 1236 5 is_stmt 0 view .LVU1178
 5050 000a 0F46     		mov	r7, r1
 5051 000c 01B1     		cbz	r1, .L343
 5052              		.loc 1 1236 10 discriminator 1 view .LVU1179
 5053 000e AAB3     		cbz	r2, .L352
 5054              	.L343:
1237:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1238:lvgl/lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1240:lvgl/lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:lvgl/lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 5055              		.loc 1 1241 7 is_stmt 1 view .LVU1180
 5056              		.loc 1 1241 10 is_stmt 0 view .LVU1181
 5057 0010 C7B3     		cbz	r7, .L353
 5058              	.LBB16:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 128


1242:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1245:lvgl/lvgl/src/misc/lv_tlsf.c **** 	else
1246:lvgl/lvgl/src/misc/lv_tlsf.c **** 	{
1247:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 5059              		.loc 1 1247 3 is_stmt 1 view .LVU1182
 5060              		.loc 1 1247 27 is_stmt 0 view .LVU1183
 5061 0012 3846     		mov	r0, r7
 5062              	.LVL510:
 5063              		.loc 1 1247 27 view .LVU1184
 5064 0014 FFF7FEFF 		bl	block_from_ptr
 5065              	.LVL511:
 5066              		.loc 1 1247 27 view .LVU1185
 5067 0018 0546     		mov	r5, r0
 5068              	.LVL512:
1248:lvgl/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 5069              		.loc 1 1248 3 is_stmt 1 view .LVU1186
 5070              		.loc 1 1248 26 is_stmt 0 view .LVU1187
 5071 001a FFF7FEFF 		bl	block_next
 5072              	.LVL513:
 5073              		.loc 1 1248 26 view .LVU1188
 5074 001e 8346     		mov	fp, r0
 5075              	.LVL514:
1249:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1250:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 5076              		.loc 1 1250 3 is_stmt 1 view .LVU1189
 5077              		.loc 1 1250 26 is_stmt 0 view .LVU1190
 5078 0020 2846     		mov	r0, r5
 5079              	.LVL515:
 5080              		.loc 1 1250 26 view .LVU1191
 5081 0022 FFF7FEFF 		bl	block_size
 5082              	.LVL516:
 5083 0026 8146     		mov	r9, r0
 5084              	.LVL517:
1251:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 5085              		.loc 1 1251 3 is_stmt 1 view .LVU1192
 5086              		.loc 1 1251 37 is_stmt 0 view .LVU1193
 5087 0028 5846     		mov	r0, fp
 5088              	.LVL518:
 5089              		.loc 1 1251 37 view .LVU1194
 5090 002a FFF7FEFF 		bl	block_size
 5091              	.LVL519:
 5092              		.loc 1 1251 35 view .LVU1195
 5093 002e 00EB090A 		add	r10, r0, r9
 5094              		.loc 1 1251 16 view .LVU1196
 5095 0032 0AF1040A 		add	r10, r10, #4
 5096              	.LVL520:
1252:lvgl/lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 5097              		.loc 1 1252 3 is_stmt 1 view .LVU1197
 5098              		.loc 1 1252 25 is_stmt 0 view .LVU1198
 5099 0036 0421     		movs	r1, #4
 5100 0038 3046     		mov	r0, r6
 5101 003a FFF7FEFF 		bl	adjust_request_size
 5102              	.LVL521:
 5103 003e 8046     		mov	r8, r0
 5104              	.LVL522:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 129


1253:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 5105              		.loc 1 1254 3 is_stmt 1 view .LVU1199
 5106              		.loc 1 1254 3 view .LVU1200
 5107 0040 2846     		mov	r0, r5
 5108              	.LVL523:
 5109              		.loc 1 1254 3 is_stmt 0 view .LVU1201
 5110 0042 FFF7FEFF 		bl	block_is_free
 5111              	.LVL524:
 5112 0046 18BB     		cbnz	r0, .L354
 5113              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1202
1255:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1256:lvgl/lvgl/src/misc/lv_tlsf.c **** 		/*
1257:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:lvgl/lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:lvgl/lvgl/src/misc/lv_tlsf.c **** 		*/
1260:lvgl/lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
 5114              		.loc 1 1260 3 discriminator 2 view .LVU1203
 5115              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1204
 5116 0048 C145     		cmp	r9, r8
 5117 004a 2DD2     		bcs	.L348
 5118              		.loc 1 1260 29 discriminator 1 view .LVU1205
 5119 004c 5846     		mov	r0, fp
 5120 004e FFF7FEFF 		bl	block_is_free
 5121              	.LVL525:
 5122              		.loc 1 1260 24 discriminator 1 view .LVU1206
 5123 0052 08B1     		cbz	r0, .L349
 5124              		.loc 1 1260 49 discriminator 2 view .LVU1207
 5125 0054 C245     		cmp	r10, r8
 5126 0056 27D2     		bcs	.L348
 5127              	.L349:
1261:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
1262:lvgl/lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
 5128              		.loc 1 1262 4 is_stmt 1 view .LVU1208
 5129              		.loc 1 1262 8 is_stmt 0 view .LVU1209
 5130 0058 3146     		mov	r1, r6
 5131 005a 2046     		mov	r0, r4
 5132 005c FFF7FEFF 		bl	lv_tlsf_malloc
 5133              	.LVL526:
1263:lvgl/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 5134              		.loc 1 1263 4 is_stmt 1 view .LVU1210
 5135              		.loc 1 1263 7 is_stmt 0 view .LVU1211
 5136 0060 0546     		mov	r5, r0
 5137              	.LVL527:
 5138              		.loc 1 1263 7 view .LVU1212
 5139 0062 48B3     		cbz	r0, .L342
 5140              	.LBB17:
1264:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
1265:lvgl/lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
 5141              		.loc 1 1265 5 is_stmt 1 view .LVU1213
 5142              	.LVL528:
1266:lvgl/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 5143              		.loc 1 1266 5 view .LVU1214
 5144 0064 3246     		mov	r2, r6
 5145 0066 4E45     		cmp	r6, r9
 5146 0068 28BF     		it	cs
 5147 006a 4A46     		movcs	r2, r9
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 130


 5148 006c 3946     		mov	r1, r7
 5149 006e FFF7FEFF 		bl	lv_memcpy
 5150              	.LVL529:
1267:lvgl/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 5151              		.loc 1 1267 5 view .LVU1215
 5152 0072 3946     		mov	r1, r7
 5153 0074 2046     		mov	r0, r4
 5154 0076 FFF7FEFF 		bl	lv_tlsf_free
 5155              	.LVL530:
 5156 007a 1DE0     		b	.L342
 5157              	.LVL531:
 5158              	.L352:
 5159              		.loc 1 1267 5 is_stmt 0 view .LVU1216
 5160              	.LBE17:
 5161              	.LBE16:
1238:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5162              		.loc 1 1238 3 is_stmt 1 view .LVU1217
 5163 007c FFF7FEFF 		bl	lv_tlsf_free
 5164              	.LVL532:
1233:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5165              		.loc 1 1233 8 is_stmt 0 view .LVU1218
 5166 0080 0025     		movs	r5, #0
1238:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5167              		.loc 1 1238 3 view .LVU1219
 5168 0082 19E0     		b	.L342
 5169              	.LVL533:
 5170              	.L353:
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5171              		.loc 1 1243 3 is_stmt 1 view .LVU1220
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5172              		.loc 1 1243 7 is_stmt 0 view .LVU1221
 5173 0084 3146     		mov	r1, r6
 5174              	.LVL534:
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5175              		.loc 1 1243 7 view .LVU1222
 5176 0086 2046     		mov	r0, r4
 5177              	.LVL535:
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5178              		.loc 1 1243 7 view .LVU1223
 5179 0088 FFF7FEFF 		bl	lv_tlsf_malloc
 5180              	.LVL536:
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5181              		.loc 1 1243 7 view .LVU1224
 5182 008c 0546     		mov	r5, r0
 5183              	.LVL537:
1243:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
 5184              		.loc 1 1243 7 view .LVU1225
 5185 008e 13E0     		b	.L342
 5186              	.LVL538:
 5187              	.L354:
 5188              	.LBB18:
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5189              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1226
 5190 0090 0F4B     		ldr	r3, .L356
 5191 0092 0193     		str	r3, [sp, #4]
 5192 0094 0F4B     		ldr	r3, .L356+4
 5193 0096 0093     		str	r3, [sp]
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 131


 5194 0098 0F4B     		ldr	r3, .L356+8
 5195 009a 40F2E642 		movw	r2, #1254
 5196 009e 0F49     		ldr	r1, .L356+12
 5197 00a0 0320     		movs	r0, #3
 5198 00a2 FFF7FEFF 		bl	_lv_log_add
 5199              	.LVL539:
 5200              	.L347:
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5201              		.loc 1 1254 3 discriminator 1 view .LVU1227
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5202              		.loc 1 1254 3 discriminator 1 view .LVU1228
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5203              		.loc 1 1254 3 discriminator 1 view .LVU1229
1254:lvgl/lvgl/src/misc/lv_tlsf.c **** 
 5204              		.loc 1 1254 3 discriminator 1 view .LVU1230
 5205 00a6 FEE7     		b	.L347
 5206              	.L348:
1268:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
1269:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
1270:lvgl/lvgl/src/misc/lv_tlsf.c **** 		else
1271:lvgl/lvgl/src/misc/lv_tlsf.c **** 		{
1272:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:lvgl/lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
 5207              		.loc 1 1273 4 view .LVU1231
 5208              		.loc 1 1273 7 is_stmt 0 view .LVU1232
 5209 00a8 C145     		cmp	r9, r8
 5210 00aa 09D3     		bcc	.L355
 5211              	.L350:
1274:lvgl/lvgl/src/misc/lv_tlsf.c **** 			{
1275:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
1278:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1279:lvgl/lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:lvgl/lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
 5212              		.loc 1 1280 4 is_stmt 1 view .LVU1233
 5213 00ac 4246     		mov	r2, r8
 5214 00ae 2946     		mov	r1, r5
 5215 00b0 2046     		mov	r0, r4
 5216 00b2 FFF7FEFF 		bl	block_trim_used
 5217              	.LVL540:
1281:lvgl/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
 5218              		.loc 1 1281 4 view .LVU1234
 5219              		.loc 1 1281 6 is_stmt 0 view .LVU1235
 5220 00b6 3D46     		mov	r5, r7
 5221              	.LVL541:
 5222              		.loc 1 1281 6 view .LVU1236
 5223              	.LBE18:
1282:lvgl/lvgl/src/misc/lv_tlsf.c **** 		}
1283:lvgl/lvgl/src/misc/lv_tlsf.c **** 	}
1284:lvgl/lvgl/src/misc/lv_tlsf.c **** 
1285:lvgl/lvgl/src/misc/lv_tlsf.c **** 	return p;
 5224              		.loc 1 1285 2 is_stmt 1 view .LVU1237
 5225              	.L342:
1286:lvgl/lvgl/src/misc/lv_tlsf.c **** }
 5226              		.loc 1 1286 1 is_stmt 0 view .LVU1238
 5227 00b8 2846     		mov	r0, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 132


 5228 00ba 03B0     		add	sp, sp, #12
 5229              	.LCFI110:
 5230              		.cfi_remember_state
 5231              		.cfi_def_cfa_offset 36
 5232              		@ sp needed
 5233 00bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5234              	.LVL542:
 5235              	.L355:
 5236              	.LCFI111:
 5237              		.cfi_restore_state
 5238              	.LBB19:
1275:lvgl/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 5239              		.loc 1 1275 5 is_stmt 1 view .LVU1239
 5240 00c0 2946     		mov	r1, r5
 5241 00c2 2046     		mov	r0, r4
 5242 00c4 FFF7FEFF 		bl	block_merge_next
 5243              	.LVL543:
1276:lvgl/lvgl/src/misc/lv_tlsf.c **** 			}
 5244              		.loc 1 1276 5 view .LVU1240
 5245 00c8 2846     		mov	r0, r5
 5246 00ca FFF7FEFF 		bl	block_mark_as_used
 5247              	.LVL544:
 5248 00ce EDE7     		b	.L350
 5249              	.L357:
 5250              		.align	2
 5251              	.L356:
 5252 00d0 00000000 		.word	.LC44
 5253 00d4 38000000 		.word	.LC2
 5254 00d8 00000000 		.word	.LANCHOR24
 5255 00dc 00000000 		.word	.LC0
 5256              	.LBE19:
 5257              		.cfi_endproc
 5258              	.LFE63:
 5260              		.section	.rodata.__func__.5781,"a"
 5261              		.align	2
 5262              		.set	.LANCHOR9,. + 0
 5265              	__func__.5781:
 5266 0000 626C6F63 		.ascii	"block_prev\000"
 5266      6B5F7072 
 5266      657600
 5267              		.section	.rodata.__func__.5787,"a"
 5268              		.align	2
 5269              		.set	.LANCHOR0,. + 0
 5272              	__func__.5787:
 5273 0000 626C6F63 		.ascii	"block_next\000"
 5273      6B5F6E65 
 5273      787400
 5274              		.section	.rodata.__func__.5805,"a"
 5275              		.align	2
 5276              		.set	.LANCHOR7,. + 0
 5279              	__func__.5805:
 5280 0000 616C6967 		.ascii	"align_up\000"
 5280      6E5F7570 
 5280      00
 5281              		.section	.rodata.__func__.5811,"a"
 5282              		.align	2
 5283              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 133


 5286              	__func__.5811:
 5287 0000 616C6967 		.ascii	"align_down\000"
 5287      6E5F646F 
 5287      776E00
 5288              		.section	.rodata.__func__.5818,"a"
 5289              		.align	2
 5290              		.set	.LANCHOR4,. + 0
 5293              	__func__.5818:
 5294 0000 616C6967 		.ascii	"align_ptr\000"
 5294      6E5F7074 
 5294      7200
 5295              		.section	.rodata.__func__.5848,"a"
 5296              		.align	2
 5297              		.set	.LANCHOR16,. + 0
 5300              	__func__.5848:
 5301 0000 73656172 		.ascii	"search_suitable_block\000"
 5301      63685F73 
 5301      75697461 
 5301      626C655F 
 5301      626C6F63 
 5302              		.section	.rodata.__func__.5858,"a"
 5303              		.align	2
 5304              		.set	.LANCHOR6,. + 0
 5307              	__func__.5858:
 5308 0000 72656D6F 		.ascii	"remove_free_block\000"
 5308      76655F66 
 5308      7265655F 
 5308      626C6F63 
 5308      6B00
 5309              		.section	.rodata.__func__.5868,"a"
 5310              		.align	2
 5311              		.set	.LANCHOR5,. + 0
 5314              	__func__.5868:
 5315 0000 696E7365 		.ascii	"insert_free_block\000"
 5315      72745F66 
 5315      7265655F 
 5315      626C6F63 
 5315      6B00
 5316              		.section	.rodata.__func__.5894,"a"
 5317              		.align	2
 5318              		.set	.LANCHOR8,. + 0
 5321              	__func__.5894:
 5322 0000 626C6F63 		.ascii	"block_split\000"
 5322      6B5F7370 
 5322      6C697400 
 5323              		.section	.rodata.__func__.5902,"a"
 5324              		.align	2
 5325              		.set	.LANCHOR10,. + 0
 5328              	__func__.5902:
 5329 0000 626C6F63 		.ascii	"block_absorb\000"
 5329      6B5F6162 
 5329      736F7262 
 5329      00
 5330              		.section	.rodata.__func__.5909,"a"
 5331              		.align	2
 5332              		.set	.LANCHOR13,. + 0
 5335              	__func__.5909:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 134


 5336 0000 626C6F63 		.ascii	"block_merge_prev\000"
 5336      6B5F6D65 
 5336      7267655F 
 5336      70726576 
 5336      00
 5337              		.section	.rodata.__func__.5917,"a"
 5338              		.align	2
 5339              		.set	.LANCHOR14,. + 0
 5342              	__func__.5917:
 5343 0000 626C6F63 		.ascii	"block_merge_next\000"
 5343      6B5F6D65 
 5343      7267655F 
 5343      6E657874 
 5343      00
 5344              		.section	.rodata.__func__.5925,"a"
 5345              		.align	2
 5346              		.set	.LANCHOR11,. + 0
 5349              	__func__.5925:
 5350 0000 626C6F63 		.ascii	"block_trim_free\000"
 5350      6B5F7472 
 5350      696D5F66 
 5350      72656500 
 5351              		.section	.rodata.__func__.5933,"a"
 5352              		.align	2
 5353              		.set	.LANCHOR15,. + 0
 5356              	__func__.5933:
 5357 0000 626C6F63 		.ascii	"block_trim_used\000"
 5357      6B5F7472 
 5357      696D5F75 
 5357      73656400 
 5358              		.section	.rodata.__func__.5949,"a"
 5359              		.align	2
 5360              		.set	.LANCHOR17,. + 0
 5363              	__func__.5949:
 5364 0000 626C6F63 		.ascii	"block_locate_free\000"
 5364      6B5F6C6F 
 5364      63617465 
 5364      5F667265 
 5364      6500
 5365              		.section	.rodata.__func__.5957,"a"
 5366              		.align	2
 5367              		.set	.LANCHOR12,. + 0
 5370              	__func__.5957:
 5371 0000 626C6F63 		.ascii	"block_prepare_used\000"
 5371      6B5F7072 
 5371      65706172 
 5371      655F7573 
 5371      656400
 5372              		.section	.rodata.__func__.5986,"a"
 5373              		.align	2
 5374              		.set	.LANCHOR2,. + 0
 5377              	__func__.5986:
 5378 0000 696E7465 		.ascii	"integrity_walker\000"
 5378      67726974 
 5378      795F7761 
 5378      6C6B6572 
 5378      00
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 135


 5379              		.section	.rodata.__func__.6000,"a"
 5380              		.align	2
 5381              		.set	.LANCHOR18,. + 0
 5384              	__func__.6000:
 5385 0000 6C765F74 		.ascii	"lv_tlsf_check\000"
 5385      6C73665F 
 5385      63686563 
 5385      6B00
 5386              		.section	.rodata.__func__.6029,"a"
 5387              		.align	2
 5388              		.set	.LANCHOR1,. + 0
 5391              	__func__.6029:
 5392 0000 64656661 		.ascii	"default_walker\000"
 5392      756C745F 
 5392      77616C6B 
 5392      657200
 5393              		.section	.rodata.__func__.6076,"a"
 5394              		.align	2
 5395              		.set	.LANCHOR19,. + 0
 5398              	__func__.6076:
 5399 0000 6C765F74 		.ascii	"lv_tlsf_add_pool\000"
 5399      6C73665F 
 5399      6164645F 
 5399      706F6F6C 
 5399      00
 5400              		.section	.rodata.__func__.6085,"a"
 5401              		.align	2
 5402              		.set	.LANCHOR20,. + 0
 5405              	__func__.6085:
 5406 0000 6C765F74 		.ascii	"lv_tlsf_remove_pool\000"
 5406      6C73665F 
 5406      72656D6F 
 5406      76655F70 
 5406      6F6F6C00 
 5407              		.section	.rodata.__func__.6092,"a"
 5408              		.align	2
 5409              		.set	.LANCHOR21,. + 0
 5412              	__func__.6092:
 5413 0000 6C765F74 		.ascii	"lv_tlsf_create\000"
 5413      6C73665F 
 5413      63726561 
 5413      746500
 5414              		.section	.rodata.__func__.6122,"a"
 5415              		.align	2
 5416              		.set	.LANCHOR22,. + 0
 5419              	__func__.6122:
 5420 0000 6C765F74 		.ascii	"lv_tlsf_memalign\000"
 5420      6C73665F 
 5420      6D656D61 
 5420      6C69676E 
 5420      00
 5421              		.section	.rodata.__func__.6137,"a"
 5422              		.align	2
 5423              		.set	.LANCHOR23,. + 0
 5426              	__func__.6137:
 5427 0000 6C765F74 		.ascii	"lv_tlsf_free\000"
 5427      6C73665F 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 136


 5427      66726565 
 5427      00
 5428              		.section	.rodata.__func__.6151,"a"
 5429              		.align	2
 5430              		.set	.LANCHOR24,. + 0
 5433              	__func__.6151:
 5434 0000 6C765F74 		.ascii	"lv_tlsf_realloc\000"
 5434      6C73665F 
 5434      7265616C 
 5434      6C6F6300 
 5435              		.text
 5436              	.Letext0:
 5437              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 5438              		.file 3 "lvgl/lvgl/src/misc/lv_tlsf.h"
 5439              		.file 4 "lvgl/lvgl/src/misc/lv_mem.h"
 5440              		.file 5 "lvgl/lvgl/src/misc/lv_log.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 lv_tlsf.c
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:18     .text.block_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:25     .text.block_size:00000000 block_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:45     .text.block_set_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:51     .text.block_set_size:00000000 block_set_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:78     .text.block_is_last:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:84     .text.block_is_last:00000000 block_is_last
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:109    .text.block_is_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:115    .text.block_is_free:00000000 block_is_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:134    .text.block_set_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:140    .text.block_set_free:00000000 block_set_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:159    .text.block_set_used:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:165    .text.block_set_used:00000000 block_set_used
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:184    .text.block_is_prev_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:190    .text.block_is_prev_free:00000000 block_is_prev_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:209    .text.block_set_prev_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:215    .text.block_set_prev_free:00000000 block_set_prev_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:234    .text.block_set_prev_used:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:240    .text.block_set_prev_used:00000000 block_set_prev_used
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:259    .text.block_from_ptr:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:265    .text.block_from_ptr:00000000 block_from_ptr
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:283    .text.block_to_ptr:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:289    .text.block_to_ptr:00000000 block_to_ptr
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:307    .text.offset_to_block:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:313    .text.offset_to_block:00000000 offset_to_block
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:331    .text.block_can_split:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:337    .text.block_can_split:00000000 block_can_split
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:369    .text.control_constructor:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:375    .text.control_constructor:00000000 control_constructor
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:450    .rodata.block_next.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:460    .text.block_next:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:466    .text.block_next:00000000 block_next
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:541    .text.block_next:00000044 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:549    .text.block_link_next:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:555    .text.block_link_next:00000000 block_link_next
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:584    .text.block_mark_as_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:590    .text.block_mark_as_free:00000000 block_mark_as_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:622    .text.block_mark_as_used:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:628    .text.block_mark_as_used:00000000 block_mark_as_used
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:660    .rodata.default_walker.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:670    .text.default_walker:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:676    .text.default_walker:00000000 default_walker
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:738    .text.default_walker:00000034 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:747    .rodata.integrity_walker.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:756    .text.integrity_walker:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:762    .text.integrity_walker:00000000 integrity_walker
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:891    .text.integrity_walker:00000074 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:900    .rodata.align_down.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:905    .text.align_down:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:911    .text.align_down:00000000 align_down
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:966    .text.align_down:00000028 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:974    .text.align_ptr:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:980    .text.align_ptr:00000000 align_ptr
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1040   .text.align_ptr:0000002c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1048   .rodata.insert_free_block.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1060   .text.insert_free_block:00000000 $t
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 138


C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1066   .text.insert_free_block:00000000 insert_free_block
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1243   .text.insert_free_block:000000a8 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1253   .rodata.remove_free_block.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1260   .text.remove_free_block:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1266   .text.remove_free_block:00000000 remove_free_block
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1427   .text.remove_free_block:00000088 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1436   .text.align_up:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1442   .text.align_up:00000000 align_up
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1507   .text.align_up:00000030 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1515   .text.adjust_request_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1521   .text.adjust_request_size:00000000 adjust_request_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1576   .rodata.block_split.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1590   .text.block_split:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1596   .text.block_split:00000000 block_split
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1751   .text.block_split:000000b0 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1761   .rodata.block_prev.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1766   .text.block_prev:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1772   .text.block_prev:00000000 block_prev
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1829   .text.block_prev:0000002c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1837   .rodata.block_absorb.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1842   .text.block_absorb:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1848   .text.block_absorb:00000000 block_absorb
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1920   .text.block_absorb:00000040 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1928   .text.tlsf_fls:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1934   .text.tlsf_fls:00000000 tlsf_fls
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1969   .text.mapping_insert:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:1975   .text.mapping_insert:00000000 mapping_insert
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2052   .text.block_insert:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2058   .text.block_insert:00000000 block_insert
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2107   .rodata.block_trim_free.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2111   .text.block_trim_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2117   .text.block_trim_free:00000000 block_trim_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2217   .text.block_trim_free:00000058 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2225   .rodata.block_prepare_used.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2229   .text.block_prepare_used:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2235   .text.block_prepare_used:00000000 block_prepare_used
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2314   .text.block_prepare_used:0000003c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2322   .text.block_trim_free_leading:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2328   .text.block_trim_free_leading:00000000 block_trim_free_leading
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2397   .text.block_remove:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2403   .text.block_remove:00000000 block_remove
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2452   .rodata.block_merge_prev.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2460   .text.block_merge_prev:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2466   .text.block_merge_prev:00000000 block_merge_prev
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2584   .text.block_merge_prev:0000006c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2594   .rodata.block_merge_next.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2602   .text.block_merge_next:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2608   .text.block_merge_next:00000000 block_merge_next
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2720   .text.block_merge_next:00000068 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2729   .rodata.block_trim_used.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2733   .text.block_trim_used:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2739   .text.block_trim_used:00000000 block_trim_used
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2842   .text.block_trim_used:00000058 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2850   .text.mapping_search:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2856   .text.mapping_search:00000000 mapping_search
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2911   .text.tlsf_ffs:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2917   .text.tlsf_ffs:00000000 tlsf_ffs
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 139


C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2942   .rodata.search_suitable_block.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2947   .text.search_suitable_block:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:2953   .text.search_suitable_block:00000000 search_suitable_block
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3096   .text.search_suitable_block:00000070 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3105   .rodata.block_locate_free.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3109   .text.block_locate_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3115   .text.block_locate_free:00000000 block_locate_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3234   .text.block_locate_free:00000068 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3242   .rodata.lv_tlsf_check.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3280   .text.lv_tlsf_check:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3287   .text.lv_tlsf_check:00000000 lv_tlsf_check
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3730   .text.lv_tlsf_check:000001cc $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3747   .text.lv_tlsf_walk_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3754   .text.lv_tlsf_walk_pool:00000000 lv_tlsf_walk_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3843   .text.lv_tlsf_walk_pool:00000058 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3848   .text.lv_tlsf_block_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3855   .text.lv_tlsf_block_size:00000000 lv_tlsf_block_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3901   .text.lv_tlsf_check_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3908   .text.lv_tlsf_check_pool:00000000 lv_tlsf_check_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3944   .text.lv_tlsf_check_pool:0000001c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3949   .text.lv_tlsf_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3956   .text.lv_tlsf_size:00000000 lv_tlsf_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3971   .text.lv_tlsf_align_size:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3978   .text.lv_tlsf_align_size:00000000 lv_tlsf_align_size
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:3993   .text.lv_tlsf_block_size_min:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4000   .text.lv_tlsf_block_size_min:00000000 lv_tlsf_block_size_min
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4015   .text.lv_tlsf_block_size_max:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4022   .text.lv_tlsf_block_size_max:00000000 lv_tlsf_block_size_max
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4037   .text.lv_tlsf_pool_overhead:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4044   .text.lv_tlsf_pool_overhead:00000000 lv_tlsf_pool_overhead
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4059   .text.lv_tlsf_alloc_overhead:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4066   .text.lv_tlsf_alloc_overhead:00000000 lv_tlsf_alloc_overhead
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4081   .rodata.lv_tlsf_add_pool.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4090   .text.lv_tlsf_add_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4097   .text.lv_tlsf_add_pool:00000000 lv_tlsf_add_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4256   .text.lv_tlsf_add_pool:000000ac $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4264   .rodata.lv_tlsf_remove_pool.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4273   .text.lv_tlsf_remove_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4280   .text.lv_tlsf_remove_pool:00000000 lv_tlsf_remove_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4422   .text.lv_tlsf_remove_pool:0000009c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4432   .rodata.lv_tlsf_create.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4437   .text.lv_tlsf_create:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4444   .text.lv_tlsf_create:00000000 lv_tlsf_create
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4505   .text.lv_tlsf_create:00000030 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4512   .text.lv_tlsf_create_with_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4519   .text.lv_tlsf_create_with_pool:00000000 lv_tlsf_create_with_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4562   .text.lv_tlsf_destroy:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4569   .text.lv_tlsf_destroy:00000000 lv_tlsf_destroy
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4584   .text.lv_tlsf_get_pool:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4591   .text.lv_tlsf_get_pool:00000000 lv_tlsf_get_pool
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4617   .text.lv_tlsf_malloc:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4624   .text.lv_tlsf_malloc:00000000 lv_tlsf_malloc
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4679   .rodata.lv_tlsf_memalign.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4683   .text.lv_tlsf_memalign:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4690   .text.lv_tlsf_memalign:00000000 lv_tlsf_memalign
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4880   .text.lv_tlsf_memalign:0000009c $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4888   .rodata.lv_tlsf_free.str1.4:00000000 $d
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 140


C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4893   .text.lv_tlsf_free:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:4900   .text.lv_tlsf_free:00000000 lv_tlsf_free
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5005   .text.lv_tlsf_free:00000054 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5013   .text.lv_tlsf_realloc:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5020   .text.lv_tlsf_realloc:00000000 lv_tlsf_realloc
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5252   .text.lv_tlsf_realloc:000000d0 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5261   .rodata.__func__.5781:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5265   .rodata.__func__.5781:00000000 __func__.5781
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5268   .rodata.__func__.5787:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5272   .rodata.__func__.5787:00000000 __func__.5787
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5275   .rodata.__func__.5805:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5279   .rodata.__func__.5805:00000000 __func__.5805
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5282   .rodata.__func__.5811:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5286   .rodata.__func__.5811:00000000 __func__.5811
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5289   .rodata.__func__.5818:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5293   .rodata.__func__.5818:00000000 __func__.5818
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5296   .rodata.__func__.5848:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5300   .rodata.__func__.5848:00000000 __func__.5848
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5303   .rodata.__func__.5858:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5307   .rodata.__func__.5858:00000000 __func__.5858
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5310   .rodata.__func__.5868:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5314   .rodata.__func__.5868:00000000 __func__.5868
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5317   .rodata.__func__.5894:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5321   .rodata.__func__.5894:00000000 __func__.5894
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5324   .rodata.__func__.5902:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5328   .rodata.__func__.5902:00000000 __func__.5902
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5331   .rodata.__func__.5909:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5335   .rodata.__func__.5909:00000000 __func__.5909
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5338   .rodata.__func__.5917:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5342   .rodata.__func__.5917:00000000 __func__.5917
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5345   .rodata.__func__.5925:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5349   .rodata.__func__.5925:00000000 __func__.5925
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5352   .rodata.__func__.5933:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5356   .rodata.__func__.5933:00000000 __func__.5933
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5359   .rodata.__func__.5949:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5363   .rodata.__func__.5949:00000000 __func__.5949
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5366   .rodata.__func__.5957:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5370   .rodata.__func__.5957:00000000 __func__.5957
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5373   .rodata.__func__.5986:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5377   .rodata.__func__.5986:00000000 __func__.5986
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5380   .rodata.__func__.6000:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5384   .rodata.__func__.6000:00000000 __func__.6000
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5387   .rodata.__func__.6029:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5391   .rodata.__func__.6029:00000000 __func__.6029
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5394   .rodata.__func__.6076:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5398   .rodata.__func__.6076:00000000 __func__.6076
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5401   .rodata.__func__.6085:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5405   .rodata.__func__.6085:00000000 __func__.6085
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5408   .rodata.__func__.6092:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5412   .rodata.__func__.6092:00000000 __func__.6092
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5415   .rodata.__func__.6122:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5419   .rodata.__func__.6122:00000000 __func__.6122
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5422   .rodata.__func__.6137:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5426   .rodata.__func__.6137:00000000 __func__.6137
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5429   .rodata.__func__.6151:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s:5433   .rodata.__func__.6151:00000000 __func__.6151

ARM GAS  C:\Users\gx\AppData\Local\Temp\cc6xcQfr.s 			page 141


UNDEFINED SYMBOLS
_lv_log_add
lv_memcpy
