ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_img_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.slider_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	slider_event_cb:
  26              	.LVL0:
  27              	.LFB190:
  28              		.file 1 "lvgl/lvgl/examples/widgets/img/lv_example_img_2.c"
   1:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** #if LV_USE_IMG && LV_USE_SLIDER && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
   4:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static lv_obj_t * create_slider(lv_color_t color);
   5:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static void slider_event_cb(lv_event_t * e);
   6:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
   7:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static lv_obj_t * red_slider, * green_slider, * blue_slider, * intense_slider;
   8:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static lv_obj_t * img1;
   9:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  10:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  11:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** /**
  12:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****  * Demonstrate runtime image re-coloring
  13:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****  */
  14:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** void lv_example_img_2(void)
  15:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** {
  16:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     /*Create 4 sliders to adjust RGB color and re-color intensity*/
  17:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     red_slider = create_slider(lv_palette_main(LV_PALETTE_RED));
  18:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     green_slider = create_slider(lv_palette_main(LV_PALETTE_GREEN));
  19:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     blue_slider = create_slider(lv_palette_main(LV_PALETTE_BLUE));
  20:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     intense_slider = create_slider(lv_palette_main(LV_PALETTE_GREY));
  21:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  22:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(red_slider, LV_OPA_20, LV_ANIM_OFF);
  23:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(green_slider, LV_OPA_90, LV_ANIM_OFF);
  24:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(blue_slider, LV_OPA_60, LV_ANIM_OFF);
  25:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(intense_slider, LV_OPA_50, LV_ANIM_OFF);
  26:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  27:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align(red_slider, LV_ALIGN_LEFT_MID, 25, 0);
  28:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(green_slider, red_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
  29:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(blue_slider, green_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
  30:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(intense_slider, blue_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 2


  31:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  32:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     /*Now create the actual image*/
  33:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     LV_IMG_DECLARE(img_cogwheel_argb)
  34:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     img1 = lv_img_create(lv_scr_act());
  35:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_img_set_src(img1, &img_cogwheel_argb);
  36:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align(img1, LV_ALIGN_RIGHT_MID, -20, 0);
  37:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  38:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_event_send(intense_slider, LV_EVENT_VALUE_CHANGED, NULL);
  39:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** }
  40:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  41:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static void slider_event_cb(lv_event_t * e)
  42:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** {
  29              		.loc 1 42 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 42 1 is_stmt 0 view .LVU1
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  43:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     LV_UNUSED(e);
  41              		.loc 1 43 5 is_stmt 1 view .LVU2
  44:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  45:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     /*Recolor the image based on the sliders' values*/
  46:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_color_t color  = lv_color_make(lv_slider_get_value(red_slider), lv_slider_get_value(green_sl
  42              		.loc 1 46 5 view .LVU3
  43              	.LVL1:
  44              	.LBB26:
  45              	.LBI26:
  46              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @file lv_slider.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #ifndef LV_SLIDER_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #define LV_SLIDER_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #if LV_USE_SLIDER != 0
  19:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*Testing of dependencies*/
  21:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #if LV_USE_BAR == 0
  22:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 3


  24:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "../core/lv_obj.h"
  26:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** #include "lv_bar.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*********************
  29:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      DEFINES
  30:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *********************/
  31:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**********************
  33:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *      TYPEDEFS
  34:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  **********************/
  35:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  36:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** enum {
  37:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** };
  41:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  43:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef struct {
  44:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_area_t left_knob_area;
  46:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_area_t right_knob_area;
  47:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }lv_slider_t;
  51:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  54:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  55:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  58:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** typedef enum {
  59:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }lv_slider_draw_part_type_t;
  62:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  63:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**********************
  64:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * GLOBAL PROTOTYPES
  65:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  **********************/
  66:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Create a slider objects
  69:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @return          pointer to the created slider
  71:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*=====================
  75:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Setter functions
  76:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *====================*/
  77:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  79:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set a new value on the slider
  80:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 4


  81:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param value     the new value
  82:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
  88:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set a new value for the left knob of a slider
  91:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
  92:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param value     new value
  93:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
  95:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  97:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
  99:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 100:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
 101:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to the slider object
 103:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param min       minimum value
 104:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param max       maximum value
 105:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 106:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 107:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 108:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_range(obj, min, max);
 109:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 110:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
 112:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Set the mode of slider.
 113:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
 114:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 115:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 116:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 117:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 118:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 119:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 120:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /*=====================
 122:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Getter functions
 123:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  *====================*/
 124:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** 
 125:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** /**
 126:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * Get the value of the main knob of a slider
 127:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
 128:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  * @return          the value of the main knob of the slider
 129:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****  */
 130:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  47              		.loc 2 130 23 view .LVU4
  48              	.LBB27:
 131:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 132:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h ****     return lv_bar_get_value(obj);
  49              		.loc 2 132 5 view .LVU5
  50              		.loc 2 132 12 is_stmt 0 view .LVU6
  51 0002 154B     		ldr	r3, .L3
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 5


  52 0004 1868     		ldr	r0, [r3]
  53              	.LVL2:
  54              		.loc 2 132 12 view .LVU7
  55 0006 FFF7FEFF 		bl	lv_bar_get_value
  56              	.LVL3:
  57              		.loc 2 132 12 view .LVU8
  58              	.LBE27:
  59              	.LBE26:
  60              		.loc 1 46 25 view .LVU9
  61 000a C4B2     		uxtb	r4, r0
  62              	.LVL4:
  63              	.LBB28:
  64              	.LBI28:
 130:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  65              		.loc 2 130 23 is_stmt 1 view .LVU10
  66              	.LBB29:
  67              		.loc 2 132 5 view .LVU11
  68              		.loc 2 132 12 is_stmt 0 view .LVU12
  69 000c 134B     		ldr	r3, .L3+4
  70 000e 1868     		ldr	r0, [r3]
  71 0010 FFF7FEFF 		bl	lv_bar_get_value
  72              	.LVL5:
  73              		.loc 2 132 12 view .LVU13
  74              	.LBE29:
  75              	.LBE28:
  76              		.loc 1 46 25 view .LVU14
  77 0014 C5B2     		uxtb	r5, r0
  78              	.LVL6:
  79              	.LBB30:
  80              	.LBI30:
 130:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
  81              		.loc 2 130 23 is_stmt 1 view .LVU15
  82              	.LBB31:
  83              		.loc 2 132 5 view .LVU16
  84              		.loc 2 132 12 is_stmt 0 view .LVU17
  85 0016 124B     		ldr	r3, .L3+8
  86 0018 1868     		ldr	r0, [r3]
  87 001a FFF7FEFF 		bl	lv_bar_get_value
  88              	.LVL7:
  89              		.loc 2 132 12 view .LVU18
  90              	.LBE31:
  91              	.LBE30:
  92              	.LBB32:
  93              	.LBI32:
  94              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 6


  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Error checking*/
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      DEFINES
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** enum {
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** };
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 7


  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Adjust color mix functions rounding.
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Should be in range of 0..254
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 64: round up from x.75
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 128: round up from half
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 192: round up from x.25
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 254: round up*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** */
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 8


 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 9


 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     union {
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full;
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 10


 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t full;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green;
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red;
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t full;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct {
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t h;
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t s;
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t v;
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     void * user_data;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_color_filter_dsc_t;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef enum {
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 11


 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_palette_t;
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*In color conversations:
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF;
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 12


 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /**
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 13


 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      */
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 440:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 445:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 447:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 448:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 449:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 450:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 451:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 452:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 453:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 454:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 458:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 459:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 461:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 462:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 463:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 14


 469:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 474:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 480:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 483:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 484:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 485:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 486:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 487:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 489:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 494:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     (void) mix;
 495:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 500:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 501:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 502:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 503:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 504:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 510:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 512:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 514:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 515:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 15


 526:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 527:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 529:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 530:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 531:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 535:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 536:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 537:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 538:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 539:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 540:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 542:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 543:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 544:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 546:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
 547:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 548:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 552:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 555:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 556:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 557:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 558:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 560:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 561:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 562:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 563:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 567:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 569:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 577:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 580:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 581:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 582:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 16


 583:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             /*Info:
 584:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             if(res_opa_saved == 0) {
 587:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                 while(1)
 588:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                     ;
 589:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             }
 590:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 593:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         }
 594:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 595:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 596:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 597:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 598:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 599:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 600:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 601:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 602:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 603:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
 604:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color a color
 605:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 606:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 607:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 609:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 613:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 614:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
  95              		.loc 3 615 26 is_stmt 1 view .LVU19
  96              	.LBB33:
 616:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
  97              		.loc 3 617 5 view .LVU20
  98              		.loc 3 617 39 is_stmt 0 view .LVU21
  99 001e C0F3C400 		ubfx	r0, r0, #3, #5
 100              	.LVL8:
 101              		.loc 3 617 39 view .LVU22
 102 0022 AD08     		lsrs	r5, r5, #2
 103              	.LVL9:
 104              		.loc 3 617 39 view .LVU23
 105 0024 E408     		lsrs	r4, r4, #3
 106              	.LVL10:
 107              		.loc 3 617 12 view .LVU24
 108 0026 4FF00006 		mov	r6, #0	@ movhi
 109 002a 60F30406 		bfi	r6, r0, #0, #5
 110 002e 65F34A16 		bfi	r6, r5, #5, #6
 111 0032 64F3CF26 		bfi	r6, r4, #11, #5
 112              		.loc 3 617 12 view .LVU25
 113              	.LBE33:
 114              	.LBE32:
  47:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_opa_t intense = lv_slider_get_value(intense_slider);
 115              		.loc 1 47 5 is_stmt 1 view .LVU26
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 17


 116              	.LVL11:
 117              	.LBB34:
 118              	.LBI34:
 130:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 119              		.loc 2 130 23 view .LVU27
 120              	.LBB35:
 121              		.loc 2 132 5 view .LVU28
 122              		.loc 2 132 12 is_stmt 0 view .LVU29
 123 0036 0B4B     		ldr	r3, .L3+12
 124 0038 1868     		ldr	r0, [r3]
 125 003a FFF7FEFF 		bl	lv_bar_get_value
 126              	.LVL12:
 127              		.loc 2 132 12 view .LVU30
 128              	.LBE35:
 129              	.LBE34:
  48:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_set_style_img_recolor_opa(img1, intense, 0);
 130              		.loc 1 48 5 is_stmt 1 view .LVU31
 131 003e 0A4C     		ldr	r4, .L3+16
 132 0040 0022     		movs	r2, #0
 133 0042 C1B2     		uxtb	r1, r0
 134 0044 2068     		ldr	r0, [r4]
 135              	.LVL13:
 136              		.loc 1 48 5 is_stmt 0 view .LVU32
 137 0046 FFF7FEFF 		bl	lv_obj_set_style_img_recolor_opa
 138              	.LVL14:
  49:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_set_style_img_recolor(img1, color, 0);
 139              		.loc 1 49 5 is_stmt 1 view .LVU33
 140 004a 0022     		movs	r2, #0
 141 004c 3146     		mov	r1, r6	@ movhi
 142 004e 2068     		ldr	r0, [r4]
 143 0050 FFF7FEFF 		bl	lv_obj_set_style_img_recolor
 144              	.LVL15:
  50:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** }
 145              		.loc 1 50 1 is_stmt 0 view .LVU34
 146 0054 70BD     		pop	{r4, r5, r6, pc}
 147              	.L4:
 148 0056 00BF     		.align	2
 149              	.L3:
 150 0058 00000000 		.word	.LANCHOR0
 151 005c 00000000 		.word	.LANCHOR1
 152 0060 00000000 		.word	.LANCHOR2
 153 0064 00000000 		.word	.LANCHOR3
 154 0068 00000000 		.word	.LANCHOR4
 155              		.cfi_endproc
 156              	.LFE190:
 158              		.section	.text.create_slider,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	create_slider:
 166              	.LVL16:
 167              	.LFB191:
  51:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
  52:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** static lv_obj_t * create_slider(lv_color_t color)
  53:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 18


 168              		.loc 1 53 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		.loc 1 53 1 is_stmt 0 view .LVU36
 173 0000 38B5     		push	{r3, r4, r5, lr}
 174              	.LCFI1:
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 3, -16
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 180 0002 0546     		mov	r5, r0	@ movhi
 181              	.LVL17:
  54:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_t * slider = lv_slider_create(lv_scr_act());
 182              		.loc 1 54 5 is_stmt 1 view .LVU37
 183              	.LBB36:
 184              	.LBI36:
 185              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 19


  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 20


  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 21


 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 186              		.loc 4 163 26 view .LVU38
 187              	.LBB37:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 188              		.loc 4 165 5 view .LVU39
 189              		.loc 4 165 12 is_stmt 0 view .LVU40
 190 0004 FFF7FEFF 		bl	lv_disp_get_default
 191              	.LVL18:
 192 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 193              	.LVL19:
 194              	.LBE37:
 195              	.LBE36:
 196              		.loc 1 54 25 view .LVU41
 197 000c FFF7FEFF 		bl	lv_slider_create
 198              	.LVL20:
 199 0010 0446     		mov	r4, r0
 200              	.LVL21:
  55:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_range(slider, 0, 255);
 201              		.loc 1 55 5 is_stmt 1 view .LVU42
 202              	.LBB38:
 203              	.LBI38:
 106:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 204              		.loc 2 106 20 view .LVU43
 205              	.LBB39:
 108:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 206              		.loc 2 108 5 view .LVU44
 207 0012 FF22     		movs	r2, #255
 208 0014 0021     		movs	r1, #0
 209 0016 FFF7FEFF 		bl	lv_bar_set_range
 210              	.LVL22:
 108:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 211              		.loc 2 108 5 is_stmt 0 view .LVU45
 212              	.LBE39:
 213              	.LBE38:
  56:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_set_size(slider, 10, 200);
 214              		.loc 1 56 5 is_stmt 1 view .LVU46
 215 001a C822     		movs	r2, #200
 216 001c 0A21     		movs	r1, #10
 217 001e 2046     		mov	r0, r4
 218 0020 FFF7FEFF 		bl	lv_obj_set_size
 219              	.LVL23:
  57:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_set_style_bg_color(slider, color, LV_PART_KNOB);
 220              		.loc 1 57 5 view .LVU47
 221 0024 4FF44032 		mov	r2, #196608
 222              	.LVL24:
 223              		.loc 1 57 5 is_stmt 0 view .LVU48
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 22


 224 0028 2946     		mov	r1, r5	@ movhi
 225 002a 2046     		mov	r0, r4
 226 002c FFF7FEFF 		bl	lv_obj_set_style_bg_color
 227              	.LVL25:
  58:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_set_style_bg_color(slider, lv_color_darken(color, LV_OPA_40), LV_PART_INDICATOR);
 228              		.loc 1 58 5 is_stmt 1 view .LVU49
 229 0030 6621     		movs	r1, #102
 230 0032 2846     		mov	r0, r5	@ movhi
 231 0034 FFF7FEFF 		bl	lv_color_darken
 232              	.LVL26:
 233 0038 0146     		mov	r1, r0	@ movhi
 234 003a 4FF40032 		mov	r2, #131072
 235 003e 2046     		mov	r0, r4
 236 0040 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 237              	.LVL27:
  59:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_add_event_cb(slider, slider_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 238              		.loc 1 59 5 view .LVU50
 239 0044 0023     		movs	r3, #0
 240 0046 1C22     		movs	r2, #28
 241 0048 0249     		ldr	r1, .L7
 242 004a 2046     		mov	r0, r4
 243 004c FFF7FEFF 		bl	lv_obj_add_event_cb
 244              	.LVL28:
  60:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     return slider;
 245              		.loc 1 60 5 view .LVU51
  61:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** }
 246              		.loc 1 61 1 is_stmt 0 view .LVU52
 247 0050 2046     		mov	r0, r4
 248 0052 38BD     		pop	{r3, r4, r5, pc}
 249              	.LVL29:
 250              	.L8:
 251              		.loc 1 61 1 view .LVU53
 252              		.align	2
 253              	.L7:
 254 0054 00000000 		.word	slider_event_cb
 255              		.cfi_endproc
 256              	.LFE191:
 258              		.section	.text.lv_example_img_2,"ax",%progbits
 259              		.align	1
 260              		.global	lv_example_img_2
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	lv_example_img_2:
 267              	.LFB189:
  15:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     /*Create 4 sliders to adjust RGB color and re-color intensity*/
 268              		.loc 1 15 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 273              	.LCFI2:
 274              		.cfi_def_cfa_offset 24
 275              		.cfi_offset 4, -24
 276              		.cfi_offset 5, -20
 277              		.cfi_offset 6, -16
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 23


 278              		.cfi_offset 7, -12
 279              		.cfi_offset 8, -8
 280              		.cfi_offset 14, -4
 281 0004 82B0     		sub	sp, sp, #8
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 32
  17:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     green_slider = create_slider(lv_palette_main(LV_PALETTE_GREEN));
 284              		.loc 1 17 5 view .LVU55
  17:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     green_slider = create_slider(lv_palette_main(LV_PALETTE_GREEN));
 285              		.loc 1 17 18 is_stmt 0 view .LVU56
 286 0006 0020     		movs	r0, #0
 287 0008 FFF7FEFF 		bl	lv_palette_main
 288              	.LVL30:
 289 000c FFF7FEFF 		bl	create_slider
 290              	.LVL31:
  17:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     green_slider = create_slider(lv_palette_main(LV_PALETTE_GREEN));
 291              		.loc 1 17 16 view .LVU57
 292 0010 DFF8DC80 		ldr	r8, .L11+20
 293 0014 C8F80000 		str	r0, [r8]
  18:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     blue_slider = create_slider(lv_palette_main(LV_PALETTE_BLUE));
 294              		.loc 1 18 5 is_stmt 1 view .LVU58
  18:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     blue_slider = create_slider(lv_palette_main(LV_PALETTE_BLUE));
 295              		.loc 1 18 20 is_stmt 0 view .LVU59
 296 0018 0920     		movs	r0, #9
 297 001a FFF7FEFF 		bl	lv_palette_main
 298              	.LVL32:
 299 001e FFF7FEFF 		bl	create_slider
 300              	.LVL33:
  18:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     blue_slider = create_slider(lv_palette_main(LV_PALETTE_BLUE));
 301              		.loc 1 18 18 view .LVU60
 302 0022 2E4F     		ldr	r7, .L11
 303 0024 3860     		str	r0, [r7]
  19:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     intense_slider = create_slider(lv_palette_main(LV_PALETTE_GREY));
 304              		.loc 1 19 5 is_stmt 1 view .LVU61
  19:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     intense_slider = create_slider(lv_palette_main(LV_PALETTE_GREY));
 305              		.loc 1 19 19 is_stmt 0 view .LVU62
 306 0026 0520     		movs	r0, #5
 307 0028 FFF7FEFF 		bl	lv_palette_main
 308              	.LVL34:
 309 002c FFF7FEFF 		bl	create_slider
 310              	.LVL35:
  19:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     intense_slider = create_slider(lv_palette_main(LV_PALETTE_GREY));
 311              		.loc 1 19 17 view .LVU63
 312 0030 2B4E     		ldr	r6, .L11+4
 313 0032 3060     		str	r0, [r6]
  20:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 314              		.loc 1 20 5 is_stmt 1 view .LVU64
  20:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 315              		.loc 1 20 22 is_stmt 0 view .LVU65
 316 0034 1220     		movs	r0, #18
 317 0036 FFF7FEFF 		bl	lv_palette_main
 318              	.LVL36:
 319 003a FFF7FEFF 		bl	create_slider
 320              	.LVL37:
  20:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 321              		.loc 1 20 20 view .LVU66
 322 003e 294D     		ldr	r5, .L11+8
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 24


 323 0040 2860     		str	r0, [r5]
  22:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(green_slider, LV_OPA_90, LV_ANIM_OFF);
 324              		.loc 1 22 5 is_stmt 1 view .LVU67
 325              	.LVL38:
 326              	.LBB40:
 327              	.LBI40:
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 328              		.loc 2 84 20 view .LVU68
 329              	.LBB41:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 330              		.loc 2 86 5 view .LVU69
 331 0042 0022     		movs	r2, #0
 332 0044 3321     		movs	r1, #51
 333 0046 D8F80000 		ldr	r0, [r8]
 334 004a FFF7FEFF 		bl	lv_bar_set_value
 335              	.LVL39:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 336              		.loc 2 86 5 is_stmt 0 view .LVU70
 337              	.LBE41:
 338              	.LBE40:
  23:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(blue_slider, LV_OPA_60, LV_ANIM_OFF);
 339              		.loc 1 23 5 is_stmt 1 view .LVU71
 340              	.LBB42:
 341              	.LBI42:
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 342              		.loc 2 84 20 view .LVU72
 343              	.LBB43:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 344              		.loc 2 86 5 view .LVU73
 345 004e 0022     		movs	r2, #0
 346 0050 E521     		movs	r1, #229
 347 0052 3868     		ldr	r0, [r7]
 348 0054 FFF7FEFF 		bl	lv_bar_set_value
 349              	.LVL40:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 350              		.loc 2 86 5 is_stmt 0 view .LVU74
 351              	.LBE43:
 352              	.LBE42:
  24:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_slider_set_value(intense_slider, LV_OPA_50, LV_ANIM_OFF);
 353              		.loc 1 24 5 is_stmt 1 view .LVU75
 354              	.LBB44:
 355              	.LBI44:
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 356              		.loc 2 84 20 view .LVU76
 357              	.LBB45:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 358              		.loc 2 86 5 view .LVU77
 359 0058 0022     		movs	r2, #0
 360 005a 9921     		movs	r1, #153
 361 005c 3068     		ldr	r0, [r6]
 362 005e FFF7FEFF 		bl	lv_bar_set_value
 363              	.LVL41:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 364              		.loc 2 86 5 is_stmt 0 view .LVU78
 365              	.LBE45:
 366              	.LBE44:
  25:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 25


 367              		.loc 1 25 5 is_stmt 1 view .LVU79
 368              	.LBB46:
 369              	.LBI46:
  84:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** {
 370              		.loc 2 84 20 view .LVU80
 371              	.LBB47:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 372              		.loc 2 86 5 view .LVU81
 373 0062 0022     		movs	r2, #0
 374 0064 7F21     		movs	r1, #127
 375 0066 2868     		ldr	r0, [r5]
 376 0068 FFF7FEFF 		bl	lv_bar_set_value
 377              	.LVL42:
  86:d:\practise\f407_disc\lvgl\lvgl\src/widgets\lv_slider.h **** }
 378              		.loc 2 86 5 is_stmt 0 view .LVU82
 379              	.LBE47:
 380              	.LBE46:
  27:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(green_slider, red_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
 381              		.loc 1 27 5 is_stmt 1 view .LVU83
 382 006c 0023     		movs	r3, #0
 383 006e 1922     		movs	r2, #25
 384 0070 0721     		movs	r1, #7
 385 0072 D8F80000 		ldr	r0, [r8]
 386 0076 FFF7FEFF 		bl	lv_obj_align
 387              	.LVL43:
  28:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(blue_slider, green_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
 388              		.loc 1 28 5 view .LVU84
 389 007a 0024     		movs	r4, #0
 390 007c 0094     		str	r4, [sp]
 391 007e 1923     		movs	r3, #25
 392 0080 1422     		movs	r2, #20
 393 0082 D8F80010 		ldr	r1, [r8]
 394 0086 3868     		ldr	r0, [r7]
 395 0088 FFF7FEFF 		bl	lv_obj_align_to
 396              	.LVL44:
  29:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align_to(intense_slider, blue_slider, LV_ALIGN_OUT_RIGHT_MID, 25, 0);
 397              		.loc 1 29 5 view .LVU85
 398 008c 0094     		str	r4, [sp]
 399 008e 1923     		movs	r3, #25
 400 0090 1422     		movs	r2, #20
 401 0092 3968     		ldr	r1, [r7]
 402 0094 3068     		ldr	r0, [r6]
 403 0096 FFF7FEFF 		bl	lv_obj_align_to
 404              	.LVL45:
  30:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 405              		.loc 1 30 5 view .LVU86
 406 009a 0094     		str	r4, [sp]
 407 009c 1923     		movs	r3, #25
 408 009e 1422     		movs	r2, #20
 409 00a0 3168     		ldr	r1, [r6]
 410 00a2 2868     		ldr	r0, [r5]
 411 00a4 FFF7FEFF 		bl	lv_obj_align_to
 412              	.LVL46:
  33:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     img1 = lv_img_create(lv_scr_act());
 413              		.loc 1 33 5 view .LVU87
  34:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_img_set_src(img1, &img_cogwheel_argb);
 414              		.loc 1 34 5 view .LVU88
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 26


 415              	.LBB48:
 416              	.LBI48:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 417              		.loc 4 163 26 view .LVU89
 418              	.LBB49:
 419              		.loc 4 165 5 view .LVU90
 420              		.loc 4 165 12 is_stmt 0 view .LVU91
 421 00a8 FFF7FEFF 		bl	lv_disp_get_default
 422              	.LVL47:
 423 00ac FFF7FEFF 		bl	lv_disp_get_scr_act
 424              	.LVL48:
 425              	.LBE49:
 426              	.LBE48:
  34:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_img_set_src(img1, &img_cogwheel_argb);
 427              		.loc 1 34 12 view .LVU92
 428 00b0 FFF7FEFF 		bl	lv_img_create
 429              	.LVL49:
  34:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_img_set_src(img1, &img_cogwheel_argb);
 430              		.loc 1 34 10 view .LVU93
 431 00b4 0C4E     		ldr	r6, .L11+12
 432 00b6 3060     		str	r0, [r6]
  35:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c ****     lv_obj_align(img1, LV_ALIGN_RIGHT_MID, -20, 0);
 433              		.loc 1 35 5 is_stmt 1 view .LVU94
 434 00b8 0C49     		ldr	r1, .L11+16
 435 00ba FFF7FEFF 		bl	lv_img_set_src
 436              	.LVL50:
  36:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 437              		.loc 1 36 5 view .LVU95
 438 00be 2346     		mov	r3, r4
 439 00c0 6FF01302 		mvn	r2, #19
 440 00c4 0821     		movs	r1, #8
 441 00c6 3068     		ldr	r0, [r6]
 442 00c8 FFF7FEFF 		bl	lv_obj_align
 443              	.LVL51:
  38:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** }
 444              		.loc 1 38 5 view .LVU96
 445 00cc 2246     		mov	r2, r4
 446 00ce 1C21     		movs	r1, #28
 447 00d0 2868     		ldr	r0, [r5]
 448 00d2 FFF7FEFF 		bl	lv_event_send
 449              	.LVL52:
  39:lvgl/lvgl/examples/widgets/img/lv_example_img_2.c **** 
 450              		.loc 1 39 1 is_stmt 0 view .LVU97
 451 00d6 02B0     		add	sp, sp, #8
 452              	.LCFI4:
 453              		.cfi_def_cfa_offset 24
 454              		@ sp needed
 455 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 456              	.L12:
 457              		.align	2
 458              	.L11:
 459 00dc 00000000 		.word	.LANCHOR1
 460 00e0 00000000 		.word	.LANCHOR2
 461 00e4 00000000 		.word	.LANCHOR3
 462 00e8 00000000 		.word	.LANCHOR4
 463 00ec 00000000 		.word	img_cogwheel_argb
 464 00f0 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 27


 465              		.cfi_endproc
 466              	.LFE189:
 468              		.section	.bss.blue_slider,"aw",%nobits
 469              		.align	2
 470              		.set	.LANCHOR2,. + 0
 473              	blue_slider:
 474 0000 00000000 		.space	4
 475              		.section	.bss.green_slider,"aw",%nobits
 476              		.align	2
 477              		.set	.LANCHOR1,. + 0
 480              	green_slider:
 481 0000 00000000 		.space	4
 482              		.section	.bss.img1,"aw",%nobits
 483              		.align	2
 484              		.set	.LANCHOR4,. + 0
 487              	img1:
 488 0000 00000000 		.space	4
 489              		.section	.bss.intense_slider,"aw",%nobits
 490              		.align	2
 491              		.set	.LANCHOR3,. + 0
 494              	intense_slider:
 495 0000 00000000 		.space	4
 496              		.section	.bss.red_slider,"aw",%nobits
 497              		.align	2
 498              		.set	.LANCHOR0,. + 0
 501              	red_slider:
 502 0000 00000000 		.space	4
 503              		.text
 504              	.Letext0:
 505              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 506              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 507              		.file 7 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 508              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 509              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 510              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 511              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 512              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_anim.h"
 513              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 514              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_img_buf.h"
 515              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 516              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 517              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 518              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 519              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 520              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 521              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 522              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 523              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 524              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 525              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 526              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 527              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 528              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 529              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 530              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 531              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 532              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 28


 533              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 534              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 535              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 536              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 537              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 538              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 539              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 540              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 541              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 542              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 543              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 544              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 545              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 546              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 547              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 548              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 549              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 550              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 551              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 552              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 553              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 554              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 555              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 556              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 557              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 558              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 559              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
 560              		.file 60 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
 561              		.file 61 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style_gen.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_img_2.c
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:18     .text.slider_event_cb:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:25     .text.slider_event_cb:00000000 slider_event_cb
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:150    .text.slider_event_cb:00000058 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:159    .text.create_slider:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:165    .text.create_slider:00000000 create_slider
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:254    .text.create_slider:00000054 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:259    .text.lv_example_img_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:266    .text.lv_example_img_2:00000000 lv_example_img_2
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:459    .text.lv_example_img_2:000000dc $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:469    .bss.blue_slider:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:473    .bss.blue_slider:00000000 blue_slider
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:476    .bss.green_slider:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:480    .bss.green_slider:00000000 green_slider
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:483    .bss.img1:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:487    .bss.img1:00000000 img1
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:490    .bss.intense_slider:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:494    .bss.intense_slider:00000000 intense_slider
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:497    .bss.red_slider:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc5GUtBP.s:501    .bss.red_slider:00000000 red_slider

UNDEFINED SYMBOLS
lv_bar_get_value
lv_obj_set_style_img_recolor_opa
lv_obj_set_style_img_recolor
lv_disp_get_default
lv_disp_get_scr_act
lv_slider_create
lv_bar_set_range
lv_obj_set_size
lv_obj_set_style_bg_color
lv_color_darken
lv_obj_add_event_cb
lv_palette_main
lv_bar_set_value
lv_obj_align
lv_obj_align_to
lv_img_create
lv_img_set_src
lv_event_send
img_cogwheel_argb
