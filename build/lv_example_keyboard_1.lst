ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_keyboard_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ta_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ta_event_cb:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c"
   1:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** #if LV_USE_KEYBOARD && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
   4:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** static void ta_event_cb(lv_event_t * e)
   5:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** {
  29              		.loc 1 5 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 5 1 is_stmt 0 view .LVU1
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41 0002 0546     		mov	r5, r0
   6:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_event_code_t code = lv_event_get_code(e);
  42              		.loc 1 6 5 is_stmt 1 view .LVU2
  43              		.loc 1 6 28 is_stmt 0 view .LVU3
  44 0004 FFF7FEFF 		bl	lv_event_get_code
  45              	.LVL1:
  46              		.loc 1 6 28 view .LVU4
  47 0008 0446     		mov	r4, r0
  48              	.LVL2:
   7:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_t * ta = lv_event_get_target(e);
  49              		.loc 1 7 5 is_stmt 1 view .LVU5
  50              		.loc 1 7 21 is_stmt 0 view .LVU6
  51 000a 2846     		mov	r0, r5
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 2


  52 000c FFF7FEFF 		bl	lv_event_get_target
  53              	.LVL3:
  54 0010 0646     		mov	r6, r0
  55              	.LVL4:
   8:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_t * kb = lv_event_get_user_data(e);
  56              		.loc 1 8 5 is_stmt 1 view .LVU7
  57              		.loc 1 8 21 is_stmt 0 view .LVU8
  58 0012 2846     		mov	r0, r5
  59              	.LVL5:
  60              		.loc 1 8 21 view .LVU9
  61 0014 FFF7FEFF 		bl	lv_event_get_user_data
  62              	.LVL6:
  63 0018 0546     		mov	r5, r0
  64              	.LVL7:
   9:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     if(code == LV_EVENT_FOCUSED) {
  65              		.loc 1 9 5 is_stmt 1 view .LVU10
  66              		.loc 1 9 7 is_stmt 0 view .LVU11
  67 001a 0E2C     		cmp	r4, #14
  68 001c 02D0     		beq	.L5
  69              	.LVL8:
  70              	.L2:
  10:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_keyboard_set_textarea(kb, ta);
  11:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_obj_clear_flag(kb, LV_OBJ_FLAG_HIDDEN);
  12:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     }
  13:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
  14:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     if(code == LV_EVENT_DEFOCUSED) {
  71              		.loc 1 14 5 is_stmt 1 view .LVU12
  72              		.loc 1 14 7 is_stmt 0 view .LVU13
  73 001e 0F2C     		cmp	r4, #15
  74 0020 08D0     		beq	.L6
  75              	.L1:
  15:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_keyboard_set_textarea(kb, NULL);
  16:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_obj_add_flag(kb, LV_OBJ_FLAG_HIDDEN);
  17:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     }
  18:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** }
  76              		.loc 1 18 1 view .LVU14
  77 0022 70BD     		pop	{r4, r5, r6, pc}
  78              	.LVL9:
  79              	.L5:
  10:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_keyboard_set_textarea(kb, ta);
  80              		.loc 1 10 9 is_stmt 1 view .LVU15
  81 0024 3146     		mov	r1, r6
  82 0026 FFF7FEFF 		bl	lv_keyboard_set_textarea
  83              	.LVL10:
  11:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     }
  84              		.loc 1 11 9 view .LVU16
  85 002a 0121     		movs	r1, #1
  86 002c 2846     		mov	r0, r5
  87 002e FFF7FEFF 		bl	lv_obj_clear_flag
  88              	.LVL11:
  89 0032 F4E7     		b	.L2
  90              	.L6:
  15:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****         lv_keyboard_set_textarea(kb, NULL);
  91              		.loc 1 15 9 view .LVU17
  92 0034 0021     		movs	r1, #0
  93 0036 2846     		mov	r0, r5
  94 0038 FFF7FEFF 		bl	lv_keyboard_set_textarea
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 3


  95              	.LVL12:
  16:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     }
  96              		.loc 1 16 9 view .LVU18
  97 003c 0121     		movs	r1, #1
  98 003e 2846     		mov	r0, r5
  99 0040 FFF7FEFF 		bl	lv_obj_add_flag
 100              	.LVL13:
 101              		.loc 1 18 1 is_stmt 0 view .LVU19
 102 0044 EDE7     		b	.L1
 103              		.cfi_endproc
 104              	.LFE189:
 106              		.section	.rodata.lv_example_keyboard_1.str1.4,"aMS",%progbits,1
 107              		.align	2
 108              	.LC0:
 109 0000 48656C6C 		.ascii	"Hello\000"
 109      6F00
 110              		.section	.text.lv_example_keyboard_1,"ax",%progbits
 111              		.align	1
 112              		.global	lv_example_keyboard_1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	lv_example_keyboard_1:
 119              	.LFB190:
  19:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
  20:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** void lv_example_keyboard_1(void)
  21:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** {
 120              		.loc 1 21 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 0000 70B5     		push	{r4, r5, r6, lr}
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 14, -4
  22:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     /*Create a keyboard to use it with an of the text areas*/
  23:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_t *kb = lv_keyboard_create(lv_scr_act());
 131              		.loc 1 23 5 view .LVU21
 132              	.LBB8:
 133              	.LBI8:
 134              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 4


  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 5


  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 6


 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 135              		.loc 2 163 26 view .LVU22
 136              	.LBB9:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 137              		.loc 2 165 5 view .LVU23
 138              		.loc 2 165 12 is_stmt 0 view .LVU24
 139 0002 FFF7FEFF 		bl	lv_disp_get_default
 140              	.LVL14:
 141 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 142              	.LVL15:
 143              	.LBE9:
 144              	.LBE8:
 145              		.loc 1 23 20 view .LVU25
 146 000a FFF7FEFF 		bl	lv_keyboard_create
 147              	.LVL16:
 148 000e 0446     		mov	r4, r0
 149              	.LVL17:
  24:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
  25:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     /*Create a text area. The keyboard will write here*/
  26:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_t * ta;
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 7


 150              		.loc 1 26 5 is_stmt 1 view .LVU26
  27:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     ta = lv_textarea_create(lv_scr_act());
 151              		.loc 1 27 5 view .LVU27
 152              	.LBB10:
 153              	.LBI10:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 154              		.loc 2 163 26 view .LVU28
 155              	.LBB11:
 156              		.loc 2 165 5 view .LVU29
 157              		.loc 2 165 12 is_stmt 0 view .LVU30
 158 0010 FFF7FEFF 		bl	lv_disp_get_default
 159              	.LVL18:
 160              		.loc 2 165 12 view .LVU31
 161 0014 FFF7FEFF 		bl	lv_disp_get_scr_act
 162              	.LVL19:
 163              	.LBE11:
 164              	.LBE10:
 165              		.loc 1 27 10 view .LVU32
 166 0018 FFF7FEFF 		bl	lv_textarea_create
 167              	.LVL20:
 168 001c 0546     		mov	r5, r0
 169              	.LVL21:
  28:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_align(ta, LV_ALIGN_TOP_LEFT, 10, 10);
 170              		.loc 1 28 5 is_stmt 1 view .LVU33
 171 001e 0A23     		movs	r3, #10
 172 0020 1A46     		mov	r2, r3
 173 0022 0121     		movs	r1, #1
 174 0024 FFF7FEFF 		bl	lv_obj_align
 175              	.LVL22:
  29:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_add_event_cb(ta, ta_event_cb, LV_EVENT_ALL, kb);
 176              		.loc 1 29 5 view .LVU34
 177 0028 164E     		ldr	r6, .L9
 178 002a 2346     		mov	r3, r4
 179 002c 0022     		movs	r2, #0
 180 002e 3146     		mov	r1, r6
 181 0030 2846     		mov	r0, r5
 182 0032 FFF7FEFF 		bl	lv_obj_add_event_cb
 183              	.LVL23:
  30:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_textarea_set_placeholder_text(ta, "Hello");
 184              		.loc 1 30 5 view .LVU35
 185 0036 1449     		ldr	r1, .L9+4
 186 0038 2846     		mov	r0, r5
 187 003a FFF7FEFF 		bl	lv_textarea_set_placeholder_text
 188              	.LVL24:
  31:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_set_size(ta, 140, 80);
 189              		.loc 1 31 5 view .LVU36
 190 003e 5022     		movs	r2, #80
 191 0040 8C21     		movs	r1, #140
 192 0042 2846     		mov	r0, r5
 193 0044 FFF7FEFF 		bl	lv_obj_set_size
 194              	.LVL25:
  32:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
  33:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     ta = lv_textarea_create(lv_scr_act());
 195              		.loc 1 33 5 view .LVU37
 196              	.LBB12:
 197              	.LBI12:
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 8


 198              		.loc 2 163 26 view .LVU38
 199              	.LBB13:
 200              		.loc 2 165 5 view .LVU39
 201              		.loc 2 165 12 is_stmt 0 view .LVU40
 202 0048 FFF7FEFF 		bl	lv_disp_get_default
 203              	.LVL26:
 204 004c FFF7FEFF 		bl	lv_disp_get_scr_act
 205              	.LVL27:
 206              	.LBE13:
 207              	.LBE12:
 208              		.loc 1 33 10 view .LVU41
 209 0050 FFF7FEFF 		bl	lv_textarea_create
 210              	.LVL28:
 211 0054 0546     		mov	r5, r0
 212              	.LVL29:
  34:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_align(ta, LV_ALIGN_TOP_RIGHT, -10, 10);
 213              		.loc 1 34 5 is_stmt 1 view .LVU42
 214 0056 0A23     		movs	r3, #10
 215 0058 6FF00902 		mvn	r2, #9
 216 005c 0321     		movs	r1, #3
 217 005e FFF7FEFF 		bl	lv_obj_align
 218              	.LVL30:
  35:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_add_event_cb(ta, ta_event_cb, LV_EVENT_ALL, kb);
 219              		.loc 1 35 5 view .LVU43
 220 0062 2346     		mov	r3, r4
 221 0064 0022     		movs	r2, #0
 222 0066 3146     		mov	r1, r6
 223 0068 2846     		mov	r0, r5
 224 006a FFF7FEFF 		bl	lv_obj_add_event_cb
 225              	.LVL31:
  36:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_obj_set_size(ta, 140, 80);
 226              		.loc 1 36 5 view .LVU44
 227 006e 5022     		movs	r2, #80
 228 0070 8C21     		movs	r1, #140
 229 0072 2846     		mov	r0, r5
 230 0074 FFF7FEFF 		bl	lv_obj_set_size
 231              	.LVL32:
  37:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** 
  38:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c ****     lv_keyboard_set_textarea(kb, ta);
 232              		.loc 1 38 5 view .LVU45
 233 0078 2946     		mov	r1, r5
 234 007a 2046     		mov	r0, r4
 235 007c FFF7FEFF 		bl	lv_keyboard_set_textarea
 236              	.LVL33:
  39:lvgl/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c **** }
 237              		.loc 1 39 1 is_stmt 0 view .LVU46
 238 0080 70BD     		pop	{r4, r5, r6, pc}
 239              	.LVL34:
 240              	.L10:
 241              		.loc 1 39 1 view .LVU47
 242 0082 00BF     		.align	2
 243              	.L9:
 244 0084 00000000 		.word	ta_event_cb
 245 0088 00000000 		.word	.LC0
 246              		.cfi_endproc
 247              	.LFE190:
 249              		.text
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 9


 250              	.Letext0:
 251              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 252              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 253              		.file 5 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 254              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 255              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 256              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 257              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 258              		.file 10 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
 259              		.file 11 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 260              		.file 12 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 261              		.file 13 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 262              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 263              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 264              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
 265              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 266              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
 267              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 268              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 269              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 270              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 271              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 272              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 273              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 274              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 275              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 276              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 277              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 278              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 279              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 280              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 281              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 282              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 283              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 284              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 285              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 286              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 287              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 288              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 289              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 290              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
 291              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 292              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 293              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 294              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 295              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 296              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 297              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 298              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 299              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 300              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 301              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 302              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 303              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 304              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 305              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
 306              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 10


ARM GAS  C:\Users\gx\AppData\Local\Temp\ccpiauMo.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_keyboard_1.c
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:18     .text.ta_event_cb:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:25     .text.ta_event_cb:00000000 ta_event_cb
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:107    .rodata.lv_example_keyboard_1.str1.4:00000000 $d
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:111    .text.lv_example_keyboard_1:00000000 $t
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:118    .text.lv_example_keyboard_1:00000000 lv_example_keyboard_1
C:\Users\gx\AppData\Local\Temp\ccpiauMo.s:244    .text.lv_example_keyboard_1:00000084 $d

UNDEFINED SYMBOLS
lv_event_get_code
lv_event_get_target
lv_event_get_user_data
lv_keyboard_set_textarea
lv_obj_clear_flag
lv_obj_add_flag
lv_disp_get_default
lv_disp_get_scr_act
lv_keyboard_create
lv_textarea_create
lv_obj_align
lv_obj_add_event_cb
lv_textarea_set_placeholder_text
lv_obj_set_size
