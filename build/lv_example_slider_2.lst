ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_example_slider_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.lv_example_slider_2,"ax",%progbits
  18              		.align	1
  19              		.global	lv_example_slider_2
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	lv_example_slider_2:
  27              	.LFB189:
  28              		.file 1 "lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c"
   1:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** #include "../../lv_examples.h"
   2:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** #if LV_USE_SLIDER && LV_BUILD_EXAMPLES
   3:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
   4:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
   5:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
   6:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** /**
   7:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****  * Show how to style a slider.
   8:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****  */
   9:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** void lv_example_slider_2(void)
  10:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** {
  29              		.loc 1 10 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 28
  36              		.cfi_offset 4, -28
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 6, -20
  39              		.cfi_offset 7, -16
  40              		.cfi_offset 8, -12
  41              		.cfi_offset 9, -8
  42              		.cfi_offset 14, -4
  43 0004 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 40
  11:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     /*Create a transition*/
  12:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static const lv_style_prop_t props[] = {LV_STYLE_BG_COLOR, 0};
  46              		.loc 1 12 5 view .LVU1
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 2


  13:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static lv_style_transition_dsc_t transition_dsc;
  47              		.loc 1 13 5 view .LVU2
  14:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_transition_dsc_init(&transition_dsc, props, lv_anim_path_linear, 300, 0, NULL);
  48              		.loc 1 14 5 view .LVU3
  49 0006 5C4D     		ldr	r5, .L3
  50 0008 0027     		movs	r7, #0
  51 000a 0197     		str	r7, [sp, #4]
  52 000c 0097     		str	r7, [sp]
  53 000e 4FF49673 		mov	r3, #300
  54 0012 5A4A     		ldr	r2, .L3+4
  55 0014 5A49     		ldr	r1, .L3+8
  56 0016 2846     		mov	r0, r5
  57 0018 FFF7FEFF 		bl	lv_style_transition_dsc_init
  58              	.LVL0:
  15:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  16:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static lv_style_t style_main;
  59              		.loc 1 16 5 view .LVU4
  17:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static lv_style_t style_indicator;
  60              		.loc 1 17 5 view .LVU5
  18:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static lv_style_t style_knob;
  61              		.loc 1 18 5 view .LVU6
  19:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     static lv_style_t style_pressed_color;
  62              		.loc 1 19 5 view .LVU7
  20:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_init(&style_main);
  63              		.loc 1 20 5 view .LVU8
  64 001c 594E     		ldr	r6, .L3+12
  65 001e 3046     		mov	r0, r6
  66 0020 FFF7FEFF 		bl	lv_style_init
  67              	.LVL1:
  21:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_opa(&style_main, LV_OPA_COVER);
  68              		.loc 1 21 5 view .LVU9
  69 0024 FF21     		movs	r1, #255
  70 0026 3046     		mov	r0, r6
  71 0028 FFF7FEFF 		bl	lv_style_set_bg_opa
  72              	.LVL2:
  22:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_color(&style_main, lv_color_hex3(0xbbb));
  73              		.loc 1 22 5 view .LVU10
  74              	.LBB29:
  75              	.LBI29:
  76              		.file 2 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_color.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 3


  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Error checking*/
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*********************
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      DEFINES
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *********************/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** enum {
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** };
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Adjust color mix functions rounding.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 4


  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GPUs might calculate color mix (blending) differently.
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Should be in range of 0..254
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 0: no adjustment, get the integer part of the result (round down)
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 64: round up from x.75
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 128: round up from half
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 192: round up from x.25
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * 254: round up*/
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_MIX_ROUND_OFS
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 32
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 0
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MIX_ROUND_OFS 128
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** */
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 5


 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 6


 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #define LV_UDIV255(x) ((uint32_t)((uint32_t) (x) * 0x8081) >> 0x17)
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     union {
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t full;
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t full;
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef union {
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     struct {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 7


 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t green;
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t red;
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     } ch;
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t full;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct {
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t h;
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t s;
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint8_t v;
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     void * user_data;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_color_filter_dsc_t;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** typedef enum {
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }lv_palette_t;
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**********************
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 8


 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  **********************/
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /*In color conversations:
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *        ----------------------
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 1;
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF;
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 9


 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0;
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /**
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 10


 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****      */
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 440:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 441:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 442:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 443:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 444:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret.full;
 445:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 446:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return color.full;
 447:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 448:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 449:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 450:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 451:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 452:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 453:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 454:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 455:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 456:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 457:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 458:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 459:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 460:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 461:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 462:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 463:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 464:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 465:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     mix = ( mix + 4 ) >> 3;
 466:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) & 0x7E0F81F; /*0b000001
 467:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | (uint32_t)(c1.full << 16)) & 0x7E0F81F;
 468:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 469:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 470:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 471:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 472:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 473:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 11


 474:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 475:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 476:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t) LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 477:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                         (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 478:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 479:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 480:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 481:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 482:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 483:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 484:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 485:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 486:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 487:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 488:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 489:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 490:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t) LV_COLOR_GET_R(c) * mix;
 491:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t) LV_COLOR_GET_G(c) * mix;
 492:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t) LV_COLOR_GET_B(c) * mix;
 493:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 494:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     (void) mix;
 495:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 496:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 497:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 498:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 499:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 500:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 501:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 502:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 503:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 504:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 505:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 506:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 507:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 508:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 509:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 510:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 511:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 512:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 513:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 514:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 515:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 516:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*For compatibility with lv_color_mix on 16 bit color depth*/
 517:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, (premult_c1[0] + LV_COLOR_GET_R(c2) * mix) >> 8);
 518:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, (premult_c1[1] + LV_COLOR_GET_G(c2) * mix) >> 8);
 519:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, (premult_c1[2] + LV_COLOR_GET_B(c2) * mix) >> 8);
 520:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 521:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 522:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 523:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 524:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 525:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 526:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #else
 527:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 528:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 529:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 530:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 12


 531:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 532:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 533:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 534:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** #endif
 535:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 536:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return ret;
 537:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 538:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 539:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 540:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 541:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 542:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 543:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 544:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 545:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 546:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
 547:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 548:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 549:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 550:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 551:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 552:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 553:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 554:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 555:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 556:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 557:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 558:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 559:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 560:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 561:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 562:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 563:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 564:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 565:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 566:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 567:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 568:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     else {
 569:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 570:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 571:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 572:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 573:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 574:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 575:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 576:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 577:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 578:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
 579:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 580:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 581:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 582:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
 583:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             /*Info:
 584:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 585:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 586:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             if(res_opa_saved == 0) {
 587:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                 while(1)
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 13


 588:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****                     ;
 589:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             }
 590:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 591:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 592:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 593:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         }
 594:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 595:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 596:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 597:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     }
 598:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 599:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 600:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** //! @endcond
 601:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 602:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** /**
 603:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
 604:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @param color a color
 605:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 606:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****  */
 607:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 609:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 612:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 613:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 614:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 616:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 618:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 619:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 620:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 621:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 622:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 623:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
 624:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** 
 625:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
  77              		.loc 2 625 26 view .LVU11
  78              	.LBE29:
 626:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
 627:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
  79              		.loc 2 627 5 view .LVU12
  80              	.LBB32:
  81              	.LBB30:
  82              	.LBI30:
 615:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** {
  83              		.loc 2 615 26 view .LVU13
  84              	.LBB31:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
  85              		.loc 2 617 5 view .LVU14
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
  86              		.loc 2 617 12 is_stmt 0 view .LVU15
  87 002c 1723     		movs	r3, #23
  88 002e 4FF00001 		mov	r1, #0	@ movhi
  89 0032 63F30401 		bfi	r1, r3, #0, #5
  90 0036 2E22     		movs	r2, #46
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 14


  91 0038 62F34A11 		bfi	r1, r2, #5, #6
  92 003c 63F3CF21 		bfi	r1, r3, #11, #5
  93              	.LVL3:
 617:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_color.h **** }
  94              		.loc 2 617 12 view .LVU16
  95              	.LBE31:
  96              	.LBE30:
  97              	.LBE32:
  98              		.loc 1 22 5 view .LVU17
  99 0040 3046     		mov	r0, r6
 100 0042 FFF7FEFF 		bl	lv_style_set_bg_color
 101              	.LVL4:
  23:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_radius(&style_main, LV_RADIUS_CIRCLE);
 102              		.loc 1 23 5 is_stmt 1 view .LVU18
 103 0046 47F6FF71 		movw	r1, #32767
 104 004a 3046     		mov	r0, r6
 105 004c FFF7FEFF 		bl	lv_style_set_radius
 106              	.LVL5:
  24:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_pad_ver(&style_main, -2); /*Makes the indicator larger*/
 107              		.loc 1 24 5 view .LVU19
 108              	.LBB33:
 109              	.LBI33:
 110              		.file 3 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @file lv_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifndef LV_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include <stdbool.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "../font/lv_font.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_color.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_area.h"
  20:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_anim.h"
  21:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_txt.h"
  22:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_types.h"
  23:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_assert.h"
  24:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_bidi.h"
  25:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  26:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /*********************
  27:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      DEFINES
  28:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *********************/
  29:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  31:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  32:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  33:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Flags for style properties
  34:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 15


  35:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  36:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  37:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  38:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  39:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  40:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  42:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Other constants
  43:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  44:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  45:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  46:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  47:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
  48:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  49:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #else
  50:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  51:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
  52:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
  54:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *      TYPEDEFS
  55:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
  56:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  58:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Possible options how to blend opaque drawings
  59:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  60:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  61:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  62:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  63:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  64:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  65:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  66:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_blend_mode_t;
  67:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  68:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  69:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Some options to apply decorations on texts.
  70:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  71:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  73:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  74:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  75:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  76:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  77:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  78:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_text_decor_t;
  79:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  80:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  81:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Selects on which sides border should be drawn
  82:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * 'OR'ed values can be used.
  83:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  84:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  85:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  86:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  87:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  88:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  89:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  90:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
  91:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 16


  92:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
  93:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_border_side_t;
  94:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
  95:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
  96:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * The direction of the gradient.
  97:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
  98:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** enum {
  99:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 100:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 101:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 102:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** };
 103:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 104:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef uint8_t lv_grad_dir_t;
 105:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 106:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 107:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * A common type to handle all the property types in the same way.
 108:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 109:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef union {
 110:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 111:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 112:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_color_t color;    /**< Colors*/
 113:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_value_t;
 114:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 115:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 116:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Enumeration of all built in style properties
 117:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 118:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef enum {
 119:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 120:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 121:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 0*/
 122:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 123:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 124:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 125:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 126:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 127:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 128:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 129:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 130:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 131:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 132:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 133:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 134:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 135:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 136:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 137:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 138:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 1*/
 139:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_LAYOUT_REFR,
 140:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_LAYOUT_REFR,
 141:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_LAYOUT_REFR,
 142:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_LAYOUT_REFR,
 143:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_LAYOUT_REFR,
 144:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_LAYOUT_REFR,
 145:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 2*/
 147:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 148:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 17


 149:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 150:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 151:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 152:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 153:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 154:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 155:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 156:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 38,
 157:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 39,
 158:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 40,
 159:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 40 | LV_STYLE_PROP_FILTER,
 160:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 41,
 161:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 42,
 162:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 163:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 3*/
 164:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 165:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 166:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 167:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 168:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 169:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 170:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 171:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 172:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 173:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 174:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 175:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 176:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 177:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 4*/
 178:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 179:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 180:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 181:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 182:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 183:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 184:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 185:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 186:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 187:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 188:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 189:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 190:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 191:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 192:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 193:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 194:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 195:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 196:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 197:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 198:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 199:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 5*/
 200:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 201:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 202:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 203:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 204:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 205:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 18


 206:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 207:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 208:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 209:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 210:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 211:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 212:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 213:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 214:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 215:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 216:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*Group 6*/
 217:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 218:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 219:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 220:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 221:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 222:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 223:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 224:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 225:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 226:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 227:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 228:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 229:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 230:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 231:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 232:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_prop_t;
 233:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 234:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 235:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor for style transitions
 236:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 237:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 238:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 239:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_USER_DATA
 240:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 241:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
 242:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 243:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 244:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 245:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }lv_style_transition_dsc_t;
 246:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 247:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 248:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a constant style property.
 249:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 250:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 251:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_prop_t prop;
 252:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_value_t value;
 253:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_const_prop_t;
 254:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 255:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 256:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 257:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 258:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** typedef struct {
 259:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 260:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #if LV_USE_ASSERT_STYLE
 261:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint32_t sentinel;
 262:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #endif
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 19


 263:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 264:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     /*If there is only one property store it directly.
 265:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****      *For more properties allocate an array*/
 266:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     union {
 267:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         lv_style_value_t value1;
 268:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * values_and_props;
 269:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t * const_props;
 270:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } v_p;
 271:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 272:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t prop1 :15;
 273:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint16_t is_const :1;
 274:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t has_group;
 275:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     uint8_t prop_cnt;
 276:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** } lv_style_t;
 277:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 278:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**********************
 279:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * GLOBAL PROTOTYPES
 280:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  **********************/
 281:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 282:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 283:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 284:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a style
 285:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style to initialize
 286:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note Do not call `lv_style_init` on styles that are already have some properties
 287:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       because this function won't free the used memory just set a default state for the style.
 288:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *       In other words be sure to initialize styles only once!
 289:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 290:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_init(lv_style_t * style);
 291:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 292:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 293:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 294:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 295:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 296:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_reset(lv_style_t * style);
 297:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 298:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 299:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Register a new style property for custom usage
 300:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return a new property ID.
 301:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 302:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_prop_t MY_PROP;
 303:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 304:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 305:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *
 306:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 307:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * MY_PROP = lv_style_register_prop();
 308:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * ...
 309:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 310:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 311:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 312:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 313:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 314:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Remove a property from a style
 315:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 316:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  a style property ORed with a state.
 317:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 318:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 319:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 20


 320:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 321:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 322:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Set the value of property in a style.
 323:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * This function shouldn't be used directly by the user.
 324:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 325:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to style
 326:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STLYE_BG_COLOR`)
 327:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value `lv_style_value_t` variable in which a filed is set according to the type of `prop`
 328:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 329:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 330:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 331:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 332:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 333:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 334:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 335:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 336:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 337:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 338:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 339:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 340:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_res_t lv_style_get_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value);
 341:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 342:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 343:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 344:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the value of a property
 345:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 346:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop  the ID of a property
 347:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 348:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return LV_RES_INV: the property wsn't found in the style (`value` is unchanged)
 349:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 350:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 351:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 352:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 353:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(lv_style_t * style, lv_style_prop_t prop, lv_style
 354:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** {
 355:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->is_const) {
 356:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         const lv_style_const_prop_t *const_prop;
 357:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 358:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(const_prop->prop == prop) {
 359:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = const_prop->value;
 360:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
 361:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 362:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 363:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_INV;
 364:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 365:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 366:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
 367:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 368:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     if(style->prop_cnt > 1) {
 369:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 370:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 371:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         uint32_t i;
 372:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 373:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             if(props[i] == prop) {
 374:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 375:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 *value = values[i];
 376:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****                 return LV_RES_OK;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 21


 377:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****             }
 378:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         }
 379:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     } else if(style->prop1 == prop) {
 380:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         *value = style->v_p.value1;
 381:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****         return LV_RES_OK;
 382:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     }
 383:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     return LV_RES_INV;
 384:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 385:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 386:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 387:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Initialize a transition descriptor.
 388:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param tr        pointer to a transition descriptor to initialize
 389:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param props     an array with the properties to transition. The last element must be zero.
 390:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param path_cb   an animation path (ease) callback. If `NULL` liner path will be used.
 391:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param time      duration of the transition in [ms]
 392:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param delay     delay before the transition in [ms]
 393:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param user_data any custom data that will be saved in the transition animation and will be avai
 394:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @example
 395:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 };
 396:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  static lv_style_transition_dsc_t trans1;
 397:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  *  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL);
 398:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 399:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[], lv
 400:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 401:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 402:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Get the default value of a property
 403:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop the ID of a property
 404:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the default value
 405:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 406:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop);
 407:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 408:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 409:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Checks if a style is empty (has no properties)
 410:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param style pointer to a style
 411:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return
 412:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 413:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** bool lv_style_is_empty(const lv_style_t * style);
 414:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 415:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** /**
 416:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * Tell the group of a property. If the a property from a group is set in a style the (1 << group) 
 417:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * It allows early skipping the style if the property is not exists in the style at all.
 418:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @param prop a style property
 419:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  * @return the group [0..7] 7 means all the custom properties with index > 112
 420:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****  */
 421:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop);
 422:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 423:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** #include "lv_style_gen.h"
 424:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_all(lv_style_t * style, lv_coord_t value) {
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 430:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 431:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 432:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_hor(lv_style_t * style, lv_coord_t value) {
 433:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 22


 434:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 435:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 436:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** 
 437:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** static inline void lv_style_set_pad_ver(lv_style_t * style, lv_coord_t value) {
 111              		.loc 3 437 20 view .LVU20
 112              	.LBB34:
 438:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
 113              		.loc 3 438 5 view .LVU21
 114 0050 6FF00101 		mvn	r1, #1
 115 0054 3046     		mov	r0, r6
 116 0056 FFF7FEFF 		bl	lv_style_set_pad_top
 117              	.LVL6:
 439:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 118              		.loc 3 439 5 view .LVU22
 119 005a 6FF00101 		mvn	r1, #1
 120 005e 3046     		mov	r0, r6
 121 0060 FFF7FEFF 		bl	lv_style_set_pad_bottom
 122              	.LVL7:
 123              		.loc 3 439 5 is_stmt 0 view .LVU23
 124              	.LBE34:
 125              	.LBE33:
  25:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  26:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_init(&style_indicator);
 126              		.loc 1 26 5 is_stmt 1 view .LVU24
 127 0064 DFF83081 		ldr	r8, .L3+32
 128 0068 4046     		mov	r0, r8
 129 006a FFF7FEFF 		bl	lv_style_init
 130              	.LVL8:
  27:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_opa(&style_indicator, LV_OPA_COVER);
 131              		.loc 1 27 5 view .LVU25
 132 006e FF21     		movs	r1, #255
 133 0070 4046     		mov	r0, r8
 134 0072 FFF7FEFF 		bl	lv_style_set_bg_opa
 135              	.LVL9:
  28:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_color(&style_indicator, lv_palette_main(LV_PALETTE_CYAN));
 136              		.loc 1 28 5 view .LVU26
 137 0076 0720     		movs	r0, #7
 138 0078 FFF7FEFF 		bl	lv_palette_main
 139              	.LVL10:
 140 007c 0146     		mov	r1, r0	@ movhi
 141 007e 4046     		mov	r0, r8
 142 0080 FFF7FEFF 		bl	lv_style_set_bg_color
 143              	.LVL11:
  29:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_radius(&style_indicator, LV_RADIUS_CIRCLE);
 144              		.loc 1 29 5 view .LVU27
 145 0084 47F6FF71 		movw	r1, #32767
 146 0088 4046     		mov	r0, r8
 147 008a FFF7FEFF 		bl	lv_style_set_radius
 148              	.LVL12:
  30:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_transition(&style_indicator, &transition_dsc);
 149              		.loc 1 30 5 view .LVU28
 150 008e 2946     		mov	r1, r5
 151 0090 4046     		mov	r0, r8
 152 0092 FFF7FEFF 		bl	lv_style_set_transition
 153              	.LVL13:
  31:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  32:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_init(&style_knob);
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 23


 154              		.loc 1 32 5 view .LVU29
 155 0096 3C4C     		ldr	r4, .L3+16
 156 0098 2046     		mov	r0, r4
 157 009a FFF7FEFF 		bl	lv_style_init
 158              	.LVL14:
  33:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_opa(&style_knob, LV_OPA_COVER);
 159              		.loc 1 33 5 view .LVU30
 160 009e FF21     		movs	r1, #255
 161 00a0 2046     		mov	r0, r4
 162 00a2 FFF7FEFF 		bl	lv_style_set_bg_opa
 163              	.LVL15:
  34:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_color(&style_knob, lv_palette_main(LV_PALETTE_CYAN));
 164              		.loc 1 34 5 view .LVU31
 165 00a6 0720     		movs	r0, #7
 166 00a8 FFF7FEFF 		bl	lv_palette_main
 167              	.LVL16:
 168 00ac 0146     		mov	r1, r0	@ movhi
 169 00ae 2046     		mov	r0, r4
 170 00b0 FFF7FEFF 		bl	lv_style_set_bg_color
 171              	.LVL17:
  35:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_border_color(&style_knob, lv_palette_darken(LV_PALETTE_CYAN, 3));
 172              		.loc 1 35 5 view .LVU32
 173 00b4 0321     		movs	r1, #3
 174 00b6 0720     		movs	r0, #7
 175 00b8 FFF7FEFF 		bl	lv_palette_darken
 176              	.LVL18:
 177 00bc 0146     		mov	r1, r0	@ movhi
 178 00be 2046     		mov	r0, r4
 179 00c0 FFF7FEFF 		bl	lv_style_set_border_color
 180              	.LVL19:
  36:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_border_width(&style_knob, 2);
 181              		.loc 1 36 5 view .LVU33
 182 00c4 0221     		movs	r1, #2
 183 00c6 2046     		mov	r0, r4
 184 00c8 FFF7FEFF 		bl	lv_style_set_border_width
 185              	.LVL20:
  37:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_radius(&style_knob, LV_RADIUS_CIRCLE);
 186              		.loc 1 37 5 view .LVU34
 187 00cc 47F6FF71 		movw	r1, #32767
 188 00d0 2046     		mov	r0, r4
 189 00d2 FFF7FEFF 		bl	lv_style_set_radius
 190              	.LVL21:
  38:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_pad_all(&style_knob, 6); /*Makes the knob larger*/
 191              		.loc 1 38 5 view .LVU35
 192              	.LBB35:
 193              	.LBI35:
 425:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_left(style, value);
 194              		.loc 3 425 20 view .LVU36
 195              	.LBB36:
 426:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_right(style, value);
 196              		.loc 3 426 5 view .LVU37
 197 00d6 0621     		movs	r1, #6
 198 00d8 2046     		mov	r0, r4
 199 00da FFF7FEFF 		bl	lv_style_set_pad_left
 200              	.LVL22:
 427:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_top(style, value);
 201              		.loc 3 427 5 view .LVU38
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 24


 202 00de 0621     		movs	r1, #6
 203 00e0 2046     		mov	r0, r4
 204 00e2 FFF7FEFF 		bl	lv_style_set_pad_right
 205              	.LVL23:
 428:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h ****     lv_style_set_pad_bottom(style, value);
 206              		.loc 3 428 5 view .LVU39
 207 00e6 0621     		movs	r1, #6
 208 00e8 2046     		mov	r0, r4
 209 00ea FFF7FEFF 		bl	lv_style_set_pad_top
 210              	.LVL24:
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 211              		.loc 3 429 5 view .LVU40
 212 00ee 0621     		movs	r1, #6
 213 00f0 2046     		mov	r0, r4
 214 00f2 FFF7FEFF 		bl	lv_style_set_pad_bottom
 215              	.LVL25:
 429:d:\practise\f407_disc\lvgl\lvgl\src\misc\lv_style.h **** }
 216              		.loc 3 429 5 is_stmt 0 view .LVU41
 217              	.LBE36:
 218              	.LBE35:
  39:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_transition(&style_knob, &transition_dsc);
 219              		.loc 1 39 5 is_stmt 1 view .LVU42
 220 00f6 2946     		mov	r1, r5
 221 00f8 2046     		mov	r0, r4
 222 00fa FFF7FEFF 		bl	lv_style_set_transition
 223              	.LVL26:
  40:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  41:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_init(&style_pressed_color);
 224              		.loc 1 41 5 view .LVU43
 225 00fe DFF89C90 		ldr	r9, .L3+36
 226 0102 4846     		mov	r0, r9
 227 0104 FFF7FEFF 		bl	lv_style_init
 228              	.LVL27:
  42:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_style_set_bg_color(&style_pressed_color, lv_palette_darken(LV_PALETTE_CYAN, 2));
 229              		.loc 1 42 5 view .LVU44
 230 0108 0221     		movs	r1, #2
 231 010a 0720     		movs	r0, #7
 232 010c FFF7FEFF 		bl	lv_palette_darken
 233              	.LVL28:
 234 0110 0146     		mov	r1, r0	@ movhi
 235 0112 4846     		mov	r0, r9
 236 0114 FFF7FEFF 		bl	lv_style_set_bg_color
 237              	.LVL29:
  43:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  44:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     /*Create a slider and add the style*/
  45:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_t * slider = lv_slider_create(lv_scr_act());
 238              		.loc 1 45 5 view .LVU45
 239              	.LBB37:
 240              	.LBI37:
 241              		.file 4 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_disp.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 25


   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**********************
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  **********************/
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * screen)
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Make a screen active
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 26


  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * layer)
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Opacity of the background
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 27


 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** 
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** /**
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****  */
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 242              		.loc 4 163 26 view .LVU46
 243              	.LBB38:
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h **** {
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 244              		.loc 4 165 5 view .LVU47
 245              		.loc 4 165 12 is_stmt 0 view .LVU48
 246 0118 FFF7FEFF 		bl	lv_disp_get_default
 247              	.LVL30:
 248 011c FFF7FEFF 		bl	lv_disp_get_scr_act
 249              	.LVL31:
 250              	.LBE38:
 251              	.LBE37:
 252              		.loc 1 45 25 view .LVU49
 253 0120 FFF7FEFF 		bl	lv_slider_create
 254              	.LVL32:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 28


 255 0124 0546     		mov	r5, r0
 256              	.LVL33:
  46:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_remove_style_all(slider);        /*Remove the styles coming from the theme*/
 257              		.loc 1 46 5 is_stmt 1 view .LVU50
 258              	.LBB39:
 259              	.LBI39:
 260              		.file 5 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_style.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @file lv_obj_style.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include <stdint.h>
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include <stdbool.h>
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*********************
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      DEFINES
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *********************/
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**********************
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  *      TYPEDEFS
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  **********************/
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** struct _lv_obj_t;
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef enum {
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef struct {
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_t * style;
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t selector :24;
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t is_local :1;
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint32_t is_trans :1;
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** }_lv_obj_style_t;
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** typedef struct {
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint16_t time;
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     uint16_t delay;
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_selector_t selector;
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_style_prop_t prop;
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 29


  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #if LV_USE_USER_DATA
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     void * user_data;
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** #endif
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**********************
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  **********************/
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Initialize the object related style manager module.
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void _lv_obj_style_init(void);
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Add a style to an object.
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param style     pointer to a style to add
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Add a style to an object.
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** 
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** /**
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * Remove all styles from an object
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  * @param obj       pointer to an object
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****  */
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
 261              		.loc 5 92 20 view .LVU51
 262              	.LBB40:
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h **** {
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
 263              		.loc 5 94 5 view .LVU52
 264 0126 194A     		ldr	r2, .L3+20
 265 0128 3946     		mov	r1, r7
 266 012a FFF7FEFF 		bl	lv_obj_remove_style
 267              	.LVL34:
 268              		.loc 5 94 5 is_stmt 0 view .LVU53
 269              	.LBE40:
 270              	.LBE39:
  47:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  48:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_add_style(slider, &style_main, LV_PART_MAIN);
 271              		.loc 1 48 5 is_stmt 1 view .LVU54
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 30


 272 012e 3A46     		mov	r2, r7
 273 0130 3146     		mov	r1, r6
 274 0132 2846     		mov	r0, r5
 275 0134 FFF7FEFF 		bl	lv_obj_add_style
 276              	.LVL35:
  49:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_add_style(slider, &style_indicator, LV_PART_INDICATOR);
 277              		.loc 1 49 5 view .LVU55
 278 0138 4FF40032 		mov	r2, #131072
 279 013c 4146     		mov	r1, r8
 280 013e 2846     		mov	r0, r5
 281 0140 FFF7FEFF 		bl	lv_obj_add_style
 282              	.LVL36:
  50:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_add_style(slider, &style_pressed_color, LV_PART_INDICATOR | LV_STATE_PRESSED);
 283              		.loc 1 50 5 view .LVU56
 284 0144 124A     		ldr	r2, .L3+24
 285 0146 4946     		mov	r1, r9
 286 0148 2846     		mov	r0, r5
 287 014a FFF7FEFF 		bl	lv_obj_add_style
 288              	.LVL37:
  51:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_add_style(slider, &style_knob, LV_PART_KNOB);
 289              		.loc 1 51 5 view .LVU57
 290 014e 4FF44032 		mov	r2, #196608
 291 0152 2146     		mov	r1, r4
 292 0154 2846     		mov	r0, r5
 293 0156 FFF7FEFF 		bl	lv_obj_add_style
 294              	.LVL38:
  52:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_add_style(slider, &style_pressed_color, LV_PART_KNOB | LV_STATE_PRESSED);
 295              		.loc 1 52 5 view .LVU58
 296 015a 0E4A     		ldr	r2, .L3+28
 297 015c 4946     		mov	r1, r9
 298 015e 2846     		mov	r0, r5
 299 0160 FFF7FEFF 		bl	lv_obj_add_style
 300              	.LVL39:
  53:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** 
  54:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c ****     lv_obj_center(slider);
 301              		.loc 1 54 5 view .LVU59
 302              	.LBB41:
 303              	.LBI41:
 304              		.file 6 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_pos.h"
   1:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /*********************
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 31


  19:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** }lv_layout_dsc_t;
  32:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  43:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  45:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  46:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of a object
  47:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  48:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  50:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  52:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  53:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of a object
  54:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  55:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  57:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  59:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  60:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  61:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  62:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  63:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  64:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  65:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  70:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  72:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  73:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  74:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  75:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 32


  76:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  77:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  79:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  80:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  81:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  82:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  83:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  84:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
  93:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  95:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 108:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 110:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 111:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 113:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 115:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 117:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 118:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 119:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 120:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 122:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 124:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 125:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 129:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 131:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 132:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 33


 133:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 135:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 137:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 138:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 139:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Regsiter a new layout
 145:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 146:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 148:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 149:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 151:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 152:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 153:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 156:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 158:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 159:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 161:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 172:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 179:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** 
 181:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** /**
 182:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****  */
 186:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 305              		.loc 6 186 20 view .LVU60
 306              	.LBB42:
 187:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h **** {
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 34


 188:d:\practise\f407_disc\lvgl\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 307              		.loc 6 188 5 view .LVU61
 308 0164 3B46     		mov	r3, r7
 309 0166 3A46     		mov	r2, r7
 310 0168 0921     		movs	r1, #9
 311 016a 2846     		mov	r0, r5
 312 016c FFF7FEFF 		bl	lv_obj_align
 313              	.LVL40:
 314              		.loc 6 188 5 is_stmt 0 view .LVU62
 315              	.LBE42:
 316              	.LBE41:
  55:lvgl/lvgl/examples/widgets/slider/lv_example_slider_2.c **** }
 317              		.loc 1 55 1 view .LVU63
 318 0170 03B0     		add	sp, sp, #12
 319              	.LCFI2:
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0172 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.LVL41:
 324              	.L4:
 325              		.loc 1 55 1 view .LVU64
 326 0176 00BF     		.align	2
 327              	.L3:
 328 0178 00000000 		.word	.LANCHOR1
 329 017c 00000000 		.word	lv_anim_path_linear
 330 0180 00000000 		.word	.LANCHOR0
 331 0184 00000000 		.word	.LANCHOR2
 332 0188 00000000 		.word	.LANCHOR4
 333 018c FFFF0F00 		.word	1048575
 334 0190 20000200 		.word	131104
 335 0194 20000300 		.word	196640
 336 0198 00000000 		.word	.LANCHOR3
 337 019c 00000000 		.word	.LANCHOR5
 338              		.cfi_endproc
 339              	.LFE189:
 341              		.section	.bss.style_indicator.12316,"aw",%nobits
 342              		.align	2
 343              		.set	.LANCHOR3,. + 0
 346              	style_indicator.12316:
 347 0000 00000000 		.space	8
 347      00000000 
 348              		.section	.bss.style_knob.12317,"aw",%nobits
 349              		.align	2
 350              		.set	.LANCHOR4,. + 0
 353              	style_knob.12317:
 354 0000 00000000 		.space	8
 354      00000000 
 355              		.section	.bss.style_main.12315,"aw",%nobits
 356              		.align	2
 357              		.set	.LANCHOR2,. + 0
 360              	style_main.12315:
 361 0000 00000000 		.space	8
 361      00000000 
 362              		.section	.bss.style_pressed_color.12318,"aw",%nobits
 363              		.align	2
 364              		.set	.LANCHOR5,. + 0
 367              	style_pressed_color.12318:
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 35


 368 0000 00000000 		.space	8
 368      00000000 
 369              		.section	.bss.transition_dsc.12314,"aw",%nobits
 370              		.align	2
 371              		.set	.LANCHOR1,. + 0
 374              	transition_dsc.12314:
 375 0000 00000000 		.space	20
 375      00000000 
 375      00000000 
 375      00000000 
 375      00000000 
 376              		.section	.rodata.props.12313,"a"
 377              		.align	2
 378              		.set	.LANCHOR0,. + 0
 381              	props.12313:
 382 0000 2000     		.short	32
 383 0002 0000     		.short	0
 384              		.text
 385              	.Letext0:
 386              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 387              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 388              		.file 9 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_ll.h"
 389              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-non
 390              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 391              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 392              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 393              		.file 14 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/misc/lv_anim.h"
 394              		.file 15 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_area.h"
 395              		.file 16 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj.h"
 396              		.file 17 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_group.h"
 397              		.file 18 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\font\\lv_font.h"
 398              		.file 19 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_txt.h"
 399              		.file 20 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_scroll.h"
 400              		.file 21 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\draw\\lv_draw_label.h"
 401              		.file 22 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_obj_class.h"
 402              		.file 23 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/core/lv_event.h"
 403              		.file 24 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_arc.h"
 404              		.file 25 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btn.h"
 405              		.file 26 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_img.h"
 406              		.file 27 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_label.h"
 407              		.file 28 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_line.h"
 408              		.file 29 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_table.h"
 409              		.file 30 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_checkbox.h"
 410              		.file 31 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_bar.h"
 411              		.file 32 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_slider.h"
 412              		.file 33 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_btnmatrix.h"
 413              		.file 34 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_dropdown.h"
 414              		.file 35 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_roller.h"
 415              		.file 36 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_textarea.h"
 416              		.file 37 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_canvas.h"
 417              		.file 38 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/widgets/lv_switch.h"
 418              		.file 39 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/animimg/lv_animimg.h"
 419              		.file 40 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar.h"
 420              		.file 41 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_arrow
 421              		.file 42 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/calendar/lv_calendar_header_dropd
 422              		.file 43 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 423              		.file 44 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/keyboard/lv_keyboard.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 36


 424              		.file 45 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\extra\\layouts\\flex\\lv_flex.h"
 425              		.file 46 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/list/lv_list.h"
 426              		.file 47 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 427              		.file 48 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/meter/lv_meter.h"
 428              		.file 49 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinbox/lv_spinbox.h"
 429              		.file 50 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/spinner/lv_spinner.h"
 430              		.file 51 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tabview/lv_tabview.h"
 431              		.file 52 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/tileview/lv_tileview.h"
 432              		.file 53 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/win/lv_win.h"
 433              		.file 54 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/colorwheel/lv_colorwheel.h"
 434              		.file 55 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/led/lv_led.h"
 435              		.file 56 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 436              		.file 57 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/widgets/span/lv_span.h"
 437              		.file 58 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 438              		.file 59 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src\\misc\\lv_style_gen.h"
 439              		.file 60 "d:\\practise\\f407_disc\\lvgl\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_slider_2.c
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:18     .text.lv_example_slider_2:00000000 $t
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:26     .text.lv_example_slider_2:00000000 lv_example_slider_2
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:328    .text.lv_example_slider_2:00000178 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:342    .bss.style_indicator.12316:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:346    .bss.style_indicator.12316:00000000 style_indicator.12316
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:349    .bss.style_knob.12317:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:353    .bss.style_knob.12317:00000000 style_knob.12317
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:356    .bss.style_main.12315:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:360    .bss.style_main.12315:00000000 style_main.12315
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:363    .bss.style_pressed_color.12318:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:367    .bss.style_pressed_color.12318:00000000 style_pressed_color.12318
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:370    .bss.transition_dsc.12314:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:374    .bss.transition_dsc.12314:00000000 transition_dsc.12314
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:377    .rodata.props.12313:00000000 $d
C:\Users\gx\AppData\Local\Temp\cc3mwYoe.s:381    .rodata.props.12313:00000000 props.12313

UNDEFINED SYMBOLS
lv_style_transition_dsc_init
lv_style_init
lv_style_set_bg_opa
lv_style_set_bg_color
lv_style_set_radius
lv_style_set_pad_top
lv_style_set_pad_bottom
lv_palette_main
lv_style_set_transition
lv_palette_darken
lv_style_set_border_color
lv_style_set_border_width
lv_style_set_pad_left
lv_style_set_pad_right
lv_disp_get_default
lv_disp_get_scr_act
lv_slider_create
lv_obj_remove_style
lv_obj_add_style
lv_obj_align
lv_anim_path_linear
